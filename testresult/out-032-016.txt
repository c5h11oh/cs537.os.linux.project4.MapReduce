3 1
$0x03, 1
$0x03e8,%eax 1
(2134) 6
(32768) 1
(7030) 1
(And 1
(C 1
(DEC). 1
(EEVDF) 1
(Hardware-based) 1
(LW 1
(MMU); 1
(P=1), 1
2 25
20 1
B 13
10 21
!zero, 2
"common_threads.h" 4
8 22
"fork 4
%ebx 1
(0, 3
(1110) 1
(20%), 1
(21) 1
(22.1) 1
(3) 2
(AMAT) 1
(C) 1
(G), 1
(L 2
(LRU) 1
(Linux, 1
(LoadLinked(&lock->flag) 4
(PC) 4
(PCB). 1
(PDIndex 3
(PSJF) 1
(PTE): 1
(PTIndex 3
(Pmiss 1
(S) 3
(SJF) 1
(VM) 1
(VPN=06), 1
(With 1
(a[3] 1
(again, 3
(c) 3
(c2). 2
(c4), 1
(clearly 1
(current) 1
(dare 1
(fill_ptr 1
(four 1
(full) 1
(generally) 1
(header_t 1
(highest 1
(minus 1
(often 2
(p2.c) 1
(p5). 1
!= 7
"wc" 1
#1: 2
#define 2
%ax 4
(-P) 1
(1e7) 2
(256) 1
(APIs) 2
(BFS)2 1
(P1), 1
(PA), 1
(Q0), 1
(RDLK) 2
(SSDs) 1
(THE), 2
(TlbEntry.PFN 4
(VP 3
(address 2
(bash?) 1
(c1–c3). 1
 26
$0x1,%eax 4
%eax,0x0(%ebx) 1
%ebp 1
&& 2
(-1KB) 1
(-p). 1
(24113) 5
(3764 1
(4 3
(4088 1
(As 1
$0x1 2
%esp 1
%p\n", 4
&mutex); 8
(212 1
(24114) 5
(32 2
(5 1
(August, 1
(CFS) 2
(Dynamic 2
(PTEs) 1
(PowerPC), 2
(Run 1
(Success, 4
(T1 2
(TCBs) 2
(Tarrival 1
(at 12
(atomic_bit_test_set 4
(average: 1
(binary 1
(called 9
(cleared), 1
(continue 1
(curr) 4
M 20
"A"); 4
$0x1, 6
%d 5
%eax,8049a1c 4
%esp, 1
%lld\n", 2
&rvalue); 2
(1 1
(10 1
(100 4
(1000 1
(32-bit 1
(4KB 1
(9.1) 1
(described 5
(dramatic 1
(hex 2
(highly 1
(holding 1
(STDOUT 1
(particularly 7
(done 4
L 17
"wc"... 1
%eax), 1
%ebp, 1
( 6
(*start_routine)(void 2
(-s 2
(117). 1
(2012-01-30-1-g1c41342) 1
(28KB) 1
(7.2) 1
(BKL). 2
(BSD). 1
(B’s 2
(G) 2
(LFU) 1
(P 1
(P0 1
(PDE). 1
(U/S) 1
(VA) 2
(VPN=08). 1
(Virtual) 1
(a[7] 1
(again 3
(arbitrarily; 1
(c1, 1
(indeed, 4
(insert 1
(latter) 2
(like 5
(many 4
(minimally) 1
(modern 1
14 14
! 2
"usage: 2
%d\n", 9
%dx 6
%ecx, 1
&; 1
(-L 2
(-c) 1
(-l 4
(-s) 3
(117 1
(34KB), 1
(@PFN:101) 1
(ASLR). 1
(Again) 1
6 22
F 8
PAGING 21
%edx, 1
%esi, 1
&oops; 2
&rvals); 2
&x); 1
(-M 1
(-m 2
(./x86.py 4
(01) 1
(1) 13
(100) 1
(14th) 1
(28 1
(64 1
(A) 2
(ASID) 1
(CanAccess(TlbEntry.ProtectBits) 4
(Editors 2
(P1) 3
(PA) 3
(PCB), 2
(Q2). 1
(ROP) 1
(SN) 1
(a) 5
(always) 1
(broken) 1
(bugs) 1
(c2), 3
(causing 2
(flag 4
(imagine 2
!StoreConditional(&lock->flag, 2
"B"); 4
%d)\n", 4
%eax). 1
((flag[1-self] 2
(0x1) 2
(200 1
(9.2) 1
(B 3
(CTSS), 1
(COW 1
(FCFS). 1
(Good 1
(Linux) 2
(MLFQ) 1
(OS). 1
(P0) 1
(PCB); 2
(PFN), 2
(read 1
(effectively 1
 32628
22 1
4 23
T 10
#3: 1
%ebx, 1
&stack); 1
(-T). 1
(/tmp/file) 1
(010101), 1
(224 1
(26 1
(4096), 1
(512 2
(8 1
(@PFN:100) 1
(CPU 2
(D); 1
(KNUTH’S 1
(Figure 45
(OS 1
(P=0), 1
(PDE) 2
(PID), 1
(PTE) 9
(R 1
(counter 17
(TestAndSet(&flag, 2
(VPN=06, 1
(a.k.a., 2
(i.e., 96
(incredulous) 1
(interrupt) 1
(just 5
(max 2
(modified), 1
(my 1
(myturn). 2
18 4
(into 4
(kernel) 1
(milliseconds); 1
(curr->key 4
(STCF) 2
(reduced 1
(and 111
(approximate) 2
(atomically); 1
(do 5
(flag) 2
(hence 1
(initial) 1
#include 62
%edi 3
&args); 4
&m); 3
(-i) 4
(0x200000), 1
(120−0)+(20−10)+(30−10) 1
(20-ms 1
(400)2 1
(4200) 1
(7.1) 1
(Advanced) 1
(A’s 2
(C, 1
(CanAccess(PTE.ProtectBits) 4
(HW 1
(London), 1
(Measurement) 3
(O 1
(Process 1
(RSS). 1
(SJF, 1
(T2) 2
(also 7
(an 2
(c3) 1
(done) 2
(generated 1
(hence, 2
(A 14
(Another 1
(Bounded 1
(CFS), 1
(C’s 1
(MFU) 1
(NOT 1
(Niceness) 1
(R/W) 1
(Ready, 1
(TM 1
(Tc1) 2
(Timer 1
(Line 5
(MMU) 1
(PTE.Present 2
(S), 1
(SJF), 1
(Spring), 3
(TD 1
(Tc1 2
(This 1
(Thread 2
(Volume 1
(a2), 1
(alas). 2
(because 8
(created 1
(finally) 1
(first-in, 1
(hopefully 2
(instead 1
(limit) 1
(line 3
(maliciousness) 1
(mutex->flag 2
(out 3
(easily) 2
(StoreConditional(&lock->flag, 2
(Success 4
(Tc2 1
(VPN), 2
(of 10
(a 21
(a[8] 1
(another 1
(assumes 2
(available 1
(each 2
(either 3
(fun!). 1
(new 7
(p2.c), 1
(erroneously) 1
(regardless 2
12 19
C 16
S 28
#2: 2
$0x0,(%edi,%eax,4) 1
%bx 2
%dx. 2
%eax, 8
(-a) 2
(-q) 1
(16 3
(232 1
(ARM). 2
(Bad 1
(Blocks) 4
(Chapter 2
(Hardware) 1
(LAUER’S 1
(MLFQ). 2
(MQMS) 1
(Offset 1
(P). 1
(P2), 1
(PDE.Valid 1
(Code) 8
(Gulps) 1
(KASLR). 1
(Left) 3
(Logical) 1
(MMU), 1
(P); 1
(PD 2
(PFN 2
(PID). 1
(Proc 2
(Software) 1
(TestAndSet(&m->guard, 4
(note 4
I 26
"A" 1
$0x0) 1
% 8
%ecx 1
(-p 2
(-w) 1
(256 1
(A, 5
(AS) 1
(CompareAndSwap(&lock->flag, 2
(FIFO) 2
(M 1
(No 1
(PFN) 6
(PM 2
(Page 1
(TLB 16
(Tc2) 1
(Thousands) 2
(a[0]) 2
(above), 1
(after 4
(among 3
(bytesLeft 1
(conservatively); 1
(cpu.c) 1
(eventually) 2
(free 1
(https://github.com/remzi-arpacidusseau/ostep-projects) 1
(io.c) 1
(ldstub); 2
(left). 1
(lots 1
(m->flag 2
(seconds) 6
(formerly 1
(si 1
16 9
(all 6
(allocated 3
(almost) 1
(bigger) 1
(c->local[cpu] 2
(c1), 1
(older 1
(PTE.Valid 4
(PWT, 1
(Right) 3
(September 1
(TestAndSet(&lock->flag, 2
(VPNs 1
(Virtual 1
(starting 3
(too!) 2
(we 2
"hello 1
%edx 1
%esi 1
(VPN 14
(Without 1
(array-based) 2
(RR) 2
(SQMS) 1
(Tc1), 1
(Tp) 1
(VAX/VMS) 1
(VPN) 2
(VPN=07), 1
(VirtualAddress 9
(a[4] 1
(argc 2
(both 2
(c3). 3
(c5), 1
(he 1
(our 4
(as 49
(assert(hptr->magic 1
(atomic_add_zero 2
(managing 2
(still 1
(freeing 1
(a.k.a. 6
"common.h" 7
"hello"; 3
# 16
%eax 24
%edi, 1
&lock); 2
(-n 1
(0xC0000000 1
(101) 2
(11) 1
(2) 4
(34K) 1
(Alpha), 2
(B) 1
(DMA) 1
(K 1
(Lines 6
(MRU). 1
(NULL 1
(P2) 1
(PDE.PFN 2
(PFN). 1
(PTE.PFN 2
(R) 1
(T2), 2
(Third 2
(Tp). 1
(VPN). 1
(a3). 1
(about 1
(b) 5
(once 4
(with 21
(if 13
(ironically) 1
(middle 2
(count 8
(hint: 6
(p1), 1
(global 3
(non-restricted) 1
(e.g., 108
(namely, 1
(swapd) 1
(get 1
(assuming 5
(but 14
(original 2
(word 3
); 1
*mem; 1
(mutex, 8
(during 1
(emacs 1
(p1– 1
(hopefully) 3
(ns) 1
(from 16
(gasp) 2
(horribly) 1
(include 2
(but, 2
(by 13
(c3), 1
(double 1
(especially 2
*new 4
(myturn 2
(next 1
(nice 1
(scheduling) 1
(kernel 6
(non-contiguous) 1
(non-paged) 1
(there 3
(its 2
(int) 10
(large) 2
(lock-holding) 2
(log2 1
(marked 1
(free) 21
*next; 6
(i); 1
(given 1
(p2); 1
(shown 5
(simplified) 1
(specifically). 1
(stop) 1
(t1.c) 2
(that’s 3
(bytes 2
(rc 8
(rc_wait:%d) 2
(ready 4
(size: 1
(stride=40) 1
(threads.c) 1
(unrealistically 1
(wait 1
(physical) 1
(pid:29267) 1
(pid:29384) 1
(notably) 1
(this 4
(load 1
(though 6
(code, 7
(continuing) 1
(discussed 1
(evicts) 1
(gadgets, 1
*q) 2
(ignoring 1
(i 19
**) 4
(pid:29146) 4
(queue_empty(m->q)) 2
(potentially), 2
(note, 1
(thread 6
(usually) 2
(worst-case 1
(let’s 4
(likely) 1
(lowest), 1
(for 24
(int 6
-g 3
(including 10
(implicitly) 2
*arg) 26
*current 1
*rvals; 2
(releasing 1
(one 6
(long 2
(untimely?) 2
*(*start_routine)(int), 2
*consumer(void 5
(now 6
(privileged) 1
(probably) 1
(pthread_create) 2
-i. 2
(it 12
(known 1
(not 20
(rc_wait:29267) 1
- 25
--b1 1
-5; 1
(modulo 1
(user 3
(usually 7
(v9 1
(we’ll 2
(in 45
(making 1
(sadly). 1
/bin/ls. 1
(implying 2
(lock->turn 2
(or 83
(rc_wait:29384) 1
(repeat) 8
(only 5
-P 19
(myarg 2
(note: 2
*dst; 1
(mentioned 2
(which, 2
(job 2
(mutex); 6
(some 1
0(%eax) 2
(labeled 6
(ld.so) 1
(locked). 2
(long) 1
(mem.c) 1
(p2). 1
-Wall 7
& 29
(1024). 1
(104) 1
(15th, 1
(I/O). 1
(LDE) 1
(MIPS), 2
(OS)3 1
(R, 1
(no 4
(pid:%d)\n", 9
(requiring 1
(roughly 2
(simple 2
(pid:29266) 2
-p 44
(onto 2
(probabilistic) 1
(probably), 1
(pthread_join) 2
(switching 1
(target) 1
(v1) 3
0); 8
0.001), 1
0.6 1
0000000000400000 1
(sometimes 10
(other 1
(p6, 1
(rather, 1
/dev/zero 1
/proc/meminfo 1
(more 3
(most 2
(mutex 2
(n) 1
(p2), 1
(part 2
(pid:29147) 2
(nods) 1
(quite) 1
(required 1
(running 1
(said 2
(pid:29383) 2
(results 1
(sometimes, 1
(stride=100) 1
(studied 1
(too 1
(turned 1
(upon 1
(via 6
(Simulation) 16
(right) 2
(sched 1
(sorry!). 2
(turning 2
(virtual 1
(whether 2
(remember: 2
*m) 6
01, 2
). 3
(left 1
(literally) 2
(nearly 2
(new_head 2
(p1.c) 1
(p4). 1
(non-toy) 2
04 2
(spinning 2
(stop 1
(similar 3
*), 2
**old, 1
*ptr 9
0KB 13
*args 4
(myarg_t 4
(thus 9
(use_ptr 1
(virtual) 3
(you’ll 1
(preempting 2
(on 11
(or, 5
(p.81).” 1
(p3.c) 1
(somewhat) 1
(result: 1
*L) 4
*chan; 1
*parent; 1
*head; 4
(new) 1
(what 4
(without 1
(write) 1
(“0101”th) 1
(pretend) 1
(probably 1
(quantum 1
(thank 1
(page 49
(that 5
(say, 11
(shaded 1
(thanks 1
*tail; 2
*q, 4
*value 2
--l1 1
-1) 1
-5), 1
-l. 1
0). 2
00007f4e7d2d0000 1
(quickly) 1
(using 9
(physical 1
(pointers) 1
(real) 1
0] 4
(turn 2
*tf; 1
-20 2
(void 12
(T1) 4
(TLBs) 1
(VPN=1, 1
(assume 2
(c4). 1
07 1
(remember, 1
(size 1
(too) 1
(usually, 1
(reduction 1
0x0(%ebx) 1
0x0DC0. 1
0x7ffd3e55d2b4 1
0xC0000FFF 1
(when 3
*arg); 4
*head 1
0x000, 1
(source) 1
(stuck 2
0x03, 1
0x300, 1
0x3000, 1
*value) 2
(where 12
(resulting 1
(“Buzz 2
(perhaps 7
-B 4
1, 80
* 17
*child(void 3
*lock) 20
0x00000000, 1
0x03e8, 1
0x7ffe45522e94 1
(v 2
(the 61
0xC0000000, 1
--leak-check=yes 2
(yet) 3
(running, 2
*(*start_routine)(void*), 2
(pointed 1
(recall 1
(roughly) 2
(size=200) 1
(stride=200) 1
*ptr, 5
+1 1
(they 3
0xBFFFFFFF 1
(version 1
(through 1
1-GB 1
-C 6
*) 23
(runtimei 1
*attr, 2
*c); 1
**value_ptr); 2
*hptr 1
1.01] 203
(such 25
(char 8
, 15
--b0 1
-O 1
-S, 1
(tmp 1
1024 10
12(%eax) 1
*cwd; 1
*input) 1
-R 13
*mutex); 8
*abs_timeout); 2
-D 154
-d 2
(to 10
(waiting 2
(way) 1
10.5 1
*H, 4
-o 9
./array 1
-S 24
128, 1
(say 17
*myargs[3]; 2
-b 3
*malloc(size_t 1
*cond, 2
10, 14
-t 20
./p4 1
0-byte 1
0.03 2
100%. 1
*d 1
(v2) 1
./mem 5
-c 22
13.5 1
(see 12
*str 1
-r 5
*mutex; 2
*old_ptr, 2
10,000 8
(depending 2
(which 39
*H) 2
0.5. 1
1000s 1
*old_ptr 2
*p); 1
*thread, 2
*worker(void 1
--tool=lackey 1
-10 1
--trace-mem=yes 1
./multi.py 4
*new); 1
*p 6
-1, 1
-= 1
*L, 8
*argv[]) 23
*m); 1
100s 1
(va.c) 1
0+5+10 1
-pthread; 2
137, 1
(store 1
-A 6
-X) 1
./p2 1
*producer(void 5
100, 6
(due 6
-M 15
*cond); 2
0001 1
*ptr; 6
1030 1
(vruntime). 1
0, 55
-s 21
14.4 1
(that, 2
(tiny) 2
(total) 1
/ 1
0,0,0,0,0,0,1:0,0,0,0,0,0,1:0,0,0,0,0,0,1 1
100,000 1
(even 3
-m 3
*mythread(void 12
*rvals 2
*src 3
1111 7
(wc). 1
00, 1
00007f4e7cf06000 1
14949, 1
15.3 1
-a 41
(unused) 6
(use 1
(value 2
1000, 5
10ms, 1
0010 1
... 84
*tmp 7
*x 3
112 2
(xchg). 2
................ 1
00007f4e7d731000 1
010000; 1
16 92
-c. 1
+= 9
0,0,0,1,0,0,0:0,0,0,1,0,0,0:0,0,0,1,0,0,0 1
(yes, 4
(forever), 1
10th 3
01 2
./x86.py 14
+ 45
--tool=helgrind 2
128) 1
) 46
./p3 1
.EXE 1
0th 2
16(%eax), 1
. 53
-k 2
0.1 2
(you 5
*dst 2
*malloc(size 1
0100 1
0+ebx 1
-> 10
-1); 1
-5 1
-nw 1
-15 1
0x0(%ebx),%eax 1
16.2 2
./p1 2
-t). 1
0 384
00007f4e7d932000 1
(hardware 1
(lazily) 1
*new_head 2
0xFFFFFFFF) 1
0: 4
-n 19
13 93
*/ 16
-u 6
-F 3
0x800, 1
160 2
./random 3
.... 1
0.2 1
0? 3
11168, 1
(main) 4
(normally 1
(p4.c) 1
0-9), 1
13.2 2
*c, 5
*mutex, 2
*ofile[NOFILE]; 1
*old_ptr; 2
1.00] 5
17.1 1
.globl 1
./main-two-cvs-while 2
00 4
0x1024 1
// 294
+19 1
0x200000 4
(pause 3
(potentially) 1
14.1 1
1 461
./main 6
-f 1
-v 17
/proc 1
17.3. 1
//acquire 4
/proc/meminfo; 1
1174 1
0x900. 1
0. 11
-H 1
0x600, 1
0; 116
(realistically, 2
15. 1
10 165
0.4 1
*ptr) 7
10+20+120 1
00000000019d5000 1
17.7: 1
0000 14
0,0,0,0,0,0,1? 1
11:5, 2
1. 43
0.0 2
-l, 1
1) 52
0x30 1
(returning 2
(slow) 1
(something 2
(start 2
-1; 8
-1KB. 1
0111 1
18.6: 1
0x80000000 2
08 2
1277, 1
1.0 1
00007f4e7d508000 1
-pthread 5
...; 1
0x37) 1
0x700, 1
0x7ffe1033b8f4 1
0011 1
(t0.c) 2
(taking 2
-L 18
03 1
19.3, 1
0x8049a1c. 2
0x00000000 1
13.1: 1
10. 7
0x8049a1c, 8
1-second 1
./cpu 5
15.2. 1
10.2 1
0xC0000000 2
0101 1
10+20+30 1
(think 5
(trustingly) 1
0x1096008c0 1
19.5: 1
1.0001 1
0x1095afe50 1
0x200000. 1
100. 6
10-ms 4
1.0; 1
./process-run.py 2
15.6: 1
1.0, 1
100 87
0110 2
10.3: 1
-l 19
(web 2
1)) 2
1969. 3
10-entry 1
14KB; 1
0x400, 1
1000. 2
11–12), 1
1.3.37 1
./thread 3
16.1. 1
10.2: 1
1000 10
02 1
100+110+120 1
./main). 1
(who 2
10.4 1
1978. 5
10.1 2
15). 1
0xFFF. 1
110, 1
12, 2
10) 2
0% 5
0), 1
100%), 1
100000 2
0x068, 1
1000; 1
/* 16
*c) 18
1024, 1
104. 1
10.2? 1
16.1). 1
1). 6
11916, 1
12-bit 2
10.1: 1
16.5: 1
0.9. 1
1028 1
11–19 1
0x7fff691aea64 1
100K 1
0) 40
*curr 4
*kstack; 1
1101 2
10.3. 1
18.6 2
10). 3
1234567)) 1
12:6, 1
100) 3
1036 1
109 1
10:1,10:100). 1
12. 2
0x80000000)) 2
1074 2
0+1+2 1
1987. 1
*mutex) 12
1110 2
100? 1
19.5 2
100). 2
13.2: 1
13.2; 1
13.3: 1
05 1
111). 1
110000) 1
120. 1
0x8049a1c 6
10; 2
09 1
1996. 4
*q; 2
101. 2
12 89
19221041) 2
100+(110−10)+(120−10) 1
137298 1
16KB 24
15) 4
0th) 1
12). 1
128 13
14, 2
1-byte 1
12) 1
0x0(%ebx), 2
1KB) 1
*x); 1
108). 1
12(%eax), 1
1950’s 1
1000). 1
13: 2
17, 1
15.1: 1
0x100, 1
14.7 1
143012 1
14-bit 4
10-byte 1
1234567 7
0x500, 1
1Note 2
--l0 1
11. 3
12(3), 2
1970’s. 1
103.33 1
13:4, 2
16KB)1 1
17.1). 1
0x3C00). 1
15.6 2
16.5 1
15.3: 1
10.3 1
128-Byte 1
0x8049a1c). 2
1.2.1) 1
-I 6
-i 18
-is-unsafe. 2
-m, 1
-p) 1
17.4: 1
15:3, 2
1792K 1
0x3F80, 1
15), 1
17.4 1
15:5, 2
100%, 1
128-byte 2
2), 3
10,000,000 2
115–116, 2
120 9
1We 1
105-117, 1
..., 2
17.7). 1
15KB, 1
18.7 1
1); 4
10); 1
10.1), 1
10.6 1
100ns 2
13:2, 1
2.7 3
100,000, 1
12:7, 1
12000 1
1ms, 1
107 1
./fork.py 4
18.3: 1
16KB; 1
19.1), 2
19.6 1
17.8, 1
16.2: 1
100); 2
101 4
14). 2
16), 3
16.7 1
16500 1
13.1 2
2.3: 1
1124 2
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 1
19.2: 1
1928 1
19345221) 2
1960. 1
18.3 1
16KB] 5
100-bytes 2
20% 7
11 110
100:100,100:100), 1
13, 2
18.5 2
135: 1
20-29): 1
128KB 1
0.1). 1
0.10). 1
0.8 1
1957. 1
1960’s 5
17.1: 1
19 58
100byte 1
20), 1
110 2
108 11
13.2, 1
19.4 1
14. 4
20.3: 1
13); 2
17:10, 1
16(%eax) 1
06 1
0x00000FFF, 1
1KB 13
18.3). 1
19.2 2
1024. 3
2007. 3
1100 3
13. 2
132: 1
1960’s. 1
15.1. 1
20.6). 1
13.1), 1
19.7 1
16.6 3
1964 1
0x200, 1
1] 4
18705, 1
19.4. 1
1960’s, 2
1990). 1
1999. 1
1KB, 1
15.2: 1
1970; 1
15.3, 1
2000; 2
14.5 1
2008–20, 49
17.5 1
1966. 3
1% 1
1m 6
19). 2
104 1
2014 1
11). 1
14KB 2
200,000, 1
1586, 1
1980’s, 2
15.5: 1
1961. 1
148K 1
21.2: 1
1780K 1
1970s 1
1), 5
2, 38
1945. 1
1954. 1
2016. 1
110). 1
15, 7
21:1, 5
16.1: 1
1; 42
152K 1
1963, 1
15.4 1
21: 1
179–180, 1
1975. 2
10% 5
2-MB 1
1110101 1
1963. 2
2018, 1
11:1, 1
15.4: 1
21:10, 1
16KB, 1
1K 1
15KB 7
1970. 4
16-byte 4
22.1: 1
18.4 2
1993. 6
10), 1
2-bit 1
113 4
1965, 1
21.1), 1
1224 1
16.1, 2
22.8 2
24(%eax) 1
1KB. 1
16.4: 2
1970’s 2
16.3 2
23:2, 1
19.3 1
1:0,4:100. 1
10.7 1
2.4: 1
117, 1
1970 1
21.6 1
135 2
14.6 1
1793, 1
25%. 1
256KB 1
17.3: 1
2- 1
16.5. 1
256 6
1980’s; 1
2.4 1
100% 5
20, 3
128: 2
1972. 5
214 1
16.3: 1
15.5 2
18). 1
1k 9
256m 1
17.6). 1
2.5: 1
17 66
26.7 4
1998 2
20.4 2
100), 1
20-bit 3
13.3 2
1981. 7
22.5 2
16384, 1
16.4 1
19.1). 1
2.2: 1
26.4 4
18.2: 1
20.5: 1
17.2 1
27.6 2
1: 7
2004. 7
1032 1
20.4: 1
13–14). 1
1990. 2
2212 1
16K 1
17.3 1
17.5. 1
2.3) 1
27.3 4
184–199. 1
2010, 2
17.4. 1
28.14 2
2) 7
2008–18, 5
105 6
200, 3
1992.. 1
14 71
25 33
16k 5
19.3), 1
18 54
2.5). 1
28 33
19.1: 1
2015). 1
17.8: 1
28.5 2
2.1: 1
2013. 4
128; 1
13.4 1
2.1 2
14.2 1
250 5
17.2: 1
19.8 1
18.2 1
20.2: 1
28(%eax), 1
1956. 1
20KB 2
170 3
28.9, 2
2.4). 1
20.1: 1
2000) 2
132 2
20.1 1
140 2
26.1 2
17: 1
1962. 7
19.1 2
192KB 1
28.11 2
1965. 6
21, 4
18.1 2
29.4 4
2015, 1
200-MHz 1
20000000) 2
218 1
2001. 1
143,012. 1
26.7: 2
17:4, 1
1963.” 1
20.5). 1
19384 1
28.2 2
1974. 3
21-bit 1
18.7: 1
2; 5
202 1
2000, 1
14.3 1
22.9 1
2003, 2
15.1 2
27.2. 2
18.1: 1
1971. 1
21.1: 1
1989. 5
28.4. 2
1983. 4
21.2, 1
1800s, 1
2K 6
21.3 3
2015/02/10/understanding-glibc-malloc/. 1
14:7 1
24113 1
2008). 1
16.6: 1
272, 1
1962 2
1980. 1
22.3). 1
1996 3
28.8: 2
1992. 4
22.3: 1
1959 1
2k 1
215, 1
20th 1
254 3
15 96
2010. 7
17.5: 1
28.5: 2
1964. 2
1991, 1
23254, 1
1998. 2
29.1 2
2.3 1
23.2: 1
1968 2
30.11: 1
22 38
21.3: 1
26.5 4
15.2 3
22.5: 1
18, 2
28KB 2
1973. 2
1? 1
24114 1
2). 7
29.7: 2
20.3 2
28.16 2
1979. 2
30.14). 1
22.11 1
22.2: 1
27.4 4
150 10
23, 2
18-bit 1
29, 3
1982. 7
1MB 1
25% 1
2.9 2
29267 1
2003. 4
28.7 4
1988. 2
30.2: 1
22.2 1
23.1: 1
28.12 2
16.1 2
23-bit 1
18.2, 3
29.4: 2
1990s, 1
1” 1
255 2
2009. 5
29384 1
201 4
29.6 2
21 45
30.3) 1
22.8: 1
24:2, 1
28.3 2
16384 1
26.1: 2
18.4: 1
29147 2
1991. 9
2. 29
26.6 4
2016 1
2This 1
1997. 5
2:70, 1
21.2 2
31) 4
220 1
256-byte 1
28.5. 2
16492 1
26KB, 1
18–21); 1
3); 1
30.15 1
2.6: 1
27.5 2
22.7 2
3). 5
1:1, 3
2Fortunately 1
22.1 2
3: 3
23.1 1
28(%eax) 1
28.9: 2
16708 2
28.9 4
19.3: 1
1Each 1
30.6 1
20. 1
28.13 2
22.9. 1
30.9 1
1e7; 2
2KB 8
22.10 1
4) 2
24. 1
28.1), 2
29 25
17.2. 1
29.8 2
1949. 1
32896; 1
20.2. 1
28.4 2
26.3 2
37 8
20,000,000. 2
2 257
2] 2
22.7: 1
4.1: 1
2501, 1
28.15 2
29.11 2
17.6: 1
29146; 1
1980s 1
335, 1
20.6: 1
28.6. 2
27 32
3KB: 1
2017. 2
2.2 2
2m 1
22–23), 1
448KB 1
26, 1
28.6 2
29.2 4
170. 1
29154, 1
1985. 2
34 12
200. 3
29.3 2
27.2 2
4-GB 1
21.7 1
2”. 2
24KB 3
20 95
49 1
26.4: 2
29.5 6
29.8: 2
172, 1
3. 32
1994. 1
372K 1
2000. 9
29.9: 2
28.1 2
4.1). 1
22.6 2
3, 25
250, 1
20(%eax), 1
4904, 1
27.3: 2
2github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
38 8
18.5: 1
30. 2
2.5 1
4.5 2
2018), 1
2: 3
28.10 4
4.8 1
26 32
30, 3
26.1, 4
20.2 1
4:3, 1
27KB. 2
3.33). 1
4). 7
19.4: 1
30.15: 1
20.1); 1
43 8
21.3, 1
3) 2
28.3. 2
5% 3
26.2 4
30-bit 1
26.3: 2
200 24
4GB 1
28.2: 2
30.12: 1
47 2
1957 1
30.2. 1
20.5 3
5.4 2
22, 1
30.10: 1
28.7: 2
5), 5
27.1 2
30.13: 1
27.2: 2
2000 15
4KB, 3
29.10: 2
30.3: 1
4:1, 1
1959. 1
30.6: 1
2005. 9
56, 1
22.2, 1
30.13). 1
29.6: 2
5.7 1
28.6: 2
30.4: 1
28.10: 2
2002. 1
5.3). 1
29.1: 2
30.4) 1
4:10, 1
1966 1
300. 3
2007, 2
6.3 1
22.4: 1
30.1: 1
3-GHz 1
50), 1
28KB1 1
30.5) 1
28.1: 2
2011. 7
6). 1
2KB), 1
30.8), 1
60% 4
1968. 11
32, 1
64KB 9
28.17 2
2008–19, 138
384KB 1
30.8 1
55 1
29.1. 2
300, 2
28KB, 1
2013, 1
21.1 1
30-byte 1
3000; 1
64-Byte 1
1986. 1
32-bit 16
28.8 4
2016.. 1
39 11
7 127
324 1
5:100,5:100. 1
29.5: 2
3000, 1
29.10) 2
64-bits); 1
22.6: 1
30.12 1
32KB, 1
64-byte 7
1995. 6
36291, 1
29.7 2
203 1
4.3). 1
7.2 1
32868. 2
64 17
3), 3
39016, 1
29.3). 2
7.8 1
23.1. 1
30.3 1
3906, 1
7); 2
1:0,4:100 2
3752 1
2N 2
21.4 1
48 9
4MB) 1
36 11
7.5 2
30.7 1
3B: 3
2Q 3
76 1
24-bit 1
30.9: 1
3:50,3:50. 1
7.6 1
2.6 3
3:0,5:100,5:100,5:100 1
2’s 1
22.12 1
22.3 1
5). 6
4), 2
70%. 1
300), 1
4.3: 1
8), 1
8.7 1
31 21
3; 3
74 1
20(%eax) 1
20); 1
20.6 1
30.1. 1
7.4. 1
22.9: 1
655, 1
40% 5
78-101, 1
35 12
4096, 2
26.2: 2
80% 7
32-bits 1
3A: 2
7620, 1
3 231
4.5: 1
2006. 6
30.14: 1
7.8: 1
23 37
7), 3
40050 1
8.4 2
3Like 1
4146 1
27.1: 2
85 1
34KB 1
3K 3
8.5 2
30 31
40-ms 1
2015. 1
30.5: 1
70 2
23.2 2
7.7 1
4088), 1
88761, 1
3a); 1
4a: 1
29.9 2
9.6 1
36K 1
3KB. 2
83 1
30.11 1
40KB 2
204 3
32K 3
8.1 1
25. 1
75 3
45 6
9.3 2
4(%eax) 1
4k 1
30.1 1
940 1
3764 4
4(%esp), 2
87, 1
30.2 1
4KB 16
21.5 1
32k 6
8.7: 1
254: 1
76–86, 1
48KB 4
9.5. 1
4.6 1
5.1; 1
30.7: 1
<sys/time.h> 1
3980 3
3A 1
9.4 2
30.8: 1
4m 1
22.4 2
34920. 1
80-20 4
26.3, 2
8(%eax) 1
49, 2
90%, 1
44 6
5.2: 1
320KB 2
4-KB 3
; 25
300 4
4 164
4page 1
23.3 1
36.4% 1
85.7% 1
= 415
26.5: 2
8(9):569, 2
5.6 1
4400 1
5121024 1
32KB 5
4.2: 1
;load 1
: 289
3000 4
4(%eax), 1
5, 6
24 37
3:50,3:50 2
9. 9
A, 16
27.2, 2
8.6 2
512-byte 1
44000 1
54.5%. 1
34K 3
4.3) 1
>= 5
3121, 2
== 91
4.2 1
5.4: 1
24(%eax), 1
3KB 3
99% 2
ACM, 19
27.4: 2
9.5 1
526, 1
4K) 2
5: 2
3” 1
4.3BSD 1
A: 13
3412382, 1
A) 2
40 28
50, 5
26.6: 2
3] 1
<fcntl.h> 2
AMAT: 1
28.2; 2
93 1
59–73, 1
4KB). 2
5→0 2
4. 27
4: 2
ABOUT 1
4.1 1
ACHING 1
400 1
50,000 2
27.1. 2
4, 5
<string.h> 2
APIs 10
28.3: 2
< 24
6.5 1
4MB), 1
6) 5
4.2. 1
5) 3
APIs. 1
400MB 1
ALGORITHMS 1
4000 3
5000, 1
28.4: 2
4-bit 3
<unistd.h> 6
ASID, 1
28K 3
>> 11
63 3
5.5 1
6.1: 1
40%) 2
5.1: 1
About 5
4096 3
40000 2
API 62
50th 1
29.3: 2
4.4: 1
<value>\n"); 1
29.11: 2
A; 2
64bit 1
512 9
ASY 154
6.2) 1
40. 2
50) 1
AccessMemory(PhysAddr) 6
49).” 1
4088 1
Abstraction 2
5th 1
2KB). 1
40, 2
4000, 1
ARPACI-DUSSEAU 38
ALLS 2
7.4 1
55. 1
AT&T/Bell 1
64-bit) 1
4088. 1
68 1
Accounting 1
4MB 2
4096-byte 1
5. 27
6.3: 1
3): 2
29.2: 2
4b: 1
Adding 7
ANAGE 3
8-byte 1
56KB 2
ATOMIC 2
7332 1
4200, 1
7). 2
Actually, 1
Accesses 2
4196 1
50. 1
64). 1
33 12
30.10): 1
5.3: 1
Afraid 2
ASPLOS-IX, 1
8.3 2
6.4 2
AUER 1
82% 1
44:1/2. 1
7.9 1
Aha! 1
Affinity 1
4:100,1:0. 1
6100, 1
7.2: 1
4.4 2
30.4 1
57.1% 1
Algorithm 5
Again, 3
8049a1c,%eax 4
62 2
Above 3
8:10, 1
46273, 1
7232 1
Allocator: 1
Algorithms 4
5.1 1
64GB 1
75% 1
42 7
32 33
6.2: 1
Anticipatory 2
Alan 3
7.3 2
Abstractions 1
9.1). 1
9 119
4b, 1
8.1). 1
Also, 1
Approximate 10
50? 1
6= 2
8) 3
4200 4
36, 1
7) 3
Applications 4
Although 16
7.9: 1
Al 8
9.8 1
9.2 2
5(2): 1
86 2
Andrea 7
Assume, 3
51. 4
6KB 1
8.1: 1
4b 4
3764-byte 3
7.1: 1
Arpaci-Dusseau 3
Amazingly 1
Anita 1
8 109
96 2
90 1
50-ms 2
8KB) 1
Approximation 2
BOUT 1
549–557, 1
7, 2
9:2, 1
5.3 1
3One 1
9). 1
Art 3
And...? 1
Annals 1
8(%eax), 1
? 9
ACE 1
51, 3
9), 1
Atomically, 2
BUCKETS], 4
6. 20
7.2, 1
<string>\n"); 1
51 18
4-byte 3
@ 8
Assuming 10
Apparently, 2
Anoop 2
8.2 2
A. 29
ADD 1
5KB 1
9.7 1
Attacks 1
Background: 1
7.5: 1
7.4: 1
56483, 1
4.3 1
A1’s 1
B5000 4
B-Trees: 1
Approach” 3
80 18
A2, 1
ALICIOUS 1
6.4: 1
90% 1
Available: 29
A 728
Behind 4
7.8). 1
7.7). 1
5–7), 1
40100 1
ANAGEMENT 17
BE 1
B: 12
Architecture: 4
9.1 1
ACM. 2
ALLOCATED 2
6000, 1
99, 1
Average 1
A2’s 1
Between 2
7094 1
70, 1
41 10
6 116
ARM 2
BFS, 2
BUCKETS; 2
Atomic 2
9” 4
ADDRSORT, 1
APIs, 4
7.1, 1
99.9% 1
A’s, 1
ACHE 1
Birrell. 2
7355 1
7282 1
423, 1
6+5 1
ASIDE: 4
BIQUITY 1
Bach. 1
Award. 1
;store 1
AMAT, 1
Acta 1
7.3: 1
> 5
B) 3
ACM 11
Boneh. 1
7KB 3
7354 1
45, 1
6.2 1
ASIDs, 1
BSD. 1
Battle 1
B; 1
<< 9
AN 18
Ah 1
7.6). 1
ABCABCABCABCABC 1
B-tree, 2
AKE 1
Buffer 9
8, 1
8.3: 1
4a 4
60 13
AccessMemory(PDEAddr) 1
Bad 3
Bovet, 1
Babaoglu 1
<pthread.h> 8
ANGRY. 1
Algorithms” 1
73-96, 1
ACKGROUND 1
BFS 1
ALWAYS 1
Bus 1
8-bit 3
8k 1
64, 1
AccessMemory(PTEAddr) 4
5 169
Basu, 1
Brian 2
Bairavasundaram, 1
AIN 1
APPING 1
All 21
7353 1
AM 2
Base 3
ASID 9
Buttlar, 2
8.4: 1
9.2: 1
64-bit 10
Accessing 2
5.2 2
Be 5
C) 3
Became 1
ANDOMNESS 1
ARGE 1
Allocated 9
8-page 1
AMPSON 1
Beginning: 1
Allocator 1
CHEDULE 2
9.3: 1
991 1
7.1 1
Again 2
50 46
Berger 2
C9 1
Belady, 1
ANY 1
Actually 4
Assignment 1
8.2: 1
ASPLOS, 1
Block 9
Along 2
CONDITIONS 1
;add 1
<stdio.h> 15
7.10 1
Allocation: 2
500 4
Bit-precision” 1
C95]. 1
Black 1
API. 5
Address-space 1
Attempt: 4
846 1
AUSE 1
Bonwick. 1
Alternately, 2
CPU-intensive 4
ANDLE 1
<sys/types.h> 1
7.7: 1
Allocator” 2
512KB 2
Bobrow, 2
CFS 40
Bonwick 3
ATC 2
Also 10
August 5
9) 1
Ability 2
Bosch, 1
Always 4
CPUs? 3
AS 10
<sys/wait.h> 3
8. 12
Almost 1
512m 7
Boost 2
CHEDULER 1
Both 7
ATTACK 1
Automatically 1
An 65
9.1: 1
Account.html. 2
Broken: 1
Andrew 4
But 49
AZY 1
<virtual 2
8.6: 1
Alto 2
52. 2
But, 7
CLOCK 2
Burroughs, 1
AW 5
B). 2
And, 2
99 7
Achieving 2
Calling 8
Anomaly 2
Abstraction: 3
By 58
A2 1
820, 1
Answer 1
6.1 2
B’s). 1
CPU(s) 1
C: 2
Accurate 1
B86], 1
Annual 1
<assert.h> 4
Aleksey 3
Cambridge, 2
Another 38
Addison-Wesley, 11
CFS” 1
AFIPS 4
9.5: 1
Apparently 1
6.3. 1
C.H. 1
CRUX: 6
CPU), 6
Amazing! 1
BFS. 1
Anomaly. 1
<stdlib.h> 9
Allocating 1
Clayton 1
Architecture. 1
AddressOfPTE 1
CODE 2
AMAT 4
9548, 1
Apple’s 1
64k 1
CONDITION 19
CVs 2
CPU-bound 2
Amazingly, 4
BSD 3
Array 4
A1 3
Analysis: 1
Coffman 1
Available 8
Allocators 1
CONCURRENCY 3
AME 1
A), 2
Atlas”, 1
7. 16
CPU? 11
Caching” 1
CPUintensive 1
Anderson. 1
BSTRACTION 20
Atlas: 3
AIX 1
Andreas 2
Completion 4
Avoiding 1
Amazon’s 1
CPUs 37
AND 6
API, 1
Austin, 1
7.6: 1
CPUs, 14
Call 8
Caching 1
Any 3
Babaoglu, 1
Atlas”; 1
AMD 1
Antoine 1
Concurrency? 1
Conditions 1
Corbato 4
CRITICAL 1
AVOID 7
ARC 1
Authors: 1
7.9). 1
Caches 3
Case 4
Center, 1
Approach: 5
Bart 2
Attempt 3
ARC, 1
Apple, 2
B1’s 1
Analysis 5
Cups” 1
Cache-Affinity 1
Abstract” 1
ARDWARE 2
B. 18
70–76, 1
Certainly, 2
Cassandra, 1
Chang, 1
April 10
Below 2
Award 2
ASLR 1
Approach 1
B5000: 2
April, 3
DATA 16
Certainly 1
Adam 1
ATA 21
BUILD 1
71755, 1
Cesati. 3
Characteristics 1
Compaction 2
Are 6
Buffer” 1
A’s 7
Access 9
Ask” 2
B? 1
Arrivals 1
Dahm 4
Chou, 1
Ahead 2
Abdel-Wahab. 1
Basically, 5
And 108
Chapter 1
Chunks 2
Compute 4
ArpaciDusseau. 1
Butenhof. 2
B-tree 2
After 21
Assume 33
BUCKETS 2
Darago, 1
Clark. 1
As 158
Act. 1
7356 1
Bertinoro, 1
Approximating 1
Clear 1
Clock 2
Control, 1
Artificial 1
C++ 2
BASED 17
Allows 1
B, 22
Bayer. 1
Data 13
Code 24
Atlas” 1
Address 25
8.5: 1
Beyond” 1
Architecture 9
Clements, 3
Coherence 1
Copy-on-write 1
B+96, 2
C.J. 1
Before, 2
Alpha, 2
B-tree” 2
Belady 3
Dennis) 1
Code00 2
Austin 3
Advanced 1
801, 1
Bigger 1
Argument 2
Comes 1
Cores 1
Corbet. 2
BAD! 2
CCESSES 1
Belady. 1
Alternatives 1
B97, 2
Berkeley. 1
Descheduled 1
Coherence” 1
Base[SN] 1
Algorithm” 1
8KB 6
Bovet 2
Arpaci-Dusseau, 10
Condition 6
Corporation, 1
Couleur. 1
BF 2
CCS 3
Belady’s 2
Amazon, 1
BEST 1
Beyond 14
Design 3
Compared 2
Blocked 4
Allocated] 2
9, 6
Brooks 1
Atlas. 2
Consider 2
Costs 1
Covering 2
Baby: 2
COW 3
Bell 2
Animal 1
Baby 2
Bits” 1
Dialogue 3
Computer, 6
Boot 1
Allocation 3
9-bit 2
Bryant 4
Atomicity 2
Could 1
Critically, 1
Creating 2
CPUs. 7
Because 50
Berkeley, 2
Anyhow, 1
Balakrishnan 1
Boston, 3
Dijkstra. 9
Concept” 1
Bradford 2
Anderson, 2
9.4: 1
Build 4
Avere 1
Counting 2
DEC 3
C’s, 2
CV 2
Benchmarking” 1
Bit 3
Anything 1
Baron, 1
Bouron, 1
Dijkstra’s 5
Concurrency 1
BufferOverflow.pdf. 1
Android), 1
AT 1
Burchfiel, 2
B1 1
D.B.G. 4
Daggett, 1
D) 3
Caching, 1
Blasgen, 1
Björn 1
Appavoo, 1
Baumann, 1
Broken 3
EAD 1
Control: 1
Burnett 1
Applications” 1
Adaptation 1
Buy 1
Base-and-bounds 2
Davis 8
Debugging 2
Daley. 1
Casting 1
Borg. 1
Bounds[Segment]) 1
Apple 3
Best 2
Bruce 1
EAKED 1
Controlling 2
C-language 1
Approaches 1
Ah, 2
Bye 1
Before 21
December 8
Detailed 1
Daniel 3
Chevalley, 1
Buddy 1
Boyd-Wickizer, 3
Aq 1
Bhandarkar 1
Burroughs 5
EC2 1
Cores” 2
CACM 1
Architectures 4
Ajay 2
B’s 8
Berger, 2
Deciding 1
Dijkstra 12
Definitely 1
Chunk 1
C), 5
C, 12
Architecture” 3
Blocked: 1
C. 24
ECIDE 1
Couleur, 2
COND 2
Aside 1
Allocate 3
C-callable 2
Berkeley 7
Dickey. 2
Dirty 2
Dennis, 2
Cohen, 1
CFS, 3
CHEDULERS 1
Bone: 2
CONTROL 2
EE 1
B 157
Critical 2
CPU, 33
Assumptions 3
Allocation” 3
C.A.R. 1
Beth 1
Different 5
Distribution, 1
Discovering 1
Common 3
COMPCON 1
Brooks. 2
Cheap 1
EMBRYO, 1
BSD) 1
CPU 255
Crockford’s 2
CPUs) 1
A’s). 1
Aren’t 1
CA, 7
Bill 1
Dijkstra; 1
EG 1
Dominion 1
Communications 20
CPU). 1
Building 5
Cocke, 1
EXCLUSION 1
Basic 10
CPU-bound; 1
Currency 1
CREATE 1
B-trees); 2
Arpaci-Dusseau. 3
CACM, 5
Boles. 2
EALLY 1
EMORY 36
EFERENCE 1
Compile 1
Calls 4
Butler 3
Computers” 1
Edsger 8
Batch 1
CR3 1
Cutler, 1
Cache 18
BETTER 1
Assign 1
CISC. 1
Buffer) 1
ERMS 4
END), 1
ENERALITY 1
Complete 1
Candy 1
B’s. 1
Computing; 1
Effectiveness 1
Better, 1
Candea, 1
DBMS), 1
California, 6
Barton 3
At 31
CPUbound 1
ESTRICTED 1
EVEL 11
Early 3
Concurrency. 1
C 212
Colorado, 1
C; 2
Control 11
Embedded 1
Big 2
Canyon 1
DVICE 1
Canada, 4
Base[Segment] 1
Atlas 10
CPUs), 1
Edward 2
Errors” 1
Efficient 2
Conditions? 2
Com-puting, 1
CHEDULING 50
CISC, 1
Convention. 1
English 1
Bits 1
Case, 1
Dick 2
Chemistry, 1
Better 4
August, 1
Clustering 1
Electronics, 1
Example 18
Eligible 2
Cool, 1
Compare-And-Swap 2
CONCURRENT 15
Calculate 1
Cooperative 1
EnvyFS” 1
Buddy-managed 1
Chapman 2
Direct 8
Disk 5
Blumofe, 1
B.W. 1
Base/Bounds 1
Emacs. 1
Examples”. 1
Elliott 1
Copper 1
Compare-and-swap 2
CONDITION, 1
Check 8
C’s 1
Exactly 1
CISC 7
Clearly, 9
Coalescing 2
Does 29
Brinch 7
Butter 2
Base/bounds 2
Examine 9
F.J. 1
Errors 3
Core 3
Computer 20
Concepts 2
Conceptually, 2
D.A. 1
Exclusion 4
CPU: 1
CPUs). 4
Cobham. 1
Cobham’s 1
CompareAndSwap(int 2
CPU-optimized, 1
Begin 1
FOR 2
FAULT 1
Evans 1
DMA). 1
Declaring 1
Definition 1
Conway. 1
DID 1
F.H. 4
Failing 3
Can 40
ECHANISMS 11
Come, 1
Complex 1
CPU. 31
Being 3
Fill 1
Fault 4
Everyone 1
CPU; 11
Child: 2
Design” 4
Corporation” 1
Days 1
Child 1
Fast, 2
Carl 5
EGMENTATION 12
Compacted 3
Conference 1
CPUs; 2
Bershad, 1
February, 1
Examination 1
Cache” 1
Christenson. 1
For 194
Detect 1
Couleur 1
Denning. 2
Coarse-grained 1
Fetch 5
Charles 1
ERFORM 1
Comparing 2
Contents: 1
CS 1
Binary 1
Further, 8
FFICIENTLY 2
Chile. 1
Circuitry 1
Forget 1
Dissertation 1
Creation: 1
Denning’s 1
Coding 1
Final 4
Classic 1
ESS 1
Compatible 1
Corbato. 1
California. 3
Boilen, 2
Futex 2
FILENO 1
Cilk 1
Compilers 1
FreeBSD, 1
EASUREMENT 1
Daley 1
Dennis 6
Come 3
Flag 2
Compiling 2
ETTING 1
Concurrency), 1
Corbato’s 1
Callers 2
Boston 1
GBs 1
Follow-on 1
Claypool 1
Completely 5
Future, 1
EBOOT 1
DeWitt. 1
Directory, 1
Conditions: 1
Flash-based 1
Computers 2
EVELOP 1
Considered 2
Cox. 1
Came 2
Bottom 1
Gecsei, 1
Fortunately 2
Comment 2
Computers, 3
G 12
ERFECT 1
Dennis. 1
Doing 23
Conference, 7
Forin, 1
Computing, 3
Engineering 1
Corporation 1
Cup 1
Canada. 2
Bouron 1
Geometry 2
Google 2
Concurrent 25
Computer” 5
Gandhi, 1
ESOURCES 1
Detection 1
ETH 1
Countermeasures” 2
Frans 4
Consistency 1
Envision 1
Correcting 1
Cybertron 1
Certain 1
Brother” 1
Ginting, 1
Growing 1
Conference; 1
Contents 1
HAPTERS 1
Earliest 1
Development, 1
Each 19
Create 3
FreeBSD” 1
Correct 4
Evans. 1
Counter 6
DD 1
Change 4
CFS) 1
Glaser. 1
Guide” 1
Counters 8
Contrast 2
HOLD 1
Emacs 1
Douglas 1
Ed2.pdf. 2
G62]. 1
Counters” 2
D 109
Every 1
Craft 1
David 19
Close 2
CMU 1
Gollum, 1
Culler, 2
Convoy 1
HE 83
HREADS 1
EvictPage() 1
EC-11:2, 1
Either 4
GNU 3
Custer, 1
DEKKER’S 1
Evict 4
D, 2
Dead: 1
Commu-nications 1
CONCURRENCY: 15
Guide. 1
Current 3
Corporation. 1
HYSICAL 27
Hash_Insert(hash_t 2
Far 1
EEDBACK 11
Experiment 1
Generalized 1
D. 33
DRAM 1
Extract 1
D.H.J. 1
Decay-Usage 1
Computing 4
CPUs: 1
HICH 1
DO 1
Correspondingly, 1
Hall, 5
Hill. 1
FetchAndAdd(int 2
ELADY 1
Facebook). 1
Germond. 3
D.R. 1
Data: 2
Fairness 2
DRAM, 1
Dijkstra, 4
Concept: 1
Capel 2
Handle 4
Daily 1
Corwin, 1
Hastings, 1
Hong-Tai 1
Fine-grained 1
EYOND 27
Find 4
Goh, 1
DOO 1
David, 2
Dave 3
Finally, 70
Dilemma” 1
Conversely, 3
Cilk-5 1
Hardware?” 1
Delete 1
Create: 1
Having 4
Hydra” 1
Forgetting 3
Embedding 1
Formalizations” 2
HINK 1
Decepticons1 1
Dealing 1
Department, 1
Flexible 3
DiskRead(PTE.DiskAddr, 1
Corbato, 5
Class? 2
Has 1
Denning 1
Decision 1
He 3
I. 1
Fortunately, 9
Examples 3
Fred 1
Hoc 2
Dekker, 2
Dekker’s 6
DisableInterrupts(); 2
Fox. 1
Doctoral 1
Cox, 1
Cocke 1
Hash_Lookup(hash_t 2
Detail 1
Depending 2
Hennessy 3
Fun 3
Exception 1
I/O 86
Gray. 2
How, 1
Donald 1
Destroy: 1
Distribution 1
Frame 1
Doesn’t 1
Custer 1
Code: 2
Helen 1
Deterministic? 1
Despite 1
Hint: 2
GB 7
GHz 2
IBM” 1
Gray’s 2
I! 1
EAL 1
Developer’s 4
Don’t 17
Free-Space 1
Donkey. 1
DOS 1
Commodity 1
History: 1
Deuterium” 1
Digital 2
Hoare. 1
FAULTS 2
GUIDELINES 1
IRECT 15
HY 5
I/Os 3
EASY 38
Diego, 4
EALING 1
FreeBSD 3
Download 4
Deadline 2
Computations” 3
Hive/HDFS, 1
Development 2
E) 1
HotOS 2
FIFO; 2
George 2
ISSES 1
Hawkins, 1
ISTORY 1
ECTION 1
Dr. 1
ECHNOLOGIES 1
Generate 2
D′ 2
Death 1
Concurrency: 2
Hmm... 2
Distributed 5
ELOCATION 2
How? 1
Factor 2
Given 15
History” 1
EKKER 1
Imagine 39
ECESSARILY 1
EECS 1
HEN 4
E.W. 2
Design, 1
Considering 1
ERSION 166
Homework 28
Do 18
EPLACEMENT 2
EY 4
Fall 5
However, 120
I/O: 4
EPARATE 1
Increase 1
ECURE 2
Hansen. 5
ECHANISM 30
Details 1
Context 3
In 387
ESX 2
E. 20
ID 7
Easy, 2
Good 8
Finding 2
Hugh 4
IRTUAL 19
Emery 1
Initial 3
EGAIN 2
Hansen’s 2
Electronic 2
Determining 1
Creation 6
Includes 2
ETERSON 1
EC-11, 1
IMER 1
Elias 1
Google, 2
Finite 1
I/O), 3
In-ternational, 1
Entry 3
Intel. 1
ETTER 1
IFIPS 1
Equipment 2
Dharmendra 1
Culler. 1
Incrementalism, 1
Eindhoven 2
END, 1
INVERSION 1
Even 20
Group, 1
Finnish 1
IA-32 4
Introduced 3
Ever 2
Internals: 3
Earl 3
II) 1
Era 2
Discusses 2
Culler’s 1
Indeed. 1
Electroanalytical 1
Ed2.pdf 1
IT 3
Experimental 2
HARING 2
Firefox, 1
IGHT 1
Inverted 1
FIFO. 4
J 1
Earlier 2
IME 2
Evaluation 2
Done 1
DDRESS 25
Interposition 1
Emacs7 1
EnableInterrupts(); 2
ITHOUT 2
FAST 7
HINGS 1
Fredkin, 2
IMITED 15
Isolation” 1
FIFO’s 1
January 14
Earth 2
IZES 1
Exactly. 2
Druschel, 1
DVANCED 13
Introduction), 1
Engineers 1
Execute 7
Influenced 1
FIFO: 1
Handled) 1
G.L. 2
IRIX 1
Italy. 1
Factors 1
Knowlton. 1
Edition)” 2
If, 9
FFICIENT 1
EARN 1
Database 1
Invalid 2
Europe(!). 1
FIFO? 1
Ingo 1
Fast 4
Hazelwood, 1
Gain 2
IS 1
I’m 5
Fair 6
Knuth 6
Environment” 4
Implement 4
FIRST 1
EASON 1
Default 1
Jaswinder 1
Evaluating 4
Facebook) 1
Interestingly, 3
FindFreePhysicalPage() 1
Header 2
Garner 1
ISBEHAVIOR 1
Jacqueline 2
Fekete. 2
L. 10
Evolution” 2
It’s 4
FLOW 1
EDUCE 1
Devang 2
Javascript 2
FIFO, 7
Fagin. 1
Investigator. 1
Framework 1
Hill 1
Generally, 1
Induced 1
Josep 1
LaTeX, 1
Excellent 1
Jacob, 1
Facebook. 1
EMORY-M 1
Directory 5
Job:B 1
FIRST)? 1
Fit 4
Figure 335
From: 1
Home 1
It 92
Gray, 1
Intel 10
KB); 1
Lampson 6
Execution 8
Jason 1
Failure 4
EMORY: 26
Dissertation, 1
Journal, 2
February 16
Frigo, 1
File-System 1
Fujiki, 1
Huge 2
Jones. 2
Grove, 3
Interesting 1
KPTI) 1
Larry 1
Extra 1
Jeff 3
First 23
END? 1
Dynamic 7
KB64 1
Fetch-And-Add 2
Gaming 2
First: 1
Gibson, 1
Human 1
Jose, 7
Guerraoui, 2
Is 14
Kanev, 1
Levin, 1
F. 8
Jeffrey 1
I 171
EPRESENT 1
LATER? 1
FetchAndAdd(&lock->ticket); 2
Generally 1
Flesh 2
Goodness, 1
E 195
Gupta. 2
KB 18
Issues 6
Kathryn 1
LoadLinked(int 2
Fleischmann 1
FIFO 37
Job 11
I/O-intensive 2
ERSISTENTLY 1
LESS 1
File 3
Gets 2
Free 8
Graham. 2
ERMINOLOGY 1
HW 1
Kaufmann, 5
It” 1
Kernel 14
Lynch, 2
Flow 6
FILENO). 1
Johnson, 1
ESIGN 1
Languages 2
Freeing 2
Goodman. 1
Freedom 1
IECES 154
Guide 3
Efficiency 2
Handles 1
Kenneth 2
I’ll 3
LRU. 3
MA, 2
Frankenstein 1
FOOLISH 1
Journal 7
Easton, 1
Lauer. 2
G) 1
Goodman’s 1
Frequency 1
IKE 1
H&P 2
Evolution 1
Hard 1
Kleiman, 2
KASLR” 1
LRU’s 3
MANUAL, 1
GE, 1
False) 10
K 6
H 42
Lauer’s 2
GB). 1
Gray 6
Friedman, 1
HOW 6
IP 41
FASTER 17
Heap01 2
Knowing 3
Knowlton 1
LWN 2
MIT 5
Farrell, 2
Edwards, 4
KB. 4
HFE-1:1, 1
Lectures 1
Get 5
Great 5
Full? 1
Hardware 18
IRTUALIZE 5
Failed 2
Hit/Miss? 4
L1 4
Labs” 1
MLFQ: 3
L 59
Fellner, 1
Enough 1
Large 2
Hall/CRC 2
Lepers, 1
Golding, 1
Greenfield. 1
GB) 2
Harmful” 2
ISN’T 1
Farm” 1
Hoare 4
LAW) 2
Licklider. 3
MMU; 1
LDE). 1
Epema. 1
Lauder. 1
First, 58
Hardware/Software 1
Libraries: 1
Gruss, 1
HARES 1
Getting 1
Heap 16
Implementing 2
Faster 2
Hussein 1
IGHER 1
Like, 1
MQMS, 1
LOCKS 23
Epema’s 1
Levels 1
Fleischmann, 1
Heap: 1
Linked 8
HARE 14
Hence 2
Gorman. 1
Indeed 1
Feedback 5
LL/SC 2
How 141
IMMEDIATE 2
Lipman 1
Mac) 1
Leffler, 1
Example: 6
Limits) 1
Form 1
Heinrich. 3
Linux). 5
HTTP 1
Herlihy. 2
Grows 2
Informatica, 1
Festschrift 1
LRU→ 11
I/O). 3
IO). 1
Lipp, 1
Manager” 1
Levy, 5
Linear 2
Linux, 15
Fourth, 1
Hershey 1
List_Insert(list_t 4
Hear 1
Hochshule 2
Hank 2
Internet 1
Figures 2
Lamport’s 1
IT! 1
IRTUALIZATION 5
Logistics 1
Manchester 3
F 36
Linus 1
Linux-based 3
Francisco, 1
Hits 2
LoadLinked 2
Here, 13
Humorously, 2
Harper 1
Isn’t 2
G. 9
Least-RecentlyUsed 1
Incorrectly 1
Lord 1
Matteo 1
Facebook, 1
List_Pop() 1
List 7
From 23
M. 35
If 167
Locking 2
High 2
I/O, 3
Here’s 4
Issue 4
Golub, 1
Leave 1
Innocent 2
M62, 1
McCall. 2
Farm 1
List_Lookup(list_t 4
Hopefully 2
Fusion 1
MB, 1
Incorporating 1
Longer 1
Hits+M 1
ICKETS 1
Hey, 1
J.S. 1
Good, 1
Libraries 1
Innovator’s 1
MAC 2
Mellor-Crummey 4
First-in→ 11
Hydra 1
Locks 29
G.A. 1
MIN). 1
Intel’s), 1
Low-level 1
House, 1
Idea 2
Historical 4
Jack 5
Gouicem, 1
Loops 1
Interactive 1
MAX; 2
Meltdown 2
French 2
I/Os. 1
MASK 3
Gates 1
MMU, 1
Interludes 1
Making 3
I/O) 2
In, 2
History 4
Joseph 1
HPUX 1
Lu, 4
Israel. 1
MS-DOS. 1
Microprocessor 3
Function 2
IBM 9
Ma. 2
Glenn 4
Manual”. 1
John 14
March, 1
IDs 2
Inputs 1
Hybrid 2
K. 1
Handbook” 1
Italian, 1
MULATING 1
Moseley, 1
M 139
GAINST 1
IEEE 7
Man 3
Going 1
March 14
KB-32 2
May 11
INITIALIZER, 2
Instrumentation” 1
I/O; 3
KASLR, 1
Happened 2
Jackson-Edwards. 1
Mac 12
NPUTS 1
MAC, 1
Go 4
IF) 1
Management” 2
HERE 1
Mark 14
KNOW 1
McCarthy, 2
IRE 5
Intelligence 1
INITIALIZER. 2
KB, 1
Heavyweight 1
Jiaqi 2
Mail. 1
Network 1
MALLER 15
Goals 2
IO 7
Markstein. 1
HP, 1
Martin 1
Kawamoto, 1
Membrane 1
ISCA 4
Issue: 3
INTRODUCTION 15
KEY 1
Hill, 3
Jobs 2
Manuals 1
New 9
MMU. 2
H. 20
Included 1
Mayer. 2
HREAD 12
McCarthy 2
Know 2
Metrics 1
IST 2
Jonathan 3
IP) 1
Key 1
Joe 3
Hit 29
Mars?” 2
Nickolai 4
Mac, 1
Handbook 2
Index 11
Media, 3
Measuring 2
L3 1
Mixed 1
ITS 1
Kaashoek, 4
HREE 154
Initialize 3
L->head 8
Joy, 1
Holding 1
Meehean. 1
Nuclear 1
Management 11
Harry 2
Inserts 2
Melvin 1
Miss 29
LRU, 11
Modha. 1
Ideally, 2
Keeping 2
Harcourt, 2
Instruction 4
L4) 1
Jozef 2
Holt. 1
Meehean’s 1
OK 4
Manual” 3
Hash_Init(hash_t 2
Instead 20
Minneapolis, 1
Multiple 1
Letters, 2
Moir 6
Interaction 1
Kernighan, 1
Hash 8
Introduction 8
LEXIBLY 1
Juan 1
Horn. 3
Mistakes 1
OMPILED 1
Marvin 1
Henry 1
Instinct, 1
Miss? 1
Multiprocessors. 2
Linux” 1
Mountain, 1
Interrupts 2
NULL, 20
Heart 2
Intuitively, 1
LGORITHMS 1
Julin, 1
I, 1
Multics 14
ONSTANTS 1
Memory-mapped 1
Hershey. 1
Intel, 2
Monitors 1
Multithreaded 3
Lipman. 4
Kilburn, 4
Its 4
Nobel-prize 1
Isolation 1
Here 30
LOCK 2
June, 1
I/O. 10
Murphy, 2
OS-ignorant) 1
Microprocessors 1
Hierarchies” 1
International 3
Multiprocessor 4
N. 7
Lists 5
Jain. 1
LRU 33
Nothing 4
Joy 2
His 3
Lacking 1
Karels, 1
INDETERMINATE, 1
NBA 1
OSes 2
Mr. 1
Hydra. 1
Interscience, 1
Mythical 1
Need 2
Lu. 2
Jain’s 1
LW 1
Numbering 1
June 13
Hopefully, 4
Lauer 2
Ken 2
ITH 4
NIX/C 1
P1) 1
Much 9
I/O? 1
I’d 1
NGINEERS 1
NetBSD, 1
MAX) 1
James 1
Language” 2
OES 1
KB), 1
Hovav 1
Lawall, 1
L2 1
Implementation” 1
NOT 1
Muller, 1
IALOGUE 4
I” 1
NIX, 2
ORK 1
MB 1
PERATING 184
Java. 1
Least-Frequently-Used 1
OFFSET 1
LOW 1
IBM, 1
Laziness 2
L4. 1
Indeed, 20
NSA? 1
Multi-Queue 1
INTERLUDE: 11
J. 33
NIX-based 6
OS: 1
MIT), 1
PFN_SHIFT) 1
Jim 8
Letters 3
OMEWORKS 2
LRU? 2
INUX 1
Let’s 90
L60, 1
Instructions 1
NT” 2
Multics, 6
Not 23
Jing 1
OSTEP! 2
NULL 20
MMU 3
PTEs. 1
Joy. 1
OPTIMIZATION 1
Labs 2
Linux) 2
Idea1 1
Lindberg, 1
Lanyue 4
Iyer, 1
Ideas 2
Multiprocessors” 5
Novark 1
Job:C 1
Obviously 1
NeXTStep 1
Mac. 1
Parent 6
K+96]. 2
OS), 2
Law. 2
Lisa 1
Instead, 7
Lottery 6
Levy. 2
Kanev 1
Imagine, 4
NIX. 2
O(1) 4
Joe’s, 1
Occur 1
Negative-Growth 1
McGee. 1
Park, 2
Kernel” 1
Offset 15
Learn 1
List_Lookup(&H->lists[key 2
International, 2
Louisiana. 1
Linux. 8
Kay 1
Implementation 6
NULL2 1
ODING 1
Joyce. 1
Oddly 1
Nelson, 1
Mechanism: 2
Pass(B) 1
Kleinrock. 2
Oh 5
Length 1
Lock 12
Johnstone, 2
M.J. 6
Linux’s 2
Keep 4
Inc.. 1
Nethercote, 1
OINTER 1
KB; 2
Often 1
Nevada, 1
Metha 2
Pesterev, 3
Kuehner. 1
Overflows 1
Loads/Stores 2
Locks.” 2
Joint 5
M83]. 1
Little 2
Keith 1
Information 6
Nice. 1
OPT. 1
KPTI 1
Organick. 1
Next, 9
Michael, 2
Point 1
L4 3
Overview 3
Lots 2
Lower 1
July 4
MBALANCE 1
Long-Running 1
Krieger, 1
Interlude: 4
No 10
OS? 4
Keeps 2
Over 6
No-Locality 2
Microsoft) 1
Policy: 2
LWAYS 1
O’Reilly, 2
Low 2
MAP_ANON|MAP_PRIVATE, 1
KB). 1
MLFQs 1
Long-running 1
LDE 1
Interrupt) 1
Novark, 1
OSSIBLE 2
Knuth. 1
PACES 8
No. 6
Multics. 1
Prentice 4
Las 1
PCD 1
Lucco, 1
MEMORY 1
KB-64 1
MORE 2
MLFQ. 2
LOCK-BASED 15
Ion 2
Nucleus. 1
OS” 1
LATER 1
PDIndex 1
Non-Coalesced 1
Presented 1
Lavington. 3
NIX 55
PDE. 1
MPLEMENT 1
MIPS 14
KPTI, 1
MS-DOS 1
MQMS 2
LRU-like 1
January, 2
O. 1
Object-Caching 1
LISP 1
PROGRAMMER 1
OK! 2
Programmer’s 2
Law, 2
NULL); 35
PPN) 1
Mac! 1
MPORTANCE 1
L->head; 8
MUTEX 2
Make 5
Laszlo 1
Job:A 1
Operation 1
OCK 16
Lampson. 2
PTEs 3
OMPLEXITY 1
Protected 1
Leaks 1
NUTH 1
PROT_READ|PROT_WRITE, 1
Managing 1
Mach 1
LATER, 1
Maintenance 1
Man-Month” 1
Led 1
Jr., 1
Or 9
Just 15
Lampson’s 1
PTIndex 1
ONTENTS 1
Pthread_mutex_unlock(&mutex); 8
Learning 2
Neither 1
PTE. 3
Marco 2
Malloc(sizeof(myret_t)); 2
LLOCATE 1
Mars 5
Maybe 1
Leonard 2
OLUTIONS 1
Overall, 3
KB) 3
Later 2
Page” 2
OS) 2
Quanta 1
R+89, 1
Nelson 1
PTE.PFN, 3
Mattson, 1
Management, 2
Last 1
May, 1
McVoy 1
Let 18
OMPARING 1
P1 6
L1) 1
Limited 6
Palo 1
Obtaining 1
Leiserson, 1
README, 1
Nethercote. 1
PTIMAL 1
Maurice, 1
Mao, 3
Later, 2
McGraw-Hill, 2
Metric: 1
Like 6
ON 12
OOLS 1
L78]. 1
Line 3
Particularly 1
O’Hallaron 2
Levy 1
ROTECTED 1
Next 2
PageDirBase 1
Measure 5
McCarthy. 2
Lee. 1
Memory: 3
Microsystems, 1
Lock-based 2
PAT, 1
OS; 8
LLUSION 1
Loading: 2
Patent 1
O’Reilly 3
Life 1
Random) 1
Nucleus 2
Part 6
Measurement, 1
McCarthy’s 2
Library” 2
Merritt, 2
Modeling” 1
Look 1
PDP-10” 2
On 21
Lampson, 2
Locks, 1
Patterson, 1
O 247
Recognized 1
Linux 107
Per 5
Mesa, 1
Megiddo 1
Linux); 1
Michael 10
Montreal, 1
MIPS, 2
PD_SHIFT 1
Or, 7
Lanigan, 4
Looping 1
PFN=55 1
Plenty 1
ORRECT 2
Reliability 1
Live 1
Pick 3
Microsoft, 1
List_Init(&H->lists[i]); 2
Miller. 2
Memory 58
Morgan-Kaufmann, 2
MM00]. 2
PT_SHIFT 1
P1, 2
Late 1
MAX_HEAP_SIZE; 1
PID. 1
PowerPC, 3
OSDI 10
Relocation: 2
Load 4
Long 1
Microsystems 1
List_Insert(&H->lists[key 2
Milton 1
Menace 1
Multiprogramming 4
MQMS). 1
Paged 2
P=0 1
Lighting 1
MB) 1
PTE.PFN 1
Provides 1
Old 2
Robin 3
Pren-tice 1
Looping-Sequential 1
Minimize 2
Load-Linked 2
Mitoma, 1
Molnar 1
Main 1
N 41
Performance” 1
PAGE 6
List: 2
MIT. 1
PWT 1
Pthread_cond_wait(&c, 3
One”. 1
S). 2
Processes 8
M.I.T., 1
Modadugu, 1
Load-linked 2
Models” 1
Multi-Threaded 2
Malcolm 1
NT, 1
Pioneers, 1
PFN) 2
List_Init(list_t 4
MIT’s 1
Paranoia 1
Pthread_join(p1, 5
OpenSolaris 1
SDS 2
Processing: 2
MongoDB, 1
MLFQ 32
Locks”) 2
More 24
Multi-threaded 1
Malloc(), 2
NTERPOSITION 1
Prediction 1
PID 5
Liu, 1
MUTUAL 1
Pass(C) 1
Queue_Enqueue(queue_t 2
Orr, 1
SER 1
Producers 1
Motivating 1
MORTIZATION 1
M.K. 1
Most 9
Multiprogrammed 5
Manchester; 1
NUMPAGES. 1
Preemptive 1
PM 4
Locks: 2
Mangard. 1
Perfection, 1
RADE 1
P1’s 1
SHIFT, 1
Project 3
NCREMENTALISM 1
Manuals” 3
MIN 1
NDERSTAND 1
Must 2
Manifesto” 1
Nichols. 2
Present 1
MALICIOUS 1
Page 39
Manual: 3
Pioneered 1
RAM, 1
PC, 7
SIGMETRICS 2
Protection 7
ND 10
Microsystems. 1
MRU 2
NE 1
NIX: 1
Nope, 1
NTERLUDE 35
Price. 1
MIT, 1
Pal 1
Maxwell’s 2
Pn−1 1
REAT 3
POSIX, 2
SIZESORT+, 1
Pthread_create(&p2, 5
NECESSARILY 1
Mitchell. 1
Machine” 1
Many 21
November 10
NY, 1
NTRODUCTION 59
Priority(B), 4
Macintosh 2
Parallel 3
McKinley, 1
Precise 2
Pacific 3
Perl, 2
Shan 2
Pthread_mutex_lock(&mutex); 8
NT 4
Mogul, 1
Markowitz, 1
Mechanism 1
O(n) 1
Newell, 1
Nancy 2
Problem 3
Massachusetts. 2
Pathfinder/Authoritative 2
Mechanisms 3
Privileged 3
REE 19
Pfaff, 1
Pthread_mutex_lock(pthread_mutex_t 2
Simple 29
Namely, 1
MostFrequently-Used 1
Massachusetts, 1
Memory, 1
OFFS 1
Now? 2
Narrow 1
Processes: 1
Maurice 2
Peanut 2
Memory” 1
Physical 13
RaiseException(PAGE_FAULT) 1
PhysAddr 8
Q6 1
Smaalders. 2
Naval 1
Moving 1
Mauro 2
MenuMeters 1
ONTROL 8
OPT 4
Neely, 2
Pthread_cond_signal(&fill); 2
McDougall. 3
Probably 11
Minimally, 3
Power 1
Randall. 1
Plot 1
RE 1
Spend 3
Neumann 2
Mudge. 1
Methods 1
Mesa” 1
OO 1
Oh, 1
Nimrod 1
Pthread_mutex_lock(&m); 6
McKusick, 1
Problem: 6
Morris, 4
Processing 5
Rate 4
Preemption-safe 2
ROCESSES 1
Spider-Man: 2
No-eXecute), 1
Multi-Level 4
Microsoft’s 1
Modern 3
Orwell. 2
OS, 31
Nir 2
Q 12
Measurement 2
Programs 4
Mozilla 1
Prefetching 1
Professor: 37
Read 38
Rago. 4
Spin 7
Note, 2
Multi-level 7
Miscellaneous 1
NABLES 1
Orwell’s 1
No, 2
October 17
Q0 13
Meltdown, 1
Pthread_join(p, 4
Mutual 4
Primer 1
Programming: 3
Read-Execute 1
Rashid, 1
Spin-waiting 2
OFFSET_MASK 7
Multics” 1
Morgan 6
Morse. 1
P3 1
Node_t 1
PC 16
Quicksort, 1
Mesa 4
Pthread_mutex_lock(&c->lock); 6
Neat 1
Priority] 2
Pthread_cond_signal(&c); 4
Reduced 2
Refers 1
Spurious 1
ONCURRENCY: 15
NDETERMINATE 1
NOWLEDGE 1
Most-Recently-Used 1
Ousterhout, 2
Non-Cooperative 1
PCD, 1
RANSFER 1
Microsoft 4
Putting 1
Netzer 2
Pthread_cond_wait(&cond, 6
Process 35
Report 2
Regions 1
Stallman. 2
ONTEXT 2
NIX! 1
Navarro, 1
Mysterious 1
Overhead 3
Notes 4
PINNING 2
REATE 2
Mike 2
Non-compacted 1
Questions 26
Pthread_join(p2, 5
Process0 12
Rudolf 1
Remzi 6
Structuring 1
OOT 1
NOMALY 1
Needed 1
NOW 1
P. 12
Number 8
POSIX 20
REEMPTIVE 1
Multiprocessing. 2
ODE 2
RACE 1
Pthread_mutex_lock(&lock); 6
Processor” 1
SEG_SHIFT 1
Revolution 1
Success! 1
OPT? 1
NUMPAGES 2
Ngram 1
NTERRUPT 1
PEED 1
O(log 1
PPLICATION 1
RISC 14
NCE 1
OFTWARE 1
OK. 2
Publishers, 1
Producer/Consumer 5
SET 2
River” 1
Sullivan, 1
Now, 26
OCALITY 1
NULL) 6
PETERSON’S 1
OK? 2
PTE.ProtectBits) 3
ROBLEM 4
NTERLUDES 1
RANSLATION 15
RDLK 2
OLICIES 16
Professor, 1
SIGNALING 1
Runs? 1
Susan 1
OCKS 23
OESN 1
NVERSION 1
PT: 2
OOK 1
PTE: 1
OS 504
ROP 3
NULL; 22
ROGRAMS 1
RISC, 2
ONCURRENCY 3
Programmers 4
STCF, 1
S09]. 2
Switches 1
OLICY 4
OF 9
Node_t; 1
PageTable[1] 1
PTEs). 1
OPERATING 42
RaiseException(TLB_MISS) 1
NUMCPUS; 4
RY 1
RR) 1
Purify 1
One 135
Schedulers: 1
SHIFT) 8
Synthesis 1
ONCURRENT 16
OK; 1
Patterson. 2
Pathfinder. 2
ORG 166
OS). 2
Now 79
Random 21
NX 1
Race 2
RUNNING, 1
Quantitative 2
Only 10
Set 6
Scalable 10
Sharing 12
OOPERATION 1
OSSpinLock 2
Peterson. 2
Perhaps 15
OSes. 1
OAD 1
Ratios” 1
National 1
Rachid 2
RaiseException(SEGMENTATION_FAULT) 5
RAIDs, 1
Oops! 2
OSTEP. 166
TORE 1
Secure 1
Short, 2
OR’d 1
Peterson’s 6
Phoebe 1
Oregon. 1
Of 70
OBS 1
Recent 1
Nemacolin 2
Rafael 1
Random, 5
Note 34
ROCESS 30
OSTS 1
TV 1
Semantics 3
Shortest 6
Placing 1
OS. 26
Pointed 2
Out 2
OK: 1
Reducing 1
Once 41
Relational 1
Open 2
Readings 1
OK, 11
ROP. 1
Tf 1
Operating 38
September 13
Signaling 2
Pons. 1
OS’s 4
Positive 1
PAGESIZE 1
ONDITION 1
Relationships, 1
Organization 1
Resort, 2
Orran 1
Reclaim 1
OMPLETE 19
They 5
Overlap 2
Shared 2
Signals; 1
Previously, 1
Orleans, 1
Problems” 1
RPACI 154
PDBR 2
ONG 1
Required 1
Ott. 1
Resources 2
Other 15
Reprinted 1
ORE 2
Thread2 6
O’Hallaron. 2
Shedler 1
Silas 3
Priority, 1
Ousterhout. 3
Proceedings 2
PD_MASK) 1
RUX 33
ONSIDER 1
Review” 2
P0), 1
Rules 5
Ousterhout 3
Research 3
OSes, 1
Threads? 2
O’Reilly. 2
Sleeping 3
Simpler 2
Problems: 1
Ousterhout’s 2
Processes, 1
PTBR 5
Ranganathan, 1
OPERATIONS 1
Ritchie) 1
PAT 1
Running: 1
P2 3
Restoring 1
OUBT, 1
Threads” 6
P.M. 1
Software-based 1
Smotherman. 1
Pthread_cond_signal(&cond); 6
Professor 5
PTE.present 1
Ready: 1
OU 1
Running 24
PDE, 1
S.Sahni). 2
PCs, 2
Resulting 4
OUR 2
P 280
Tim 2
PACE 21
Solution: 1
Smotherman’s 1
Pthread_mutex_init(&c->lock, 2
Programming 15
PTHREAD 4
Recall, 1
OWERFUL 1
S. 22
PERATIONS 2
SJF/STCF) 1
PRIORITY 1
Richard 9
OW 34
P0 4
Tony 1
PDE 8
Sorin, 1
Solaris” 1
Pthread_mutex_unlock(&c->lock); 6
Q2 9
PTHREAD_MUTEX_INITIALIZER; 7
Record 1
O_CREAT|O_WRONLY|O_TRUNC, 1
SECTION, 1
PHit 1
Saying 1
Padegs. 1
Running, 1
Optimal 3
P4, 1
Transforming 1
Spin(), 1
PIECES 38
Sounds 6
Python, 2
Space 20
PTIMIZATION 1
Relocation” 1
O_WRONLY|O_CREAT|O_TRUNC, 1
SGI. 1
PREMATURE 1
Scott. 4
Paging, 1
Russ 1
Oracle 3
PAGES 2
Tucker, 1
Spin(1); 2
PLDI 3
RISC-like 3
Quarterman. 1
Staelin, 1
PT_MASK) 1
Remember 5
Operations 3
SJF. 2
PTE, 6
Segregated 1
Paul 3
SUPPORT 1
Otherwise, 1
PDPTA’97, 1
Our 25
Star.” 1
PTE 17
RR? 1
Quote 1
Stallman 1
Paperbacks, 1
Repeatedly 1
Organization” 1
SN 3
PageTableBaseRegister 1
Sequential 2
Performance 11
Say 2
Two 11
PFN, 1
P6 1
Stephen 4
PTHREAD_COND_INITIALIZER; 3
RUNNABLE, 1
R.P. 1
Support” 1
Ph.D. 3
Replacement” 1
Overflow 1
Saavedra-Barrera. 1
Said 1
Sharing” 1
Pollack, 1
Schroeder. 1
UPPORT 2
Pages 5
PAGING 22
Steve 4
Page, 1
Recall 9
R10k 1
T1). 4
Physics), 1
Response 3
P4 1
Passing 2
Sanzi, 1
Size 10
Positive? 2
Scott 10
VERLAP 1
Paging: 4
PF 3
Support: 1
Page-Reference 1
Recommended 1
RAM. 1
TLB: 2
Pilot 5
Responsibility” 1
PD 2
Patt, 1
Scalability 3
Software 7
Priority 4
Secker 2
Va3 2
Parts”.) 2
See 43
Surprisingly, 1
PageTable[39] 1
Relocated 2
RANSLATIONS 15
Thesis, 1
Policies 3
Right! 1
PDEAddr 2
Persistence 1
Scaling 6
Sorry, 1
Professor? 1
Wanjohi: 1
PID) 1
Patterson 2
Seems 1
Swap-Based 1
Pass(A) 1
Repair 1
README 20
Thomas 3
Prentice-Hall 1
Rings, 1
PDP 1
Prof. 1
Scheduled 1
Stalin 2
Protocol 3
Warburg 1
PPROPRIATE 1
Perry. 1
Segmentation” 1
Switzerland 1
Patt 1
Replacements 1
ROM 2
Traiger. 1
Pretty 8
Round-Robin 1
Pthread_create(&p, 5
PFN 43
Science). 1
State: 2
Q1 15
Weaver 1
Page-Fault 2
Peter 5
Shared-Memory 4
Systems” 7
Perspective” 5
ROPORTIONALLY 1
Turner, 1
Principles” 2
Run: 2
Q4 1
PID). 1
Scientific 1
Strategies 2
Queue_Dequeue(queue_t 2
Weiwei 2
Paging 6
Peterson 2
Shared-memory 1
T3 8
Pieces 2
S 379
Randomization” 1
Turns 2
Program 20
S, 6
Quarterly, 1
PT 2
Setup 1
Stride 4
Queues: 2
Wilson. 1
R 21
Policy 6
Shavit. 2
TCB. 2
Pillay. 1
SEG_MASK) 2
Reboots 1
SJF 21
Pthread 11
SCHEDULER 1
Queue 8
PTEAddr 6
Shacham, 1
Supporting 1
Patel 1
Wilson’s 1
RIORITY 1
Pons 1
Shavit’s 4
TILIZATION 1
Portable 1
UK, 2
Recovery” 1
SLEEPING, 1
Pthread_cond_wait(&empty, 2
SEFUL 2
RAND 5
Patel. 1
Shortly, 1
Swaminathan 2
Phenomenon” 1
Win, 2
RR. 2
Poor 1
Solaris 18
TIP: 9
Press, 7
USENIX 8
Remove 2
STDOUT 1
Pthread_create(&c, 2
SEG 2
REMATURE 1
Pennsylvania, 2
Silicon 1
Swap 4
Physical) 1
Wisconsin—Madison, 1
Randal 1
Portland, 1
Solution 5
TLBWR, 1
Process: 2
UST 1
Return-into-libc 2
Saavedra-Barrera 1
Q7 1
SJCC, 1
RUN 5
Personal 2
Similar 3
Swift. 2
Play 1
Worse: 2
Randell 1
PowerPC 1
Soyeon 2
TS 1
Processing, 1
Review, 3
Unfortunately, 37
Segment 10
Queue_Init(queue_t 2
SJF, 4
Phipps 1
Simulation, 1
T2), 2
Ready 58
Recheck 1
X/macOS 1
X11 1
Prints 1
Specification, 1
Stanford, 1
Producer/Consumer: 3
Proportional 2
Unknown.. 1
Sequin. 1
Queues 4
SPARCv9). 1
Save 2
Sitaram 1
Sood, 2
Special 1
Red-Black 2
Rather, 4
Yuanyuan 2
Probability” 1
Table? 1
Store-Conditional” 2
Robert 9
Proportional-Share 3
Unlock 2
Shacham. 2
R/W 1
REASON 1
Scan-resistant 1
TABLES 15
Processes” 2
Standard 2
Register 8
Reese’s 1
[2] 2
Problem” 3
Thanks. 1
Stretch 1
S+03] 1
Proportional-share 1
Until 3
Share 4
Plus 1
RITICAL 1
Scheduler 5
TECHNICAL 1
Processor-Memory 1
Stanford 1
Reuter. 2
[AC97]. 1
References 28
Process1 9
There? 1
Subramanian, 3
SHIFT 8
Pthread_cond_signal(&empty); 2
VAX-11/780 1
South 1
Prentice-Hall, 7
Raging 1
Seg 1
TERMS 1
Protection” 1
Starts 1
Riak. 1
[B+18], 1
Results 1
Protection) 1
Run 68
Suli 1
SIGINT 2
Put 4
Va5 3
Spectrum 1
Presumably 1
Rajimwale, 1
Should 4
THREADS 1
Pthread_create(&p1, 5
State 12
[B89, 2
SJF/STCF 1
Third, 5
Pthread_cond_wait(&fill, 2
Sun). 1
SIDE 40
SIGTSTP 1
Q8 1
Virtually 5
Steinberg 1
Priority(A) 4
Redell 2
Showing 1
TLB) 3
Q5 1
Steinberg. 1
[B97] 2
SWITCH 6
Tickets 1
Pthread_mutex_unlock(&lock); 6
Support 9
SOSP 9
SN_SHIFT 1
ROCEDURE 1
WITH 1
Stoica 1
Problems 1
Redirection 1
Soon 2
TLB-miss 1
R.H. 1
Strachey. 1
[BNS69] 1
SYNCHRONIZATION 1
Trap 2
Published 1
Surveys, 1
SPARC, 3
SOMETHING 1
ROPORTIONAL 13
Wales 1
Structures” 2
Proc 14
Reduce 1
Spaces 3
TPDS 1
R4000 5
Strachey’s 1
[C+04] 1
San 12
Turning 2
Python. 1
Swift 2
S_IRWXU); 2
STCF. 1
ROVIDE 1
Student, 1
Pthread_cond_wait(&c); 1
Reeves. 2
Stoica, 1
Tables 9
RINCIPLE 2
Structure 3
[C69] 1
Student: 36
Santiago, 1
Typically, 2
Q1. 1
System/370” 1
Saltzer 1
Saint-Exupery 1
RTFM 2
Such 16
Pthread_mutex_unlock(&m); 6
Registers 1
Streams 1
Technical 4
Raiders, 2
We 166
[CP78] 1
Supervisor” 1
Schedulers 1
U/S 1
TLB; 1
R. 33
Scheduling” 1
Scheduler” 2
Rago 1
T3, 4
Q3 1
Report, 2
Subsequent 1
Than 1
RaiseException(PROTECTION_FAULT) 9
Whew! 1
[D68] 7
Symbiosis” 1
Seward, 1
UNSW-CSE-TR-0321, 1
TeX, 2
RAID 1
Section 1
Schwarz, 1
Raiders” 2
THER 1
Queues, 2
Represent 1
System: 1
Then, 19
Rather 1
Wilson 2
[D97]. 1
Synchronization” 2
Similarly, 6
USA. 1
TestAndSet(flag, 4
RAM 5
Server. 1
Segmentation 3
Really 3
TO 26
RR 14
Resource 4
TOPLAS, 2
Therein, 1
Recollections 1
[DV66], 1
System, 2
With 82
Single 7
VA 1
Theodorus 2
RR, 1
Shedler. 1
Separating 1
Relocation) 2
Tamil, 1
RSS, 2
Responsibilities 1
Tc1). 1
Things. 1
Redell. 1
[Free] 1
Systems.’ 1
Word 1
Slab 1
VAX-11/750. 1
TlbEntry) 4
Randell. 1
Singh, 1
She’s 1
Research, 2
Tc, 1
Read-Write 2
Round 3
That’s 6
Third 1
Redell’s 1
[G83] 1
T1, 12
Worried 1
VPNs 5
So 30
Tolerance 1
Sometimes, 9
Slow 1
Simply 3
Restartable 1
Texas. 2
Real 3
Rule 14
Then 17
Threads 5
Ritchie. 1
[GR92]. 2
THE 9
Worse, 3
Va0 3
Reese, 1
ULL 1
Sorry3 1
Solomon. 2
Sizes 1
Restricted 1
Those 2
Reese 1
SE 11
Though 5
TimeSharing 1
SPINNING 1
[H91] 2
TLBs, 6
Wulf. 1
Valgrind 2
Relocation 1
URL: 1
Speaking 1
Stack? 1
Slutz, 1
RetryInstruction() 4
Time-Shared 1
Referring 1
SS+10]) 1
Tp). 1
Time 29
SSD, 1
[I09] 4
TM 2
XD 1
Virtual 12
Replacement 6
W 17
Sploitfun. 1
Statement 1
Smotherman 1
Roscoe. 1
Region 1
SSD. 1
Traditional 2
Today’s 1
SSDs) 1
[J91]. 1
To 152
TOOLS 1
ZFS) 1
USE 3
Ronald 1
WITCHES 1
Sun, 2
Steven 1
So, 1
Routines 3
Requirements 3
UMMARY 3
SYSTEMS 42
Torvalds 1
Same 2
[K+61,L78]. 1
Tracking 1
TRUCTURES 17
[4] 1
Uh 2
SPINNING: 1
WORST)? 1
Sun.. 2
Storage 10
Splitting 1
S.J. 1
Rewritten 2
UPERUSER 1
Saving 1
Trace 9
Sanjay 1
[KE+62, 1
Trees 1
TeX 1
[AC97] 1
STACK: 2
Use 35
Waciuma 1
Sweden, 2
Swapping, 1
Sriram 2
SIZESORT-) 1
Ritchie, 1
UTUAL 1
Translation 5
Second, 31
Schedulability 1
[L60] 1
Tresponse 1
Tell 1
[B+18]. 1
STCF 8
User’s 4
Watch 4
Switch 3
Staelin. 1
System 37
SOLATION 1
River, 1
Usually, 3
Trials 1
Security 2
Scheduling 12
[LL82] 4
Tron 1
Texas, 1
[B,C 2
Scheduling: 6
VAX’s 1
Weihl. 1
Synchronization 8
Start 5
SPARC 9
T1 30
Runtime 1
VMS), 1
Try 11
Segmentation: 1
Science, 1
Search 2
USTERHOUT 1
That 14
[BB+72], 1
Shah, 2
VPN=39 1
Whether 4
Systems: 6
Status: 1
STCF) 2
TAKE 1
SQMS 7
Va4 2
ULTIPLE 2
Self-Tuning, 1
[LR80], 1
Segments 2
V.A. 1
[BH73] 2
Sharedmemory 1
Value 1
Why? 5
T. 14
Stick 1
Sadly, 2
TLBs 10
STRUCTURES 16
Valley. 1
URSE 1
Space-time 1
[M07]. 1
Server” 1
[MS04]. 8
VM 18
Short 1
VirtualAddress 7
Wikipedia 3
T2, 4
Store-Conditional 2
Scientists 1
TOCS, 3
Scotland, 2
Vyssotsky, 1
Undoubtedly 1
Spending 1
User 14
Shasha. 1
[R97] 2
VMMs 1
Single-Threaded 2
Vyssotsky. 2
Wood. 1
Store-conditional 2
Served 1
Ta 3
The 821
Seward. 1
Was 1
[C03]. 1
Stack11 2
TLB 173
VAX 5
Simple, 1
[S+04] 1
Von 2
Sleeping) 1
WRONG 1
Workstations” 1
Structures: 1
Servers” 1
Summary 30
Through 1
Single-Queue 1
We’d 1
[CD85] 1
Stevens 6
TORAGE 1
Tb, 1
Sometimes 9
[S04]; 1
WAITING 1
Smaller 1
Waiting: 2
Y. 1
Take 2
Superpages” 1
Sleep 40
Timer 1
Some 25
Where 7
[CV65] 2
Still 5
VM, 3
Tc2) 2
Specific 1
[SHW11]. 1
WARY 4
Sorry! 1
Wakeup 2
Yield 2
Tarrival 3
Survey 3
Small 2
Tomlinson. 2
Sopena. 1
Windows 10
[D97] 1
Stodolsky, 1
VPN; 2
TestAndSet(int 2
Spectre 3
[SS+10] 1
Spinning: 2
Wilkes. 1
Zorn. 1
Test-and-set, 2
THINK 1
Solaris, 7
Tools 1
WWW. 166
Wish 2
[G85] 1
Specifically, 52
Summary: 2
Vasileios 2
Times 1
Spin-based 1
[Y+18]), 1
Stanley 1
Wisconsin 1
[AC97]; 1
Tuning 1
TLB, 21
Sound 2
Uman 3
Wahbe, 1
Woodlands 1
[GR92] 2
Spectre. 1
Sumner. 4
Vol. 5
To? 1
Spinning 4
__lock_t 8
Stockholm, 2
Workshop 2
[B+13]. 1
Types 1
TLBP, 1
Study 8
Underlying 3
Waiting 8
Write 11
[H93] 4
Springer-Verlag, 1
SunOS 1
WITCH 1
Together 1
Stack 14
a:30:200 1
Stored? 1
YBRIDS 1
[B94] 1
TLBWI, 1
Summer 1
Unsafe” 2
Wanted 2
U 89
Yale 1
[J91] 1
Stan. 1
Systems 18
WORST 1
Too 3
Stan 1
a[1] 1
Structure” 1
YOU 2
[BC05,G04]. 1
TLB_Insert(VPN, 3
Sundararaman, 4
VM. 1
Were 2
Up 2
Yang, 1
[K65]. 1
States 1
TABLE 2
Wait: 1
Translations 2
Sun 5
Sure! 1
abstraction 15
Yes, 9
[BC91] 1
TLBs) 1
Swapping 1
Swift, 1
Which 12
You 89
Yet) 1
[L09, 2
Stevens, 2
TD 2
Transparent 2
We’ll 38
Support) 1
Switching 4
accessed? 1
[C93] 1
TR-95-22, 1
TRUCTURE 3
Tc2 7
VMM-level 1
Within 4
[AD00] 1
Zhiqiang 2
[LM+89, 1
Storage” 1
Trevor 1
THREAD 12
Whereas 3
Systems. 1
TEST 2
[C95]. 1
VPN=0 1
accesses 47
Tcompletion 2
Techniques 2
VPN=42. 1
Work 1
[B+19]. 1
[3] 1
[M07] 1
StoreConditional(int 2
U.S.S.R; 1
William 3
THREE 37
TLB. 13
[CK+08]. 1
T2 38
VPN_SHIFT 1
accessible, 1
Technische 2
Terminology 1
Van 4
Workload 11
[BJ81] 1
[B89] 2
[M83], 1
Structures 6
UIDELINES 1
Worst 2
Table 18
TLBR, 1
[CSG99] 1
TR 1
Wei, 1
according 3
Think 12
Test-And-Set 2
Vancouver, 5
Yield, 4
[D01] 1
[BJ81]. 1
[MS04] 2
Sun. 2
Undefined 1
XECUTION 15
Takes 2
TLB_Lookup(VPN) 4
Tc1 9
Tb 2
Working 2
Time” 1
Test-and-set 4
acquire 57
Virtualization 5
Yupu 2
[FLR98] 1
[CS94] 1
[O16]. 1
Sun’s 1
University 6
YNCHRONIZATION 1
[CV65,DD68]) 1
TLBs; 1
Techni-cal 1
Technique 1
Wrapper 2
Timothy 1
Thanks 5
acquire/release 2
Visually, 1
These 24
[FP89]. 1
W. 18
[O45], 1
Systems, 3
Upon 3
YOUR 1
[D65] 2
TLB’s 1
Techniques” 2
Thompson. 1
Xiong, 2
Traffic” 1
acquired, 2
[B72] 1
Trace: 4
[D+13] 2
[H87]. 1
WAIT 1
[O72], 1
System” 22
Users 2
Yes. 1
[E95], 1
Tc2). 1
Threading 2
YNAMIC 1
There 42
Transitions 1
active. 1
actively) 1
Transactions 3
[E95] 1
[HP06]). 1
Wait 1
[SHW11] 1
VAX/VMS. 1
Your 1
[G62] 1
Technique: 1
Tickets? 1
YPES 2
Tudor 2
[C69]) 1
Trigonakis. 2
actual 15
[EF78]) 1
[K+96] 2
Weihl, 2
[SN05]. 1
VAXen 1
This 201
You’re 2
[H61] 1
TestAndSet() 6
Time-to-Completion 2
Yes 1
UILD 3
[CP78]) 1
T 378
adapt 1
True) 9
[FLR98]. 1
[K64] 1
Whichever 1
[X+10] 2
VMS, 1
Thompson 1
Zero” 1
[H74], 1
Tix:250 1
York, 6
ULTI 11
[CSG99], 1
T2. 4
address); 1
Turing 5
[H74] 1
Thus, 206
[KL88]. 1
While, 1
a; 4
VMware 1
Thrashing 1
[B+19] 1
[J09], 1
Trans. 2
[A91]. 1
[D70] 1
ULTIPROCESSOR 12
TENEX 3
addresses, 3
Turn 1
[HP06]), 1
Times?” 2
[L09] 4
Wikipedia. 1
a[3] 1
VPN. 1
[C06]. 2
[M+63]. 2
Transformers 1
[B+10]; 2
[D72]. 1
Unfairness 1
Thread 95
Tc1, 2
advocates 1
UNESCO, 1
[High 1
Tix:100 1
[L81] 4
XCLUSION 1
above? 3
VPNs; 1
[CG68, 1
[M+70] 1
Tricky 2
[B+79], 1
[E06] 1
University, 2
Three 4
Tel-Aviv, 1
affinity 8
USA 1
[J09] 1
Tom 2
[LM+89] 1
access: 1
Vegas, 1
[D70], 1
[M06], 1
Tturnaround 3
[B72]. 1
[G04] 1
VAX-11 4
Time) 2
YSTEMS 203
This, 2
again!) 1
again: 2
[K64]. 1
Tp, 1
[Low 1
accessible. 2
Visualization 1
[FP89] 1
[M11] 2
Typical 1
[BC05, 2
[I11] 2
VLSI 1
Time-Sharing 8
Zel-dovich 1
Thus 24
UT 1
aims 1
[KE+62] 2
Tree 1
[M62] 1
accomplished 9
Warm-start 1
[H87] 1
[MS96] 2
UCB/CSD-92-684, 1
[BS+09] 1
[L+13] 2
VPN: 1
Tracing 8
Zonkey), 1
Ticket 3
Uncontrolled 2
[L+75] 1
algorithms 26
Tricks 1
[P10]); 1
accuracy/performance 2
We’ve 2
[K68]. 1
[MS98]. 2
ULE 2
[C06] 2
[L78] 3
Waldspurger. 2
Transactions” 2
[B+00] 2
Tiny 1
VARIABLES 18
[L+93] 2
annotate 2
True 1
[RL81]. 2
accurate); 2
What’s 4
[KL88] 1
[NM92]) 2
[C54,PV56] 1
[M11], 1
Waldspurger’s 1
Two-Phase 2
[B+79] 1
When 122
Tix:50 1
VAX/VMS), 1
[L83], 1
answer: 2
UNIX-based 1
[S15], 1
action. 1
[L83] 2
[SS74]. 1
[CD85]), 1
[MM03]. 1
Wanjohi. 1
Two-phase 2
USSEAU 154
[B94]. 1
YSTEM 2
Torrellas, 1
VS 1
[M06] 1
anymore? 1
UNUSED, 1
[W95] 1
active 13
[M28] 1
[W17] 2
[D70]. 1
[N+02] 1
We’re 1
Unlike 5
Understanding 2
[C93]. 1
Using 19
Tp 3
Va2 2
[M15] 4
anyone 3
Unfortunately 1
] 2
actuality, 1
[M82] 2
[W95]: 1
[anon 1
[N+07]; 1
When, 1
VLDB 2
Yet 2
[D65,D68] 2
U.C. 2
V 31
Variables 3
[M82], 4
VALID 3
approach, 25
__list_t 2
addition 13
[MB91]. 1
[G04]. 1
__Node_t 2
[RK68] 1
Who 4
VPN_MASK) 7
Zhou, 2
[D68]; 1
UEUE 11
VERY 1
Virtual-Storage 1
[PP03] 2
VAX/VMS, 2
a[4] 1
approximate 20
addresses. 4
[N+02], 1
[K68] 1
__node_t 10
[TTG95]. 1
Wow! 1
Va1 2
[A79]) 1
[D72] 1
ULLER 1
VICT 1
WHILE 2
[R97]! 2
VMWare’s 1
a[i]; 1
approximation? 1
[P81]. 2
adds 24
[L78]. 2
about, 2
[W06]. 1
[AD03]. 1
Virtualizing 2
[A90] 1
[G83]; 1
UNIX 7
VMS 16
Weihl 1
[SA96] 1
VPN, 2
architects 4
[RL81] 1
above 50
adios, 1
[MB91] 1
acceptance 2
[W15]. 1
[B+18] 1
[B94]; 1
[HJ92] 2
Volume 35
US, 1
Variable 2
[W95]. 1
While 31
Values 2
arithmetic 2
[S+04]), 1
abstractions 7
advice 4
[P+95] 1
accessed, 12
[WW94] 1
[B+72] 2
[BC05] 3
[J16], 1
Voorhis. 1
Unix 1
Version 4
a:100:100,b:100:50, 1
Winter 1
Waldspurger 6
arose 5
[S+11]). 2
access; 1
affairs 1
[P81] 2
accounting, 1
a2 1
[C+62] 2
[BC91]; 1
[K+61] 2
Waiting-Line 1
Unused 2
Very 2
a[2] 2
Wow, 2
array; 1
Well, 27
[S04] 1
accidentally 12
affects 2
[P90] 1
accrued 1
accomplish 9
[C03] 1
[BH00] 1
[KR88] 2
Warehouse-scale 1
Useful 1
Virtual” 1
a[9]) 2
Write-back 1
arrives. 2
X-windows 1
[V+65,BH70]. 1
accommodate 4
[RK68]. 1
again, 31
accumulates 1
achieves; 1
[CS97] 2
[BOH10] 3
[LL82]; 1
V. 3
about 294
W.C. 1
Y 3
asleep 3
Yandong 3
[VPN 11
accordingly. 3
[S15] 1
allotment, 1
achieved. 3
acquiring 22
[DD68] 1
[C63]. 1
[M+70]. 1
Why 28
VAX/VMS 11
WAPPING 1
[V 166
[1] 2
assert(p 1
Yes? 1
[W02]. 1
account 6
although 15
acquisition. 4
affords. 1
[DV66] 3
[CK68]. 1
[MM03] 1
Will 6
VMS. 2
above. 20
Warburg, 1
[A79] 1
assists 1
[VERSION 42
You’ll 3
[WW94], 1
acquires 8
amazingly 3
active; 2
ago, 5
[E06]; 1
[EF78] 1
[MS96]. 1
Wilson, 2
Weaver, 2
[B+13] 1
accessed 42
VPN 69
assume, 2
[W02] 2
Zeedonk 1
a:100:100,b:100:50,c:100:50). 1
actions, 1
an- 1
ahead 8
adding 35
[JM98]. 1
[G+17] 1
[O11], 1
Wood-lands 1
Weighting 1
[BH70] 2
accident 1
atomically; 2
[stack 1
WWW.OSTEP.ORG 42
[AD03] 1
a[6] 1
activity 3
another; 1
akin 2
addr:20 2
[JS94], 1
[JS94] 1
[TTG95] 1
Wouldn’t 1
Wiggins. 1
[BOH10]). 1
accomplishes 1
attained 1
__counter_t 6
Well 1
[BB+72] 1
absolute 6
address(es). 1
answer, 8
algorithm, 8
address! 1
[K65] 1
[M11]; 1
[W06] 1
X 3
Wiggins’s 1
[C95] 1
account. 1
avoided. 2
Werthman. 1
[BH00]. 2
accesses), 1
address). 1
anti-gaming 1
algorithmic 1
admission 1
[LR80] 1
[MM00] 2
[W15] 1
XITS 1
Wikipedia? 2
[CK+08] 1
accounting 4
balanced 6
[BS+09, 1
accommodated. 1
addresses? 1
appealing; 1
all... 1
advertise 1
[M28]? 1
[MS91] 2
[Y+18] 1
XXX 2
Wiley, 1
[CS94]. 1
What 214
accuracy 1
bash, 1
[CG68] 1
accordingly 1
alas, 3
appears 1
allocate(100), 1
advisors, 1
[M65]. 2
[O49]. 1
__hash_t 2
Zeldovich 1
Windows; 1
[D+13]. 2
Whenever 2
batches 1
across 30
[G+17]. 1
actions. 1
alive, 1
approach. 8
allocate. 1
affecting 1
[NM92] 2
[PS81]. 1
a4 1
Zelenka. 1
Woke 1
[E95]. 1
Why, 1
beauty 2
activity. 2
[JM98] 1
actively-used 1
allocation). 2
approaching 1
alternates 1
against 9
[O16] 1
[S07] 2
about: 1
[AD00]; 1
X. 1
[H74]. 2
Without 15
addr 2
[M65] 1
allocator, 5
appropriately 3
been 100
alternatives! 1
actually 38
ago 1
[O90]. 1
[SR05] 6
accesses; 1
[B86] 1
Xerox 2
[J16] 1
X, 1
address), 1
[M83] 1
allowed), 1
argc/argv 1
behave? 4
amazing, 2
additions 1
agreed-upon 1
[S07], 1
[W03] 1
achieve 12
[BH70, 1
ZOMBIE 1
[KE+62]. 1
[L+75]. 1
addressed, 1
[MS91]. 2
allowing 22
arrives 4
behaves, 1
analysis” 1
address) 2
ain’t 2
[SN05] 1
[WG00], 1
achieved, 1
[BH73], 2
Zeldovich. 2
XIST, 1
[L+93]. 2
adjust 1
[NS07] 1
always, 5
assembly, 3
behavior: 1
address-space 5
[SR05], 3
algorithm 34
[WL+93] 1
acquisition, 2
[BNS69]. 1
Zwaenepoel, 1
Xerox. 1
[LR80]; 1
admit, 1
[O45] 1
amortized. 1
assigned. 1
addressed 2
a:0,b:1,c:1 1
behind 31
all. 9
[virtual 5
activities 3
[C+04]. 1
[B+10] 3
Years 4
[M+63] 2
[O72] 1
advantage 14
amt; 2
assistance. 1
admit 1
a[5] 1
benefits: 1
allocated. 5
a1 1
amazing 9
[CM00] 1
[B66] 2
Zebra 1
[M04] 2
[O90] 1
again; 3
another, 12
attempts: 2
adversely 1
ability 11
ad 3
a[9] 1
amounts 7
[CV65], 1
between 79
[B75] 1
Zhang, 4
[MS98] 2
[S05] 2
al. 5
anyhow). 1
available; 1
again? 2
access, 9
add, 3
a[i] 1
anti-hero 1
[D01]; 1
bit; 1
[C69], 1
Zuckerberg 1
[O11] 1
[S07]. 1
alloc 1
applicable 2
avoided 2
agent 1
accessible 3
addl 2
abbreviated) 1
any? 1
[D68]. 2
blocks, 1
[CM00]. 1
a 3927
[P10] 1
[W03]. 1
alright 1
approach? 3
badly 1
ahead, 3
achieving 7
addr:0 4
abilities, 1
anymore, 1
[D70]), 1
book? 1
[B+96] 2
[D82] 1
a+b,b+c,c+d,c+e,c-. 1
[PV56] 1
[WL+93]. 1
also, 1
approximates 1
battle 1
alas. 4
address? 1
acquired 15
above), 3
anytime 1
[G+95] 1
bounds? 1
[B75]. 1
[D91] 2
a:100:100,b:100:50,c:100:50) 1
[R69] 1
a[7] 2
altogether, 1
argc 1
behaves. 5
all!), 3
addresses). 1
abused. 2
action 15
appearing 1
[G85], 1
break), 1
[C54] 1
[G+95]. 1
a[8] 1
[RT74] 1
about), 1
amortize 2
args 8
behavior, 3
allegorical 1
advances 1
added, 1
[H91]. 2
applications 29
brutal 1
[C63] 1
and 2770
access 133
about-to-be-run 4
[S+03] 1
abuse 1
amt) 2
argument: 2
behaviors) 1
allocator. 2
affinity; 1
additionally 1
[H93], 3
approach) 1
[H61, 1
[CK68] 1
answers 3
buffer 43
accesses)? 1
accesses). 1
[S+68]), 1
accept 2
analogy 1
array. 4
believe 5
allocators; 1
algorithm. 2
[I09]. 2
approached 1
addresses 42
[HP06] 2
[D82]. 1
anywhere 6
bug, 1
accesses?) 1
actions 18
[S05]) 2
access. 8
answer; 3
array’s 1
bigger, 2
allow 22
[K+61,L78], 1
all, 17
appropriate 3
adoption 1
[L11] 1
[D91]. 2
ap-proaches 1
bugs) 1
added 12
activate 1
[S59] 2
accessed), 1
anticipating 1
arrived 6
billions 1
alone 6
[LL82]. 3
all-too-trusting 1
area. 1
advantages 5
[LL82], 1
[DV66,V+65]. 1
applications, 6
building, 1
address, 7
actively 4
[S68] 1
approximate! 2
accessing 36
asking 4
bits: 1
[LM+89]; 1
arena 1
allocate 31
[QI15]. 1
again. 24
[HP06]. 3
approach), 2
bus 3
address-based 1
adapted. 1
[SA96]. 1
approximation 1
also 213
accom-plish 1
aspiring 1
blocks. 2
[MS04], 2
allocate(10). 1
arises 21
[R+89] 1
algorithm). 1
[K+15] 1
approximating 1
bx 2
address-translation 4
address; 3
[SN05]; 1
architectural 2
always. 1
address: 8
assertion), 1
book! 1
[N+07] 1
allocated, 2
arrives; 1
[W+95]. 2
all), 1
[L11]. 1
architecture 18
bx=3 2
advance 1
argument 22
[SS74] 1
arising. 2
am! 1
address>, 1
association 1
books. 1
[P+95]). 1
alternately 1
art 1
[W09]. 2
alloc()/free() 1
[O49] 1
c->global; 2
addresses): 1
advanced, 2
arise? 3
a1). 1
array, 7
amount; 3
administer 1
assumption: 1
both? 2
[Page 2
animals 1
articles 2
[WG00] 3
allocating 19
[PS81] 1
am 16
administrator 2
advantageous 1
arises, 4
a:100:100,b:100:100,c:100:100) 1
array-based 2
affected. 1
bottom). 2
[QI15] 1
anon) 1
atomic 25
asking: 3
__queue_t 2
c->local[i] 2
[R69]; 1
answering 1
adopted 1
advent 1
arranges 1
a[0] 2
ask, 1
aforementioned 2
bounce 1
[S+11] 2
an 545
atomically. 2
assembly). 1
a[1], 1
c;, 1
[S09] 2
answers; 2
affordable; 1
affected 1
array[1000]; 1
about. 6
assert(tmp 2
bowels 1
answered, 1
[S59, 1
and, 5
again 58
attacks2 1
assume) 1
abilities 1
[SB92], 1
call. 17
anything, 5
afterwards. 1
arrive: 1
after 54
associative 1
above, 39
brag 4
applications. 12
[SB92] 1
anomalous 1
aggressive 3
attempting 1
about; 3
assuming 25
[V+65] 1
appeared, 1
ago: 1
calling 55
aspects 10
age), 2
atomic. 2
abundant, 1
buffers? 1
approach). 4
[W+95] 4
another. 6
allotment 2
available, 11
above) 6
assured 1
[W+95], 1
applies 1
ahead. 1
can’t) 1
assert(count 2
algorithm; 2
atomically, 2
abusing 1
build, 2
approaches? 1
[W09] 2
answer? 3
almost 13
away; 1
accesses, 4
attacks, 3
a3 1
appreciate 1
alas 1
capacity, 1
assigning 1
alike, 1
attacker, 1
accessed. 4
business 1
arbitrarily 2
[X+10], 2
answers, 2
alone! 1
awesome, 3
addr:10 1
attr, 4
albeit 2
card 1
able 59
assumption 10
all) 1
attacks 5
achieved 1
bx=1000,bx=1000 2
approach 138
aren’t 5
a:30:200. 1
application; 1
alternate 5
b; 4
attributes 4
algorithm: 2
case. 3
about) 1
atomic_decrement 2
allocation, 2
attempt, 2
achievement 1
bye, 1
appropriately-named 1
arg; 7
a[1]. 1
applied 5
alternatives. 2
back, 4
automatic 2
algorithms). 1
causing 3
above). 7
allocator 26
allocators. 3
attr 2
acquisition 6
bytes), 3
approximations 2
args->a, 4
a[3], 1
appreciation 1
amazed. 1
address 561
beautiful, 1
avoided; 2
challenging. 1
atomicity 8
accumulate 1
along 10
average 16
allows 37
c->value++; 4
archive, 1
arises. 2
a[6]) 2
approximately 1
add 82
amplifying 1
advanced 7
awake. 1
became 21
chan 1
author 2
altered 1
address. 21
avoided? 1
call 230
arg); 8
around, 4
above; 7
architecture, 4
additional 15
analyses 1
affinity, 1
began 4
bad 31
avalanche 1
alternately, 2
changed 18
address> 1
already 28
background; 1
care! 2
args->b); 4
art. 1
abstraction. 1
argument, 11
addresses; 4
algorithms, 3
answer 29
begin\n", 2
base, 1
avoid 50
administrators 2
chapters 14
always 53
alternatives 4
backward, 1
argument; 2
assign 3
accesses. 5
case 62
arguments) 1
advantage. 1
anything. 1
allocation 24
beginning, 1
base-and-bounds 4
alike. 1
charge 7
amortization 1
amazingly!), 1
arrays, 2
assignment, 3
accessibility 1
base 66
caught 8
arise; 1
apparently 1
affect 10
allowed. 1
begun, 1
bash), 1
all; 4
children! 1
arrive), 1
among 14
assumptions? 1
accidental 1
basic) 1
another 105
chagrin 1
approaches: 1
again) 3
altering 1
array 46
behavioral 1
basics. 1
allocation. 7
choosing 2
be 785
amount. 2
below. 13
answer! 1
become 32
challenging 6
appropriate) 1
age-old 1
applications? 1
ask 12
benefit 1
be, 2
ask? 2
allocators 9
chop 5
accumulated 1
ancient 2
best-case 1
answers. 2
beginning: 1
chapter), 1
arbitrary 13
al-though 1
apply 1
assembly? 2
better-than-expected 1
asks, 1
chunks. 3
accurate 2
and? 1
bits), 2
amount 37
anything? 3
before 130
behave 12
characteristics 2
architectures: 2
al.’s 2
at 576
assert(rc 5
approaches 31
big; 1
assigned 7
clean). 1
accused 1
clears 5
bitwise 1
an-THREE 1
arbitrarily, 1
before!” 1
benchmark 3
check. 4
arguments: 3
checking 6
atomically 16
arcane, 1
bind 1
anticipate 1
accustomed 1
co-advisors 1
block, 2
assume 80
analysis 5
architecture. 4
begin. 3
benefit. 1
attributes. 2
argv 3
all 247
choices. 1
attacker 4
architectures 2
bit. 5
anyhow, 2
achieves 7
code? 9
book, 18
atomics. 2
analyze 3
architectures; 2
behaviors 2
bet 2
automatically, 2
arise, 4
chosen, 1
attaining 1
allocated 46
are. 4
bitmap 2
anything 17
act 3
codes, 2
boost 8
attempts, 3
anyhow. 2
argument. 2
belt, 1
bit, 10
auxw 1
arrange 4
chucking 2
attempt 14
allocations 8
arg, 2
black 3
application. 4
active, 2
commonplace, 3
boots 2
automate. 1
arguments; 1
application 29
better.” 1
bits) 1
awoken 3
arrangement, 1
chunks 13
available. 14
also: 1
born, 1
arguments 23
approaches, 1
activity; 1
compares 1
bounds, 5
baby 2
arises: 1
approaches. 2
binary. 1
block 22
axis 4
array.c 2
bad. 7
award 4
alternating 2
arise2 1
architectures, 1
addition, 4
both 87
completes. 4
brand 2
baby!” 2
arrival 1
architectures. 1
bits1 1
cleaned 1
array[i] 1
bandwidth 3
book 47
away.” 1
always!). 3
arose, 1
are: 2
addr:21 1
briefly 7
completion 4
builder 1
background. 2
assumes 14
are, 4
boost, 1
aside: 1
clearly 17
barons 1
born: 1
axes. 2
amt>0) 2
arrive] 2
arguments, 5
advice, 1
broadly 1
complexity, 1
but, 1
backwards, 1
assumption. 2
arg: 1
boots, 1
aspect 15
clock 11
base/bounds 5
borrow 2
back-to-back 1
analogous 1
aside 4
arise. 3
affinity. 4
broken, 2
conceptualized 1
base/bounds) 2
atomic_increment 2
bytes 41
argue 1
break. 1
assembly 13
close(fd); 1
basics 13
both. 4
back. 2
anonymous 4
asleep, 1
arrays 5
age; 1
buffers 6
concerns? 2
bases 2
attain 3
c4 6
argued, 1
breaking 1
cloud), 1
associated 18
be. 11
bottleneck 1
backing 1
answer) 1
assumptions 14
arriving 2
alas). 1
bugs, 2
concurrency? 1
becomes 18
attainable, 1
caches 16
arguments. 4
broadcast 1
clustering, 1
aware 2
backward 1
answered 1
begin 32
astute 2
bounds 48
aside, 2
algorithms. 5
byte) 2
condition3 1
behaves 11
author. 1
call-ing 1
argv[1]; 1
btrees. 1
cmpl 1
awful! 1
base); 1
background 15
begin\n"); 5
attention 10
breathe 2
asks 4
all? 8
c:100:50 1
conditions 9
behavior. 4
authors’ 1
call; 2
arise 12
buffer[MAX]; 1
co-authors). 1
anymore. 1
base-and-bound 3
based 17
authors 8
brk, 1
assert 3
being 54
allocate(int 1
cache) 1
constant 1
behaviors; 1
care, 2
available 31
arose: 1
builds 1
co-exist 1
appear 4
basics; 1
battles 2
auto-matically 1
broaden 2
assumed 12
below, 2
allocates 11
caching 9
constructed, 1
benefits. 1
careful), 1
avoid. 3
arranged 1
bytes, 10
co-workers 1
are! 3
behalf. 1
before, 7
avoids 5
broadly. 1
assumptions, 6
better? 1
allowed 8
call1 1
consume 5
best 31
carefully 17
arrangement 1
avoiding 16
code/stack/heap? 1
area 5
begin... 1
behavior 35
award-winning 1
brought 10
atoi(argv[1]); 1
biggest 4
alter 2
c 177
calls. 5
consumer. 2
best-fit 7
case; 3
array), 1
awesome 2
codes. 2
behaved 1
argc, 23
below). 3
balance 15
built; 2
attack: 1
billions) 1
amazingly, 1
c4, 1
camp, 1
containing 4
bible 2
certainly, 1
arrive; 1
coherence 3
behavior? 2
back 65
benefits 5
be? 9
around 42
attackers 2
binary 14
analyzed 2
cache? 2
candidate 3
contents, 1
big!”, 1
change! 2
article 3
collection 3
better) 1
back-and-forth 1
big. 3
begins. 1
but 288
array.c) 1
attempts 4
books). 1
caches, 5
carts 1
contrast, 10
big, 3
changes. 1
com- 1
beyond. 1
barest 1
any 171
beguiling 1
bigger 19
bx=0,bx=1 2
array: 1
attention, 3
bookshelves 2
call). 5
cases. 3
control-c) 1
bits, 7
come–great 1
bidding. 1
chapter 37
basi-cally 1
apologize. 1
bit! 1
authors.. 4
boost. 1
arrive 21
called. 4
challenge: 9
converted 1
caller 14
blocks 9
commands: 1
commercial 3
be: 2
append 2
bits. 2
average). 1
bottom 10
asides 1
child/parent 1
better 88
cooking 1
body 2
bit 93
cannot 21
cheapskate. 1
commonly-used 2
beautiful 9
appetite, 1
blocked, 3
bouncing 1
away 12
ask: 2
chops 1
beware 1
cores. 1
bits”. 1
books 21
carefully, 6
chips 3
completes 6
before. 7
applicable; 1
bolts, 1
box, 1
awesome! 1
associative. 1
by 705
clean-page 2
beyond), 1
as 1029
corre-sponding 1
bizarre 3
botte 1
caused. 1
choice, 2
complexity. 2
beginning 15
approach: 5
book), 2
break 5
backwards 1
atomically: 2
byte). 1
clever, 1
bit). 3
asked, 1
costly, 6
bombs, 1
bounds”); 1
caution 1
chosen). 1
concept 9
begs 2
boolean 2
brings 1
base/bound 1
attachment 1
c->threshold 2
client. 1
black) 1
asleep... 1
costs. 1
born. 1
branch 3
chain 2
chunk. 4
concurrent) 2
behaviors. 2
boosted 3
buffer; 6
attacks. 3
c->value 4
client’s 2
bodies 2
assert(fd 1
basic 94
count++; 1
boundary; 1
bucket 2
challenge 5
chunks; 1
confusing 2
break; 5
bytes. 3
beyond 20
auto-magically 1
cache). 1
closest 1
book; 1
assumptions. 2
batch 7
counter: 1
break: 1
buffer); 1
chapter, 16
clear 12
consider-ably 1
broadcast(), 1
c2 10
big? 1
automatically 6
caching. 1
coarse 1
both) 1
atop 1
are 870
before? 2
coupling) 2
brilliant. 1
buffer[fill_ptr] 1
chapters) 1
clock; 1
consisted 1
browser, 1
c6, 1
big” 1
average. 1
calculation, 1
cocoon, 1
bounds; 2
build 118
arg. 2
begins: 1
course) 1
brk 1
bug 4
cheating 1
cloud 2
constructed. 1
caches. 1
binary, 1
awake 1
call? 4
cold-start 2
attains 1
broadcasts 1
built 19
array) 3
behalf 2
crazy! 1
broader 1
buggy 1
child? 2
call) 1
consumer 26
bits? 1
ax 4
code, 73
calls, 3
combine 7
attention. 1
called 111
bunch 6
asked 2
below) 3
credentials, 1
broken. 3
build. 2
chopped 5
contain 6
blame 3
ax=0,ax=1 2
cofounded 1
can) 1
coming 7
attentive 1
carved 1
burst 3
assertion 2
brutal, 1
beneficial 1
cross 1
brutally 1
chunks). 1
contention; 2
building 41
boring 1
ax=1,ax=0 2
collector 2
canceled, 1
comes 14
attribute 2
case) 1
buy 6
assume: 1
bucks. 1
curious 3
better, 14
buffer), 1
clean 9
contents. 2
built. 1
born 4
balances 1
command. 2
candidates; 1
commandline 1
authors. 1
caused 2
bytes) 3
attack 9
buffer, 11
cycles). 2
buffer[use_ptr]; 1
clear, 5
big 44
context-switches 1
burden. 1
bottom, 2
base. 1
commands; 1
care 10
compact 3
avenue 1
centralized 1
c->value--; 4
attempted 2
cache, 11
buggy! 2
close(), 1
bugs. 11
buying 2
bed. 2
bounded 8
bits 70
compaction 3
case? 5
company 1
balance. 1
cases, 27
bus, 1
avoidance. 2
caches) 1
continuing. 2
data 252
cloud-based 1
bx=100). 2
bx=2,bx=2 2
begins! 2
boxes 2
blocked. 2
compete 1
book). 5
chances 4
balanced: 1
cast 4
bus-based 1
avoided, 1
call); 1
copy! 1
datacenters, 1
combination 11
c->global 4
bytes). 3
behave. 2
bragging 2
compare 6
compiled 6
born! 1
changes, 1
basically 6
catches 1
butter 1
bad! 1
campaign 1
cores 1
date, 2
community. 1
cache; 2
c; 3
behind-thescenes 1
break, 1
compare-and-exchange 2
completed 5
both), 1
basing 1
chapter. 25
bytes? 1
badly, 1
certainly 32
can. 3
correct: 1
daunting 1
company, 2
calculation 1
cache: 1
brilliant!” 1
below 11
comparison, 3
completes1 1
bounds). 1
batch-like 1
characterize 1
c->value; 4
character. 1
capability. 1
costly. 3
day, 2
complain 2
call3 1
calculate 5
broken 1
because 93
best; 1
competitive. 1
compulsory 5
breed 1
because, 1
cheat 2
c3 10
choice 8
careful. 1
costs 8
decision, 4
complete: 1
caller, 4
caller; 2
bugs 6
before), 2
bet. 2
compiler, 2
compute 12
bring 4
becoming 2
children, 3
call: 2
citation 1
case); 2
deep, 1
counter, 15
complicated. 4
calloc() 1
can, 4
busy. 1
begins 13
binaries, 1
complete. 6
bits). 4
browser. 1
begin” 6
calls 88
calls). 1
class), 2
categories: 1
defense 3
counts 4
component 5
capacity 2
c2, 1
below? 1
computer. 1
complex-instruction 1
block. 3
bumping 1
choice: 1
behaving 1
came 12
classmates; 1
cases 29
cell 1
demands. 1
coverage 2
computation 2
careful, 3
calculates 1
biased 2
con- 1
computers), 2
blocking 2
bytes; 2
chunk, 3
below; 1
case: 4
book. 23
cause. 1
centers, 1
demonstrated 2
crime, 1
conceptually 2
cares 2
calculations? 2
bit) 1
concerned, 2
concurrency, 10
bytesLeft 3
circular 1
better. 7
client, 2
cases). 1
both, 1
challenge, 1
chance. 2
describing 4
critically, 1
concern; 1
cases? 2
call), 1
blank 1
conclude 2
concurrently? 2
cache. 9
cite 2
bit), 1
closing, 2
cast; 1
bottleneck. 2
changing 9
child, 8
design 22
crux: 5
concrete 1
casts 1
called, 10
blocked); 2
concurrently), 2
cond_t 5
caches; 1
class? 2
black). 1
concurrent 80
cen-tral 1
bounds. 5
client 5
chip, 2
desire. 1
curr 6
chaos 2
caller. 2
blocks: 1
configure; 1
calamity. 1
clear. 2
clustered 1
concurrently; 1
blocked 16
bug; 2
boot 11
certain 26
closing 2
chosen 5
desktop 4
cycles) 1
chapter). 3
caller’s 1
bold). 1
connects 2
calculated 1
can’t 30
condition, 7
condition 81
c->local[cpu] 4
borrowed 1
chains 1
coalesce 2
chunk). 1
destroy 1
datacenters. 2
bookstore 1
char 35
constants 2
clearing 2
catastrophic, 1
confuse 1
configurations, 1
c6 6
bother 1
challenges 2
code); 2
circumvent 1
details); 2
date. 1
bound 4
code 391
consulted, 1
client/server 1
cause 24
connected 4
check 46
confused 1
cabinets 1
bounds) 1
chanced 1
cold- 1
clustering 3
detector 1
debugging 1
bounded-buffer 1
columns: 2
consumers. 1
clues) 1
caused, 1
connections 1
child: 1
confusing; 1
calculation: 1
breath. 1
colleagues’ 1
cmp 1
devices). 1
decision. 2
change 55
breaks 2
command, 4
consumes 2
co-authors 5
center 2
consist 2
chosen. 1
calls: 3
browser 1
consider 26
collected 1
coarse-grained, 1
diagnose 1
decrease 2
changed, 3
brief 4
companies, 1
contention, 2
code: 7
challenge. 4
constructing 3
circuitry 2
can 699
casting 1
built-in 1
conspired 1
collectively 2
code), 4
differentiate 2
decreased, 1
chapter? 9
broad 4
compare-and-swap, 2
control, 4
common, 1
chapters). 2
consuming 3
citations 1
checks 25
central 7
byte 15
const 3
color 1
combina-tion 1
differently. 3
defeats 1
chapters, 9
buddy 11
compared 7
convenience 2
communicate 2
context. 2
cannot? 1
classic, 1
choose 5
careful 16
consumer; 1
columns. 1
changes 20
combines 1
difficult 10
degree 3
clarity. 1
buffer. 6
comparison 7
convoys, 1
community 3
compiler 26
clean; 2
c->local[cpu]; 2
chores.” 1
carefully; 1
continuous 1
command 12
channel 1
compacted 1
discuss, 1
demands 2
class 12
buffering 1
cool 17
continue. 7
compact. 1
completes? 1
clustering. 1
c->threshold) 2
cleaning 1
challenges, 1
cope 1
commentary 1
check; 1
comparing 5
disk-access 1
depicts 1
cleans 2
bx=1 2
copy-on-write 5
contributed 1
company’s 1
computational-overhead 1
codes 2
c1 10
clear: 6
chance 4
copy, 1
commonlyused 1
checkbook 1
complementary 1
disk? 2
desire 7
cleverness, 1
byte(s) 1
correct; 1
contributions 1
comparison: 1
computer, 3
column 5
c5, 1
clever 5
chapter; 1
copying. 1
companies 6
children 1
compare-and-swap 10
disks, 1
desired, 1
close 11
c5 5
corresponding 10
convention 2
compile-time 1
computers) 2
commands, 1
close(STDOUT_FILENO); 1
child. 2
core. 2
complete). 1
choice. 1
compiled(!) 1
cache 86
dismantling 1
destination: 1
code; 3
detailed 8
counter1, 1
copies 12
concepts, 1
complete, 7
coalescing) 1
commonly 13
chip’s 1
corollary 2
components: 3
completion), 1
cake 4
documentation 3
cached 3
collect 1
detects 1
chunk 44
correct-ness; 1
concerns 3
completion; 5
columns 1
commonplace 1
complicated 13
compromised. 1
course, 73
correctly 19
complicated: 2
causes 5
dominant 4
combat 2
call, 19
device, 1
citation. 2
correctly, 3
combined 1
chocolate 2
communicating 3
concurrency 36
complications 1
computers. 1
covering 7
correctness, 4
computation, 2
centers 1
dread: 1
combinations 3
drive 5
diagram). 1
cited 2
cost: 4
community, 1
chooses. 2
company). 1
condition); 1
comprises 1
concludes 1
crash, 1
cost. 1
cesses. 1
canonical 3
change. 6
combining 7
differ, 2
claims 2
computer 59
could, 1
complete?) 2
chose 1
compilers 1
confections 1
concatenate 2
conclusions 1
creating 9
costing 1
ease-of-use 1
carefully! 2
changes; 3
communication 2
differences. 2
closes 3
concepts 7
complicate 1
code. 44
class, 3
completely 6
confining 1
concurrency: 2
concurrency), 1
condition. 8
eat 6
cheaper, 1
compare? 1
differently 1
concrete, 1
could 137
complicated, 1
counters 14
collaboration 1
case, 105
completion); 1
construction 7
classic 26
curr->stride; 1
condition) 1
conditionals. 2
eax, 3
competing 6
direction; 1
concurrent, 2
child 59
count. 2
computation. 2
counting, 2
cat 3
complexity 10
consults 1
clear; 1
current: 1
common 61
connection 1
conditions; 2
ebx; 1
compiler; 2
directly, 5
cond; 2
chip 1
counterpart 1
computed 1
counting-based 1
century. 1
computation; 2
consume! 1
close, 1
days, 6
compete, 1
considered 10
confines 1
edition. 1
completion, 2
considerably 1
dirty 11
chooses 3
counting 7
concerned 5
creators 1
challenging, 1
computers, 1
consumers, 2
cluster 2
decimal. 1
competitive 1
constituent 1
consider. 2
effective) 2
complex. 2
constantly 3
disappears 2
classically 1
crazy. 2
concurrently) 1
crucial 2
changes? 2
concatenating 1
contiguous; 1
coalesces 2
decisions, 2
context; 1
compile 11
considering 6
efficacy 2
components 1
consumers 9
disassemble 2
coalescing, 4
condition: 1
crude 2
chapter! 1
creates 34
conceptual 4
control: 1
coined 2
defined. 1
cold 3
compiled, 1
constitutes 1
element 14
comprised 3
consumption 1
disassembler. 2
coarse-grained 2
configurable 1
ctxt 1
contains 32
critical, 2
concert 2
conundrum 1
contiguous 13
definitely 4
comfortably 3
construct 5
emphasis 1
complete 23
computations 1
enables 23
computing 16
cons. 1
chapters. 6
culprit 1
contention. 2
customized 1
condition). 1
continue; 2
delaying 2
copy 18
correct) 1
completed, 2
discussing 4
code) 3
ends 4
concept: 2
consulted 1
characteristics, 1
context 70
control. 1
cyclic 2
confidence 2
current 37
control? 3
deletion) 1
commands 2
correctness 9
compulsory, 1
disposal.” 1
concurrency. 7
enterprising 2
concluding 1
contention 4
checking, 1
contiguously 2
counters, 6
datacenter, 1
confirm 6
customer! 1
control” 2
deploy 1
common) 1
costs? 1
colleagues 3
do) 1
concurrentlyrunning 1
entirely. 4
concurrency; 2
context, 2
chopping 1
course. 4
continue 10
deadlock 5
congratulations! 1
cooperative? 1
cycles 11
deployment, 1
compiling 1
counter; 2
doing; 1
come 9
confront 1
concurrently-running 1
continue, 1
chunks, 4
entries 22
converse 2
cover 11
debug 1
constructed 4
copyon-write 1
data) 2
design-ers, 1
complete) 1
cover, 2
don’t, 2
command-line 2
constants, 1
concurrently. 1
clarify. 1
convince 1
crash. 1
error 17
deciding 5
control 79
consumed 2
correct. 2
data[100] 1
designer, 1
completed), 2
create()6 1
doubt. 1
commonalities 1
construction. 1
condition3, 1
contending 14
cooked 1
creation: 1
etc. 5
decodes 1
control-c 1
correcting 1
debug, 2
contents 28
designs 1
completing 1
creature 1
comprise 3
complete; 5
clean), 1
condition? 1
continued 1
core, 5
criterion 2
dedicated 2
cooperative 5
declares 2
exactly 39
continuing 4
desktops 1
downsides, 1
credit 3
compromised 1
complex, 4
closer 2
conference. 1
counter 116
convenience, 1
correctly-working 1
cycles, 3
definitive 1
correct? 3
dedicate 1
exam? 1
contrast 7
dest_buffer[100]; 1
draw. 1
computers 7
components. 1
coalescing 6
configured 1
craft 2
convenient 1
cyclic-sequential 1
correctly. 8
degenerates 2
counter++; 1
deeper. 1
examines 3
critical 140
controversy 1
details). 4
drawn 1
example. 31
computing. 1
code.” 2
confined 1
crazier 1
converge 1
data), 1
correctness: 2
deleted 1
counter1 1
deeply 1
currency 4
course 20
computing, 4
dreams 1
examples; 2
determine 34
concern, 3
coherence, 2
confuses 1
create(); 1
cool, 1
day! 1
cost, 5
demand. 1
deeply-nested 1
convention; 1
datacenter 1
crash 2
conception 2
driver 1
exception; 2
developing 7
concise 7
communicates 1
consists 8
create, 2
continues. 6
days. 1
countermeasures 1
demanding 3
depends 5
convoy 2
days... 1
create(), 2
concurrency). 1
dummy 4
did, 1
concurrently, 1
exclusion 21
complete? 3
cond 17
creation; 1
controlled 8
decayed 1
crashes, 3
demise 1
design) 1
copy-onwrite. 1
days: 2
creation, 6
configure 5
dx 2
differentiates 1
executing. 1
coolest 2
completed; 1
conditional 1
creator 1
cooperatively 1
decimal 2
cream.” 1
dependence, 1
designed 9
correct, 2
de-queue 1
criteria. 2
conflict 2
ease. 1
direction, 4
execvp(). 1
copy-on-write, 1
completely: 1
constraints, 1
curr); 1
correctly? 3
decisions. 2
dependent 1
create() 11
destroyed 1
costly 7
deallocation, 1
curr->next; 4
confusion. 1
easy-to-use 2
disabling 5
execvp(myargs[0], 2
copy. 1
completes, 9
consumers), 1
current->tickets; 1
corruptions. 1
decreases 3
desired). 1
creation 20
count--; 1
decrees 1
detail 26
define 9
consideration 2
easy: 2
disaster. 1
exit 13
copying 4
completion. 2
context-switch 4
cycle 4
counterbalance 1
defined 5
desk 1
cruces 1
counter. 12
currently-executing 2
detour 1
deleted); 1
consistency 3
eax. 5
disk-like 1
experimentation. 1
core 8
contexts, 1
deadlock) 2
complex 22
created. 3
delay 2
details! 1
daemon1 1
counter_t; 6
cycles. 4
developed; 1
deliver 8
context-switching 2
edx; 1
do: 2
explained 2
correctness. 3
decisions? 1
controls 5
comprehensive 2
critical; 2
cost 49
critique 2
darn 1
counter’s 2
danger 2
dense, 1
development 13
conventions, 1
effect” 1
doing, 3
express 1
declare 4
convenience). 1
computing2 1
delete, 2
details1 1
costly; 2
curious, 1
data; 1
curr->pass 1
data). 1
descriptor, 2
corn 1
devices 15
elapsed. 1
downward). 1
extreme 4
deletion, 1
converts 2
concern 5
depiction 2
detecting 1
currency; 1
count 25
cycle. 1
database 13
days 4
designs. 1
corner-case 4
different-sized 1
encountered 1
drives 2
delve 5
cost; 4
fact, 28
concurrently 9
deployment. 2
conditions. 5
counter) 1
currently-running 9
dandy. 1
deal? 2
deallocates 1
destroy() 2
differs 1
end), 1
dynamically-allocated 1
depend 3
couldn’t 2
fail. 2
correct 42
developers. 2
derive 1
configuration 2
court, 1
darned 1
debate 2
data, 18
develop, 2
decides 11
difficulty 4
energy-efficiency 1
each, 1
depends.” 1
counter); 6
failing 3
correctly; 1
difference, 4
descheduling 2
confusing, 2
cpu.c 2
date 2
debug. 1
deal 16
device; 1
decisions 7
directory. 6
entering 9
earlier) 1
entirely 4
families 1
couldn’t. 2
create 49
describe. 1
constant. 1
crashes 2
day 5
debugger 6
declaration 5
difference 18
deeply. 2
disabled; 3
description, 1
descriptors. 1
fast, 6
count) 3
created, 14
creativity 1
early 68
descriptor 1
constraints 2
crazy 3
deadlock). 2
decreasing 1
defaults. 2
differentiation 1
default, 2
discussed, 1
equivalent. 2
designers, 1
fault. 7
counting; 2
different 196
covers 4
easy; 1
desires 1
consult 2
create()); 2
deallocate 1
deeper 5
defend 2
difficulties 2
delight 1
distributed 7
errant 3
faulting 2
currency) 6
differently; 1
crazy) 1
desired 52
edi; 1
detail, 6
consumer, 6
currency. 2
default 7
decide 23
defense, 1
digest; 1
deployable 1
errorprone. 1
describe 14
daemon 8
disciplines 2
crux 3
destination. 1
effect 4
discussed 24
contexts 2
dairy 1
disk, 14
defer 2
does, 6
direct 14
favor, 1
errors? 2
descrip-tion 1
dangling 1
curse 3
destruction, 1
details) 1
effective, 2
continues 7
defense; 1
darker 1
do 328
decision 15
deletes 1
doesn’t? 1
discussion). 1
fd 1
esi; 1
detail. 12
dealing 2
details; 3
deterministically) 1
disk 54
efficiencies 1
continuously, 1
depth 2
data? 1
driving 1
decreases? 1
demand-zero 1
domains, 1
est 1
customer 2
decade. 2
deter- 1
determines 17
disrupt 1
fetch 29
develop 12
control-z 1
efficient 19
datacenter. 1
editor, 1
deep 7
demonstrate 5
described 36
done! 3
estimate 2
dark 3
decimal), 1
determined 9
deterministic, 2
distinguish 2
file: 1
devices, 2
correctly! 2
efficiently; 1
de 1
efficiency. 3
depending 12
dereference. 2
device), 1
double-ing! 1
deallocated 4
declared 1
developer; 2
device 11
dives 1
fills 3
did. 2
costs, 1
elements 8
couple 10
encounter 7
dequeue 5
derivatives 1
diagram 10
dramatically 2
deallocations 2
default? 1
example 131
devices. 4
differ 2
documents/R4400 1
differ? 1
declaring 1
else-where, 1
course). 1
end, 5
descriptor? 1
descheduled, 1
final 51
difference: 4
dream. 1
decided 6
defaults, 2
exceeding 1
diagram, 6
directly 8
different-size 1
defeat 1
direction. 3
coverage, 2
endlessly 2
descriptors, 2
does 256
different. 2
finished 14
drops? 1
decrement(counter_t 4
degenerate 1
exceptional 5
dictates 1
directory; 1
empty. 1
defensive 1
directory: 1
definition 6
entered, 2
descriptor). 1
doing: 1
desired. 9
directory 18
dynamically 1
five 8
dedication. 1
delivered 2
exciting! 1
disappear). 1
emptying 1
did 22
covered 2
disk); 1
delving 1
entirety? 1
design, 1
demand 11
flag 73
dirty) 2
easier. 1
demanded 2
deployed. 1
executed), 2
discipline, 1
emulate 2
dies, 2
cpu 4
do, 11
environment. 4
domains 1
desk? 2
despite 6
demonstrates 3
flash-based 2
discipline1 1
demoted 1
easily 17
depressing 1
disciplines) 1
encouraged 1
executing 26
different: 2
document 1
created 22
escalation 1
double 3
despairing 1
detail; 1
deschedules 3
flavor 2
disciplines. 1
depicted 2
editor 2
depths, 1
disconnection 1
end-of-string 1
execvp() 1
digit 1
doesn’t). 2
curious. 1
esp; 1
earlier). 1
device. 1
designs, 1
flight, 1
discrepancy 1
details 46
depressing. 1
ele-ment 1
describes 6
discussion, 1
description 9
exists, 3
direction 1
doing. 3
current->next; 1
establishment 1
easy-to-read 1
etc.) 11
didn’t 11
foil 2
discussed. 1
determining 4
descriptors 5
employs. 1
enemy? 2
disk), 2
design: 1
exits? 2
directory, 8
done) 1
currently 27
design” 1
ebx, 1
evenly 3
die, 1
forever! 2
divide 6
developed. 1
designers. 2
en-us/um/people/mbj/Mars 2
enormously 1
distribution 1
designate 1
expected: 2
diving 1
doubt! 1
currently-pointed 1
desirable. 1
ecx; 1
evidence 1
differences 2
forgets 1
does: 2
developer 2
destination 2
entry; 2
does), 1
enable 24
expects 3
designers 9
draconian 1
do. 18
dangerous 5
detect 5
effect. 1
example). 3
digest. 1
forth). 1
done? 1
developments 1
destructive 1
equally 1
doing? 2
enabled, 4
fact. 2
destroy()) 2
drivers 1
data. 9
eight-page 1
developers 12
exchange 2
directly. 3
doing 76
found. 2
downfall. 2
did), 2
details, 4
errors 9
destruction 2
fail 13
each. 4
end 46
databases 5
emails 1
diagram); 1
empty, 3
don’t 81
disassembler 2
dollars 2
fragmentation; 1
dramatic 2
frequent 4
deterministic. 2
essentially 11
detail10 1
fast. 5
earlier; 2
end\n"); 5
debugging, 1
excluding 1
die). 1
enabled 4
earlier, 3
dominate 3
died 1
drop 4
frequently; 1
discuss 53
developer, 1
everyone 1
eaters; 1
endeavors 1
fault 12
decay-usage 2
execle(), 2
details. 34
difficulties. 1
enact 1
easy. 3
done; 1
dirty-page 2
dx) 4
full). 2
discussion: 1
devices? 1
disks 4
eax=51. 4
enough! 1
feature 5
decide: 1
digging 1
deterministic 8
ence 1
execute 29
eax=50 2
doubts 1
discusses 1
dynamic 20
game 4
evil.” 2
die 1
dividing 6
economist. 1
feel 8
decides). 1
directing 1
deterministically. 1
entire 46
engineering 2
executed, 5
effects 1
dump”, 2
disk; 4
e 1
examples. 3
directed. 1
do; 2
general, 18
effective. 3
fewest-possible 1
deep... 1
disappear 1
developer. 2
entirely; 2
enough), 2
execution” 1
efficiency; 1
display 2
eagerly, 1
exception. 1
directions. 3
documents, 1
generalized 1
either. 1
file, 9
defaults 3
disk. 14
developments. 1
entry), 1
exited 1
ensuring 14
efficiently. 1
easier, 1
exchange1) 1
directives 1
doing.” 1
get: 4
done 72
employed 4
files) 1
definite 1
displays 1
deviously 1
estimator? 1
expect: 4
entry) 1
elsewhere, 1
each 340
easily. 3
excludes 2
discussion. 1
done\n", 2
getpid(), 2
double-check 1
empty 14
fill_ptr 2
demand? 1
dissertation 6
digested; 1
evaluate 6
disable 3
equals 3
eases 1
enabling 15
efficiency 8
excuse 1
else, 7
don’t. 1
gettimeofday()). 1
down-wards 1
endlessly, 2
finegrained 1
demand” 1
divided 8
expensive, 6
discipline 1
errors. 1
eater 2
examine 36
enacted, 1
disk). 3
execl, 1
enable. 2
double-click 1
glance 1
downward 1
establish 3
first-in 2
dereference 1
does. 1
explanation 1
discredited 1
especially 13
effective 12
executed 17
engineers 2
disk-drive 1
exhibit 3
end. 1
doubt 2
globally-shared 1
drive, 2
eviction. 1
descheduled. 1
fixed-sized 11
doivent 1
explored 2
discretion 1
efficiency, 3
exist: 1
distinct 2
exit(1); 6
discussion 17
exist 11
ending 1
downsides. 1
gnu 2
draw 2
design. 2
examples 21
flag[self] 4
double. 1
expressed 2
efficiently? 5
entry. 10
diverse 1
every 52
exiting? 1
evict 9
exits 3
enjoy 3
duration 2
good! 2
designated 2
excellent; 2
due 19
followed 5
downside, 1
external 10
eight 1
evicted, 1
do? 9
disk) 3
expect. 2
either 49
expected; 3
eax=51), 2
ensures 14
designing 3
got 16
exception 15
ease 4
downwards 1
failure; 2
evil 1
does). 1
doesn’t, 3
example? 2
expectations 1
found 84
encounter. 1
experiment, 1
edit 2
entities 5
desire, 1
gracefully, 1
excessive 3
easy, 1
dream 1
far: 2
examining 4
done, 6
examples, 3
done. 10
expensive 3
encountering 1
extension 1
editor? 1
entries; 2
desktop. 1
four 52
granting 1
execute, 2
drives, 1
eax 20
fashion; 1
excellent, 4
downward, 1
exception, 3
double) 1
enough; 1
explicitly 12
fail! 2
effectively 5
enum 2
destroying 1
free()) 1
grasshopper, 1
execvpe(). 2
eax=50. 2
during 29
faster. 6
exec(): 1
d’un 1
excess 1
double-precision 1
exploring? 1
enters 21
failure), 1
efficient) 1
environment 4
free(void 4
developed 23
greater 4
exit), 1
ecosphere 1
dustbin 2
feeble 2
execution, 8
earlier. 2
exercises 4
down, 1
fairly 9
downward. 3
falling 1
effort 3
error; 1
free-page 1
diagrams 1
grow; 1
expensive!). 1
efficiently, 1
dynamically-allocated, 1
fell 2
exhibits 2
exhibit. 1
entries). 2
fairness, 2
driver8 1
easy 50
fancifully 1
element, 2
essay 1
fullness 1
differently, 1
guarantee. 1
explore 5
endless 4
earliest 13
fetched 5
exists 3
exist. 5
entry? 1
enter 32
duty. 1
ebp; 1
fantastic 1
employ 4
events 5
fully 8
difficult. 3
handle. 1
extremely 3
fields, 1
expand 1
easier 19
far-reaching 1
environment, 2
existing 14
entries); 1
dx=3,dx=3 4
effectively, 1
farmer 1
encounters 2
eventually, 1
further, 2
dirty, 2
handler, 3
face 4
field” 1
expected. 4
efficient, 5
far. 1
epic 1
exit() 6
entry, 8
e.g., 8
efficiently 10
fast” 1
end” 8
evermore 1
discovered 4
futex 16
happen. 2
factor 8
files 10
exporting 1
efforts 2
fascinating 9
equation; 1
exits. 4
etc.); 1
egomaniac. 1
earlier 18
features. 2
engineering; 1
everything 12
dive 4
general. 1
happening 1
fails 5
fine! 1
failed; 2
eip; 1
fault; 2
etc.). 1
expected) 4
elsewhere. 2
eaters 2
fg 1
evolution 3
enough 32
divides 6
generalization 5
happens; 2
fall 5
first; 6
fair. 1
fellow. 1
even 148
eviction 3
experts 1
embarrassment. 1
else 45
effectively. 3
fine; 2
evolved 1
entries, 5
do), 1
generalpurpose 2
hard-and-fast 1
fashion). 1
familiar; 1
fit 27
few), 2
ever, 1
extents 2
example), 10
enforcement, 1
employs 3
elsewhere 3
finish, 2
equation 1
exact 26
documented 1
generation 1
harddisk 1
fault3 1
family. 1
flag) 5
fewer. 1
evicts 3
extract 7
exceeds 8
enough, 5
emulator 1
emailing. 1
fire). 1
era. 1
example) 10
get(); 5
hardware, 15
faults 3
doesn’t 51
famously 3
flag[1] 2
fields 2
execl(), 1
fail? 1
exceptionally 2
en.wikipedia.org/wiki/LoadLink/Store-Conditional. 2
empty), 1
ensure 34
first-level 2
error, 3
exec 2
ghastly 1
hardware-based 5
features 17
fancy? 1
down 25
follow 2
figure), 1
execlp(), 2
fails, 3
exec(); 1
enabled. 1
enacted 1
entity), 1
flags 10
etc., 1
executed. 1
github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
has. 1
fetch), 2
faster; 1
download 2
for, 2
fill 11
executable, 3
failures 1
existed; 2
enacting 1
end”. 1
flaws 1
example... 1
executing) 1
entry 55
global; 2
files, 3
heap, 22
favorite 8
drink 2
forced 2
finishes. 1
execution: 1
fairness 7
exit). 2
encapsulated 2
enough. 2
fork; 1
example: 8
exit; 1
etc.)? 1
globally-allocated 2
heavy-handed, 1
finally 27
fetch-and-add 8
drive. 2
forget, 1
first” 1
exists. 4
familiarity 2
expected? 2
encourage 3
ensued 1
formal, 1
excited 2
exited2 1
event 3
grab 11
hexadecimal), 1
find. 1
few. 1
driven 1
fix 3
fork() 25
expected, 4
experiment 5
famous 21
engineering. 1
entirety 2
formed 3
exec() 13
expect, 2
grabbing 2
ever 19
hide 1
field, 2
finding 15
dynamics 1
flag=0 2
forth 3
expires. 1
explain 1
fault? 1
entitled 2
entries: 1
fought 1
expensive. 2
grand 1
executes 23
everywhere, 1
hierarchy; 1
fight. 1
fine-tuned 1
eating 1
flags: 9
flexible, 1
exploited 2
extended 5
faults, 2
entity, 3
envisager 1
fragmentation. 6
explicitly. 2
gray) 3
exhaustive 3
evicted. 2
high: 1
finish. 2
electrical 1
free() 8
extracts 3
failed, 1
file 95
fact 20
entry). 1
equal, 2
fragmented 3
exploit 1
grows: 1
existed 1
exceptions 3
hit), 4
fit, 2
element. 1
freely, 1
family? 2
feasible 1
filled 6
fair, 1
equivalent; 1
era, 1
fast 19
exploration 1
exiting. 1
guarantee 21
exec(), 6
hoc 2
five-level 1
elements; 1
frees. 1
fancy 7
features, 2
fine. 2
error-prone. 1
free(): 1
errantly-freed 1
fetches, 2
exports 1
expectations? 2
guessed, 5
executable 13
flag), 2
else? 2
holds 38
fares 1
felt 3
full 33
error? 2
free; 5
et 7
evicted 3
few, 2
facility 3
exploits. 1
guide. 1
executes, 3
flag[2]; 2
email 2
honorable 1
few) 1
faster, 6
functions: 1
fixed 13
frequency; 1
etc.? 2
fewer), 1
fact). 1
eyes 2
excellent 42
hallmark 1
flexibility: 2
embracing 1
execution. 17
hood 1
figuring 1
figures, 1
futex_wake 2
flexibility; 1
frequently-used 1
eventually 15
fewest 2
failed 8
facets 2
excessively 1
hand-over-hand 8
flexibly 1
emptied 1
handle 17
expected 7
file; 1
files. 1
gaming 2
explicit 22
frequently. 1
evict. 3
field: 1
failed\n"); 4
failure. 1
exchange1 1
folks 1
hope. 1
enjoys 1
handled, 1
for 1176
finally, 8
flushing 1
gave 3
faint 1
friendly 5
evicting 1
fairshare 1
figure, 15
fashion. 3
find 86
exec(). 2
follow, 1
how, 1
enlisted 1
handler. 2
forever. 1
find!) 1
from) 2
generally 28
focus 21
exactly? 2
fair 19
except 6
file. 2
fetch, 2
finish 13
force 2
however: 1
enqueue 4
handlers; 1
forewarned: 1
execution 48
flag.s 2
func() 4
gently 1
familiar 2
exclusion? 2
fair-share 7
follows: 21
file.txt 2
figured 2
first) 1
forest, 1
http://www.sparc.org/standards/SPARCV9.pdf. 2
entity; 1
happen 15
exist). 1
forget 8
flags. 2
funky 1
fanatics, 2
execution), 3
family 5
for) 1
gets 51
file’s 2
finish), 1
flag). 2
finished, 10
http://www.unix.org/version3/. 1
entries. 3
existed. 2
hardware. 10
forms 3
flaws. 3
gaining 5
exist, 1
far, 13
far) 2
form, 6
faster 16
filled. 1
fork(), 9
first-out) 1
forth, 4
exit()) 1
hardware’s 1
equal 19
frankly 3
following 55
flexible 9
exit? 1
gcc 10
fetches 10
gettimeofday() 5
formally: 1
fault) 1
faulting”, 1
faulty 1
forward-growing 1
first. 10
expect; 1
era 7
free), 2
for: 1
flushed 1
exits, 2
gdb 5
giant 1
forthcoming 3
fine, 1
hundred 7
feedback 5
goal 19
fragmentation 13
fits 9
experiments 3
essential 3
freely 2
forget: 1
fly 1
expect 15
general? 1
free(10), 1
fit; 1
hypervisors, 1
few 102
fetch-ing 1
gray 3
free(), 2
expert, 1
flag, 14
exam- 1
friends, 2
forgot 2
eyes...) 1
following: 8
generated. 1
free. 13
focus. 1
has 348
iMac 4
field. 1
figures 4
free(16500) 1
explains 2
follows 6
friend” 1
fork(). 2
failures. 2
forcefully 2
generic 4
great 79
focusing 2
freeing 6
havoc’ 1
from, 3
file), 1
free(tmp); 3
figure 35
expose 1
for? 2
fully-operational 2
fork()ing 1
form). 1
fairness. 6
globallyshared 1
grossly 1
fork(); 4
idle, 1
head->next 1
fully-associative, 1
illegal 11
freed) 1
example, 262
file-system 1
exclusion. 6
functionality. 3
formal 2
future, 5
formed. 1
fantastic, 1
goal: 1
forth; 1
guard 14
header_t 1
fill. 1
funny 1
frequently 7
forget-ting 1
files” 1
executing, 2
extra 18
forms: 1
imagine 41
general) 1
former 5
far 21
forwarded 1
graduate 9
guess, 3
headers 2
filling 1
from; 1
formula 2
full, 6
fill; 2
execv(), 2
far; 1
forth. 10
imbalance. 1
generator 2
found? 1
fast; 1
fragmentation? 1
hack, 1
group 12
heap. 10
finishes, 1
further 31
forward! 1
functional, 1
findings 2
execvp(), 2
fashion, 1
four-level 1
impact, 3
good. 6
fragmentation, 6
feasible. 1
frames 5
hand-over-hand). 2
grow. 1
helgrind? 2
fitting 3
fusion, 1
fourteen. 1
functioned 1
fine 7
exercise 4
fastpath) 2
fprintf(stderr, 6
implications. 1
grammar 1
feature-filled 1
framework 3
handling. 1
helpful, 1
growing 5
frame 40
fix. 1
futex_wait 2
fraction 5
fit? 1
fundamental 18
exert 2
fragmentation2 1
field 15
free(). 6
important, 7
fellow 1
free, 5
hard-hitting 1
helps 5
guarantees. 2
free) 5
flag; 6
gains. 1
fragmented) 1
fits, 1
fundamentalist 1
exist; 2
gruesome 1
file.txt|wc 1
free? 4
inc 1
few). 1
full; 2
has). 2
hidden 4
free-list 1
flexibility 2
gates, 1
general 41
flag)? 1
gadgets 1
had 57
existence 3
guess 8
finally), 1
freed; 1
incorporated 4
fewer 13
have? 2
high, 4
free-space 4
focused, 1
free(50). 1
for. 3
flag[0] 2
generates 10
gain 16
handlers, 3
exit. 5
hand, 3
frustration 1
finds 10
fine). 1
header: 2
higher-level 1
increase 20
frequently, 3
generality, 1
free(rvals); 2
forefront 2
floor 1
forever, 6
gaming, 1
happens. 3
exiting 2
hand-coded 1
fully-developed 1
fine-grained 3
first, 20
headway 1
increased, 1
highest 20
friends 3
free(x); 1
getpid() 1
flush 5
fork.py, 1
generalizing 1
hard-andfast 1
exits; 2
handle; 1
fundamen-tally 1
fingertips. 1
first-fit, 1
heap), 1
incremented, 1
hinted 3
fringe 1
get 126
freed 3
gettimeofday(); 1
forces 2
forward 4
hard-to-find 1
generally, 7
experience 9
hardware) 3
gadget), 1
finishes 6
floating 1
heavilyused 1
follows. 4
history... 2
from). 2
graph. 1
gives 15
fork 7
function 41
free(ptr), 1
hard-working 1
expert 3
generated 12
hardwaremanaged, 1
get() 7
fires 1
indicating 8
help: 1
foo 4
hit). 1
func(). 1
greedy 3
form. 2
future; 1
goes 27
future 21
hard. 1
exploring 2
generations 1
head), 1
glibc 3
flag.s. 2
initial 5
forays 1
hence 20
homework 9
groups 3
formally, 1
game, 1
frees 6
goofs 1
gather 1
hardware? 1
exposed 1
get? 1
head->next; 1
flag? 3
initiates 4
foreground) 1
here? 3
hope 13
grows. 1
global 56
forms; 1
gcc) 1
frequencies; 2
frightening 1
harmful. 1
extend 2
gigabytes 1
header. 1
generate 28
flags, 1
input: 1
forever; 2
heuristics 1
guaranteed 1
grande 1
formula, 1
gdb) 1
granularity, 2
however, 49
functionality, 2
extent 1
goal, 1
having 29
header_t; 1
generated, 1
focused 3
ins 1
hierarchies, 1
guessed 1
hint 4
form 46
generalize 1
http://books.google.com/ngrams). 1
graph, 6
functions, 1
fact: 3
furthest 5
grabs 16
get(counter_t 6
forcefully. 1
inseparably 1
he 20
graphics 2
hacked 1
historically, 1
handled 4
generalized, 1
http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD329.PDF 1
grep 7
free 187
heap) 2
garbage-collected 2
grade, 1
failure 21
forever 6
installs 2
head; 2
great. 1
give 30
format; 2
historically-based 1
happened; 1
gettid()); 4
happy. 4
groups. 2
free()? 1
held: 2
getrandom(0, 1
great, 1
fashion 4
forewarned, 2
instructions), 1
heap? 3
integer, 4
glock; 2
fortuitous 1
hit. 5
http://www.multicians.org/history.html. 1
globally 4
have, 1
grows, 4
freedom 1
help. 1
goals? 2
greater), 1
fault, 7
forgetting 2
greater). 1
heavy 5
intensively 1
google’s 1
foundational 2
hold, 1
idiom: 1
header). 1
guard; 2
frequency 5
helping 2
good, 2
greatest 1
go 37
faulting. 1
formulae. 1
green 1
interact 15
held 25
grocery 2
freed. 3
hostility: 1
imbalance 3
hear 1
guide 1
friend: 1
herein, 1
government 3
ground 1
fetch. 2
fortunately, 2
goals 15
grew, 1
interactive, 1
helgrind 16
grouping 4
friend, 2
huh?? 1
important. 5
heavily-used 1
hacker 2
from. 5
hierarchies 2
graphs 1
fetching 4
fragmentation: 1
grow 18
goodness); 1
grows? 2
interesting. 2
here) 4
grow, 1
humorously, 1
in-between. 3
hello, 8
halted, 1
function, 3
growth: 1
finished. 2
higher 24
fragmented, 2
guarantees 6
good”. 1
hackers 1
intergalactic 2
hides 1
growth 1
hurt 3
incorrectly. 1
hand-controlled 1
here, 22
herein), 1
heuristic 2
historically 2
frames; 1
front 10
high 36
idea 92
hierarchy. 2
guesses, 1
increased. 5
gruesome. 1
handler 24
guesses 3
frustrating 1
habits; 1
hold 27
handlers 5
history. 3
identifier 3
history; 1
habits 1
from 443
indicated). 1
guy 3
hands 4
guts, 1
happen: 1
harder 4
fun 20
handling, 1
hit; 1
imagining 1
hogs, 1
first 278
fully-associative 1
into 339
info 1
hack. 1
hang 1
hackers. 1
horrible 1
harming 2
functionality 2
hardware-interpreted 2
functions 7
immensely 1
homeworks. 1
half 8
first-fit 3
getpid()); 9
function. 2
introduces: 1
inner 1
hacking 1
happens? 2
handles 14
http://ftp.gnu.org/gnu/glibc. 2
haul, 1
honor: 1
hardware-specific 1
future. 9
implemented? 1
http://stackoverflow.com/questions/2509679/ 1
hand 6
gettid() 2
happen? 8
flag. 13
invention 1
input, 1
handler). 1
happen?4 1
humorously 1
head_lock, 2
however 1
haven’t 4
garbage 2
implies 7
http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF. 1
functions; 1
happening! 1
flag’s 2
investigating. 2
getting 33
inserted. 1
imag-ine 1
handling 14
held) 1
http://ostep.org/Citations/inside-cfs.pdf. 1
havoc 2
gcc, 1
importantly 1
humble 2
fundamentally 3
happens, 4
happens 78
flavor. 1
hardware 263
invocation 1
go, 2
imperatives. 1
happened 5
inside 30
higher-priority 2
http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF. 5
highlighted 1
gdb, 2
in, 6
hundreds 5
gates 1
hardwaremanaged 1
have: 2
flow 14
is. 7
goals, 1
hard 51
impetus 1
hardware). 3
instruction: 1
hints 4
https://quoteinvestigator.com/2015/07/23/great-power. 1
general-purpose 8
inaccessible. 1
hit, 28
idea: 1
generating 2
harmful, 1
head, 1
focuses 3
isolating 1
going. 1
hardware/OS 2
implement, 1
hates 1
instructions). 1
hit! 1
hung. 2
generalizes 1
inactive 4
honest 1
identical 6
increasing 10
illusion. 2
footnote: 1
it.” 1
hence, 3
graph 11
implementations. 4
head->value; 1
hits. 1
heap 76
hybrid. 1
http://linux.die.net/man/3/pthread 1
interesting 46
harmless, 1
giving 15
incrementing 12
imbalances. 1
forcing 1
item; 1
here; 4
greater-than 1
given 80
important) 1
header, 4
hold? 2
hearing 3
immediately, 4
http://www.ostep.org/Citations/notes-solaris.pdf. 1
interrupts, 4
has? 2
goals. 2
independently 8
important? 1
foreman 1
job? 1
hierarchy 2
gods, 1
grows 16
impossible 1
heap). 1
holds, 2
here: 10
implicitly 2
hurting 2
intricacies. 2
headed 3
indicated. 1
in-memory 2
going 29
fork()/exec() 1
high-performance 1
jobs, 14
gone 5
happy 5
heavyweight 1
honor 1
high. 3
improve. 1
hurts; 2
intro 3
inefficient? 2
held. 16
forth), 1
hair 4
high-priority 2
jumping 2
including 51
harsh, 2
help, 1
http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 1
him 1
in) 2
ice 1
inverse 1
innocently 1
helgrind. 2
good 99
found, 2
handed 4
hits). 1
kernel) 2
increases 6
hash_t; 2
here! 1
history, 3
increment(counter_t 4
imaginary 1
involving 1
i.e., 29
inopportune 2
herein 3
gum 1
fourth 4
harder. 1
homeworks 5
kill. 1
indefinitely) 2
hate 1
hex 4
hogging; 1
indefinitely, 1
impacts 1
i=0 1
inputs 2
hierarchy, 1
halt 5
fragmented; 1
hardly 3
hopes 1
killing 2
influenced 2
have. 3
high-level 6
holder 2
indexes 1
in-use 1
insert. 2
holes 1
hand. 3
friend 3
hours. 1
laid 4
ideas 36
hash 17
inherent 5
highest-order 1
host 2
indicative 1
head 39
heap); 1
installations. 1
homeworks, 3
handed-out 1
gained 1
how-to-generate-a-random-number-from-within-a-range. 1
landmark 3
ignored. 1
inject 2
hour 1
highly 7
inefficient, 2
in: 1
heart. 1
heavily 2
held), 7
happening? 1
good? 1
happens: 5
hardware; 2
illegal, 1
inputs: 2
header 15
inflation, 1
inaccessible, 3
instructions. 5
intelligence 1
intensive. 1
https://lwn.net/Articles/170003. 2
interactions 4
lations 1
illegally). 1
imagine, 4
implementation 7
heap; 2
informed, 1
incur 1
hot 1
however; 2
hy-brid 1
greater. 1
idea, 7
learned? 1
inspires 2
instant, 1
improved 6
heavy, 2
init(); 2
incurring 1
help) 1
http://portal.acm.org/citation.cfm?id=540365. 2
greatly 4
interval. 1
ideal 4
least-recently-used 4
highly-networked 1
how 441
instead), 1
improvement 3
instruction; 3
in? 2
incl 1
indexed 3
helped 2
https://gruss.cc/files/kaiser.pdf 1
indicate 15
intervention. 1
identifier, 2
len:10 6
hptr 1
held, 6
hit 32
integers, 2
initiating 1
incorporate 7
if, 4
inducing 1
ineffec1 1
guest 1
intricate 3
idle! 1
intuition 3
lest2 1
http://www-formal.stanford.edu/jmc/ 1
https://birrell.org/andrew/papers/035-Threads.pdf 2
libc 2
interactivity. 2
holding 12
incrementalism; 1
in 2103
illusion, 2
includes 13
incorrect. 1
incurred; 1
implement 30
infinitum. 1
infrastructure 1
init(), 2
inputs. 1
inquiry 2
insparable 1
instant 3
instruction? 3
instructions, 10
integers 4
intelligence. 1
intensive, 1
interactions. 2
interface 16
interval, 1
intervals) 2
if 483
have 487
invalid, 8
helgrind, 2
hugely 3
innovator 1
lie 1
life: 1
input 20
help 38
index. 1
initiate 3
implicit 1
here. 11
guide: 1
here’s 1
headaches. 1
investigate 1
introduced 25
hybrid, 1
interludes. 1
hoping 6
input/output 3
here), 2
indexing 1
insidious 1
likely 73
imply 2
illegally 3
habit 2
hey, 1
heap-allocated 1
invited 1
invalidate 1
i5 2
http://en.wikipedia.org/wiki/You 1
insert; 2
internal 12
herein. 5
infinite 6
insights. 2
improving 4
list. 21
hand-assembled 1
illusion 20
highlyfragmented 1
heard 1
involved, 6
inversely 1
idea; 1
http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html. 1
inspiration 1
interposed 1
hog; 1
influential; 1
install 1
increases. 5
list_t; 2
handle, 1
imbalanced? 1
heart 2
historical 14
it!), 1
inverted 4
ideal? 1
itself, 8
installed 1
interpret 1
home 3
info: 1
integer) 2
influential 4
listing 4
hands-on 1
immediate 2
held). 2
history 16
is), 1
humans) 1
idle 5
junctures 1
instruction. 22
http://cag.csail.mit.edu/raw/ 1
inform 4
interested 11
list’s 1
happen, 2
immediately; 7
hello 5
honor, 1
isolate 1
hybrid 10
information 57
illusions, 1
keeping 14
instructions; 2
https://events.static.linuxfound.org/sites/events/files/slides/elc 1
initializing 1
interesting; 2
located. 2
interrupt 77
hardware-managed 9
importantly, 9
hybrids 1
introduce 12
idea? 2
infrequently 1
here 46
immense 1
killall. 1
int), 2
initially, 2
huge 20
interposition 2
locations. 1
hardware: 3
independently, 2
is 2736
iterations? 1
hypervisors). 1
invented 5
ideas, 3
inherits 1
heyday 1
impact 5
killer 1
initiated 1
interaction 13
human 4
interrupt: 4
harm 3
init(counter_t 6
lock() 38
issues 26
locks. 6
icon, 1
it? 11
identifiers, 1
initialization. 3
high-end 4
initialized 8
kinds: 1
insertion 2
interchangeably 1
has, 1
invalid 8
i 22
initially 3
join() 9
logic, 1
inversion 6
ideas? 1
is! 2
illusions 1
implementation)” 2
himself, 1
implements 6
l/stq 2
interfaces, 1
instruction) 9
head->size 1
involved 9
identical, 1
inode 3
k-stack(B) 2
itself), 3
idioms 1
lookup 12
isolation; 3
immediately. 2
injected 2
importance, 1
loop 41
loved 1
main-deadlock.c 2
make, 2
manifests 2
headers, 1
his 37
heap: 2
interrupts 33
illusion: 2
instantaneously. 1
it’d 1
implement!) 1
issued 7
implementation, 2
innovations. 1
kernel 123
manual, 2
involvement 1
hits, 2
held; 2
interval’ 1
important 63
languages, 2
illustrate 5
instructions: 2
it” 1
implementations, 1
importance 8
insight 1
keyboard 2
instead. 4
irstrun 1
int 260
honor. 1
highlight 3
intriguing 1
in-between 5
launches 2
implement. 5
integrity 1
jobs. 7
important). 1
masking 4
keystroke 1
improve 17
instruction(s) 2
is; 3
intellectually 1
hopefully, 3
hire 1
introduces 6
in-terface 1
implementations 4
intelligent 2
join, 2
impressive. 1
math 4
kmalloc. 1
in; 2
integers), 1
isn’t. 3
interface: 1
house 2
invoked 2
hits 13
in/out 1
implementing 8
interactivity 2
jokes 1
let’s 73
improves 4
mathematical 1
large-memory 1
inadvisable 1
intense 2
isses 1
interleavings 4
http://cag.csail.mit.edu/raw/documents/R4400 2
it3 1
hole 1
increased 3
implication 1
interface. 4
jump 22
in-kernel 5
maximum, 1
library. 10
laugh 1
inconclusive 1
interrupted 14
issue. 3
it!) 2
it... 1
intermediate 1
http://history-computer.com/Library/AltoUsersHandbook.pdf. 1
homework, 9
incremented 4
implying 1
interrupted) 1
kernel; 2
memory! 2
libtinfo, 1
in. 11
lazily, 1
incremental 1
intervals. 1
it: 4
interrupt. 4
http://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1303.PDF. 1
hopefully 6
independent 4
important; 4
interruption, 2
kill 10
mention 1
inability 1
like. 6
its 295
ldq 2
indefinitely. 2
into, 1
is? 2
http://www.ibm.com/developerworks/linux/library/l-solar/. 2
how: 1
itself 32
inexpensive 1
informs 1
investigator 1
job, 19
microcode), 1
inaccessible 2
list). 2
itself) 1
learn? 1
index: 1
intricacy 1
http://www.intel.com/products/processor/manuals. 3
http://en.wikipedia.org/wiki/ 1
improbable, 2
init: 2
iss 6
it. 68
jobs) 1
mid 1
killed). 1
incentive 1
lists[BUCKETS]; 2
it’ll 1
length? 1
indivisible 2
introducing 5
https://github.com/mit-pdos/xv6-public. 1
https://en.wikipedia.org/wiki/Buffer_overflow 1
in-depth 1
innocent 1
it1! 1
itself); 1
juggling 1
migration 5
knowledge, 3
incredibly 8
jars 1
lives 7
lengths, 1
industry 2
intuitively 1
hundreds). 1
humans, 1
incorporates 2
inodes, 1
it 1299
item 9
jump; 1
minicomputer. 1
larger? 1
it’s 33
increment 14
join 12
llock[NUMCPUS]; 2
library, 10
inefficiencies. 1
invocation, 1
i; 16
increase? 2
insert(queue, 1
i++) 18
item. 1
join(). 2
kids, 1
minimum. 2
later); 1
incrementally. 1
k-stack(A) 1
libtinfo.so.5.9 1
inefficient. 4
loads 19
is: 9
idea! 1
increases, 2
inserted 2
illegal. 2
iteration. 1
judicious 1
known: 1
miss. 9
latter 5
kernel” 1
indeed, 11
lifesaver 1
job 144
information, 6
locking, 2
it) 5
ideally 1
incremented; 2
inspired 1
imbalance, 1
jne 3
jumps 7
lags 2
missing 4
layout. 1
kicking 1
indeterminate, 2
like, 3
kernel-owned 1
inherently 2
logarithmic 3
it?!) 1
ignore 5
installation, 1
included 4
jobs? 3
indeed 26
kernel. 6
languages 4
mistakes) 1
ldl 2
killed; 1
indicated 4
likely). 1
kicked 2
long-term. 1
iterations/threads: 2
initialize 15
increasingly 6
indeterminate 2
instruction, 19
immediately 23
join(), 7
kernel?” 1
mmap(NULL, 1
large, 7
len:30 1
kind: 1
init() 6
links 3
kindly 1
longer, 1
itself? 1
installation 1
increments 7
individual 3
instructions) 2
intact; 1
implementation. 4
implemented 10
mocked). 1
laws 2
libc-2.23.so 1
know! 1
initializes 5
innovation 2
know, 5
looking 13
influence 1
just-finished 1
index 20
integer 17
improvement. 1
mode), 1
interactive 20
life, 3
knowledge 14
insert 12
knowing. 1
loop) 2
informally, 1
kernel, 7
indirection 3
key); 4
lawyers 1
more). 1
interest 3
lightweight, 1
laborious 1
installing 1
known. 1
instruction 130
informing 1
lottery 24
in- 1
inheritance. 2
keyboard, 1
init(lock_t 4
introduction, 1
moves 15
initialization 8
laptop 2
instance 3
lack 4
intend 2
instrument 1
list), 1
kernel’s 4
lying 2
kills 2
learned, 1
kill() 1
inventory 1
linking 3
multiprocessorbased 1
inkernel 1
large-scale 1
just 304
intent 5
interleavings. 2
literature 1
incarnation. 1
instructions 78
kind) 1
machine. 9
left, 6
know. 3
large 93
knowing 6
multiprocessors, 2
innovations 2
inode) 2
kernel), 1
interposing 1
internet 1
lives. 1
insufficient. 2
list 103
machines; 1
include 18
isolation, 2
larger. 1
mythread, 14
insisting 1
less 29
instances 2
interpose 1
know 71
last, 1
known 90
integer). 2
load, 3
made, 5
locality 18
inclusion 1
long-lived 3
it! 14
launch 2
naming 1
interrupt), 1
lessons 5
interrupt, 4
knowledge? 1
latency 9
la 3
interconnected 1
load/store 3
mail 1
kind 54
independently! 1
longrunning 1
iterations, 1
lazy; 2
nary 1
interrupted, 3
letting 6
interrupt-based 2
laptops, 1
intervening 3
interesting) 1
instead 95
larger 23
malloc; 2
located 13
late 4
indicates 3
loss 2
jacket, 1
leaking 3
need. 2
intervals: 4
lifeless 1
lazy 5
laughing 2
invented, 1
left-shifted 2
inversion, 4
later), 1
manipulates 2
isn’t 26
inefficiencies 1
later. 9
lottery. 1
needs; 1
learned 13
lines, 1
introduction 17
leaks 1
interval 8
interact. 1
lengths: 1
locations 11
latest 8
manually 1
jobs 102
inefficient 4
low-priority 1
negative). 1
issue 33
link) 1
intuition? 1
left 21
lead 50
lean 1
intervention 1
interacting 1
lifetime 1
lock_t 2
leak 2
many. 5
join. 2
infinite. 1
lower-half 1
network 2
isolation 3
length) 1
issuing 6
leaked 2
learning 2
intrinsically 1
interest: 2
like: 3
it, 68
mechanisms; 1
leave 13
knows, 1
inflation 2
m;) 1
network-connected 1
machine, 8
levels 9
it), 4
locks 79
least- 1
left), 1
invalid. 2
interested! 1
limit 6
job. 8
memory-management 2
libraries 3
l/stl 2
information. 9
linked 18
machines) 1
libcrypt-2.23.so 1
items 9
long, 5
least-frequentlyused 1
legal; 1
invisible 1
interesting, 4
list_t 2
interleaving 4
memory?”, 1
lies 4
mentioned 7
informative 3
list; 4
made: 3
libraries. 2
new 140
iterations 4
loops? 1
leaving 3
letter 3
involved. 2
job’s 2
interlude, 2
latency. 1
lists 13
limitations 1
message. 1
informed 3
loader 4
magic 7
life; 1
next; 4
itself; 3
lowers 1
level. 7
levels), 1
isn’t, 2
journaling 3
interpretation 1
layout 2
lives, 2
limiting 1
key 28
init 4
location. 3
main(); 1
lifetime, 1
non-ASLR 1
job). 1
lowest. 4
libc, 1
library; 1
isolated 2
interrupt; 1
learn, 1
load” 1
limits; 1
metal 1
kinds 5
initializer 2
mainstream 1
non-executable 1
jobs); 1
machinery, 1
libraries) 1
linear 34
lock. 64
issue, 3
intervals 6
leftmost 1
locality. 4
lists. 1
life 22
millisecond 1
know: 2
innovations, 1
maintain 4
noted 3
magic; 1
lifted. 1
key) 16
it?) 1
lines 14
lock_t; 8
length, 1
is, 22
lock()), 2
ll/sc 2
lightweight 1
miss). 1
knowing, 1
input); 1
noticeably 4
main-race.c. 2
line. 1
kick 8
list? 1
itself. 19
makes 57
lesson: 2
it; 14
loathe 1
locking 34
locality, 8
mlfq.py, 1
known, 2
lot 35
instead, 5
nuance 1
main-two-cvs-while.c 1
list: 3
kind, 1
join()); 1
lists, 7
malloc(10 2
library) 5
jobs: 2
like; 2
lock’s 2
lock(&m) 1
mocked 1
labeled 3
ls 1
instrumentation 1
nuclear 1
mainframe, 1
load/store: 1
joke, 1
load; 1
knows 18
malloc(strlen(src) 1
life. 2
judiciousness 1
limits. 1
longer 17
mode. 4
lock(lock_t 14
large. 3
luck 5
int) 2
nuts 1
majors 1
make. 1
jump) 1
language. 3
manner 7
like) 2
jumps) 1
local 56
live 12
low-level 16
lock->turn 8
larger, 2
macOS, 1
objects 5
locally-allocated 2
interfaces 17
maliciously! 2
jumped 1
larger), 1
manuals 2
limits, 1
keeps 13
locality: 2
lowering 1
locked; 2
laser-like 1
machinery? 1
observed 1
location.” 2
interfere 2
lock(), 8
malloc(3) 1
larger-scale 1
maps 7
link 6
known; 1
locates 2
keep 48
lowest-order 1
lookups 1
latency) 1
machines). 1
occasion; 1
load 35
occur. 3
locks: 3
malloc(strlen(s) 1
largest 2
matters! 1
list-like 1
large-file 1
key, 2
lowly 2
logical 15
laughably 1
magic. 1
interleaving, 2
loops 18
load-linked, 2
occurs; 3
lookup, 2
more 470
last. 1
mean 6
man 21
last); 1
manages 9
long; 1
lay-out. 1
made 23
main-one-cv-while.c. 1
interrupted. 2
lowest-priority 1
invent 3
odds 1
loop, 10
ld-2.23.so 1
little 103
measure? 2
kicks 2
last-in 1
manner; 1
lays 1
lookaside 4
main-signal.c. 2
locale 2
ls. 1
issue; 1
most 130
old; 4
lottery.py, 1
once), 3
leap 3
load. 2
mechanism, 2
kidding; 1
manual. 4
laziness 2
lookups. 1
later 36
main: 12
lock). 10
learn 65
it). 3
much?). 1
making 63
love 2
one-third 1
megabytes 3
loading 6
killed 2
mapping 13
leads 13
loop.s 6
latter, 2
maintaining 1
luck. 1
lock_init(lock_t 4
least) 1
job) 3
multilevel 2
malloc(). 4
lwarx/stwcx 2
onelevel 1
machines. 6
lock(&mutex); 2
knew 5
mask 1
leak, 1
master 4
lets 10
makes. 1
m 1
main.c). 2
manner. 7
logically 6
journalism 1
mappings 8
malloc’d 3
memories 4
open("./p4.output", 1
main() 11
operator. 3
languages. 2
loops. 1
matter? 3
maintain, 1
level 23
least 35
left). 2
munication, 1
judiciously 1
masks 2
malloc” 1
mental 2
lock), 2
main-deadlock-global.c. 2
opinions; 1
learns 1
long 68
lovely 1
matters, 2
makes, 2
lie. 1
legality. 1
legends 2
kept 12
mutex 17
manager, 3
material 8
mentor, 2
main-race) 2
lock->flag 6
opposed 3
least, 7
looping-race-nolock.s, 2
ls, 1
mem- 1
malloc()); 1
m->guard 10
length). 2
len:9 1
key; 6
myarg_t 8
manages; 1
meaning 3
message, 2
main.c 6
messy 2
optimizations 1
least-significant 1
looping-sequential 3
memory): 1
light 1
managed 6
magic: 7
liked 1
kind. 1
length 16
naive 3
meltdownattack.com 1
mapped 14
logic 7
metadata 1
malicious 14
optimizing 2
led 8
options. 3
memory-allocation 10
likes 1
malloc.py, 1
linear. 1
management. 3
management 29
limits 6
needed. 11
manner, 11
mem 10
mappings. 3
malloc. 1
method 8
lost. 2
legal 6
meta-level 1
ordering 9
limit) 1
known). 1
lmbench 4
manager 3
line: 2
marvel 1
needless 2
long-running 15
memories. 1
manifesto 1
millisecond. 1
match 12
lot! 1
legitimate 1
micro-instructions 1
originally 2
language 8
manner: 1
limited 17
loaded 17
lingo) 1
memory-add 2
looked 8
many! 1
negative 14
milliseconds; 1
material. 3
low. 1
lengths 5
mines 1
others), 3
large) 1
mark 6
local-to-global 2
listens 2
method. 3
line 14
lost, 3
may 123
low, 3
mem.pdf 1
miss), 3
luck! 1
matter 13
minicomputer 5
match. 1
otherwise 14
let 36
local[NUMCPUS]; 2
literally 1
middle 11
mapping: 1
new) 4
last 37
lowered, 1
memory-related 1
list, 26
mistakes 3
machine; 2
maximizing 1
minimally 1
machinery 10
outcome. 6
levels: 1
lock) 4
modified. 1
masses: 1
more, 6
later, 5
location 39
lowest 9
lives), 1
mem. 1
matching 1
mode, 13
minimum 2
main-two-cvs-if.c. 1
minus 5
mainframe 2
locked 7
no?). 2
memory. 103
max 1
most-significant 1
law 2
mother 2
locate 3
memcheck 1
matter. 2
over. 1
model 8
libcrypt, 1
malfeasance 1
looking? 1
miss 32
notes: 2
metrics 7
mmap() 7
machine) 2
ldrex/strex 2
multiples 1
locations, 1
memories, 1
measuring 5
memory); 2
malloc(sizeof(double)); 1
lost 4
modified 15
now? 7
millions 3
mode). 1
library 47
machinery. 3
meaningful 5
leading 9
multiprocessing). 2
lock->ticket 2
overhead, 1
meet 5
memory-mapped 3
malloc(sizeof(int)); 2
lots 12
numbers). 1
more. 14
mind-blowing 1
monopolize 6
madvise), 1
meanwhile, 1
left) 1
lock 370
mutex, 4
lock-free 3
overload. 1
memory-intensive 1
mesh 1
manipulate 2
obscure 1
most. 1
low 10
minimal 7
more) 1
magnitude 1
measured 2
level, 3
logical. 1
mutual-exclusion 2
overwrites 1
lock? 10
memory-like 1
microkernel-like 1
manner? 1
obvious, 2
music 2
like 215
lower-case 3
misbehaves 1
ms, 5
measurement 3
library” 1
long-list 1
myret_t; 2
p3). 1
mid-execution 1
milliseconds). 1
locks, 22
manufacturers 1
mutex. 1
occurred, 4
linker 1
lowered 1
looks 39
memorymanagement 1
likes, 1
lookup? 1
mythread() 2
middle, 1
minicomputers. 1
p: 18
page-replacement 6
materials. 1
multiple 95
myret 4
odd, 1
miss; 1
list) 5
mitigates 1
lookup. 3
messages. 2
loop? 1
met 1
myturn 2
minds 1
misbehaved), 1
make 214
misbehaving 2
mem.c 2
multiprocessors. 4
odd-sized 1
m->flag 6
name 22
listed 1
mmap(); 1
line, 7
loop. 8
loops, 4
mild 1
minimizing 1
milliseconds 6
pages: 2
malloc(sizeof(node_t)); 8
moglie 1
memory). 6
multiprogramming. 1
of. 1
macro 1
nearby 2
lively 1
modifications. 2
linear) 1
looping 1
lower 13
name. 4
miss? 1
mind. 1
painful; 2
mandated 1
mother. 2
memory-constrained 1
myargs[1] 2
offerings 2
main(), 1
nearly-complete 1
parent 44
lived 1
lowlevellock.h 2
loops; 13
nasty 1
misses). 1
minute?), 1
move 31
manual 13
memory-failing 2
mythread. 2
offset, 2
maintains. 1
location, 6
necessitating 1
park(); 4
machinery) 1
load-linked 14
low-cost 1
mjtsai.com/blog/2015/12/16/osspinlock 2
miss: 1
nature 8
ms). 3
map 7
men-tioned 1
name; 1
malicious, 1
once. 5
much 135
needed, 7
park, 2
main); 1
location; 2
lower-priority 2
monitors 5
mistakes), 1
much... 1
market... 1
merest 1
marks 4
needs 32
managed), 1
lock, 61
one! 1
managing 9
negatively) 3
participated 1
lucky 3
moreover, 1
major 28
modes. 2
lock; 24
modification 2
natively 1
merge 2
marvelous 1
negative, 3
locking. 3
multi-queue 4
locks) 3
me 6
newer 2
partition 1
m; 1
moved 6
much: 1
logically-different 1
modified), 1
malloc() 32
modifying 2
message; 1
matters. 3
newly 3
one-quarter 1
multitude 1
ones. 3
non-blocking 2
measure 21
parts 19
multiprocessor, 2
machines 21
much. 6
longlived 1
naturally 4
malloc(100e6)); 1
modularity, 1
meters 1
mature 1
newly-fetched 1
logs 1
myargs[2] 2
open() 6
memory) 5
pause, 1
pay 12
peep 1
percentage, 1
perfectly, 1
perform? 1
multipro-gramming 1
necessarily!) 2
looping-race-nolock.s 8
main(int 23
module 1
methods, 1
manage 19
maximum 8
managed, 2
mystery 1
operate): 1
memory-mapping 1
next 101
myargs); 2
perl). 1
lucky, 2
main-deadlock.c. 2
monitoring 3
multiprocessor 19
metric, 2
longer-running 1
maybe 4
mem-access 1
nice 34
operates 4
mentioning: 1
nanoseconds, 2
permanent 1
machine? 2
monolithic 1
malloc 8
mutex_lock 2
miss); 1
name, 4
mem? 1
misses, 8
opposite 5
need 152
methods. 3
natural 9
persons 1
machines, 5
most-recently 1
perspective 8
myargs[0] 2
napping 1
non-scalable 2
neatly 4
memory), 5
opt 1
needed). 2
metric. 4
not 449
newly-opened 1
main(). 1
mapping, 1
mutex_t 5
pessimal, 1
mythread(), 2
mode; 2
nor 1
necessary 9
memoryintensive 1
look 121
not. 14
optimization, 3
neighboring 1
mighty 4
nothing”; 2
news: 2
main-signal-cv. 2
massive 4
my 6
phone 1
nanoseconds 1
modifies 1
news 2
merely 1
management, 1
loop; 2
o 2
organization. 1
no? 8
migrating 2
notice? 1
notes. 1
main-two-cvs-while-extra-unlock.c. 1
nothing 5
namely 5
physics). 1
nature, 2
modulo 1
metric: 1
next. 10
manager. 4
obey 1
ours: 1
nondeterminism 1
milliseconds, 2
machine 34
objdump 8
master, 1
maintains 1
notion 12
near 13
near-term 1
picks 5
moment 5
microkernels 3
marking 2
observing 1
out; 1
none, 1
minimize 11
macros 1
objectoriented 1
math. 1
maliciously) 1
number. 2
nearly-endless 1
nearly 9
pipe, 2
monopolized 1
mirrors 1
matter, 3
outdated) 1
measurements 4
occurs 19
no 140
of... 3
made. 2
obvious: 2
matter; 1
malloc(20);. 1
numbering 1
neat. 1
necessary. 1
please 3
movie 1
miss-handling 2
not; 1
outlines 6
meeting 1
misses. 7
none.” 2
magnificently; 2
occasionally 3
measurements? 1
manipulations 2
networking. 2
necessitates 1
object 10
pmap, 1
mechanisms 32
megabytes). 1
moving 13
mistake 3
notion), 1
overall. 1
modification, 2
overhead), 2
not, 14
many” 2
notes); 1
needs, 2
nuances 3
old 60
main 66
memory-access 1
ms 14
mix 1
null.c 1
offset: 1
point 39
more? 1
numbers 12
new, 1
marked 11
obvious 12
next, 1
obey. 1
online: 1
main-signal-cv.c. 2
memory? 9
much-improved 1
mode) 9
pool 1
once, 9
own? 1
motivating 1
object), 1
new_head; 2
marriage, 1
occurred 3
nice, 3
onnv/onnv-gate/usr/src/lib/libc/port/threads/synch.c. 2
obtain 10
malloc(), 3
memoryreference 1
muck 1
moment. 1
populated, 1
one-to-one 1
p2.c 1
oblivious 1
newfile.txt. 1
maximize 2
mov 33
occurrence. 1
non-concurrent 1
open(), 1
obviates 1
malloc(strlen(src)); 1
memory” 1
multi-CPU 3
mouse), 1
power.” 1
one? 1
p3 5
observation 5
movement). 1
node 12
memory 568
odd 6
non-practical 1
occurs. 3
means 31
operation. 5
mesmerizing. 1
move). 1
pre-configured 1
ones, 2
p4.output 1
multi-level 30
obviously 5
multi.py 2
nonetheless. 1
mess! 1
oddity: 2
none-too-subtle 1
occurs?” 1
not: 3
opinions 2
mess 1
pre-initialized 1
one” 1
page-number 1
multiply 2
movl 28
multiplexing 2
not), 3
occur 9
microseconds 2
off, 3
offender. 1
noticing 1
opposing 2
messages 1
precious 2
ongoing 1
paging-multilevel-translate.py; 1
myarg 2
ms. 5
must-read 3
occurring 3
measurement. 1
note 27
null 2
opposite, 1
microcosm, 1
predictable; 1
offset 42
online, 2
paradigm. 1
many 252
nanoseconds), 1
multiple-queue 1
nanoseconds). 1
oddly 1
multiprocessors 5
noticeable 2
numer-ous 1
optimal) 1
microprocessor. 1
preferred; 2
oh 2
oops 2
parent) 1
marking, 1
needed; 1
nearest 1
memory-bug 1
offset), 1
might 218
noticed 5
multiprogramming 8
obtaining 4
orders 2
occur? 2
presented 8
oops.x 2
part, 2
operation 20
matches 1
necessarily 8
mathematician 2
offset=04); 1
migrate 1
obliged 1
migration? 1
miniscule 1
misses), 1
organize 1
prevention 2
optimization 6
occurs, 14
often 69
memory-user.c. 1
negatives, 2
particular, 28
meant 1
never 38
mutex; 6
observe 6
migration. 1
mobility 1
out). 1
primitive! 2
order; 1
opposite. 1
once). 1
newly-freed 1
password 1
measurements, 1
off 30
newlyrunning 1
memory; 19
mutex_unlock 2
observed, 1
million); 1
models), 2
outcomes 1
ority 1
primitives. 8
optimal; 2
one: 3
nicely. 2
peeking 1
measures 2
offered 1
next-to-last 1
methods 4
myarg_t; 4
metric 5
obtained 1
mind 5
molecules 1
output. 2
out? 1
printf("%p\n", 1
optimize 4
oops; 2
nightmares 1
penalties. 1
often? 1
noble 1
on 719
none 3
n 4
microsecond. 1
ocean 1
monster! 1
miss, 10
overcome? 1
overflows 4
priorities 5
operator 3
nitty-gritty: 1
people. 1
old, 1
mechanism 18
ones!). 1
not? 2
nearly-infinite 1
off; 2
million 17
motivate 1
older 13
overheads. 4
overview 12
opinion 1
process; 13
node, 1
people.cs.clemson.edu/ 1
oldest 1
oops, 1
note: 4
new->key 4
min 3
mobile 1
moustache 1
modes 2
much, 1
overwrite 4
optimality 1
nodes) 2
programmer. 5
per-process 12
operation, 9
on. 9
nothing) 4
one) 4
mind, 4
on) 1
overzealous 1
modified). 1
owns 2
p1.c), 1
nonsolution: 1
memory, 124
progressed, 2
perfect... 2
opportunity 1
new_head->value; 2
notice. 1
one-word 2
noticed: 2
operation), 2
multi-threaded 44
own; 3
modify 3
options 3
page: 1
note, 5
memory-reference 1
prohibitively 2
opposite: 1
nonconcurrent 1
or, 5
order! 1
opened 1
opposites 1
perhaps 39
multiplied 3
ownership 1
multiprogrammed 3
money 1
or 469
pages). 3
memory-user 4
projects 3
notice 34
normally 2
mini-computer; 1
orderings 2
operating-system 3
now, 18
order 80
period 8
page-directory 5
optimal 20
painful 7
mostly 4
papers, 6
message 10
promoted 1
now-standard 1
notice, 3
now. 7
origins 1
misses 21
now-extinct 1
others). 1
persistence. 2
must 152
order), 1
optimizations, 3
park() 4
much; 1
parallelization, 1
microseconds, 2
protected 4
otool 2
now: 1
occasions 1
other) 1
models 2
num 1
outcome 4
phrase 2
n; 1
orderly 1
optional 2
passes 5
multi-processor 4
parcel 1
mid-instruction, 2
protections 4
out-of-bounds; 1
nptl 4
ocean, 1
outcome? 5
mode” 1
obvious) 2
output; 1
physics 1
nanoseconds. 3
organization, 1
place. 16
patterns. 2
multiprocessing 1
minimal. 2
mutex->flag 6
output, 2
number), 1
olden 1
output: 4
part 52
modification. 2
mutual 29
nears 2
ordering, 2
original, 1
ploticus 1
pthread_join(pthread_t 2
particular 60
minimizes 2
outside 4
omitted, 1
numerous 12
outs 1
over 90
off), 2
month. 1
myturn) 2
offending 10
orphaned 1
peach. 6
pointed 15
pthread_mutex_lock(&q->head_lock); 2
minutes 1
pthread_mutex_timedlock(pthread_mutex_t 2
pass 54
pthread_mutex_unlock(&c->llock[cpu]); 2
over-designed 1
pthread_mutex_unlock(pthread_mutex_t 2
more! 1
networks, 1
name). 1
offset=000000, 1
other? 1
next: 9
pointers? 2
overstate 1
miss) 1
of) 3
pause) 1
owner 4
overhead. 1
purpose, 1
multicore 6
naturally, 1
once; 4
our 230
percentages. 1
others, 4
no, 1
policies; 1
oversubscribed; 1
poorly. 2
on! 2
pausing 2
ownership, 1
overheads; 1
put() 4
multiplex 1
once”, 1
neat 8
perfection 1
otherwise). 1
out. 11
missed 2
p1, 5
one. 24
on-chip 4
peaches. 1
popular 7
p1.c) 1
p3) 1
puzzle 2
myret_t 6
necessary; 1
perhaps, 1
over-written 1
misses! 1
node_t 24
p2; 5
on-going 4
onto 17
output 36
porting 2
p; 7
package 4
queue), 1
names 1
per 57
necessity! 2
periodic 1
overheads), 1
non-computer-types 1
packing 2
one 500
open-source 2
mode 23
overall, 1
one, 26
packages, 1
positive 4
page? 1
queue_add(m->q, 4
page. 21
pages; 9
pains 1
pages, 26
paging-linear-translate.py, 1
pair 21
periodically. 1
overseas. 1
non-cooperative 2
open. 2
open, 1
operations, 3
operational 1
races, 4
needed? 6
pairs, 1
modern 90
need, 1
parameter; 2
philosophy 1
non-preemptive 2
pipe() 2
overheads 14
practical 8
original; 2
only 202
networking, 1
other. 8
papers 8
ms), 4
needlessly 3
paranoid. 1
p6 5
non-stop; 1
played 1
overlays, 1
preemption 2
other, 5
oops! 1
randomness 6
open 7
new->next 4
parameters). 1
must, 1
network. 2
park. 2
networking 3
normal 11
pointer. 3
overly 3
prepared 1
others) 2
rare 2
others; 1
open()? 1
newly-created 3
park(), 2
n). 1
page) 4
new. 3
pop 1
notably 5
particularly 27
prior). 1
p1 8
out"); 1
rate. 3
outcomes? 4
operations. 8
nice), 1
passive 2
named 8
page-fault 3
newfile.txt 2
popular, 1
partner 1
notes 5
pro2 1
p4.output. 1
other’s 1
re3 1
paging 28
page 635
perceived 3
optimal, 5
nicely 1
path. 3
naturally-occurring 1
non-contiguous 2
popular-sized 1
passed, 1
now), 1
proceed! 1
page(s) 1
out-of-memory 1
overcome. 2
needed 44
paging-policy.py, 1
pagereplacement 1
perfect. 2
node. 1
pdflush), 1
non-synchronized 2
patent 1
null-pointer 2
process); 1
possible. 14
pageable 1
overcome 3
read. 6
overhead 12
new; 8
pain. 1
paging). 1
perform, 1
node_t; 5
non-zero 3
pattern. 2
null. 2
pouvoir”, 1
paged 1
perform 70
overheads? 1
readability 1
processes, 31
oversubscribed, 1
newly-allocated 2
paper. 1
painful. 1
performance), 1
node’s 4
nondeterminism, 1
per-CPU 5
norm, 2
parameter 6
noticeably. 2
overwriting 2
readied, 1
p. 1
newlyfreed 1
processors 16
par-allel, 1
pairs. 1
performant) 2
person 3
pragmatists 1
performance: 4
philosophical, 1
other 303
part: 4
now-sleeping 2
own, 3
readily 5
notes, 3
producers, 1
paragraph 1
parallel 6
non-performant. 1
phenomenon 1
precisely? 1
performs. 2
pages. 28
physical. 1
out-of-bounds 1
patterns 4
objects. 1
p 1
number 198
nothing. 2
production, 1
parallel) 2
reading 21
parameter, 4
non-zero, 1
predictors 1
pick 15
permanently-valid 1
paid 1
pioneered 4
outputs. 2
pauses 1
obviously, 1
p1.c. 1
objectives; 1
notices 2
productive. 1
partition, 1
ready), 2
park(). 2
preemption, 2
pieces. 1
permissions 1
parameters: 1
pleasure: 1
overflow. 1
peach 4
occur, 2
p1–p3). 1
observes 2
now! 1
professor 2
patient! 1
reality 7
passion 1
preferred 2
placed. 1
pesky 1
park 6
point1 1
own. 2
people, 1
p3.c, 1
often, 7
occurs)! 2
number, 4
program; 3
patterns), 1
reasonable. 3
periods 4
prefetching 2
pleases: 1
picture 5
paths. 2
now 184
points. 1
p2 7
packaged 2
percent 6
oh! 1
occurs: 1
numbers) 1
programming 7
path 8
recall). 1
persistently 1
prepare 1
policies? 1
plenty 3
pattern 5
occurs), 1
popl 1
page), 2
performance? 3
on; 1
off. 1
object. 1
progress. 3
pays 1
prohibitive. 3
perspective, 1
presenting 1
practice, 1
preserves 1
pause 2
odds: 1
performance” 1
oops.y 2
omit 2
page-table 31
obvious. 2
portion 20
recognized 1
peach, 3
project, 2
phone, 1
pmap. 1
pressure. 2
primer 1
percentage 5
old_ptr 4
operator, 2
periodically 9
pagedirectory 1
on, 11
paging, 4
posed 5
recommend 2
peanut 1
protection, 2
prevents 3
printf("%s: 4
primitive. 6
policy, 12
on). 1
optimizations. 1
permit 1
piece 36
pages 195
once); 1
paper: 1
possibility 5
recursion 1
penalty 2
ps 2
perfectly 2
prio_to_weight[40] 1
primitives; 2
possible; 2
once? 2
order, 5
persistence, 1
pipeline 1
pals 1
one). 1
parameters. 2
possible: 1
recycles 1
performance; 5
question; 1
printf("(%d) 2
performance, 14
possibly-failing 2
ordering. 2
problem. 26
persistent 4
place! 2
open("/tmp/file", 1
parameters, 5
operations 26
parentheses 2
performance 91
perror("malloc"); 4
persistently, 1
person; 1
physically 2
piece, 1
pioneer 2
operating 151
reduced. 2
performance”, 1
register), 1
queue. 12
posterity) 2
origin 2
performs 21
persistently; 1
platforms. 1
part) 1
play 4
power. 1
pipeline, 2
practice 4
plots 3
permissible. 1
register-level 1
queue_t; 2
practice! 1
ory. 1
period; 1
phase 3
optimal. 1
pleasant. 1
option 1
passed 18
printf("Final 1
precise 4
patch 5
perspectives 1
relaxing 1
queues; 1
precisely, 1
precision 2
physics. 1
pipe 8
optimizes 4
out! 1
printf("Initial 1
policies: 2
predict 16
paths 4
point, 30
peterson.s, 2
process 403
re-reads 1
ourselves 3
releasing 16
preferably 2
pigs. 1
placing 7
otherwise: 2
overcoming 2
private, 3
politely 1
predictors, 2
peach? 1
pointier, 1
phase, 4
re-referenced, 1
processors, 9
reliability 2
prematurely-optimized 1
producer/consumer 9
pipes 4
overlap 6
ponder: 1
pressing 1
privilege 8
out, 27
overflow 3
policies. 7
phones 3
reach 2
preserve 1
plans 1
producer; 1
remaining 13
overly-large 1
power-of-two-sized 1
place, 9
previously) 1
probabilistic 1
per-futex 2
possession 2
photos 1
reader 7
out 181
own 72
primitives 15
pmap 5
product. 1
remarkably 1
overwhelm 1
powerful. 3
platform, 1
primitives? 2
procedure. 1
printing 3
preempted 4
phrase... 1
ready. 1
outrage! 1
p); 1
printf("main: 8
professor, 1
policy. 4
renewed 1
p3.c), 1
prerequisite 1
ple 1
performance-minded 2
priority) 1
private 18
performance. 35
realloc() 4
over, 1
p3.c 3
processes 107
problem; 2
program). 2
reporting 2
portions 7
requests. 6
pleasure 1
page, 28
pressed 2
performed, 2
packed 4
privileged 24
receive 11
p4 7
recommended 1
problematic: 1
programmers 13
referenced 6
preserved. 2
reside. 1
page-not-present 1
principle 6
physically-indexed 1
packet 3
producers 3
page). 1
problem”, 1
programming, 2
regions, 2
probably 32
pretend 5
previously, 1
resources? 1
page-sized 4
printed 6
pioneering 6
pointer 55
page; 5
program? 6
pages); 1
promise 1
processor, 13
physical 236
register. 4
probes 1
preventing 3
printf("%d\n", 7
rest, 1
pages) 3
printf("%d 4
place; 1
poorly, 1
pain 1
programmer; 4
paging. 4
prone; 2
program-debug 1
piena 1
registers; 4
previously 3
resuming 1
priority, 7
problem: 25
pal, 2
printf("%lld\n", 2
players 1
popular. 1
paper, 3
proportionality 1
parallelism. 2
program4 1
paralleliza-tion, 1
regs(A) 3
paper 85
return-tolibc 1
priority-based 1
papers. 4
printf("location 3
pointer? 1
printf("returned 4
programs, 16
proportions 1
pipes, 2
process, 51
parameters 9
relatively-slow 1
programmer 12
parent. 4
returning, 2
privacy 1
parallel, 2
positively) 3
priority 61
privileged; 2
project 4
provably 1
player 1
processing. 1
parent: 2
released. 6
proportion 5
past 6
right, 3
policy 50
problematic, 1
parameterize 1
possibilities. 1
problematic 2
pro-cessor) 1
properties: 1
proves 1
pointer, 10
processor; 5
partially-ordered 1
relocated 6
prove 5
patches 2
rolls. 1
problems: 2
parent? 1
poor 10
process). 2
purify 1
problems. 11
producing 1
possible 31
points 15
protection 22
pthread_mutex_init(&L->lock, 4
renders 1
paying 3
proceeding. 1
path, 2
provides 30
possess 1
processes? 3
question). 1
roughly 24
proceed 6
powerhouse 1
possible, 14
past, 4
pthread_mutex_lock(&c->llock[cpu]); 2
repair 3
penalize 1
process? 4
programs 85
patience 2
provisions 1
processes” 5
rage 3
run), 2
potential 12
preemptive 2
processes; 7
peaches; 1
pthread_mutex_lock(pthread_mutex_t 2
power 8
present 36
precautions 2
properly. 1
processor. 9
peaches 2
pseudo-random. 1
perfect 7
ran. 1
rvalue; 2
powerful, 2
processes’ 1
performance2 1
replacements 2
person! 1
printf("child\n"); 3
pthread_mutex_unlock(&L->lock); 12
preempt 2
properties. 1
programmed 1
produced 2
pure 2
professors 3
rx 4
performing 14
powers 1
processes”, 2
pre-specified 2
precisely 2
produce 9
performed 11
produced, 1
questions, 3
preemptive, 1
proportions, 1
proportionally 1
random. 1
purpose. 2
randomization 3
says: 1
permission 1
representation 1
preempts 1
perspective. 2
printf("hello 3
personal 1
producer. 2
quoting 1
present, 2
provided. 2
protocol, 1
profilers 2
pushl 1
rarely 1
persists, 1
scales? 2
reset 3
previously. 2
picture, 5
phases 2
printf("parent: 6
professor? 1
r-x 5
prevented 5
pseudocode 7
pthread.h 2
pthread_mutex_init(&c->llock[i], 2
rarely-taken 2
personally 2
scheduler; 2
reside). 1
printf(), 1
program. 46
pid; 1
programs; 3
priorityadjustment 1
professors, 1
r-x-rw--r-x-r-x-r-x-r-x-rw--- 1
put(int 2
previous 19
pthread_cond_signal(pthread_cond_t 3
rates 1
physical, 1
scope 2
pthread_t 14
resource; 1
piece. 3
places 6
pieces 19
program’s 9
pipe; 1
program: 6
raises 8
previously; 2
re-referenced 2
pthread_cond_t 3
puts 19
scorned, 1
restricts 1
place? 1
probability 2
plain 2
platforms 2
prints 41
projects, 1
prompt 4
re-accessed 1
reac-quiring 1
pthread_create(pthread_t 2
placed 24
print 25
queue). 5
second. 5
retain 1
pthreads 8
planet 1
point. 7
priority. 8
promote 1
prone. 2
react 1
read-only, 2
purpose 9
placement 1
printf("%s\n", 3
quote. 4
section), 2
problem 121
purchase 1
pointer). 2
plus 11
proactively. 1
proverbial 1
protection; 2
returns 61
reader, 1
really. 1
pushing 2
player, 1
printf("hello, 6
ran; 1
seem 7
processes: 4
purify, 2
processors. 3
problem? 2
pointers 5
pthread_mutex_trylock(pthread_mutex_t 2
protocol 3
revolutionized 1
rightly 2
rise 2
reads 10
put(i); 5
plays 2
priority; 1
random; 1
segmentation, 4
pointing 2
product 1
putting 17
problems, 12
policies, 7
ptr 16
rearrange 2
providing 16
reasons, 6
realizes 3
q->head 4
plural) 2
randomizes 1
problem, 24
points; 1
send 13
professor. 2
quantum 5
problem” 1
poorly? 1
positivity 1
routed 3
pthread_mutex_lock(&c->glock); 4
reassurance; 1
recall, 1
queue) 1
rechecking, 2
randomly-accessed. 1
program) 1
sense, 6
proceeding 1
questions 13
policies 35
process. 69
pulled 1
postulates 1
q->tail 4
pthread_mutex_lock(&q->tail_lock); 2
reboot, 1
policy) 1
quote 7
record 6
programmer), 1
rate 27
sensitive 1
processes) 1
pollutes 1
processing 4
routine1, 1
query 1
race 28
powerful 21
ptr, 3
prac-tice, 1
pool? 1
pre-WWII 1
programming. 5
re-referencing 1
sent 3
pragmatic 1
process’s 18
question. 7
processor 28
randomization, 1
run. 22
received 3
python 1
reference 57
race): 2
poorly-programmed) 1
progress, 1
prefer 2
reached 1
sequential” 1
predates 1
programmers. 2
questioning 1
producer, 2
range. 1
runs; 3
quest 3
refers 9
referenced, 1
question: 7
queues: 1
property, 2
quickly 21
randomly-generated 3
read 91
serious 10
preparing 1
programming: 2
queues. 2
programs5 1
re-awaken 1
rv; 2
races 4
regions 11
popularity 1
protect 11
preferring 1
rather, 11
referred 27
realize 5
servers 1
pronounced 1
raised. 1
reasonable 9
re-enable 2
of 3668
rvals; 2
re-acquire 1
relaxation 1
prompt> 37
potentially-starving) 1
ps. 1
ratios 1
presents 7
regained 2
servicing 5
pretty 26
set. 2
properly 15
reduced 5
reaches 2
offers 1
rvalue); 2
readable. 1
reload 1
protocol. 4
pressure 5
pthread_mutex_lock(mutex); 2
re-check 3
ptr; 2
region; 1
randomly 4
pri- 1
setting, 1
properties 8
references: 1
react, 1
offset. 6
readonly 1
relocation.py 1
satisfy 9
protocols; 1
primarily 3
presumably 4
reacts 1
purely 1
relaxed: 1
ranging 1
primitives, 3
severe 3
regardless 2
read-only 1
provided 20
omniscient, 1
reads” 1
remainder 1
pthread_mutex_init(&lock, 2
saved 11
presumes 1
primitive 9
readers, 1
purposes 2
relevant. 2
priorities. 1
relocate 5
register). 1
rather 29
read-write). 1
pthread_mutex_init(&q->head_lock, 2
on-disk 5
reasonably. 1
removing 8
pthread_mutex_unlock(&lock); 2
sbrk() 1
prevent 8
principles 5
realization 1
quantify 3
really) 2
proc-struct(A) 1
relative 3
queue, 17
remains 11
relax 10
ran 15
reboots 1
request. 7
published 4
scenarios, 2
priority). 1
primary 9
sharing. 3
once 60
reason: 3
read/write 1
process) 6
read? 2
remedied 2
pthread_mutex_lock(&lock); 2
relinquishes 1
referenced; 1
requesting 1
push 2
scheduler); 2
probabilistically 2
principle. 1
random 37
shouldn’t. 2
ones 8
recently, 1
readers 1
reclaimed, 1
rearrangement 1
relocation, 5
remember 20
references, 1
requests; 1
pthread_mutex_t 22
q->tail->next 2
school; 1
researchers 8
printf() 1
rc, 3
showed 4
online 6
process-run.py 1
reading, 1
records 1
reasons 6
remind 1
rely 5
register) 2
proc-struct(B) 1
relatively-short 1
queue; 5
scripting 1
resizing, 2
prioritizes 1
re-acquires 4
sidebar 2
opens 4
processed 2
section. 34
recourse: 2
reboot 6
remain 8
pthread_mutex_unlock(&q->head_lock); 4
repeatedly 15
rele-vant 1
procedure 12
quickly. 5
resources, 4
privileged) 2
re-energized 1
signal, 1
opportunities 1
reality, 1
optimization. 1
sections; 4
redirect 2
reclaiming 1
remote 1
pull 2
repeating 1
relocated; 1
process: 2
radical 2
processing, 3
re-use 1
signal/wakeup 1
processing; 1
reason. 3
option, 2
security; 2
redirected 2
problems 55
references 28
proc 5
queue_init(m->q); 2
relocation. 2
replaces 7
restores 4
random-access 1
reaching 1
signaling. 1
professionals 3
programs. 25
reasoning 1
ordered 4
seemed 1
reduced-instruction 1
replace 9
region. 1
proc_state 2
queuingbased 1
process), 3
quick 4
reports 2
restricted. 1
ranges 1
read), 1
proliferation; 1
ordering; 1
receives 4
organization 2
replacement, 3
recently 6
process-run.py, 1
segment 56
quickly; 3
required. 5
return-oriented 1
remove 10
rc; 4
ready, 3
promotes 2
reduces 9
regular 2
reference, 2
recollections 1
produced. 1
original 19
semantics, 5
rage. 1
return-to-libc 1
resides 9
rdtsc 3
producer 26
receive. 1
proofs 1
simple 196
report 9
relinquishing 2
region). 1
recover 1
others 14
sentence. 2
returned. 2
separa-tion 1
resort 1
replacement. 4
readable 1
professor! 2
properly, 1
recent 16
simpler. 1
program 321
remembers 2
requests 28
relocation; 1
refers? 1
our-selves 1
raising 3
returning) 2
sequence: 1
responsabilit 1
server, 1
real, 2
profit 1
proportional 3
recommended. 1
programmer, 1
simply, 4
remove_min(queue); 1
require? 1
removed 6
regain 1
out.” 1
ran, 1
returnsfrom-trap, 1
replies: 1
server-based 2
realistic 3
response 31
recursion). 2
realized 8
projects. 1
simultaneously, 1
remain? 1
reserve 4
requested 8
registers. 3
reside 11
right) 1
requested, 2
overall 9
serviced. 2
program, 58
proportional-share 6
rearranging 1
reducing 6
proofs” 1
result 30
sizes, 2
remains, 1
researchers/engineers, 1
random, 1
remaining, 1
responsibility, 1
room: 1
resident 2
overlap, 1
setassociativity; 1
proofing 1
reasonably 3
refer- 1
skimmed 1
retrospective 3
remembering. 2
proper 14
responsiveness; 1
randomized 2
remedy 2
responsive. 1
routine1 1
responds 2
overlays 1
pros 1
rebooted, 1
regard, 2
skips 1
share 36
return? 2
provide 65
repeatedly, 3
returns, 7
range 7
reply: 1
results 17
rest. 2
routines. 1
responsive 1
owns. 1
reclaims 1
p4.c 2
she’ll 2
register, 6
slower. 3
provided, 2
properties; 1
replace? 3
reveal 1
rarely-used 1
representing 2
retry, 1
returning. 1
rules, 1
pthread_mutex_lock(&L->lock); 8
references. 2
rest 18
simple) 1
p5 5
registers) 2
proponents 1
slowly 12
pthread_create(..., 4
replacement; 1
revisited 1
rarely. 2
returned) 2
revenge 1
requiring 11
runaway 1
publicized) 1
reg/PC 1
restricting 1
page-frame 1
regs 3
proportion, 1
simplicity, 16
slumber 2
report? 4
rid 1
read() 1
review 2
reader: 2
resource. 2
runs? 2
resources; 2
region, 5
results, 4
pages), 1
put 41
provides, 1
simulation. 1
small! 1
related 18
represents 4
roam 1
right. 5
rewrite 8
rears 1
recent, 1
rvals->x, 2
pthread 57
regions) 1
retries 4
pursue 1
q->head; 2
sits 3
sockets. 2
requests? 2
robust 9
running; 3
right); 2
relatively 16
reclaim 3
respect 2
rw59 1
register; 2
pagetable 4
return. 1
question 27
quantum) 1
question! 1
situations 3
software? 1
require. 1
something, 2
road, 1
round-robin 11
recursively 1
run: 3
sane 2
relates 3
panacea, 1
release 23
queue_t 2
question, 1
questions. 3
sizeof(PDE)) 1
rvals->y 2
returning 27
requirement: 2
sounds. 1
rogue 1
responsible 6
reduction 2
saying, 1
release? 2
paradigm 1
running. 23
queue? 1
queues 6
queued 1
relevant 13
satisfactory 1
sizeof(PTE)) 7
rewrite, 2
research. 1
restored. 1
role 11
reference. 8
parent; 1
reliable 6
rwrw- 1
scalable 15
queues, 12
space. 45
quick, 1
removes 1
qu’une 1
sketch/review 1
resides, 1
sleeping, 3
roused 2
right 42
part. 1
refined 5
relocation 6
rw— 2
scenarios 2
rabbit 1
sparked 3
satisfied 1
repeat 1
race. 4
retains 1
ravages 1
resources 6
routine, 10
safe? 2
slices 10
refuses 1
slow. 3
repeats, 1
safe 6
sched 7
sparse, 1
raise 10
say? 1
save 27
quite 114
retry 6
respectively, 1
rc_wait 3
rule: 2
re-place 1
passing 12
region) 1
slowly) 1
registers), 2
schedule: 2
spawn() 1
raised, 2
replete 1
says, 1
scalability. 1
quote: 2
rich 2
respond 1
scare 1
runnable; 2
scheduler? 5
patience, 1
replaced 2
small: 3
reject 4
scream, 2
species. 1
replacement 30
scaling; 2
scaling. 1
randomness. 1
robin, 2
response-time 1
read(), 1
rw45 1
schedulers, 1
peaches, 1
real 53
snippet 9
routine 60
second; 1
represented 3
repository 1
spend 10
scenarios), 1
scheduled. 2
range; 1
real-world 2
result, 12
same, 3
scorned 1
peek 1
reason, 8
relate 1
solidify 1
running), 1
seconds!). 2
required? 2
required 15
scheduled; 1
spent 7
rate, 3
ret 1
saved? 2
screen. 3
pending 1
recall1 1
relegated 2
solve: 1
really 52
runs. 11
secure 3
reset. 2
screen, 1
re-create 1
requires 25
scheduler 110
return; 10
saves 9
searches 3
recently. 2
remains. 1
sometime 1
people 28
rw- 1
reasons. 10
see: 2
resistance 1
re-duces 1
spin 79
semantics 8
spin-waiting 4
semaphores 1
say), 2
secondchance 1
redirection, 1
repeat, 1
space). 3
persistence 1
sad. 3
second 78
reboot. 1
see? 6
re-initialized. 1
searched 1
reserved 6
reverts 1
spurious 2
sequence. 2
sbrk 3
see! 2
repeatedly. 2
segment; 4
picking 6
refer 27
resource) 2
recency 1
segmentation. 3
read, 7
segmented 4
right.” 1
seconds 9
stand 1
seed. 1
spaceshared 1
server 11
repeating. 1
pieces, 5
referring 2
segmentation 26
results? 2
recognizes 1
resided 1
reap 1
self)) 2
rip 1
scale: 1
store-conditional, 4
seeds; 1
sparsely 1
same 145
setaffinity() 1
reproduced 1
piece” 1
resume 8
region 25
reduction, 1
responsibility 6
sense 26
root). 1
sense. 11
scary 1
storeconditional) 1
reason 32
spear-headed 1
segment, 14
saying; 1
require 10
resumed, 1
pioneers 4
register? 2
refine 3
registers, 10
regains 3
sensed, 2
routine), 4
shared 67
rules 6
scenario. 4
stream. 2
rechecks 2
sentence: 1
specify 10
scale. 1
required, 3
retaining 3
responsibility!” 1
regs(B) 3
remains: 2
sequences 5
place 46
shells, 1
setting 15
running: 1
scheduler.py, 1
streaming 2
recommending 2
service. 3
speculation, 2
research 18
returns. 3
result! 2
remember: 1
releases 14
placed, 1
short). 1
share; 1
runs...) 1
strings 1
schedulers 14
recorded 3
spring 1
research.microsoft.com/ 2
revolutionary. 1
results. 6
sets 27
rent 1
reliably 3
placement, 1
shorter 6
shift 1
rvals->x 2
structure) 1
recourse 1
scheduling 102
started, 1
scheduling, 15
resides. 3
risen 2
shape. 1
replacement) 1
relies 1
poorly 3
shuts 1
set 146
short-circuiting 2
sampling 2
recursive 1
scientist 1
stuck 16
stash 1
school: 2
resize; 2
ruins 2
reproduce 1
possibly 1
relinquish 5
signaled 1
set-top 1
satisfies 1
short-running 4
run, 24
savings 9
scribble 2
se. 1
students 3
scientist, 1
respectively. 2
return 169
restoring 5
request; 1
similarity 1
short. 3
redirection 2
run-time 7
redoing 2
saw 12
request 35
succeed. 3
research, 4
search 20
sharing 30
potentially 7
root, 1
requirements 1
result. 11
simplicity 7
shortcomings. 1
single-CPU 2
shot 2
seamlessly 1
success! 4
reduce 15
second: 1
resources. 5
shifting 1
predate 1
signal 28
researcher 2
statement. 2
resource, 4
say. 2
resulting 24
seasoned 1
suite 1
reference) 1
seconds). 1
should 274
short, 3
routinecalling 1
running 227
restricted 7
singlequeue 1
step). 1
saying 4
reusing 1
restore 17
secretary 2
sure; 1
referencing 1
sections. 4
shortest 2
rude 1
showing 8
premature 2
rwx 4
restrictions 1
storage. 1
size, 12
sbrk) 1
strategy 6
restored, 1
security: 1
swap? 1
regards 2
security. 1
shouldn’t 5
run; 1
simply 128
premise 1
safer 2
result: 2
presence 11
sizeof(int); 1
richer 1
scales 6
strdup() 1
segment? 1
said 43
shutdown 1
switches 14
runnable) 1
simulator. 2
shown 35
preserving 1
segments 22
returned 15
skip 5
registers 48
right? 8
string, 2
resumes 5
satisfying 2
segments, 5
scalability 2
side). 2
system), 3
signal. 3
simultaneously 11
shudder 1
pressure, 2
selection 1
returning; 1
reliability. 2
sleep. 8
structures? 1
reuse 1
scheduler, 20
services. 1
room 17
scaling 2
running? 4
table2 1
signal?? 1
sincerely 1
signal() 4
pretends 1
semaphores” 1
right; 1
relocating 1
strung 1
sleeping 5
reused, 1
schedulers) 1
several 1
rosy 1
scanning 3
runtime, 2
tables? 1
single, 1
signaling 17
significant 4
primitive, 2
semi-nal 1
right”, 1
represent 5
student, 3
sleeping/waking 2
succeeded. 1
second-chance 1
shells). 1
seconds, 2
rvals->y); 2
secretly 3
sage 1
situation. 2
says 2
similar. 2
sizes 8
sense?) 1
single-processor 5
root 3
slice). 1
success: 2
sloppy 4
shipping 2
tail 5
scheduled 11
see. 4
signals; 1
sbrk. 1
printf("this 1
routines 41
sleeping). 1
request? 1
separation 5
site: 2
routine. 2
rotational 1
small. 1
shrinks 1
talking 5
scheduling; 4
similarly, 3
scenario, 3
simpler 6
priori 3
run-and-yield 2
slice. 1
requests, 2
slices; 2
size); 2
rudimentary 4
seeing 1
task). 2
smart 13
scheme, 1
simplicity; 2
schedulers. 5
simplicity), 1
priorities; 1
running, 30
servers, 2
required). 1
rw 6
slowed 1
skill 2
run? 8
slices, 2
so), 1
scientific 1
seen 31
since 7
schedules 4
simulator, 1
proceeds 4
runtimei 1
setpark(); 2
research; 1
sad! 1
small-scale 1
technology. 1
smaller? 1
such 274
scoff 1
software, 4
segfault 1
runs, 21
screen 1
sizes. 3
safe. 2
sharing: 1
reside, 1
processes. 22
say, 5
smarter 1
tens 2
software4 1
sudden 1
scratched 2
software-based 1
segmentation.” 1
runtime 2
section; 2
sleeps 4
shells; 1
said, 10
scales. 1
produces 7
resource 14
termination 4
say 29
supposed 4
solution: 1
second-level 3
segregated 3
safely 3
seeds, 2
sake 5
sees 4
slice, 7
single 203
scientists 4
professional 1
sitting 4
some_function(char 1
test-and-set! 1
scaling, 1
susceptible 3
solve. 1
sequential 8
section, 24
shrink). 1
so, 37
satisfaction, 1
segments: 1
scream. 1
slower 6
restarts 1
size). 2
sometimes) 2
progress 8
test-and-set.s 2
scenes, 2
switch() 3
segment. 8
similar), 1
space; 11
series 9
solutions. 4
scale, 1
somehow, 1
smaller, 1
sketch 3
restored 4
see, 15
somewhere 4
property 10
swtch: 1
them, 20
segmenting 1
schedule 14
similarly 3
spawning 1
seriously, 3
select 4
scenario 4
solutions, 3
skip-ping 1
restricted? 1
resulted 2
return-fromtrap 3
symbiotic 1
then; 1
segments; 1
soon 25
simple, 9
scheduler. 10
speculation 2
scheduler’s 1
services, 1
scheduled3 1
slab 5
segmentation; 2
solves 7
system. 57
returns), 1
short 29
segment’s 1
sorry 1
simplified 2
set” 2
sploitfun.wordpress.com/ 1
seconds. 3
scheduler), 1
something 132
sleep) 1
seminal 1
proportional-share, 1
sense; 5
therein; 2
systems; 9
reused 1
silently, 2
senses 1
source. 1
shooting 1
sprawling 1
size; 6
secretary; 1
sources: 1
scheduling. 9
sleep-ing. 1
something. 2
prot 8
system’s 3
revert 1
sequence 24
serve, 1
served 3
shown, 2
sptr. 1
spaces 20
slowly, 4
space-usage 1
school, 2
slogan. 1
soon-to-be-executing 4
protection. 3
ridiculously 1
table; 5
simulator 16
setpark(). 2
service 11
simplest: 2
stages 1
spectrum, 1
software; 1
sparse 7
started 11
slot 7
spatial 7
protective 1
rights). 1
single-threaded 4
sets: 2
serviced, 1
simplifying 3
taken 16
speeding 2
someone 3
scourge, 2
they 149
starvation, 1
sounds 6
small) 1
see 272
seemingly 12
thing 38
protocols 2
round 2
sit 6
shaded 1
settle 1
takes; 1
speeds; 1
splintering 1
task 16
stealing 1
seems 12
think, 2
pthread_attr_t 2
segment: 10
shmget() 1
situation 9
sometimes 73
short-lived 2
splits 1
teaching 1
size 124
splitting 3
stops. 1
rule 4
though; 4
pthread_cond_wait(pthread_cond_t 3
segmentation? 1
sixteen 1
short) 5
sizeof(int)); 2
sketched 1
spread 9
slicek 1
src.opensolaris.org/source/xref/ 2
slight 2
show 24
running). 2
sign 3
pthread_create(&p, 2
segmentation” 1
somewhere). 1
simultaneous 1
skills. 2
tests 5
spuriously 2
store-conditional) 1
stance 1
slightly; 1
thoughtful 1
pthread_mutex_init(&c->glock, 2
sends 3
sooner 1
six-level 1
signals 13
text. 1
stack) 7
slice 36
straightforward, 2
slower? 1
sneaky 2
pthread_mutex_init(&q->tail_lock, 2
sense? 1
runs 83
sorting 1
size. 7
rv 4
them), 2
sad 4
strdup("p4.c"); 1
threads? 4
similar 45
three-queue 1
sets. 2
start 58
slightly 19
space 278
se, 2
software 17
so 197
space-management 1
sizes; 2
space: 2
sanity 1
theme 6
stride, 1
pthread_mutex_unlock(&c->glock); 4
similarly; 2
setup, 2
starving 1
slow; 2
special; 1
searching 4
time; 16
solution. 8
solving 4
starve: 1
spaces). 1
sat 2
there; 5
pthread_mutex_unlock(&q->tail_lock); 2
sleep 30
specific 21
sloth” 1
spin, 2
simplest 13
small). 3
specified 8
smaller 14
snapshot 1
timespec 2
solved. 1
somebody 5
somewhere, 1
state. 10
thereby 1
publishing 2
string 12
short-lived, 1
states: 1
seconds), 3
spin-wait 10
spinning 27
saves/restores 1
tool, 6
saving 6
soon, 1
somehow 6
steps 3
student 3
should. 1
small 61
store-conditional 7
simplified; 1
section? 4
spot 2
split 9
so. 15
queue 55
trace; 1
sorry, 1
scale 4
those 84
sometimes, 2
stipulated 1
study. 2
show, 1
snooping, 1
stores. 1
single-entry 2
stack 79
src); 3
software), 1
rapidly 1
transcript 1
sorts 9
scans 1
sounded 1
thought 17
stitch 1
studying 9
signal(). 1
so). 1
signals, 2
software. 2
sinister 1
stack”! 1
stack-allocated 2
rate) 2
solutions 11
transforming 3
rc 13
schemes 5
space-efficient, 1
thr_exit(); 1
stopped 2
stuff? 1
strictly 2
sections, 2
simplify 1
solid-state 1
situations. 1
start. 1
stop 21
some, 2
space? 6
transistors. 1
rc_wait, 2
school 2
speeds. 1
thread; 7
storeconditional. 1
threadID. 2
stringent 1
security, 1
structures: 2
solution, 10
sizeof() 7
storing 1
starting 14
spell 1
spaces, 5
translation; 1
re-checks 4
science. 2
spinning, 2
success. 3
stored. 1
ticket.s. 2
simulating 1
see). 1
stub 1
sizeof(PDE)). 1
seeds 11
starve). 1
solve 20
spin-lock 2
space” 1
transparency 1
reaction 2
traps 5
super-linear 1
strange; 1
stack, 18
tickets, 4
sitting; 1
successful. 1
straightforward; 1
slots, 3
segments. 3
state; 2
someday). 1
stack: 3
specifies 5
scratch 3
tricks: 1
surface. 1
strategy, 2
state1 1
tidbits 2
ready 33
size=100); 1
successfully) 1
strdup("p3.c"); 1
suffers 5
slow, 8
stems 1
somewhere... 1
standpoint, 1
spectreattack.com 1
second, 6
surprise: 1
streams 2
surprisingly, 6
time-shared 2
realizing 1
sizeof(), 1
semaphore 1
stream: 2
summary 5
snatch 1
step 2
soon-to-be-faulted-in 1
starve; 1
spinning), 2
sections 6
states. 1
suspect 1
statistics). 1
really, 4
sizeof(x)); 2
services 1
stuck, 1
structure. 16
superuser 3
snippet. 1
store-conditional. 3
sound 5
strdup("wc"); 2
stack), 2
time-slicing. 1
swath 1
stop, 1
security 21
store), 3
slowdown 2
set-it-to-1 2
subset 3
structures; 2
supports. 1
so? 5
states, 1
two 241
specialize 1
timeline, 1
starvation 3
stream 7
systems? 2
red-black 4
seek 2
strcpy(dest_buffer, 1
snippet: 3
shell, 5
substantial, 2
studies. 1
surfing 1
soon-to-be-running 1
stored? 1
two-fold. 1
specifics 1
stashes 1
structure; 2
t(B) 1
redirects 1
strdup 1
segment), 3
snooping 1
ship 1
surprising 7
style. 1
sorted 1
ubiquitous 2
survey 16
stores 16
spins, 2
state: 2
sub-sequent 1
table? 3
substitute 3
strengths 2
sending 1
so; 2
shoppers 1
switches, 2
shown), 1
ultimately 1
source 23
string) 2
swaps 3
splay 1
statistics 4
switch, 8
structures, 13
succeed 2
strike 1
sense: 2
subdirectory 2
swtch(struct 1
understand2 1
symbol 3
sptr 2
system! 2
reflect 4
shows 94
sufficient, 1
subject 4
solution 44
simple: 39
serves 6
unexpectedly 1
space), 4
subsequent 24
sparsely-used 2
system1 1
step? 1
tables, 8
support? 4
subsequently, 1
switching, 2
strongly 5
register 75
swpd 1
simulate 3
set, 3
unless 1
stacks 4
systems. 64
stale 1
talents, 1
special 22
starvation. 7
substituted 1
synchronize 2
relaxed 2
system) 1
system). 4
severe. 1
single-queue 4
unlock. 4
subsystem 4
stopped, 1
t(A) 1
solved 2
specification 1
target 6
starved 1
subsystems. 1
structures. 22
released 10
system-call 5
tables! 1
sharing, 3
unmapped 1
six 3
talk 10
straightforward 9
somewhere. 3
tcsh), 1
table. 26
speed 12
steal 3
strut 2
successful 5
remainder. 1
taking 11
unsurprisingly, 1
subtle 1
shell 12
tasked 1
size) 5
strangest 1
soon. 1
team 2
tables; 1
src) 1
stood 1
studied 5
sufficient 2
replacing 3
summarizes 1
upside 1
succeeds 3
shorter! 2
technology 7
sleep; 4
sorry. 1
terminal 4
ten 7
targets, 1
stack; 3
store, 2
sub-job 3
task; 3
reproduce, 1
usable. 2
standard 22
super 2
shortest, 1
strategies 8
slides 1
sounds! 1
terminates 1
terminate. 3
tasks 2
terms, 3
test-and-set. 4
tcsh, 2
supports 5
used) 1
standards/SPARCV9.pdf. 1
request, 10
shrink) 1
streams, 1
stretching 1
slow? 1
testand-set 1
store-conditional; 2
subjunctive 1
sure 56
them) 1
tends 5
surrounding 2
user; 3
requester), 1
sibling 1
technique 29
starts 25
source, 1
small/random; 2
stride 17
text). 2
straightforward. 2
subsections 1
surprised. 2
themselves). 1
testing 2
survive, 1
usual 2
reside) 1
switch. 4
residing 2
space! 2
snuck 1
struction 1
textbook, 1
state 73
switching 17
system: 6
systems). 1
thankfully, 1
utilization. 1
similarly-named 2
thank 2
simple. 10
simpler, 2
space1 1
software) 2
structure: 2
strategies. 1
subsystems 1
stated, 2
theory, 1
synchronized 10
t; 2
utilized 4
there. 6
simulated 1
solution). 1
subproblem 1
their 91
strength: 1
suc-cessfully 1
statement, 1
there? 4
system; 8
table). 3
t, 2
taken, 5
there’s 1
simulations 4
them 99
restart 5
then? 2
strict 1
suggest 3
them. 16
stay 3
thermodynamics 1
v); 2
tables), 1
talks 1
thing, 6
slip 1
succeeds, 2
rethink 1
stride. 1
supervisor 1
themselves, 1
storage, 2
think) 1
valid: 1
targeted 1
thinking: 2
task, 5
slower, 1
suffer 8
think 66
surprising, 1
think. 2
storeconditional 1
return-from-trap 17
third, 2
varies 5
this? 5
thinks), 1
telling 1
strings? 1
slowly. 2
those; 1
softwaremanaged 1
surround 2
spaces. 7
return-to-libc. 1
stored 15
victim. 1
tell? 2
thread? 2
thinking 23
this. 4
test? 2
strong, 1
suggested 8
superpages, 1
threads, 38
solely 1
suspend 2
returned, 2
specialized 4
strategy. 1
vmalloc, 1
tension 3
three-quarters 1
thoughtful, 1
thanked 1
vruntime 10
thread” 1
solution; 1
solve? 1
sort 6
switch 62
synchroniza-tions 1
space, 50
synchronization 26
structure 73
some 505
specifying, 1
tickets), 1
test 7
support. 9
thoughts 5
threats, 1
that. 9
rewrites 1
spaces) 1
thr 7
study 52
system.” 1
want 50
studies 4
soon-to-be-exec’d 1
spends 1
textbook 1
time-slice 5
sophisticated 13
three-instruction 3
thread. 20
right). 2
sparc/ 2
that’s 8
thr_join() 3
subsystem: 1
way) 1
systems: 5
sub-jobs, 1
wc 11
that? 7
timedlock 4
supporting 1
soup.” 1
threads; 2
road” 1
species, 1
the?? 1
specifically 6
tickets 30
subtle: 2
t. 2
spins 11
succeeded, 2
weightB 1
themselves 4
timer; 1
suppose, 2
sources 6
rough 3
thread’s 14
routines, 5
specified, 1
timeline 3
success 9
table: 3
splits. 1
successfully, 1
which). 1
thesis 1
surprise. 1
tmp; 7
to) 1
thumb. 1
threshold) 2
speed-of-light 1
suffering 2
timeout 4
taken? 1
stack). 4
such. 1
winner). 1
thorough 2
winning 7
surprisingly 7
too: 2
thus: 1
time). 3
spending 3
suggested. 1
spin-waiting. 2
tasks, 1
spin. 4
tcsh 2
thread-local 2
specific. 1
thread-safe, 2
suspicion. 2
tool. 1
top) 1
tmp->next; 2
too4 1
topmost 7
trade-off. 1
swap 34
suitable 2
sum, 1
stack-smashing 1
splitting: 1
technique, 2
worked. 1
tight. 1
specifically, 13
tragically 2
times), 1
transac-tions 1
thus, 54
switched 2
summarize, 1
sun.com/solaris/articles/atomic 2
stands 1
sponse 1
staring 1
worker 6
time? 9
speeds 4
run 374
transform 4
timing? 1
transaction 4
tip: 1
switching; 1
surprised 2
starts, 3
technologies. 1
support, 16
stateful 2
terminating 5
working-set 1
state, 13
times, 10
scalable. 5
transistors 2
ticket, 2
transfers. 1
totals 2
syscall 3
switch? 2
t). 2
surface 3
stateless 1
terminology) 1
speedup. 1
worse: 2
statically-initialized 1
to; 1
scan 5
together, 3
time! 2
tremendous 1
tough 2
then 227
statements 1
swapping 12
tables 49
tailor 1
this: 49
translations: 2
scenarios. 1
tolerate. 1
timer? 3
transformation 2
tricky 10
there). 1
switches? 1
therein 1
wrap 2
system, 65
technical 3
step-by-step 2
static 21
stdlib.h 1
transparency2 1
schedule(curr); 1
too, 2
timers, 2
translated), 2
two, 3
translation-lookaside 1
switching) 1
those, 1
wreak 1
systems) 4
tend 7
thousand, 1
step, 5
store 24
trap), 1
scheduling? 1
traverse 1
scheme 6
script 2
times. 7
transparently 3
section 55
segmentation). 2
still 59
segmentation.py 5
table) 2
typical 26
writes, 4
terminated. 1
thread!) 2
str); 1
terms 10
though 29
tree, 4
tool 15
tips 2
strategy), 2
self; 2
trap 52
semantics. 2
take, 3
taken. 1
wrote) 1
x-axis 1
spinning. 2
streams. 1
threads); 2
trend? 1
trace? 2
tirelessly 2
stream, 2
swtch 1
traversals 2
sensible 4
threads). 2
task. 7
three: 1
than 149
throughput?) 1
stack. 17
thrown 1
tracked 2
strings. 1
together. 5
table! 1
sentence 1
x86); 2
tables. 6
xchg 2
unanswered: 1
taste 2
ticket; 2
that: 3
true, 3
themselves; 2
ticket. 2
tract 1
tries 41
stuff 8
subtract 1
separate 17
strive 5
y-axis? 1
strong 2
yields 5
understanding 19
yourself! 3
zeroing, 1
undo 4
tune 1
structure, 24
then, 16
suddenly 2
turning 9
sequence, 8
technology-driven 1
translate 19
tandem 5
× 1
unimaginatively 1
’d’ 1
stage 3
style, 1
standpoint 1
support; 4
typing, 1
serve 2
turns 37
serviced 4
tweak 1
tcsh). 1
tickets; 1
’his/their 1
theory 4
“A”, 2
“CPU-bound” 1
survived 1
unblocked 2
translated, 1
shade 1
times 40
states 15
twice 5
translations, 6
sub-microsecond 1
techniques 24
“Exterminator: 1
swapon 2
“Hmm... 1
updates 33
tell 28
shared. 1
tn 2
status 5
therein, 2
stays 4
treating 2
submitted, 1
terminate 6
undesirable) 2
switches. 1
“Inside 3
us. 4
unique 7
shortly 1
to? 2
type: 1
stopping 4
tree. 5
things. 7
substrate 1
terrible 3
swoop 1
tennis 1
usability 1
unpark(threadID) 2
tolerate 1
side 4
unallocated 2
together 12
trees; 1
strange 8
thinking? 1
strcpy(dst, 4
stride) 1
third 18
text, 2
though, 8
systems 185
sz; 1
“Intel 4
use) 10
unqualified 1
simplicity. 3
too. 6
untimely 6
trends. 1
true. 3
updated 8
valgrind 15
valid). 1
time 306
“Is 1
useful2 1
uncommon 2
traces. 2
understandable 2
undertaken; 1
tuned. 2
stronger 2
stronghold 1
values). 2
time-share 1
“Segmented 1
track; 1
simulation 7
summarize 5
table 175
type, 4
unfortunately, 14
too 85
stronglytyped, 1
timer. 1
tlb.c, 1
“With 1
structures 59
site 1
supply 1
tackled 2
tail. 2
typeset 2
uniform, 1
toolbars, 1
variables. 13
to, 13
threads 197
traditionally 1
“brain 2
stuff, 1
test-and-set 15
size: 16
to 4068
using 140
support 110
takes 50
under 18
unlock 13
topics 5
vice 1
today. 6
threshold. 2
“owned” 1
transferred 4
subsequently 4
test-and-set.s? 2
subtleties 2
translations. 6
usual, 3
sure. 2
techniques? 1
underneath 2
traces 3
view, 1
today’s 2
tick 1
sizeof(node_t); 1
→ 17
tested 1
together! 1
subverted 1
until 52
trapped 2
utilize 5
surely) 1
v 2
surprise 2
trade-off: 1
systems), 1
topic 18
slabs 1
thanks 4
told 2
them; 2
update) 1
tread 1
undoes 1
valgrind? 1
temporarily 5
tick-by-tick 1
tempting 4
value) 13
table), 1
totaltickets); 1
success; 1
too! 2
there! 1
therein: 2
trace 24
transforms 4
time, 75
timer-interrupt 1
times) 1
tmp->next 4
updating 13
unfairness 4
translation 46
vantage 1
tail_lock; 2
survive 2
term 15
sleep, 13
top 32
topic, 4
upper 1
transaction, 2
uniform. 1
virtual 253
tree? 1
taken: 2
swapoff. 1
terminal, 1
sleeping. 4
swapped 12
total). 1
urging 1
translated 3
units; 4
vs. 8
variable 75
trees, 4
tapes 1
terrific 4
slice), 2
touch 4
switching); 1
touches 2
usable 2
unrealistic; 1
wait-for-me.s. 2
varies, 2
trials 2
task: 1
test-and-set.s. 2
toughest 1
translations 22
slots 7
symbol. 1
transparent 4
system? 4
slow 15
update(counter_t 2
waitpid()); 1
these 222
treat 4
vectors 1
taught?! 2
tests), 1
tracking 2
trap; 2
trace, 3
used; 2
try 64
slowly; 1
update; 1
wake? 1
they? 2
treatment, 2
terminated 2
systems, 49
transfer. 1
version 31
trapframe 1
trade-offs 5
users: 1
tweaks 2
trust 14
upon, 1
warm 3
users, 1
terribly 1
testand-set! 1
tree 15
translations! 1
tradeoff 1
utilities 1
small, 7
two-CPU 1
utilization 5
things, 6
traditional 11
uses. 3
very 60
val; 2
tricks 2
that, 11
trap, 3
them? 3
turn) 2
warnings. 2
two-level 7
thing” 1
undoubtedly 2
system” 1
vruntime, 1
transition 6
w/ 2
tricky: 1
t 10
treats 1
wait() 26
wastes 10
think-ing 1
valid, 14
this! 2
that 1398
valid. 2
turnaround 30
translation, 15
true 14
small-sized 1
then. 1
was; 1
trees 4
watch 5
units, 2
weaknesses. 1
table, 26
values. 1
thousands 10
turned 2
treasure 1
truly 9
smallest 5
theory-types 2
therein. 5
wasted. 3
triggers, 1
there 250
valuable 3
thing. 2
tables) 2
variables), 1
thr_join(); 1
trials, 1
thread.c 1
sneaks 2
way), 1
twice). 1
things 46
unlock): 2
value? 2
things; 3
whether 59
tackle 4
while. 2
take? 2
turnaround. 1
trickier. 1
wc, 3
software-managed 5
underly 1
think? 1
threads. 19
unmask 1
thinking, 2
type 73
values, 12
variety: 1
why? 2
takes, 1
type. 1
trivial 2
websites 1
soon-to-be-run 1
weird; 1
thinking! 1
threshold, 2
thread), 2
three-level 1
throughout 13
whatever 15
virtualization). 1
vast 2
tasks. 1
wikipedia 1
tech 1
trouble. 3
undertake 1
space) 4
unrealistic, 3
time-efficient 1
understand: 1
threshold 11
unmasks 2
whose 8
virtually 9
typesetting 2
windows, 1
technique. 1
twenty 1
unexpected. 2
spans 1
units 1
time: 2
virtualized; 1
times). 2
unpack 2
why. 2
unpark() 2
uint 1
winter. 1
type) 1
update, 1
speculative 1
tells 11
unrealistic 2
through, 1
visible 2
timings. 1
visible. 2
unrealistic? 1
willing 3
undefined. 1
typically 1
wondering: 4
stacks, 3
unreasonably 1
used. 15
temporal 7
time. 66
waited 1
tip, 4
visualize 1
tmp->value 2
woke 1
understanding: 2
work-stealing 2
unfortunately 4
typing 9
wonderful 11
up. 7
timer, 4
times; 3
tip 2
too). 2
starting) 1
user 117
unified, 1
terms) 1
worker, 2
unasked 1
walling 1
wait(NULL); 3
watermark 2
took, 1
update 54
worker(), 1
unsafe 4
usually 52
unimaginably 1
terrific, 1
uncaught, 1
theoretical 1
today, 4
workloads 14
ways: 2
trace: 1
updated, 2
world? 1
unused. 2
starvation: 1
utilizing 4
waiter 2
unit 7
under- 1
there, 2
too; 1
trading 1
web 10
uplifting! 1
world” 1
well-known 4
took 16
v9 1
went 3
unknown 1
undergraduate 4
therefore 2
underlies 2
therein), 2
unfortunate 5
thing... 1
upcoming 1
write, 3
starve 2
tool? 1
warmup 1
works 54
valid? 3
we’re 3
unlock(&m) 1
transactions 1
upward 1
transitioning 4
thing: 4
x? 1
stated 2
statement 3
world. 3
values? 3
when, 3
upon 40
unit”, 2
unlock(lock_t 10
unlock? 2
who 41
widely 9
win 1
thirty 1
yet), 1
tools, 3
stolen 1
this 1109
wreak, 1
thr_exit() 3
use_ptr 2
unmodified, 1
usage. 4
useful. 10
translations). 1
within; 2
topic. 1
www.ajwm.net/amayer/papers/B5000.html. 2
vanishes. 1
storage 12
thrashing 2
yield 21
unnecessary 1
use. 16
useful? 1
utility? 2
wonder? 1
total) 2
x-axis, 2
work; 6
users 27
variable) 1
straightforward: 6
you: 1
unpacking 2
user, 3
user-defined 2
this, 32
traffic. 1
x. 2
translation. 10
workgroup. 1
value), 3
worse. 6
vector, 1
yourself. 1
unused, 1
val 2
up; 2
treated 6
x86 23
translations; 1
thread, 48
variable, 8
versa. 1
zero). 1
variable-sized 7
zplot. 1
’95. 1
writes 21
thread 449
updated) 1
trouble, 2
x86-64) 1
trials. 1
threads) 1
trick 3
violations). 1
variables) 1
usually, 2
x86)” 2
stringing 1
’a’ 4
threat 1
vastly 1
zombie 2
three, 3
variants: 1
trouble 9
vary 4
valid; 1
strlen(), 1
“Earliest 1
turn 32
upon. 1
yet, 10
vector 1
vice-versa. 1
try. 1
throw 6
vectors, 1
value. 12
— 131
struct 49
three 69
“Electrochemically 1
type). 1
usage; 1
zero. 11
virtual, 1
trying 15
zeroing 4
view). 1
varied 2
’94. 1
stuck; 3
“I 1
threshold; 4
understand! 2
used? 1
useful, 11
unlikely 3
virtualize 13
virtualized, 1
virtualizes 3
vi, 1
’Precise’), 2
“100x” 1
“CPU 1
“Evaluation 1
view 14
“Jack 1
unifying 1
time) 4
virtualization. 4
user/supervisor 1
’05. 1
time-sharing 7
virtue 2
visualization 1
vmstat 2
wait()) 1
wait(address, 2
waiters 4
waiting, 5
wake(address) 2
wakeup/waiting 2
walk 1
watches 2
“Experience 1
way. 6
“Hoard: 1
uninitialized 1
virtualized 6
users. 1
voo-doo 2
’07, 2
time-space 2
we 992
vmstat, 1
“MIPS 3
wc), 1
“Ils 1
well-regarded 2
unlock() 14
vruntimei 2
“01” 1
timing 5
“ARC: 1
tired 1
“Alto 1
wakes 15
uninteresting: 1
“Man-Computer 1
well-suited 2
unsatisfying) 1
well; 1
unsigned 2
web. 1
“Memory 1
to), 1
void 153
tomes 1
“A” 8
top), 1
unit) 1
“Program 1
wait. 2
uses 70
utopian 1
winner) 2
“Operating 2
“Purify: 1
“Tolerating 1
“all 4
“fault.” 1
“operating 1
“response”; 1
“uninitialized 1
valid 51
we’ll 112
thus 486
whatever) 1
top-level 2
universal 1
“Pthread 1
unusable. 1
study, 3
waiting 94
vulnerabilities 2
waitpid() 2
was 188
tracing 6
whereas 14
ticket 27
unlock(), 2
values 75
“Relocating 1
unused) 1
studying. 1
unusual 3
succeeded 4
wait(), 6
walks 1
way: 5
which, 4
tracks 8
unpark(queue_remove(m->q)); 2
time), 4
variable-sized. 1
“Reminiscences 1
variable: 2
update: 2
success, 5
upsides 1
warm-start 1
weights 2
whole 5
waste. 7
unpleasant. 1
timely 3
timing, 3
tiny 21
use, 15
“There 1
vary. 2
“Time-Sharing 1
successfully 5
weird 3
wine, 1
way! 1
we’d 9
to! 1
user-managed 1
tons 2
varying 2
total 26
“Volume 4
within, 1
where 166
“Control-c” 1
utilized? 1
wanted 3
via 53
wary 7
towards 3
“Why 2
wonder 3
“core” 1
while2 1
“Evaluating 1
utilizes 1
virtualization; 1
visualization. 1
water 1
tracing, 1
ways. 11
won’t, 1
“first 1
whom 2
“E”, 2
wired 2
“Get 1
“TENEX, 2
void. 1
website 2
weightk 1
volatile 5
wish 26
trade-off 4
transfers, 1
transfers 7
“fun” 1
suffering, 1
well. 30
suffice 3
“THE” 2
use 317
vulnerabilities. 1
vulnerable 2
translation), 2
words 2
translation) 1
“lock” 2
were 76
value, 17
with 638
suggests 2
suit 1
we’ve 21
used, 8
with? 1
user. 7
user’s 4
words, 5
traversal 3
treasure-trove 1
“loop.s”. 2
when! 2
“Test 1
work, 23
word 14
sum 3
workload, 11
what’s 2
using). 2
worst-fit, 2
variables 33
worstcase 1
trees), 1
“looping 1
“out 1
“real-world” 2
“steal” 1
“tried 1
“turn” 2
wakeups 2
wall 1
warmed 1
way? 1
ways, 1
weirdly 1
worst 7
tried, 1
worst-fit 2
tried 4
“havoc” 1
various 27
worked 6
well, 15
worthwhile. 3
which 501
widely), 1
winner 5
wisdom 1
surprising? 2
wishes 16
x86) 1
trylock 4
“hello, 1
vary). 1
workflows. 1
worried 1
worse, 8
wrapper; 2
within 89
surprisingly!) 1
trigger 2
years; 2
yell) 1
“high 1
won’t 21
well-defined 1
write() 5
swapping, 1
written? 2
switches; 1
when 480
would 200
value 233
versions 8
yes. 3
“reserved 2
well-meaning 1
“running” 2
turn; 4
“starts” 2
switching), 1
while) 1
wreak1 1
variable). 1
viewing 2
twice, 5
visually 1
two-phase 6
wait-for-me.s 4
x[10]; 1
wakeup, 1
“test 2
was. 1
woken. 2
virtual-memory 1
virtuallyindexed 1
two: 1
unbounded 1
synchronizations 1
wasteful. 2
weaknesses 1
work? 7
write 63
wrong. 3
yet: 2
underpowered 1
work 150
two. 3
weren’t 1
workloads, 1
when. 2
wild 1
woken, 2
you? 9
workload 14
weightA 1
uber-engineer 1
void; 2
your 201
understand, 3
understanding. 1
works, 15
yours: 1
world; 1
well), 2
worry 21
wrote: 1
wonders. 1
workings, 2
written), 1
you’re 18
understand 112
waitFirst 2
x; 4
www.takeourword.com/TOW146 1
unlucky) 1
world\n", 1
www.gnu.org/gnu/manifesto.html. 1
while 170
yourself2! 1
understandable, 1
waking, 1
yet! 1
y-axis 2
worse 9
x86, 8
wrappers, 2
unused 14
wide 1
uniprocessor, 2
you’d 9
yield(); 2
yes: 3
xv6. 1
’threshold’, 2
system 363
wants 16
xv6, 1
up? 3
years, 9
unlock, 2
zero, 3
unsurprisingly: 1
you. 8
unsuspecting 1
wary: 1
wishing 3
upper-half 1
yet. 4
“A 15
zeroing. 2
years. 4
yourself2 1
upwards. 1
workers, 2
us, 2
way, 20
yes! 1
take 97
yet 20
young 3
’83, 1
welcome! 1
yield, 2
target. 1
“B” 8
target’s 2
yours. 2
us 84
“Analysis 1
well) 1
“Informed 1
| 8
yield-based 2
’03. 1
teach 1
“History” 2
use; 4
techniques, 7
which... 1
test-and-test-and-set.s. 2
works3 1
you’ve 6
’Approximate’, 2
you’ll 37
useful 69
“Javascript: 2
zero 10
“Nonblocking 2
winner: 2
workshop, 1
text 9
’75, 1
“010101”, 1
useful2. 1
use”, 1
“Mac 1
usual. 2
“Policy/mechanism 1
wondering 2
worlds. 2
thanks, 1
’a’, 1
“Fact 1
useless 2
user-facing 1
“Membrane: 1
utilization, 1
“Towards 1
work: 1
wrangling 1
them). 2
“1984” 1
“Guide 2
’09, 1
user-level 6
“OS” 1
utilized. 1
“Wait-free 2
workers 1
write(fd, 1
these, 4
“Ad 2
“Hoare” 1
’14 1
usermode 1
“RISC-I: 1
using. 2
“What 5
value; 22
thing; 1
write. 2
“A”), 1
written, 1
“Dynamic 3
workload: 1
wrong, 4
utility 3
“as 2
variants 4
thousands, 1
{ 281
versus 5
’18, 2
“Everything 2
“Run-Time 1
worry: 1
x86-version 2
“have 1
variable. 8
“She’s 1
threadID 2
“Machine 1
’81, 5
virtualizing 14
“Structure 1
© 21
worthwhile 2
“hello 1
“modern” 1
variable’s 1
“Survey 1
written 18
tickets. 5
’flag’ 2
vision 1
’ 11
“parent: 1
variety 3
“Mesa” 1
“Think 1
tightly 1
’new’ 2
x86.py, 4
vruntime. 1
’04, 2
“ready” 2
vengeance’.” 1
“Microreboot 1
“baby 1
time-slicing 1
“The 40
wrong 15
“Valgrind: 1
“what 1
“a 1
you, 11
viewed 4
“Monitors: 1
“demon”, 1
time-tested 1
’peek 1
waits 36
x86). 2
’13, 5
“batch” 1
younger 1
virtualization? 1
“Myths 2
“ease 1
timeline. 2
’self’ 2
“2Q: 1
tmp); 5
“cold” 2
yourself 7
visionary 1
“OSSpinLock 2
“familial” 1
wake 33
“21” 2
yes, 6
“Atomic 2
top-to-bottom 1
“correct” 4
zeroed 1
visited, 1
zombies 1
“hello”; 1
want. 1
“Animal 1
“Cold-start 1
“free” 1
“Premature 2
vruntime: 1
“right 1
· 4
wasn’t 2
track 27
“Efficient 2
trans- 1
“glibc 2
“System 1
“Take 1
wait(). 3
“second-system 1
’02, 2
wasted 4
“Introduction 3
“He 1
“lost” 1
“U 1
“out-of-bounds” 1
“walk” 1
’11, 2
way). 1
“One 1
waste 23
“It 2
transfer 10
“at 1
“the 1
“yes.” 1
’68 1
weight 1
“Performance 1
ways 19
transformed 2
weight, 1
“wreaked”? 1
− 7
’current’ 1
weight0 1
“KASLR 1
“Priority 1
“being 1
transparency; 1
” 4
’c’ 3
wherever 2
“OS”, 1
whet 1
“commoncase 1
trap. 1
’e’. 1
“Reese’s 1
“On 2
while? 1
“older” 1
’mutex’ 2
trapping 3
“big 1
“Parallel 1
whims 2
“reliability”, 1
“But 1
traversing 2
“catch” 1
“crux 1
“same” 1
trusts 4
“Cooperating 7
“Solaris 3
“easy 1
“works” 1
truth. 1
“Improving 1
well 88
“Solution 2
“other 1
tuning 1
“It’s 2
“Symmetric 1
“too 3
twins!” 1
“Multics: 1
“You 2
“PThreads 2
why 58
two-thirds 1
“atomic 2
“cooperating 2
widespread 1
“best” 2
“direct 1
“emulation” 1
“double 1
types 33
“implements” 2
u 2
“interactive” 1
“fault” 2
ubriaca. 1
“first-in” 2
“it 1
unaffected 1
“longword” 1
unfair 2
“on 1
unlocked 2
“page 1
“private 1
unpacks 1
“prove” 2
unrealistically 2
“right” 1
“reasonable” 1
“setting” 2
up 156
updating) 1
upper-case 1
usage 16
use?) 1
uses), 1
using? 2
valgrind. 1
valid), 1
variable-length 2
variables, 5
variable” 1
variant 3
vector-like 1
vengeance’. 1
version? 2
viewpoint 1
violation 2
virtualization 20
what 280
wait 53
whenever 3
want; 1
why, 1
waste! 1
watch. 1
will, 2
watching 1
whichever 4
window, 3
while, 8
wished 2
wily 2
with) 2
works? 3
worlds: 1
world”. 1
write: 1
www.stanford.edu/˜ouster/. 1
x86” 2
yielding 5
yourself, 2
zero), 1
zombies, 1
zsh 2
– 19
’93. 1
’95, 2
without 70
’c’, 1
’wreak 2
“Cloud 3
“Idleness 1
“Load-Link, 2
woken 13
“Making 2
“One-Level 2
won 3
“One-level 2
work! 3
“Virtual 8
“bad 1
workloads. 3
“buddy” 1
“condition 1
“discovered” 1
“drum” 1
“limited” 1
works. 22
“ten-items-or-less” 1
world!”, 1
“the”). 2
world, 6
worry! 2
worth 20
wrappers 2
wreakers 1
writing 21
written). 1
x, 2
x86. 1
xv6 6
y; 2
years 19
you 995
yelling 1
yuck! 1
yield.s, 2
zero.” 1
you). 1
yourself; 3
will 580
ˆC 2
’63 3
window 3
’85, 1
wise 1
’92. 1
wondered 1
’94, 2
word, 1
’b’, 2
worked, 2
“...with 1
“80-20” 1
“Advanced 4
“Change 1
“Extending 1
“Hints 3
“Information 1
world 26
“Just 2
“My 1
worst-case 5
“Our 1
“RTFM.” 1
“Shared-access 1
wouldn’t 5
“Someone 2
wrapping 2
“Transaction 2
write(), 1
“Understanding 5
writes: 1
“Using 2
written; 1
“bad” 3
“goodbye”. 1
“jemalloc” 1
“just 3
x 12
“perfect”. 1
yeah! 1
“smart” 1
yield() 2
yield.s 2
you; 1
zeroes 2
|| 2
• 69
}; 8
’10, 4
’89, 1
’98, 1
’b’ 1
“Ah! 1
“Aleph 1
“Algorithms 2
“Dahm 2
“Principled 1
“Profiling 1
“SDS 1
“They 2
} 271
“bounds” 1
˜mark/syscall.html. 1
“got 1
’15, 1
“hot” 2
’Classic 1
the 8323
“privileged” 1
’pedantry’ 1
things); 1
“ticket-assignment 1
’w’ 1
thinks 7
← 2
threadID, 2
“An 9
threaded 2
“Bell 1
three) 1
“B”. 2
“Computer 6
“Converting 1
“If 2
“John 1
“Observations 2
“OpenSolaris 2
“Perfection 1
through 56
“Practical, 1
tickets: 1
“TLB”. 1
“Time 1
“T”, 2
“child”, 1
“daemon”, 1
“interrupts” 1
timer 36
times? 2
tive) 1
“main: 14
tmp 8
“process 1
to. 4
“test” 2
today 7
tools 16
too” 1
touching 1
track, 1
translates 5
transparent” 1
true! 1
truth: 2
typedef 33
ugly 3
uncommon), 1
underlying 9
unfair, 1
uniformly, 1
units. 3
unlock(&mutex); 2
unpark 2
unrealistic. 1
up, 12
update. 1
upper-level 2
urgent, 1
usage, 2
used 175
user-mode 3
using; 2
v; 2
value); 2
variable; 2
variablesized, 1
variants) 1
vector. 1
violation, 2
virtual-to-physical 6
virtualization, 7
virtualized. 1
voluminous 2
wait(); 1
wait, 4
waking 5
way 97
weakness 1
weighted 1
weighti 2
were. 1
winner. 2
within. 1
work. 24
working 28
workload. 6
works; 1
worry. 3
worse! 1
wrapper 3
wreaked?” 1
wrote 10
www.cs.tau.ac.il/˜shanir/concurrent-data-structures.pdf. 2
www.nds.rub.de/lehre/seminar/SS06/Werthmann 1
www.sparc.org/ 1
x) 1
’19, 1
“Aspects 1
“Before 1
“Concurrent 2
“H-Pucks”) 1
“H”, 2
“Lottery 2
“Mach: 1
“Multilevel 1
“Programming 7
“foo” 1
“lmbench: 1
“pinning 1
“real” 3
“yeah, 1
