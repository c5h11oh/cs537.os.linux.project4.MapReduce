2 25
!= 7
"wc" 1
%ax 4
(1e7) 2
(APIs) 2
%eax,0x0(%ebx) 1
%ebp 1
(-1KB) 1
(-p). 1
(3764 1
(4 3
(4088 1
(As 1
(Gulps) 1
(KASLR). 1
(Left) 3
(P); 1
(PD 2
(PID). 1
(Proc 2
(Software) 1
(VPN 14
(Without 1
"hello 1
(15th, 1
(MIPS), 2
(Simulation) 16
(T1) 4
(VPN=1, 1
(assume 2
(c4). 1
(depending 2
(even 3
(forever), 1
(hardware 1
"A"); 4
$0x1, 6
%d 5
(10 1
(array-based) 2
F 8
 32628
4 23
T 10
&stack); 1
(-T). 1
(/tmp/file) 1
(010101), 1
(224 1
(512 2
(8 1
(@PFN:100) 1
(KNUTH’S 1
(MMU) 1
(PTE.Present 2
(SJF), 1
(TD 1
(This 1
(Thread 2
(Volume 1
(alas). 2
(BFS)2 1
(P1), 1
(Q0), 1
(RDLK) 2
(THE), 2
(c1–c3). 1
(effectively 1
(1000 1
(as 49
%edx, 1
%esi, 1
&rvals); 2
(01) 1
(14th) 1
(28 1
(64 1
(A) 2
(ASID) 1
!StoreConditional(&lock->flag, 2
12 19
C 16
#2: 2
%dx. 2
%eax, 8
(-q) 1
(16 3
(Bad 1
(Blocks) 4
(Chapter 2
(LAUER’S 1
(MLFQ). 2
(MQMS) 1
(Offset 1
(P). 1
(PTE.Valid 4
(PWT, 1
(Right) 3
(September 1
(TestAndSet(&lock->flag, 2
(VPNs 1
(Virtual 1
(assuming 5
(bytes 2
(code, 7
(continuing) 1
(discussed 1
16 9
20 1
 26
$0x1,%eax 4
&& 2
(24113) 5
(Code) 8
(Logical) 1
(MMU), 1
(PFN 2
(TestAndSet(&m->guard, 4
(assert(hptr->magic 1
(atomic_add_zero 2
(include 2
(lock-holding) 2
(probably) 1
(pthread_create) 2
S 28
$0x0,(%edi,%eax,4) 1
%bx 2
(-a) 2
(232 1
(ARM). 2
(Hardware) 1
(P2), 1
(PDE.Valid 1
(a.k.a. 6
(but, 2
(evicts) 1
6 22
PAGING 21
&oops; 2
&x); 1
(-M 1
(-m 2
(./x86.py 4
(1) 13
(100) 1
(Editors 2
(PA) 3
(Q2). 1
(ROP) 1
(always) 1
(bugs) 1
(flag 4
(imagine 2
(into 4
(non-restricted) 1
(releasing 1
(source) 1
(they 3
(way) 1
*L, 8
14 14
"usage: 2
%ecx, 1
(-s) 3
(34KB), 1
(ASLR). 1
(Again) 1
(COW 1
(Good 1
(P0) 1
(StoreConditional(&lock->flag, 2
(Tc2 1
(VPN), 2
(allocated 3
(c1), 1
(count 8
(during 1
(emacs 1
"wc"... 1
%ebp, 1
( 6
(*start_routine)(void 2
(-s 2
(28KB) 1
(7.2) 1
(P0 1
(U/S) 1
(VA) 2
(again 3
(arbitrarily; 1
(c1, 1
(counter 17
(freeing 1
(get 1
(load 1
(myarg 2
(onto 2
(pthread_join) 2
(via 6
*arg); 4
*child(void 3
*hptr 1
*producer(void 5
+= 9
./main-two-cvs-while 2
//acquire 4
08 2
0x00000000 1
0x1095afe50 1
0x400, 1
0xFFF. 1
$0x03, 1
$0x03e8,%eax 1
(2134) 6
(32768) 1
(7030) 1
(And 1
(EEVDF) 1
(MMU); 1
(P=1), 1
(TestAndSet(&flag, 2
$0x1 2
*mythread(void 12
%eax). 1
(i.e., 96
(4KB 1
(e.g., 108
3 1
(C 1
(DEC). 1
(Hardware-based) 1
(LW 1
(STDOUT 1
(VPN=06, 1
(a.k.a., 2
(flag) 2
(hence 1
(mentioned 2
(most 2
(stride=200) 1
(i 19
%edi 3
&args); 4
&m); 3
(20-ms 1
(400)2 1
(4200) 1
(A’s 2
(C, 1
(Measurement) 3
(O 1
(RSS). 1
(SJF, 1
(T2) 2
(also 7
(an 2
(done) 2
(generated 1
(hence, 2
"A" 1
22 1
#3: 1
%ebx, 1
(26 1
(4096), 1
(CPU 2
(D); 1
(Line 5
(S), 1
(Spring), 3
(Tc1 2
(a2), 1
(instead 1
(limit) 1
(line 3
(maliciousness) 1
(p2.c), 1
(still 1
(swapd) 1
(worst-case 1
*consumer(void 5
*dst; 1
*value) 2
--leak-check=yes 2
-C 6
*x 3
(200 1
(CTSS), 1
(P=0), 1
(PID), 1
(PTE) 9
(R 1
(Tc2) 1
(a[0]) 2
(after 4
(among 3
(bytesLeft 1
(eventually) 2
(io.c) 1
(ldstub); 2
(m->flag 2
(namely, 1
(p6, 1
(rather, 1
(results 1
(studied 1
(too 1
(turned 1
8 22
%edx 1
%esi 1
& 29
(1024). 1
(104) 1
(I/O). 1
(LDE) 1
(OS)3 1
(R, 1
(TLBs) 1
(char 8
(due 6
(lazily) 1
(p4.c) 1
(pause 3
(potentially) 1
(realistically, 2
(returning 2
(t0.c) 2
(taking 2
(think 5
(web 2
*curr 4
*kstack; 1
(to 10
(implicitly) 2
(implying 2
(labeled 6
(ld.so) 1
(locked). 2
(pid:29266) 2
(pid:29383) 2
(remember: 2
(shaded 1
(thanks 1
(turn 2
(“Buzz 2
*(*start_routine)(void*), 2
*attr, 2
*c); 1
(incredulous) 1
(interrupt) 1
(modified), 1
(note 4
(older 1
(our 4
(p1), 1
(p1– 1
(queue_empty(m->q)) 2
(rc_wait:29267) 1
(rc_wait:29384) 1
(requiring 1
M 20
! 2
%d\n", 9
%dx 6
&; 1
(-L 2
(-c) 1
(-l 4
(117 1
(@PFN:101) 1
(FCFS). 1
(Linux) 2
(MLFQ) 1
(OS). 1
(PCB); 2
(PFN), 2
(STCF) 2
(Success 4
(all 6
(almost) 1
(bigger) 1
(c->local[cpu] 2
(given 1
(long) 1
(mem.c) 1
(p2). 1
(result: 1
"hello"; 3
B 13
#1: 2
#define 2
(-P) 1
(256) 1
(PA), 1
(SSDs) 1
(TlbEntry.PFN 4
(VP 3
(address 2
(bash?) 1
(done 4
(just 5
(max 2
(my 1
(myturn). 2
(p2); 1
(physical) 1
(and 111
&mutex); 8
(212 1
(5 1
(PowerPC), 2
(Run 1
(TCBs) 2
(at 12
(average: 1
(indeed, 4
(insert 1
(latter) 2
(many 4
(minimally) 1
(of 10
(original 2
(rc 8
(rc_wait:%d) 2
(ready 4
(size: 1
(stride=40) 1
(unrealistically 1
(wait 1
**) 4
-5; 1
(void 12
(when 3
*cond, 2
*p 6
10 21
!zero, 2
"common_threads.h" 4
%esp 1
%p\n", 4
(24114) 5
(32 2
(August, 1
(CFS) 2
(Dynamic 2
(PTEs) 1
(Success, 4
(T1 2
(Tarrival 1
(say, 11
&lock); 2
(11) 1
(B) 1
(K 1
(MRU). 1
(P2) 1
(PDE.PFN 2
(VPN). 1
(a3). 1
(b) 5
#include 62
"fork 4
(1110) 1
(21) 1
(22.1) 1
(AMAT) 1
(C) 1
(L 2
(PCB). 1
(PDIndex 3
(PTE): 1
(Pmiss 1
(SJF) 1
(VM) 1
(VPN=06), 1
(a[3] 1
(again, 3
(c) 3
(c2). 2
(c4), 1
(clearly 1
(current) 1
(generally) 1
(highest 1
(minus 1
(regardless 2
(starting 3
*new 4
-g 3
1). 6
18 4
I 26
(-w) 1
(A, 5
(FIFO) 2
(M 1
(PFN) 6
(RR) 2
(SQMS) 1
(Tp) 1
(VPN=07), 1
(VirtualAddress 9
(a[4] 1
(both 2
(c3). 3
(c5), 1
(he 1
(hint: 6
(i); 1
(known 1
(or, 5
(real) 1
(reduction 1
(running, 2
(runtimei 1
(sometimes 10
(thank 1
(v 2
*H, 4
*old_ptr 2
*p); 1
*worker(void 1
-c. 1
./p1 2
./random 3
.globl 1
(because 8
(thus 9
-M 15
-m 3
(pid:29146) 4
(spinning 2
(stop 1
--tool=helgrind 2
-D 154
-d 2
(from 16
(gasp) 2
(horribly) 1
(in 45
(making 1
(for 24
(atomic_bit_test_set 4
(binary 1
(called 9
(cleared), 1
(continue 1
(curr) 4
(described 5
(dramatic 1
(hex 2
(highly 1
(holding 1
(like 5
(modern 1
(once 4
(threads.c) 1
(created 1
// 294
0. 11
00007f4e7d508000 1
./x86.py 14
(approximate) 2
(atomically); 1
(do 5
(initial) 1
(let’s 4
(likely) 1
(lowest), 1
(more 3
(mutex 2
(myarg_t 4
(new) 1
(pid:29147) 2
*mutex); 8
(CanAccess(TlbEntry.ProtectBits) 4
(P1) 3
(PCB), 2
(SN) 1
L 17
%eax), 1
(117). 1
(2012-01-30-1-g1c41342) 1
(BKL). 2
(BSD). 1
(B’s 2
(G) 2
(LFU) 1
(P 1
(PDE). 1
(VPN=08). 1
(Virtual) 1
(a[7] 1
(curr->key 4
(easily) 2
(erroneously) 1
-1); 1
-5 1
-u 6
(if 13
(middle 2
(myturn 2
(scheduling) 1
(shown 5
(simplified) 1
(specifically). 1
(stop) 1
(though 6
(say 17
%eax,8049a1c 4
%esp, 1
%lld\n", 2
&rvalue); 2
(1 1
(100 4
(32-bit 1
(Another 1
(CFS), 1
(C’s 1
(MFU) 1
(NOT 1
(Tc1) 2
(a[8] 1
(another 1
(each 2
(global 3
(non-contiguous) 1
(formerly 1
(its 2
(long 2
(modulo 1
(note: 2
(probabilistic) 1
(probably), 1
(switching 1
(target) 1
(v1) 3
(virtual) 3
(you’ll 1
*malloc(size_t 1
*mutex; 2
*new); 1
-k 2
-t). 1
.... 1
/proc/meminfo; 1
0,0,0,0,0,0,1? 1
0x200000. 1
10). 3
1000). 1
107 1
13.1), 1
16.5. 1
17.4. 1
0x8049a1c, 8
0+ebx 1
-c 22
(using 9
(version 1
*d 1
*thread, 2
--tool=lackey 1
-10 1
(int) 10
"common.h" 7
# 16
%eax 24
%edi, 1
(-n 1
(right) 2
-t 20
./p4 1
0.03 2
0.5. 1
0001 1
0010 1
01 2
0100 1
0xFFFFFFFF) 1
(but 14
(c3), 1
-P 19
%ebx 1
*arg) 26
(finally) 1
(first-in, 1
(hopefully 2
(mutex->flag 2
(out 3
1) 52
1-second 1
10.1: 1
100) 3
109 1
12). 1
17.8, 1
19.4. 1
200,000, 1
21:1, 5
24(%eax) 1
(0xC0000000 1
(101) 2
(2) 4
(34K) 1
(Alpha), 2
(DMA) 1
(Lines 6
(NULL 1
0); 8
100). 2
10 165
10.2 1
(especially 2
-Wall 7
(0, 3
(20%), 1
(3) 2
(G), 1
(LRU) 1
(Linux, 1
(LoadLinked(&lock->flag) 4
(PC) 4
(PSJF) 1
(PTIndex 3
(S) 3
(With 1
(dare 1
(fill_ptr 1
(four 1
(full) 1
(header_t 1
(often 2
(p2.c) 1
(p5). 1
(usually 7
(store 1
(tiny) 2
(total) 1
(use 1
*dst 2
+19 1
-H 1
-pthread 5
1000 10
(free) 21
(gadgets, 1
(int 6
(left 1
(nearly 2
(quantum 1
(quickly) 1
(seconds) 6
(there 3
(this 4
(thread 6
(usually) 2
*(*start_routine)(int), 2
*m) 6
-A 6
(large) 2
(log2 1
(marked 1
25%. 1
28.11 2
28.4. 2
(particularly 7
(read 1
(reduced 1
(si 1
(too!) 2
(we 2
0.6 1
0x00000000, 1
0x03e8, 1
0xBFFFFFFF 1
1000s 1
112 2
15. 1
15.2. 1
16.1. 1
170 3
1959 1
*) 23
-15 1
-F 3
-f 1
1024, 1
12(3), 2
$0x0) 1
*ptr 9
-X) 1
(mutex); 6
(n) 1
(p2), 1
(part 2
(sorry!). 2
(whether 2
*), 2
**old, 1
*L) 4
*chan; 1
*tf; 1
(with 21
(word 3
); 1
*mem; 1
100000 2
11–19 1
120. 1
15.3: 1
15:5, 2
16.2: 1
17.1: 1
18.3). 1
19). 2
1945. 1
1954. 1
1963. 2
./main 6
0011 1
0101 1
0110 2
02 1
0x7fff691aea64 1
(now 6
(privileged) 1
(sadly). 1
(some 1
(v9 1
(a) 5
(broken) 1
(c2), 3
(causing 2
(kernel) 1
(milliseconds); 1
(new 7
(ns) 1
(pid:29267) 1
(pid:29384) 1
(potentially), 2
(“0101”th) 1
(main) 4
16KB 24
110, 1
1968 2
-pthread; 2
.EXE 1
(9.1) 1
0-byte 1
1965, 1
120 9
% 8
%ecx 1
(-p 2
(256 1
(AS) 1
(CompareAndSwap(&lock->flag, 2
(No 1
(PM 2
(Page 1
(Tc1), 1
(VAX/VMS) 1
(VPN) 2
(argc 2
(ignoring 1
100+(110−10)+(120−10) 1
(-i) 4
(0x200000), 1
(120−0)+(20−10)+(30−10) 1
(7.1) 1
(Advanced) 1
(CanAccess(PTE.ProtectBits) 4
(HW 1
(London), 1
(Process 1
(c3) 1
(ironically) 1
(mutex, 8
(next 1
(nice 1
(t1.c) 2
(that’s 3
(untimely?) 2
-S 24
-a 41
(perhaps 7
(pointed 1
(recall 1
(roughly) 2
(size=200) 1
(what 4
(we’ll 2
). 3
*args 4
*head; 4
--l1 1
-5), 1
0x03, 1
0x3000, 1
12(%eax) 1
14949, 1
*current 1
*rvals; 2
*ptr, 5
(normally 1
17, 1
1928 1
1964 1
1:0,4:100. 1
2.4 1
0 384
0.2 1
0x80000000 2
10.3. 1
100? 1
108). 1
11. 3
115–116, 2
13, 2
13.2, 1
132: 1
19.8 1
1? 1
*mutex) 12
+ 45
(PFN). 1
-R 13
(including 10
103.33 1
./process-run.py 2
*next; 6
-p 44
/dev/zero 1
/proc/meminfo 1
- 25
--b1 1
01, 2
1234567)) 1
2017. 2
(not 20
(A 14
(Bounded 1
(Niceness) 1
(R/W) 1
(Ready, 1
(TM 1
(Timer 1
. 53
0.0 2
10-ms 4
11916, 1
16KB)1 1
18.7 1
19.6 1
1] 4
2-MB 1
2.4: 1
20, 3
20-bit 3
200-MHz 1
2000, 1
28.6 2
*q) 2
-i. 2
/bin/ls. 1
0KB 13
0x0DC0. 1
0x7ffd3e55d2b4 1
0xC0000FFF 1
13.2: 1
29.1. 2
(quite) 1
2004. 7
1972. 5
12000 1
1 461
(user 3
(which, 2
*q, 4
*value 2
-1) 1
-l. 1
0). 2
00007f4e7d2d0000 1
07 1
0x300, 1
0xC0000000, 1
1-GB 1
1024 10
128, 1
13.5 1
137, 1
14.4 1
15.3 1
160 2
(repeat) 8
0(%eax) 2
0.001), 1
0000000000400000 1
04 2
0x000, 1
0x7ffe45522e94 1
10.5 1
100%. 1
2008–18, 5
1981. 7
135: 1
14. 4
15.1. 1
15.3, 1
0x80000000)) 2
10-byte 1
10.3 1
100%, 1
(such 25
(without 1
1” 1
*x); 1
-is-unsafe. 2
-m, 1
-p) 1
./fork.py 4
0.1). 1
06 1
0x200, 1
16 92
17.3. 1
(roughly 2
, 15
--b0 1
-S, 1
00, 1
1, 80
137298 1
3Like 1
(similar 3
100s 1
2013. 4
2015, 1
202 1
22.11 1
220 1
24. 1
2501, 1
26, 1
29.10: 2
2KB), 1
30.12 1
34KB 1
36K 1
-> 10
(PTE.PFN 2
(R) 1
(T2), 2
(Third 2
(Tp). 1
(about 1
1), 5
16(%eax), 1
16.2 2
17.1 1
17.7: 1
18.6: 1
19.5: 1
1969. 3
1.01] 203
3a); 1
(somewhat) 1
1030 1
1990. 2
100 87
-s 21
(a 21
15KB 7
2.3 1
"B"); 4
3KB: 1
11 110
(waiting 2
(write) 1
2.6: 1
20. 1
20.2. 1
-r 5
(it 12
(lock->turn 2
(no 4
(nods) 1
(non-toy) 2
(on 11
(p.81).” 1
(p3.c) 1
(slow) 1
0] 4
0x0(%ebx) 1
13: 2
1978. 5
1987. 1
4.6 1
(that 5
(tmp 1
(v2) 1
(va.c) 1
(vruntime). 1
(wc). 1
(sched 1
2003. 4
%d)\n", 4
((flag[1-self] 2
(0x1) 2
(9.2) 1
(B 3
3764 4
0-9), 1
2000. 9
./multi.py 4
./p2 1
0,0,0,0,0,0,1:0,0,0,0,0,0,1:0,0,0,0,0,0,1 1
0,0,0,1,0,0,0:0,0,0,1,0,0,0:0,0,0,1,0,0,0 1
00007f4e7d932000 1
10% 5
10.7 1
100), 1
1032 1
13.4 1
14.3 1
10, 14
13:4, 2
10,000 8
1996. 4
44000 1
1111 7
20.1 1
2008). 1
22.5: 1
(assumes 2
*/ 16
*c, 5
*old_ptr; 2
-1; 8
-1KB. 1
(which 39
*head 1
(Figure 45
3980 3
3A 1
21.3, 1
22, 1
22.2, 1
29.5 6
(by 13
(double 1
(job 2
(literally) 2
(new_head 2
(p1.c) 1
(p4). 1
(preempting 2
(pretend) 1
(probably 1
(remember, 1
(size 1
(too) 1
(usually, 1
12. 2
................ 1
26.1: 2
26KB, 1
29146; 1
3. 32
4.8 1
1100 3
15.4: 1
16.3: 1
17.2: 1
17: 1
17:4, 1
18.1: 1
4 164
./thread 3
28.8 4
2github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
1. 43
19.3, 1
2.7 3
20), 1
2007. 3
2016. 1
2018, 1
21.1), 1
214 1
100, 6
1KB) 1
4KB). 2
128) 1
(where 12
14, 2
./p3 1
(available 1
(either 3
(fun!). 1
(hopefully) 3
5% 3
-L 18
*H) 2
*lock) 20
+1 1
-O 1
105-117, 1
1964. 2
4(%eax), 1
0% 5
29.7 2
30.12: 1
30.4) 1
(simple 2
(page 49
(physical 1
(pointers) 1
(resulting 1
100,000 1
17.1). 1
1792K 1
19.1), 2
1960. 1
1960’s 5
13 93
(yet) 3
*cwd; 1
*input) 1
*myargs[3]; 2
*str 1
--trace-mem=yes 1
(kernel 6
5.7 1
50), 1
5:100,5:100. 1
7.5 2
70%. 1
78-101, 1
1124 2
1973. 2
4.2 1
400 1
30.1. 1
30.14: 1
3; 3
(stuck 2
*cond); 2
*rvals 2
*src 3
-nw 1
1000, 5
10ms, 1
10th 3
1Note 2
4MB), 1
1KB 13
13.2 2
14-bit 4
00 4
(turning 2
201 4
30.6: 1
-v 17
(or 83
(pid:%d)\n", 9
(required 1
(running 1
(said 2
-o 9
./array 1
./mem 5
0+5+10 1
0th) 1
0x3C00). 1
0x3F80, 1
1); 4
10.1), 1
100); 2
1024. 3
104 1
(see 12
(that, 2
(unused) 6
(value 2
(yes, 4
2), 3
5.5 1
1m 6
14.1 1
15.6: 1
0000 14
(virtual 1
22.10 1
22–23), 1
/proc 1
00000000019d5000 1
0111 1
03 1
0x1096008c0 1
(the 61
8.4 2
88761, 1
9.3 2
90%, 1
40000 2
4088 1
4096-byte 1
3A: 2
3KB. 2
00007f4e7cf06000 1
15 96
1110101 1
0.4 1
250 5
11168, 1
11:5, 2
(you 5
20% 7
512 9
55. 1
16KB] 5
18705, 1
0x8049a1c. 2
1.0001 1
10-entry 1
10.1 2
-l 19
./main). 1
(OS 1
(PDE) 2
(TLB 16
(Thousands) 2
(above), 1
(conservatively); 1
(cpu.c) 1
(free 1
(https://github.com/remzi-arpacidusseau/ostep-projects) 1
(left). 1
(lots 1
(managing 2
(non-paged) 1
(notably) 1
(note, 1
(one 6
(only 5
(other 1
(sometimes, 1
(stride=100) 1
(upon 1
(use_ptr 1
2, 38
56KB 2
16.5: 1
17.4: 1
*parent; 1
300. 3
24KB 3
10.2? 1
101. 2
12:7, 1
15.2: 1
1586, 1
16.1: 1
16KB, 1
1982. 7
0, 55
100. 6
12:6, 1
13.2; 1
13.3: 1
15.1: 1
15:3, 2
15KB, 1
1961. 1
1963, 1
0x068, 1
27.2. 2
28KB 2
1277, 1
13.1: 1
15). 1
16.1). 1
2-bit 1
6.4 2
1970 1
17.7). 1
18.3: 1
19.2: 1
19345221) 2
1957. 1
/* 16
0; 116
1)) 2
(through 1
(xchg). 2
1793, 1
1991. 9
00007f4e7d731000 1
010000; 1
0x0(%ebx),%eax 1
4196 1
(something 2
4-KB 3
0th 2
15.2 3
113 4
1970. 4
1970’s 2
2- 1
20.5: 1
2015). 1
22.3: 1
23.2: 1
28.16 2
2:70, 1
7.3 2
1992.. 1
2.1 2
2001. 1
2003, 2
*argv[]) 23
1966. 3
0) 40
0x0(%ebx), 2
1.2.1) 1
10,000,000 2
100,000, 1
100:100,100:100), 1
1Each 1
: 289
32K 3
== 91
ALGORITHMS 1
(start 2
4.2: 1
4.3BSD 1
16.1 2
16384 1
16492 1
1174 1
29, 3
*malloc(size 1
2014 1
* 17
19221041) 2
1950’s 1
1ms, 1
20-29): 1
20.3: 1
20.6). 1
2000; 2
21.2: 1
21: 1
22.1: 1
23:2, 1
10.4 1
104. 1
) 46
*mutex, 2
*ofile[NOFILE]; 1
20 95
1.00] 5
32k 6
4:100,1:0. 1
API 62
(trustingly) 1
0x800, 1
4: 2
128: 2
0x8049a1c 6
16708 2
14KB; 1
18.6 2
*new_head 2
21.6 1
**value_ptr); 2
*abs_timeout); 2
*old_ptr, 2
-1, 1
-= 1
3:0,5:100,5:100,5:100 1
26.1, 4
2010. 7
*m); 1
1970s 1
0x30 1
0x700, 1
0x7ffe1033b8f4 1
100%), 1
1028 1
110000) 1
143012 1
16.6 3
17.5 1
18.4 2
19.3 1
Abstraction 2
Affinity 1
10+20+120 1
100+110+120 1
1074 2
12) 1
17.6: 1
3); 1
30.15 1
-l, 1
...; 1
20.4: 1
2KB 8
7.9: 1
*tail; 2
... 84
4KB 16
28.10: 2
23, 2
*ptr; 6
1975. 2
256 6
128KB 1
1101 2
1110 2
108 11
11). 1
11:1, 1
135 2
17.5. 1
5.1 1
1: 7
2.1: 1
2.4). 1
2000) 2
20000000) 2
22.9 1
26.5 4
27.4 4
28.3 2
28.9: 2
22.5 2
2212 1
200, 3
2m 1
-20 2
8 109
0: 4
4m 1
23-bit 1
3 231
30.11 1
300 4
3121, 2
3412382, 1
4.1 1
4096 3
*ptr) 7
20(%eax), 1
10+20+30 1
10.3: 1
1000; 1
51. 4
7.5: 1
Algorithms 4
5.1: 1
50) 1
1-byte 1
1234567 7
16.7 1
18.5 2
19.4 1
1960’s. 1
1970; 1
25 33
2015/02/10/understanding-glibc-malloc/. 1
2”. 2
-B 4
8(%eax), 1
0x200000 4
0x600, 1
1.0; 1
*tmp 7
1993. 6
28.14 2
28.9, 2
18). 1
12 89
50. 1
6100, 1
64GB 1
34920. 1
1996 3
100K 1
10; 2
7.8). 1
Assume, 3
BOUT 1
68 1
7). 2
7232 1
8.1). 1
86 2
8KB) 1
9), 1
90% 1
26.1 2
20th 1
21.3: 1
22.2: 1
23.1: 1
24:2, 1
256-byte 1
28(%eax) 1
28.1), 2
20.4 2
13); 2
2K 6
19.1). 1
19.3), 1
0+1+2 1
20.2 1
6= 2
36.4% 1
2.9 2
(who 2
128-Byte 1
7094 1
13–14). 1
BUCKETS], 4
100ns 2
170. 1
19.5 2
4.5 2
29 25
./cpu 5
0), 1
AM 2
26.7: 2
3, 25
30.4: 1
300, 2
5, 6
28.9 4
1.3.37 1
-n 19
0x37) 1
0xC0000000 2
1.0, 1
10.2: 1
10:1,10:100). 1
1962. 7
09 1
2000 15
7.4: 1
3:50,3:50 2
2009. 5
*c) 18
128-byte 2
7355 1
8.4: 1
9.3: 1
101 4
172, 1
1970’s. 1
1We 1
2.3: 1
1980’s, 2
0.9. 1
05 1
0x100, 1
10); 1
10.6 1
100-bytes 2
100byte 1
117, 1
13.3 2
28.15 2
21.3 3
14.5 1
2k 1
12(%eax), 1
128 13
1963.” 1
1971. 1
1980. 1
7.7). 1
70, 1
7282 1
7354 1
8.3: 1
9.2: 1
Background: 1
AS 10
AZY 1
18.5: 1
19.4: 1
1959. 1
2008–20, 49
1; 42
AMPSON 1
272, 1
-b 3
8.2 2
4096, 2
50,000 2
29.8 2
10) 2
14 71
14.2 1
215, 1
148K 1
30.2: 1
13.1 2
15.5: 1
0x500, 1
0x8049a1c). 2
110). 1
1224 1
14.6 1
15.5 2
16.4 1
17.3 1
<stdio.h> 15
<sys/types.h> 1
<sys/wait.h> 3
Abstraction: 3
5.4 2
29.2 4
1968. 11
1986. 1
1KB. 1
2.2: 1
2.5). 1
23254, 1
25% 1
4k 1
50th 1
29154, 1
1036 1
111). 1
14.7 1
15.6 2
16.5 1
4) 2
4904, 1
4GB 1
21.1 1
1991, 1
3] 1
22.9. 1
*q; 2
13:2, 1
140 2
18 54
18.2 1
19.1 2
192KB 1
19384 1
1989. 5
29.8: 2
26.7 4
1995. 6
AUSE 1
28.5: 2
/ 1
0.1 2
26.6 4
5121024 1
64). 1
30. 2
3.33). 1
143,012. 1
22 38
22.2 1
22.8: 1
23.1 1
152K 1
7.8 1
22.6: 1
1MB 1
4.4: 1
40, 2
--l0 1
14). 2
18, 2
Birrell. 2
Boneh. 1
Buffer 9
CHEDULE 2
CONDITIONS 1
1998. 2
2). 7
27.6 2
1:0,4:100 2
20); 1
20.6 1
21.5 1
22.4 2
23.3 1
54.5%. 1
8) 3
<string>\n"); 1
30.3: 1
15.1 2
16.6: 1
17.5: 1
18.4: 1
18–21); 1
19.3: 1
1949. 1
1980s 1
2. 29
20.6: 1
4000, 1
4b: 1
5.3: 1
57.1% 1
6.2: 1
7.1: 1
9). 1
56, 1
CPUs? 3
38 8
2016 1
28.5 2
Ability 2
29.4: 2
29147 2
30.6 1
27.5 2
24 37
24(%eax), 1
30.15: 1
30.2. 1
32, 1
17.4 1
15), 1
26.4: 2
16.4: 2
17.3: 1
A 728
26.2: 2
1985. 2
1994. 1
200. 3
2018), 1
22.4: 1
18-bit 1
110 2
A2 1
Addison-Wesley, 11
ANAGEMENT 17
6.3 1
Calling 8
Clayton 1
22.7 2
29.4 4
Achieving 2
Aleksey 3
Antoine 1
Approach 1
28.4 2
5→0 2
26.6: 2
30.8), 1
15.4 1
32-bit 16
36291, 1
16(%eax) 1
27.3: 2
8.7 1
17.6). 1
A2’s 1
ASID 9
Allocator 1
Andrew 4
Available 8
16), 3
16500 1
18.2, 3
2.5 1
2005. 9
Allocators 1
Amazon’s 1
64KB 9
4). 7
Coffman 1
26.3 2
2; 5
30.11: 1
30.14). 1
32896; 1
Assume 33
29.3 2
6) 5
28.4: 2
3000; 1
16-byte 4
16.3 2
3752 1
1780K 1
27KB. 2
9.6 1
18.2: 1
27.1: 2
30.1 1
20.1); 1
-I 6
B1’s 1
28.17 2
1K 1
13. 2
AFIPS 4
2007, 2
AccessMemory(PDEAddr) 1
As 158
47 2
4:1, 1
Completion 4
27 32
27.2 2
28.1 2
28.7: 2
29.6: 2
3-GHz 1
30.8 1
6.2) 1
64-bit) 1
8:10, 1
18.3 1
17 66
17.2 1
17.8: 1
18.1 2
18.7: 1
1800s, 1
1979. 2
30.7: 1
20.5 3
-i 18
..., 2
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 1
0.10). 1
0.8 1
0x00000FFF, 1
1% 1
10), 1
100% 5
7 127
60% 4
64-Byte 1
64-byte 7
74 1
83 1
Accounting 1
Actually, 1
29.9: 2
36 11
29.3: 2
32KB, 1
9.8 1
19 58
19.2 2
1960’s, 2
1990). 1
940 1
184–199. 1
19.1: 1
1988. 2
320KB 2
2016.. 1
21.4 1
2N 2
1k 9
14KB 2
AME 1
Accessing 2
2008–19, 138
Atlas” 1
105 6
7.2 1
Conditions 1
Cups” 1
0? 3
30.3) 1
335, 1
B, 22
BEST 1
2: 3
4), 2
33 12
3906, 1
3:50,3:50. 1
3K 3
179–180, 1
28.2: 2
1999. 1
1KB, 1
1956. 1
1997. 5
4. 27
= 415
B5000: 2
22.3 1
2’s 1
2.3) 1
15, 7
AND 6
Almost 1
203 1
Austin 3
Base[SN] 1
Blocked 4
Boot 1
9.1 1
DATA 16
0x1024 1
0x900. 1
34 12
Aha! 1
Balakrishnan 1
30.10: 1
30.13). 1
384KB 1
? 9
4.5: 1
4(%esp), 2
1980’s; 1
29.1: 2
30-byte 1
30.3 1
1965. 6
1:1, 3
1e7; 2
ACM, 19
B? 1
22.9: 1
30.5: 1
20.2: 1
20.5). 1
AVOID 7
Alto 2
22.12 1
25. 1
254: 1
26.3, 2
27.2, 2
Dahm 4
Darago, 1
1.0 1
10. 7
1000. 2
Baumann, 1
Best 2
Bhandarkar 1
39 11
4.3). 1
40-ms 1
4.3) 1
1998 2
28.10 4
21:10, 1
30.9: 1
1974. 3
1983. 4
20,000,000. 2
21.7 1
Bayer. 1
23 37
3KB 3
16.1, 2
21.1: 1
Abstract” 1
Answer 1
128; 1
7.8: 1
C-language 1
CACM 1
28K 3
29.11: 2
Data 13
372K 1
Andrea 7
11–12), 1
40% 5
42 7
Blocked: 1
A2, 1
48 9
40KB 2
5) 3
2) 7
20.1: 1
218 1
24113 1
4.2. 1
1992. 4
AMAT: 1
22.6 2
Berkeley. 1
23.2 2
4, 5
16384, 1
22.3). 1
Adam 1
B. 18
BUILD 1
8.1 1
9” 4
CPU, 33
31) 4
30.10): 1
Descheduled 1
43 8
Approximation 2
Attacks 1
4088), 1
4200 4
Building 5
ACM. 2
4MB) 1
4page 1
7.9 1
9.7 1
99, 1
99.9% 1
254 3
28.12 2
20.3 2
AT&T/Bell 1
26 32
Beyond 14
26.5: 2
4-bit 3
16K 1
24114 1
Ahead 2
132 2
Bigger 1
8.7: 1
<< 9
CREATE 1
3: 3
36, 1
Design 3
7.4. 1
12, 2
B) 3
45 6
526, 1
Butler 3
APPING 1
5). 6
5.4: 1
50, 5
5000, 1
31 21
> 5
ABCABCABCABCABC 1
ACKGROUND 1
ASPLOS, 1
ATOMIC 2
26.2 4
Boston, 3
27.4: 2
7) 3
16k 5
255 2
And 108
Atomicity 2
Brooks 1
80-20 4
85.7% 1
Cache 18
4.1: 1
3764-byte 3
EAKED 1
70 2
12-bit 2
B-tree, 2
Beginning: 1
63 3
CISC, 1
ARGE 1
655, 1
7), 3
22.8 2
5th 1
6.3: 1
4088. 1
28.5. 2
21 45
Account.html. 2
Annals 1
27.1 2
Bouron, 1
28.2; 2
@ 8
1962 2
28.13 2
28.6. 2
3) 2
30.1: 1
7.7 1
76–86, 1
Coding 1
448KB 1
3One 1
EC2 1
9. 9
15) 4
51 18
Block 9
64bit 1
Calculate 1
Actually 4
Address-space 1
75 3
256KB 1
32-bits 1
7.2: 1
75% 1
8.1: 1
21.2 2
Allocating 1
Anoop 2
28.6: 2
Broken 3
28.3: 2
A1’s 1
1990s, 1
14:7 1
Avere 1
Bryant 4
<pthread.h> 8
99% 2
8.6 2
Conditions: 1
49 1
4-byte 3
ECIDE 1
<fcntl.h> 2
16KB; 1
60 13
But 49
90 1
Compilers 1
28.3. 2
And, 2
8(%eax) 1
256m 1
40 28
44:1/2. 1
29.11 2
9:2, 1
22.1 2
Analysis: 1
Architecture: 4
28KB1 1
Burroughs 5
29.2: 2
ARM 2
150 10
2 257
B1 1
Build 4
AIN 1
ARPACI-DUSSEAU 38
9.5 1
Create 3
4:3, 1
4.3 1
EMBRYO, 1
<string.h> 2
17:10, 1
7.10 1
CONCURRENCY 3
ACE 1
Computers, 3
324 1
Annual 1
8(9):569, 2
26.4 4
4000 3
50? 1
4:10, 1
ACHE 1
22.7: 1
Andreas 2
Atomic 2
29.5: 2
CONTROL 2
30.4 1
ASIDE: 4
ASIDs, 1
2.2 2
Base-and-bounds 2
Buy 1
ATC 2
Anticipatory 2
< 24
Data: 2
4KB, 3
40100 1
EXCLUSION 1
<unistd.h> 6
19.7 1
8. 12
CRITICAL 1
Certainly 1
Computer” 5
32868. 2
Anomaly. 1
93 1
27.3 4
4b, 1
549–557, 1
7); 2
ACM 11
250, 1
Apple, 2
Award. 1
3), 3
Cheap 1
32 33
17.2. 1
AccessMemory(PTEAddr) 4
200 24
Before 21
B’s 8
ATTACK 1
Arpaci-Dusseau 3
>> 11
David, 2
5.3). 1
45, 1
Edsger 8
<value>\n"); 1
Adding 7
Afraid 2
ADD 1
ALLOCATED 2
Ah 1
40050 1
Array 4
ALLS 2
28 33
28(%eax), 1
28.2 2
28.8: 2
29.1 2
29.7: 2
29267 1
29384 1
2This 1
Computers” 1
41 10
423, 1
Again 2
2002. 1
Berkeley 7
CA, 7
AW 5
Basu, 1
A; 2
Dealing 1
6). 1
4a 4
EnvyFS” 1
2.5: 1
820, 1
Algorithm 5
Coherence” 1
Contents 1
Allocated 9
48KB 4
49, 2
5.6 1
512-byte 1
59–73, 1
6.5 1
7.4 1
8-byte 1
8.3 2
B; 1
30.7 1
3). 5
Control 11
Cooperative 1
D.A. 1
Allocation: 2
2011. 7
CHEDULING 50
CISC. 1
Amazingly, 4
Berger 2
ANAGE 3
Developer’s 4
64-bits); 1
Exactly 1
5 169
2010, 2
9548, 1
Applications 4
Art 3
Contrast 2
BFS. 1
Attempt 3
ASPLOS-IX, 1
5KB 1
6. 20
7.6 1
AKE 1
26.3: 2
Ask” 2
8049a1c,%eax 4
Babaoglu 1
300), 1
30.9 1
1957 1
50 46
Dennis 6
Allocator” 2
2013, 1
CONDITION, 1
CPUs), 1
April 10
Bit-precision” 1
Alan 3
Diego, 4
ECESSARILY 1
Exclusion 4
5.2 2
20KB 2
API, 1
Compared 2
Assuming 10
Correspondingly, 1
Create: 1
Decision 1
Depending 2
Despite 1
E) 1
Elias 1
ALWAYS 1
27.2: 2
B-tree” 2
Bairavasundaram, 1
9 119
35 12
37 8
4-GB 1
512KB 2
Directory, 1
Apparently 1
23.1. 1
Cache” 1
Come, 1
Are 6
ArpaciDusseau. 1
Although 16
And...? 1
ECURE 2
Failing 3
500 4
21, 4
ARDWARE 2
Concept” 1
Concurrency 1
Controlling 2
B-tree 2
Again, 3
Amazingly 1
Apparently, 2
B-Trees: 1
Even 20
Along 2
28.1: 2
B97, 2
Became 1
Belady, 1
4(%eax) 1
1966 1
2.6 3
512m 7
ETH 1
Apple’s 1
Atlas”, 1
Chile. 1
Compacted 3
Corporation 1
Artificial 1
76 1
B: 12
Bach. 1
Battle 1
C9 1
C95]. 1
Act. 1
B5000 4
Babaoglu, 1
Couleur, 2
BASED 17
7.1, 1
7KB 3
7620, 1
BUCKETS; 2
Experimental 2
Alternately, 2
28KB, 1
Baby 2
9.2 2
Black 1
44 6
4400 1
4K) 2
6.3. 1
Either 4
24-bit 1
Austin, 1
Comment 2
Bobrow, 2
Correcting 1
Baby: 2
8), 1
Earth 2
Fast, 2
52. 2
21-bit 1
21.2, 1
Address 25
BE 1
Bart 2
Critical 2
Before, 2
8-page 1
8, 1
8.5 2
Bovet, 1
FAST 7
Always 4
29.10) 2
Baron, 1
ALICIOUS 1
C: 2
4.1). 1
20(%eax) 1
62 2
7. 16
Experiment 1
29.9 2
Authors: 1
Conference; 1
But, 7
Craft 1
Because 50
80% 7
Edition)” 2
Flag 2
6.1 2
CFS 40
28.7 4
Algorithm” 1
BFS, 2
BIQUITY 1
Crockford’s 2
Belady. 1
Belady’s 2
8-bit 3
87, 1
Brian 2
Fast 4
Anomaly 2
29.3). 2
Bone: 2
APIs, 4
CPU), 6
5), 5
2006. 6
80 18
;store 1
ANDOMNESS 1
ANY 1
Basically, 5
Counters 8
Certainly, 2
D, 2
Borg. 1
85 1
Environment” 4
Flash-based 1
64k 1
CRUX: 6
29.6 2
Allocated] 2
Butenhof. 2
BSD. 1
Currency 1
846 1
Bell 2
;add 1
9.4 2
C) 3
FindFreePhysicalPage() 1
Another 38
2Q 3
Brooks. 2
B’s. 1
CPUintensive 1
55 1
2015. 1
801, 1
Find 4
32KB 5
API. 5
Bertinoro, 1
Culler, 2
DO 1
DRAM, 1
Buddy 1
<sys/time.h> 1
Execution 8
Frans 4
7.6: 1
Call 8
2Fortunately 1
Allocation 3
C.J. 1
Bad 3
DVICE 1
9) 1
Berkeley, 2
ANDLE 1
AddressOfPTE 1
CHEDULER 1
Framework 1
Architecture. 1
30 31
30.2 1
C; 2
Compute 4
64 17
204 3
8KB 6
Fred 1
34K 3
Accurate 1
Beyond” 1
Comes 1
Daily 1
Don’t 17
C), 5
A, 16
F. 8
FreeBSD” 1
7.9). 1
Case 4
2] 2
Anderson, 2
Applications” 1
Be 5
Disk 5
<assert.h> 4
Bit 3
; 25
Analysis 5
CLOCK 2
From: 1
Avoiding 1
Acta 1
Algorithms” 1
Check 8
Copy-on-write 1
Covering 2
27.1. 2
9, 6
Gray. 2
3” 1
Amazing! 1
Anderson. 1
Consider 2
Delete 1
EALING 1
Chapman 2
APIs 10
FILENO). 1
G62]. 1
70–76, 1
Cassandra, 1
30, 3
CCESSES 1
Approaches 1
Boost 2
Does 29
AIX 1
Bounds[Segment]) 1
CHEDULERS 1
April, 3
CPU(s) 1
Fujiki, 1
BUCKETS 2
30.8: 1
All 21
Child: 2
9.5. 1
A) 2
2KB). 1
9-bit 2
Gray’s 2
40%) 2
Bovet 2
Any 3
Could 1
Detail 1
ECHNOLOGIES 1
Clearly, 9
Coalescing 2
Cobham. 1
Cobham’s 1
Complex 1
Characteristics 1
30-bit 1
COW 3
Aside 1
B’s). 1
ERFORM 1
ARC, 1
;load 1
CPU). 1
Colorado, 1
CVs 2
Gibson, 1
Belady 3
3000 4
Assignment 1
Christenson. 1
Circuitry 1
ACHING 1
3): 2
Adaptation 1
HY 5
40. 2
Burchfiel, 2
Approach: 5
D.B.G. 4
Deterministic? 1
ASID, 1
FOOLISH 1
ERSION 166
Germond. 3
71755, 1
Conference 1
Cores 1
Corporation, 1
CPUs. 7
Assumptions 3
C.H. 1
ESS 1
Anyhow, 1
>= 5
Arrivals 1
Concepts 2
Caching” 1
Goodness, 1
Bits” 1
400MB 1
Attempt: 4
C’s, 2
Completely 5
Accesses 2
4.4 2
Ajay 2
Hawkins, 1
4200, 1
Bye 1
B+96, 2
Davis 8
Deuterium” 1
False) 10
ASY 154
ESX 2
Hoc 2
7356 1
Corbato. 1
Corbato’s 1
Critically, 1
Casting 1
A’s). 1
CONDITION 19
ETTING 1
EVELOP 1
A: 13
Bradford 2
Conceptually, 2
Chunks 2
Guide 3
Bruce 1
49).” 1
August 5
Automatically 1
Convoy 1
Approximate 10
4b 4
Allocate 3
Allocation” 3
46273, 1
C-callable 2
BAD! 2
BF 2
Benchmarking” 1
Blasgen, 1
AUER 1
Electroanalytical 1
How, 1
8.5: 1
9.4: 1
AT 1
Detailed 1
Chevalley, 1
BETTER 1
CPU? 11
Anything 1
Appavoo, 1
ABOUT 1
BufferOverflow.pdf. 1
Conway. 1
Clock 2
HOW 6
C. 24
4MB 2
Daley. 1
B). 2
Corporation. 1
Behind 4
5.3 1
56483, 1
5–7), 1
5(2): 1
C.A.R. 1
December 8
Do 18
Farrell, 2
CFS, 3
Above 3
Europe(!). 1
I/Os 3
30.13: 1
Imagine 39
Ah, 2
Dijkstra 12
Common 3
Barton 3
CPUs, 14
Engineering 1
Architecture” 3
APIs. 1
Burnett 1
Couleur 1
Coherence 1
Hardware 18
Cocke, 1
5. 27
6KB 1
B86], 1
Corwin, 1
Between 2
I/O: 4
Arpaci-Dusseau. 3
6 116
50-ms 2
51, 3
6.4: 1
E. 20
Fellner, 1
Abstractions 1
Evaluating 4
CPU 255
Cox. 1
30.5) 1
January 14
Aren’t 1
Errors” 1
Communications 20
Base[Segment] 1
Caches 3
Envision 1
About 5
B 157
BSD) 1
DeWitt. 1
Costs 1
Harmful” 2
Computing; 1
Convention. 1
7, 2
BSD 3
How 141
Bus 1
Inverted 1
Assign 1
6+5 1
CACM, 5
Deciding 1
6000, 1
EnableInterrupts(); 2
Al 8
First, 58
FIFO, 7
FIRST)? 1
Cybertron 1
3000, 1
L. 10
At 31
FAULT 1
Compile 1
Better 4
Cesati. 3
Evans. 1
AccessMemory(PhysAddr) 6
COND 2
Basic 10
Detection 1
DEC 3
Discovering 1
C’s 1
7.2, 1
Digital 2
BSTRACTION 20
Incorrectly 1
Buttlar, 2
Jacqueline 2
August, 1
6.2 1
CPUbound 1
Different 5
7.3: 1
Execute 7
Anita 1
Fleischmann, 1
CPU-bound; 1
FetchAndAdd(&lock->ticket); 2
Dilemma” 1
39016, 1
Lampson 6
Atlas 10
Fault 4
Copper 1
California. 3
Chapter 1
Every 1
Allocator: 1
CPUs) 1
Batch 1
EEDBACK 11
Daggett, 1
Dominion 1
DID 1
8k 1
ELOCATION 2
Below 2
Innovator’s 1
CPU-intensive 4
Josep 1
Begin 1
64, 1
Clustering 1
Dijkstra; 1
7.6). 1
Fagin. 1
Approach” 3
Form 1
CR3 1
G) 1
DiskRead(PTE.DiskAddr, 1
3B: 3
MA, 2
B.W. 1
Base/Bounds 1
Core 3
Callers 2
Clear 1
Flexible 3
Also, 1
California, 6
CISC 7
EYOND 27
Debugging 2
Dirty 2
Days 1
991 1
EPLACEMENT 2
Buffer” 1
Israel. 1
Cambridge, 2
KPTI) 1
Being 3
64-bit 10
Comparing 2
EALLY 1
73-96, 1
Gaming 2
Bonwick 3
From 23
Fusion 1
Gates 1
Doctoral 1
4.3: 1
Mac) 1
GBs 1
Base/bounds 2
DMA). 1
Canada. 2
Clements, 3
Frame 1
Atomically, 2
Canada, 4
CPU: 1
Embedding 1
EFERENCE 1
Distribution, 1
Denning. 2
Denning’s 1
EY 4
C++ 2
Italian, 1
Concurrency? 1
Kanev, 1
Bershad, 1
7.1 1
Compatible 1
ERMS 4
7353 1
Gets 2
Both 7
Burroughs, 1
Golding, 1
Glenn 4
Donkey. 1
4146 1
Manager” 1
Gecsei, 1
Boston 1
Declaring 1
Certain 1
Condition 6
Generate 2
Available: 29
Chemistry, 1
Carl 5
Charles 1
Early 3
EG 1
<virtual 2
Doing 23
Easy, 2
CCS 3
Jackson-Edwards. 1
Corbato 4
Kathryn 1
Binary 1
7.7: 1
Concurrency), 1
Considered 2
8.2: 1
Goodman. 1
Goodman’s 1
CPU-bound 2
Here, 13
Going 1
Download 4
4a: 1
McCall. 2
Ginting, 1
Bottom 1
Definition 1
Change 4
Counting 2
Hansen. 5
Average 1
Child 1
Examples 3
Classic 1
Eligible 2
EMORY 36
AMAT 4
Each 19
FIFO: 1
CV 2
Jiaqi 2
Dennis) 1
Kernel 14
Boilen, 2
8.6: 1
Edward 2
Counter 6
9.1: 1
Candea, 1
Gray 6
Caching 1
Hits+M 1
Harcourt, 2
D′ 2
5.1; 1
Mellor-Crummey 4
Gollum, 1
Bouron 1
ESOURCES 1
Concept: 1
Dickey. 2
ESTRICTED 1
A’s, 1
Coarse-grained 1
FIFO; 2
Compiling 2
Elliott 1
END), 1
Approximating 1
Ed2.pdf. 2
Graham. 2
Caching, 1
Jobs 2
Dialogue 3
LRU. 3
CFS) 1
9.5: 1
Emacs. 1
D.H.J. 1
99 7
Canyon 1
Great 5
Center, 1
House, 1
Heart 2
E.W. 2
5.2: 1
Microprocessor 3
Guide. 1
Brother” 1
Emacs 1
DOS 1
Hansen’s 2
Electronics, 1
BFS 1
Come 3
Factor 2
Computers 2
Errors 3
EVEL 11
Architecture 9
Facebook). 1
H&P 2
Chunk 1
Juan 1
Dijkstra. 9
LRU’s 3
CMU 1
A), 2
Gandhi, 1
Dave 3
<stdlib.h> 9
Case, 1
HARES 1
Chang, 1
I/O) 2
Instead, 7
Last 1
5: 2
NPUTS 1
HICH 1
CPUs: 1
EvictPage() 1
Death 1
Implement 4
It’s 4
Base 3
Conference, 7
Fall 5
Computing, 3
Evans 1
Example 18
Argument 2
Formalizations” 2
Heap 16
Cohen, 1
Julin, 1
Dijkstra’s 5
Labs” 1
CONCURRENCY: 15
ARC 1
HAPTERS 1
Department, 1
A1 3
AMD 1
Humorously, 2
Compaction 2
INITIALIZER, 2
Equipment 2
Library” 2
6.1: 1
OK 4
ONSTANTS 1
Class? 2
Fine-grained 1
Design, 1
Examine 9
Jacob, 1
Bonwick. 1
Countermeasures” 2
Finding 2
Custer, 1
Examination 1
Examples”. 1
Arpaci-Dusseau, 10
History” 1
I/O). 3
Complete 1
Karels, 1
EAD 1
EE 1
Effectiveness 1
ATA 21
HREADS 1
DisableInterrupts(); 2
Distribution 1
ASLR 1
I/O, 3
Control, 1
IST 2
Era 2
Linux); 1
7332 1
82% 1
OS-ignorant) 1
Code: 2
Fortunately, 9
Details 1
Done 1
Jeffrey 1
Bosch, 1
Broken: 1
D 109
DOO 1
FILENO 1
F.J. 1
Atlas. 2
IRTUAL 19
IT! 1
Concurrency. 1
L4. 1
Licklider. 3
Capel 2
Embedded 1
Abdel-Wahab. 1
Hash_Insert(hash_t 2
Hill. 1
Hong-Tai 1
Access 9
Idea 2
Corbet. 2
ITS 1
Evaluation 2
M.K. 1
Has 1
9.1). 1
OSes 2
Commodity 1
Fun 3
GB 7
GHz 2
GUIDELINES 1
Finite 1
By 58
DEKKER’S 1
Decepticons1 1
Follow-on 1
February, 1
Berger, 2
In-ternational, 1
Innocent 2
Conditions? 2
Lanyue 4
Lipman 1
Cilk-5 1
English 1
Advanced 1
Android), 1
EECS 1
Hydra” 1
After 21
Instrumentation” 1
Couleur. 1
Ideally, 2
FLOW 1
MRU 2
Hash_Lookup(hash_t 2
96 2
Considering 1
FOR 2
Druschel, 1
PERATING 184
Johnson, 1
Good 8
Firefox, 1
CFS” 1
DRAM 1
Dekker, 2
Fortunately 2
Further, 8
Beth 1
Introduced 3
Interactive 1
Cool, 1
Levy. 2
Lipp, 1
Cocke 1
F.H. 4
CompareAndSwap(int 2
Architectures 4
ETERSON 1
I. 1
Allows 1
Intelligence 1
Creating 2
Its 4
Flow 6
Machine” 1
I/O), 3
A. 29
Creation 6
Fill 1
EARN 1
Park, 2
K 6
Google, 2
Gain 2
CODE 2
Dekker’s 6
ECTION 1
Google 2
Futex 2
Bill 1
Isolation” 1
Joe 3
Design” 4
Little 2
M62, 1
Computations” 3
Fetch 5
Contents: 1
B-trees); 2
Eindhoven 2
IBM” 1
Alpha, 2
Jonathan 3
D) 3
Daniel 3
Definitely 1
Markowitz, 1
IA-32 4
ADDRSORT, 1
AMAT, 1
EDUCE 1
Pesterev, 3
For 194
Large 2
Lauder. 1
Levels 1
Linus 1
Destroy: 1
EPARATE 1
Growing 1
Geometry 2
Boles. 2
Italy. 1
Joy, 1
Detect 1
Man-Month” 1
MAX; 2
Concurrency: 2
Final 4
Cup 1
Blumofe, 1
Emacs7 1
IRECT 15
Alternatives 1
Kaashoek, 4
Jain. 1
GE, 1
Dennis, 2
Massachusetts, 1
IMITED 15
Culler. 1
AN 18
EMORY-M 1
Prentice 4
Forget 1
Header 2
Garner 1
CPUs 37
Manual”. 1
Dr. 1
Emery 1
Having 4
Glaser. 1
Buffer) 1
I’m 5
Jozef 2
Dissertation 1
Maybe 1
MS-DOS. 1
Context 3
C 212
DD 1
David 19
Dead: 1
Amazon, 1
LRU 33
Jain’s 1
Heap: 1
ENERALITY 1
Methods 1
In 387
IRIX 1
Culler’s 1
ANGRY. 1
EMORY: 26
R+89, 1
FreeBSD, 1
Hill 1
Gray, 1
Cache-Affinity 1
March 14
EGAIN 2
Fair 6
Hoare. 1
Handle 4
KB); 1
June, 1
EASUREMENT 1
McVoy 1
MULATING 1
Forin, 1
DDRESS 25
Default 1
Brinch 7
Engineers 1
Decay-Usage 1
Animal 1
Least-Frequently-Used 1
James 1
Heinrich. 3
Efficient 2
Miscellaneous 1
Includes 2
Indeed. 1
DVANCED 13
Also 10
EPRESENT 1
README, 1
Future, 1
Home 1
Guerraoui, 2
Chou, 1
Clark. 1
ETTER 1
Fekete. 2
INVERSION 1
Hardware?” 1
LWN 2
Ken 2
EBOOT 1
Figure 335
Meehean. 1
GNU 3
Generalized 1
Dissertation, 1
Butter 2
February 16
Dijkstra, 4
Apple 3
Java. 1
Let’s 90
Hershey 1
Everyone 1
Morse. 1
IS 1
Interposition 1
Database 1
An 65
ERSISTENTLY 1
ROTECTED 1
G 12
Huge 2
HW 1
Mark 14
Code 24
Earl 3
IT 3
Helen 1
Like, 1
L2 1
Modeling” 1
ERFECT 1
First: 1
Meehean’s 1
CONCURRENT 15
Goh, 1
Dynamic 7
CPU-optimized, 1
CPU. 31
CPUs; 2
CS 1
Doesn’t 1
Aq 1
K+96]. 2
Lindberg, 1
Hits 2
FFICIENTLY 2
Most-Recently-Used 1
Induced 1
Introduction), 1
Devang 2
Atlas: 3
Enough 1
Reliability 1
HOLD 1
Handles 1
Martin 1
Code00 2
Earlier 2
I 171
ITHOUT 2
History: 1
Logistics 1
Lord 1
Montreal, 1
Earliest 1
Far 1
Mistakes 1
Multics 14
NIX/C 1
NSA? 1
Fetch-And-Add 2
Came 2
ECHANISM 30
Better, 1
Kleinrock. 2
Lottery 6
Hopefully 2
Hydra 1
NOW 1
Intel 10
Javascript 2
Directory 5
Atlas”; 1
Example: 6
Robin 3
Hard 1
I/O 86
Measuring 2
Computer, 6
Evolution” 2
I/O-intensive 2
Influenced 1
Hive/HDFS, 1
L60, 1
MAC 2
Morgan-Kaufmann, 2
Free 8
Freedom 1
CPU; 11
HINK 1
E 195
NT” 2
File 3
Close 2
Electronic 2
Exactly. 2
LWAYS 1
Louisiana. 1
Guide” 1
IBM 9
NVERSION 1
Is 14
Job:B 1
Efficiency 2
Award 2
F 36
SIGMETRICS 2
Heap01 2
Hussein 1
Melvin 1
Control: 1
Excellent 1
Interestingly, 3
Hmm... 2
Linux. 8
IECES 154
Mac 12
Multiprogramming 4
FetchAndAdd(int 2
Hank 2
Cilk 1
I! 1
ERMINOLOGY 1
OPT. 1
Freeing 2
Commu-nications 1
Big 2
FFICIENT 1
Law, 2
M.J. 6
IEEE 7
HE 83
Node_t; 1
Issues 6
KB64 1
Figures 2
A’s 7
Facebook, 1
SIZESORT+, 1
ISSES 1
Incorporating 1
Minneapolis, 1
Cores” 2
Extra 1
Homework 28
Linux’s 2
It 92
Implementing 2
Mail. 1
N 41
Forgetting 3
Harper 1
Claypool 1
ISTORY 1
Evolution 1
OS? 4
GB). 1
Computing 4
Conversely, 3
FIRST 1
Leaks 1
MBALANCE 1
IF) 1
HYSICAL 27
It” 1
Now 79
LATER? 1
G. 9
Björn 1
Farm 1
Spend 3
Incrementalism, 1
Intel’s), 1
Multiprocessor 4
Cutler, 1
FIFO 37
Long-Running 1
Jose, 7
Indeed 1
Internet 1
Manuals 1
NT, 1
George 2
Hybrid 2
Concurrent 25
Increase 1
FASTER 17
OS” 1
Get 5
Bits 1
Corbato, 5
Cox, 1
Learning 2
MORE 2
IO 7
Hall, 5
I’ll 3
OAD 1
LESS 1
Good, 1
Gouicem, 1
First-in→ 11
Spin 7
Invalid 2
Interludes 1
Next, 9
DBMS), 1
Fourth, 1
Long-running 1
Kaufmann, 5
However, 120
Issue 4
Mars?” 2
NTERPOSITION 1
Given 15
I/O; 3
Current 3
Initial 3
Failed 2
Or 9
Gruss, 1
Buddy-managed 1
Facebook. 1
Custer 1
MS-DOS 1
Index 11
Linux 107
Hastings, 1
KASLR” 1
OK: 1
Languages 2
Boyd-Wickizer, 3
Hill, 3
Function 2
Spin-waiting 2
Jaswinder 1
KB-32 2
No-Locality 2
Dick 2
Francisco, 1
MLFQ. 2
Knowing 3
Hugh 4
Joseph 1
Murphy, 2
NUMPAGES. 1
Group, 1
INTRODUCTION 15
Denning 1
Intel. 1
Farm” 1
Overall, 3
HARE 14
CPUs). 4
Failure 4
Deadline 2
MUTEX 2
Instinct, 1
Live 1
He 3
Knowlton 1
ONSIDER 1
Lepers, 1
C, 12
I, 1
GAINST 1
Success! 1
Journal, 2
KNOW 1
No. 6
Direct 8
G.A. 1
MQMS 2
L1 4
LL/SC 2
KASLR, 1
NBA 1
O(n) 1
HARING 2
IP) 1
Development 2
Internals: 3
J 1
P1 6
HTTP 1
Hear 1
High 2
Determining 1
Dharmendra 1
International 3
Long 1
Hennessy 3
LOCKS 23
O_CREAT|O_WRONLY|O_TRUNC, 1
Libraries: 1
COMPCON 1
I/O. 10
Handbook 2
Sullivan, 1
Lauer. 2
Know 2
OMPLEXITY 1
ECHANISMS 11
HERE 1
Make 5
IGHT 1
Least-RecentlyUsed 1
KEY 1
NOT 1
OFFS 1
HINGS 1
OS, 31
Distributed 5
Faster 2
Knowlton. 1
PT_SHIFT 1
Can 40
First 23
IDs 2
Mars 5
Discusses 2
J. 33
MLFQ 32
Hint: 2
Linux, 15
O_WRONLY|O_CREAT|O_TRUNC, 1
Linked 8
Calls 4
INDETERMINATE, 1
Harry 2
TORE 1
Lauer’s 2
L3 1
ONTENTS 1
EGMENTATION 12
HP, 1
Metric: 1
Microsystems, 1
Libraries 1
MAC, 1
Not 23
Instruction 4
Handled) 1
October 17
EC-11, 1
Feedback 5
Knuth 6
Paged 2
Consistency 1
Fleischmann 1
IRE 5
May, 1
EASON 1
Job:C 1
Manuals” 3
HotOS 2
Linux-based 3
Organization” 1
LoadLinked 2
Candy 1
Indeed, 20
Henry 1
Tf 1
They 5
LRU, 11
OS) 2
Evict 4
HREAD 12
ISBEHAVIOR 1
Nichols. 2
Key 1
MALLER 15
Novark 1
Introduction 8
Hazelwood, 1
Ousterhout, 2
END, 1
Festschrift 1
LaTeX, 1
Preemptive 1
Correct 4
Frankenstein 1
ISCA 4
Memory: 3
END? 1
Joe’s, 1
Mogul, 1
How? 1
List 7
Overflow 1
Locks 29
Com-puting, 1
Instructions 1
Hershey. 1
Lectures 1
Transforming 1
MIT), 1
PFN=55 1
Extract 1
Interesting 1
Nope, 1
L->head 8
MMU. 2
HREE 154
O(1) 4
KB), 1
Human 1
Overhead 3
Ed2.pdf 1
Golub, 1
Larry 1
Present 1
Counters” 2
H 42
Interaction 1
Merritt, 2
ESIGN 1
KPTI 1
MostFrequently-Used 1
ID 7
Low-level 1
PD 2
Ma. 2
Compare-And-Swap 2
Kanev 1
Hierarchies” 1
Hydra. 1
Tucker, 1
Mac. 1
PID. 1
Fairness 2
November 10
Finally, 70
Fox. 1
Mac, 1
Hash 8
ODING 1
Labs 2
IKE 1
PageTable[1] 1
FIFO? 1
HPUX 1
Levin, 1
Price. 1
D. 33
HFE-1:1, 1
Interrupts 2
Michael 10
Easton, 1
Keeps 2
Moving 1
IMER 1
Making 3
PDEAddr 2
Man 3
Compare-and-swap 2
Keith 1
Krieger, 1
I/O? 1
Two 11
Michael, 2
Paranoia 1
L4) 1
ONTROL 8
OO 1
Free-Space 1
Management 11
Here 30
OINTER 1
Length 1
Loads/Stores 2
IP 41
Facebook) 1
Handbook” 1
LoadLinked(int 2
Priority(B), 4
D.R. 1
Hall/CRC 2
Jim 8
Miller. 2
Edwards, 4
Knuth. 1
Multi-Level 4
Ingo 1
March, 1
PID). 1
Management” 2
Computer 20
Corporation” 1
LDE 1
IALOGUE 4
Warburg 1
Microsoft) 1
Pass(C) 1
LOCK 2
Lawall, 1
P. 12
FreeBSD 3
Manual” 3
His 3
OSSIBLE 2
Patterson. 2
Lots 2
IRTUALIZE 5
Fit 4
Happened 2
Lynch, 2
Pthread_cond_signal(&fill); 2
Donald 1
EAL 1
Joy. 1
EASY 38
Epema. 1
LATER 1
Multi-level 7
Investigator. 1
Metrics 1
Phipps 1
Markstein. 1
Linux). 5
Creation: 1
LOCK-BASED 15
INTERLUDE: 11
Win, 2
NULL); 35
Pn−1 1
L 59
Laziness 2
PEED 1
HEN 4
Memory-mapped 1
Hopefully, 4
Object-Caching 1
Pons. 1
Lucco, 1
ISN’T 1
Frigo, 1
Heavyweight 1
MANUAL, 1
Pthread_mutex_lock(&m); 6
Hardware/Software 1
Milton 1
Kernel” 1
EKKER 1
Epema’s 1
LISP 1
NIX! 1
Jones. 2
Mixed 1
Prentice-Hall, 7
Miss 29
List_Insert(list_t 4
Daley 1
Laszlo 1
Ideas 2
X/macOS 1
NUTH 1
Precise 2
LDE). 1
Leffler, 1
PETERSON’S 1
IFIPS 1
Muller, 1
Hovav 1
Operation 1
Previously, 1
MPLEMENT 1
Informatica, 1
Generally 1
Hit 29
MIT 5
Q0 13
I/Os. 1
Mitoma, 1
Kuehner. 1
Entry 3
French 2
Later 2
NOMALY 1
KB 18
Modha. 1
Priority(A) 4
N. 7
Locking 2
Dennis. 1
Led 1
Imagine, 4
X11 1
Nethercote. 1
Privileged 3
Lisa 1
Levy, 5
PT: 2
II) 1
Multi-Queue 1
IBM, 1
PAT, 1
Priority, 1
Managing 1
Isn’t 2
Greenfield. 1
Holding 1
MLFQ: 3
ROBLEM 4
Included 1
More 24
L4 3
Ever 2
Go 4
Loading: 2
OCKS 23
Kenneth 2
Moir 6
Proc 14
Need 2
Longer 1
Development, 1
Lock-based 2
Implementation 6
Yuanyuan 2
Next 2
Problem: 6
List_Lookup(&H->lists[key 2
List_Lookup(list_t 4
Peterson. 2
IME 2
Multiprocessors” 5
INUX 1
PDP-10” 2
Pthread_mutex_unlock(&c->lock); 6
Microsoft, 1
J.S. 1
Hence 2
Holt. 1
MMU; 1
Random 21
Inserts 2
NE 1
Las 1
FIFO. 4
Goals 2
Looping 1
OS. 26
Kleiman, 2
Mountain, 1
Pthread_cond_wait(&c); 1
OS: 1
May 11
Douglas 1
Look 1
Information 6
[AC97]. 1
Nucleus 2
Programs 4
Lock 12
MASK 3
Peterson’s 6
IZES 1
NIX. 2
Idea1 1
PD_SHIFT 1
Python, 2
Minimize 2
Jack 5
Herlihy. 2
Horn. 3
MQMS, 1
Recent 1
Instead 20
NY, 1
Lavington. 3
FIFO’s 1
H. 20
MAX_HEAP_SIZE; 1
OS’s 4
LAW) 2
Nothing 4
Read-Write 2
Occur 1
Oddly 1
Often 1
MQMS). 1
Interlude: 4
[B+18], 1
Old 2
Pthread_mutex_lock(&c->lock); 6
Locks.” 2
Mayer. 2
Placing 1
If, 9
Nethercote, 1
International, 2
Performance” 1
Quarterman. 1
Modadugu, 1
K. 1
Hochshule 2
ICKETS 1
Manchester 3
Required 1
Intel, 2
Running 24
Leiserson, 1
Factors 1
Hash_Init(hash_t 2
MB) 1
Ousterhout. 3
LRU→ 11
OMEWORKS 2
Reese 1
McCarthy, 2
EC-11:2, 1
Organick. 1
Malloc(), 2
Ion 2
[B89, 2
Orr, 1
Putting 1
Lower 1
Media, 3
Problems: 1
Jason 1
No 10
Johnstone, 2
Pioneers, 1
Quote 1
Motivating 1
KB, 1
ITH 4
In, 2
Matteo 1
Interscience, 1
I’d 1
S. 22
Levy 1
File-System 1
Inc.. 1
MIT. 1
MIT’s 1
MUTUAL 1
OS), 2
Ritchie, 1
Membrane 1
ELADY 1
Over 6
Many 21
January, 2
[CP78] 1
PC, 7
Questions 26
MAP_ANON|MAP_PRIVATE, 1
MPORTANCE 1
Pthread_cond_signal(&cond); 6
Jeff 3
Novark, 1
Joint 5
Prediction 1
RAM. 1
NECESSARILY 1
LEXIBLY 1
Implementation” 1
Inputs 1
Meltdown 2
Moseley, 1
I” 1
SECTION, 1
Life 1
Flesh 2
Interrupt) 1
Ousterhout’s 2
Lamport’s 1
Manual: 3
Oh 5
River, 1
NULL, 20
Exception 1
PROGRAMMER 1
PTEs 3
PTIndex 1
Page” 2
Just 15
[D97]. 1
POSIX, 2
RY 1
Multiple 1
Malloc(sizeof(myret_t)); 2
Pthread_mutex_init(&c->lock, 2
Job 11
O. 1
July 4
Problem 3
RANSLATIONS 15
NT 4
LGORITHMS 1
Iyer, 1
Issue: 3
Newell, 1
Network 1
Jing 1
SN 3
Load 4
Frequency 1
Job:A 1
Leave 1
Memory” 1
Overview 3
Seward. 1
Nobel-prize 1
P 280
FAULTS 2
Mechanism 1
Particularly 1
L1) 1
[Free] 1
Perl, 2
Rachid 2
Multiprocessors. 2
Management, 2
R.P. 1
Journal 7
OCK 16
KB). 1
KB-64 1
README 20
Note, 2
Lacking 1
Kay 1
Keeping 2
Now? 2
New 9
Joyce. 1
Saavedra-Barrera. 1
Looping-Sequential 1
Friedman, 1
Jr., 1
Loops 1
Minimally, 3
PCD 1
Single-Queue 1
Numbering 1
P4, 1
Finnish 1
NABLES 1
Plenty 1
L78]. 1
[J91]. 1
PhysAddr 8
Rafael 1
Multithreaded 3
Mao, 3
R10k 1
KB. 4
OLUTIONS 1
Processes: 1
KPTI, 1
ROM 2
ONCURRENCY: 15
Lauer 2
Keep 4
Kernighan, 1
OPT 4
Nickolai 4
KB; 2
Said 1
M.I.T., 1
Full? 1
KB) 3
Lu, 4
Mozilla 1
PPN) 1
Some 25
OES 1
PAGES 2
Fredkin, 2
NOWLEDGE 1
Pthread_cond_wait(&c, 3
LLUSION 1
[LL82] 4
Plot 1
Relational 1
NetBSD, 1
McCarthy. 2
ROPORTIONALLY 1
Limits) 1
OMPARING 1
Q 12
L->head; 8
Recovery” 1
ONTEXT 2
Linux) 2
LRU-like 1
Kilburn, 4
PC 16
Nuclear 1
Lampson. 2
Lampson’s 1
MORTIZATION 1
GB) 2
Lighting 1
Mutual 4
PROT_READ|PROT_WRITE, 1
M 139
Sopena. 1
OFFSET 1
OPTIMIZATION 1
G.L. 2
Ngram 1
Queue_Enqueue(queue_t 2
Lampson, 2
[M07]. 1
Priority] 2
Resort, 2
ORK 1
McCarthy’s 2
Randomization” 1
Linear 2
ON 12
Quicksort, 1
LATER, 1
Remove 2
MEMORY 1
Leonard 2
LW 1
PINNING 2
OMPILED 1
Scaling 6
Limited 6
Microsystems. 1
Getting 1
List: 2
OS 504
Netzer 2
PTE. 3
Marvin 1
One 135
PDPTA’97, 1
Offset 15
Generally, 1
OCALITY 1
RADE 1
Lanigan, 4
[R97] 2
Process 35
Rules 5
OSTEP! 2
Menace 1
Reboots 1
List_Pop() 1
OOLS 1
RANSFER 1
LLOCATE 1
Return-into-libc 2
MIPS 14
Mach 1
Language” 2
POSIX 20
P1) 1
Scientific 1
Line 3
Mitchell. 1
Gorman. 1
Liu, 1
ODE 2
PageDirBase 1
States 1
Microprocessors 1
Only 10
PFN, 1
Overflows 1
Grove, 3
OESN 1
REE 19
Late 1
[S+04] 1
Processor” 1
S.Sahni). 2
SJF/STCF) 1
Molnar 1
Review, 3
M. 35
OS; 8
REATE 2
Later, 2
Robert 9
Let 18
Megiddo 1
Letters 3
PPLICATION 1
PFN_SHIFT) 1
Shacham, 1
Locks, 1
Mudge. 1
Grows 2
Locks: 2
OFTWARE 1
Part 6
Stevens, 2
Mr. 1
Oops! 2
Pages 5
O’Reilly, 2
Gupta. 2
OF 9
Read 38
List_Init(list_t 4
[SHW11]. 1
Producer/Consumer 5
Obviously 1
Saying 1
Must 2
S+03] 1
MB, 1
On 21
REEMPTIVE 1
Lee. 1
SIGINT 2
Like 6
M83]. 1
Memory 58
PTE.ProtectBits) 3
PTEs. 1
Shortly, 1
Mangard. 1
Multics” 1
Here’s 4
MIT, 1
Oregon. 1
Processes 8
Storage” 1
Much 9
Orran 1
Paging: 4
PDE. 1
Hit/Miss? 4
OK; 1
Read-Execute 1
MALICIOUS 1
Of 70
Purify 1
PACES 8
Sharing” 1
NIX: 1
SHIFT 8
MIN). 1
P=0 1
RISC 14
List_Init(&H->lists[i]); 2
SIGTSTP 1
MIPS, 2
MLFQs 1
Multi-Threaded 2
PTEs). 1
Parent 6
Sood, 2
Maxwell’s 2
NDETERMINATE 1
Hey, 1
Massachusetts. 2
Out 2
PAGESIZE 1
StoreConditional(int 2
Multics, 6
NULL2 1
Peterson 2
PTE.PFN, 3
Hoare 4
IGHER 1
IMMEDIATE 2
Macintosh 2
Organization 1
Quantitative 2
PDIndex 1
Software 7
Neely, 2
SN_SHIFT 1
STCF. 1
Saint-Exupery 1
Scheduler” 2
List_Insert(&H->lists[key 2
SOMETHING 1
Schwarz, 1
Maintenance 1
Multi-threaded 1
Pathfinder. 2
Pass(B) 1
Special 1
McKinley, 1
NUMPAGES 2
Historical 4
Meltdown, 1
Processing: 2
PTBR 5
Other 15
Nice. 1
Policy 6
PTIMAL 1
Per 5
[Y+18]), 1
IO). 1
Maurice 2
P0), 1
RAIDs, 1
Palo 1
Sorry, 1
Nimrod 1
MMU, 1
PAGE 6
T 378
ROP 3
Simply 3
Load-Linked 2
MM00]. 2
Segmentation 3
McGraw-Hill, 2
Multiprogrammed 5
Perhaps 15
Point 1
Stanford 1
Mechanisms 3
Now, 26
History 4
Microsoft 4
Producers 1
PTE.present 1
Ousterhout 3
Nucleus. 1
Portland, 1
Reduced 2
Pick 3
__lock_t 8
IRTUALIZATION 5
McDougall. 3
PERATIONS 2
ROP. 1
Patent 1
RUX 33
Nir 2
McCarthy 2
PID 5
T2. 4
RaiseException(TLB_MISS) 1
Smotherman 1
Load-linked 2
Main 1
Separating 1
Models” 1
NTRODUCTION 59
Phoebe 1
Policy: 2
Starts 1
Morris, 4
OLICY 4
INITIALIZER. 2
Multiprocessing. 2
Project 3
PTHREAD_MUTEX_INITIALIZER; 7
P2 3
Or, 7
Problem” 3
Report 2
Pren-tice 1
abstraction 15
If 167
McKusick, 1
PHit 1
Stalin 2
Stride 4
Recall, 1
No, 2
Miss? 1
PM 4
Tc1, 2
Ratios” 1
Splitting 1
Locks”) 2
Malcolm 1
She’s 1
Most 9
Nancy 2
Pointed 2
Presented 1
State 12
Neat 1
ONCURRENT 16
Initialize 3
NCE 1
Pthread_create(&p2, 5
PTIMIZATION 1
PRIORITY 1
P1, 2
Process1 9
SEG_SHIFT 1
Protection 7
accessed? 1
John 14
Measurement 2
PREMATURE 1
Patterson, 1
TECHNICAL 1
Record 1
Notes 4
Monitors 1
Page 39
Tel-Aviv, 1
Reducing 1
Staelin. 1
MIN 1
Manchester; 1
Sizes 1
NDERSTAND 1
Narrow 1
NTERLUDE 35
Programmer’s 2
Non-compacted 1
Student: 36
OOPERATION 1
Intuitively, 1
NTERLUDES 1
Pthread_mutex_lock(pthread_mutex_t 2
PT_MASK) 1
Padegs. 1
PFN) 2
Protection) 1
SIGNALING 1
Pthread_mutex_lock(&mutex); 8
accessible, 1
acquire/release 2
Mesa 4
PTE, 6
PowerPC, 3
TERMS 1
Responsibility” 1
Number 8
Mythical 1
Pal 1
Tix:50 1
Relationships, 1
Status: 1
Mauro 2
Manifesto” 1
Slutz, 1
Positive 1
Node_t 1
Oh, 1
Protected 1
OK. 2
Supervisor” 1
OR’d 1
Isolation 1
NULL; 22
RE 1
Ph.D. 3
Paging, 1
Parallel 3
Python. 1
STCF, 1
Q6 1
Kawamoto, 1
acquired, 2
Mike 2
Passing 2
Provides 1
THREADS 1
Right! 1
OOK 1
NGINEERS 1
Pathfinder/Authoritative 2
U.C. 2
Review” 2
Stick 1
Microsoft’s 1
Memory, 1
So, 1
Proceedings 2
Non-Cooperative 1
Orwell. 2
Pthread_mutex_unlock(&mutex); 8
OLICIES 16
Symbiosis” 1
Orleans, 1
Joy 2
National 1
Rago. 4
Physics), 1
Priority 4
Peanut 2
Q1. 1
Short, 2
ROCESSES 1
Letters, 2
actual 15
NUMCPUS; 4
Quarterly, 1
Pthread_join(p1, 5
TLB) 3
S, 6
NIX, 2
OPERATING 42
Physical 13
UEUE 11
Ritchie) 1
Structures: 1
Morgan 6
MenuMeters 1
Sriram 2
Recall 9
O(log 1
Orwell’s 1
Quanta 1
ONCURRENCY 3
Systems.’ 1
P0 4
June 13
Nemacolin 2
Regions 1
Revolution 1
Professor? 1
Power 1
RR, 1
Shortest 6
Rashid, 1
Linux” 1
advocates 1
NX 1
RUN 5
RAM, 1
TLB-miss 1
SCHEDULER 1
NIX-based 6
OSTS 1
Processing 5
US, 1
SGI. 1
Superpages” 1
Mysterious 1
Mesa” 1
Start 5
Relocated 2
OK? 2
P3 1
Random) 1
THE 9
Parts”.) 2
LOW 1
ORG 166
Note 34
Policies 3
Scalable 10
Q1 15
Pthread_join(p2, 5
Randell. 1
Signaling 2
Refers 1
Lipman. 4
affinity 8
OK, 11
REAT 3
Ready 58
Recheck 1
SEFUL 2
NULL 20
Operating 38
Professor: 37
Unused 2
SJF. 2
THINK 1
NTERRUPT 1
Modern 3
Store-Conditional 2
OS). 2
PCD, 1
Recognized 1
TLBs, 6
Patterson 2
LRU? 2
OSes. 1
S 379
OMPLETE 19
Principles” 2
Shared 2
Randell 1
Publishers, 1
Relocation 1
Silas 3
Remzi 6
Lists 5
again: 2
ORE 2
RaiseException(PAGE_FAULT) 1
Technical 4
Riak. 1
SEG 2
NeXTStep 1
O’Hallaron. 2
Programming: 3
Useful 1
Sanzi, 1
TLBP, 1
NULL) 6
Navarro, 1
Store-conditional 2
PTE: 1
Relocation: 2
TM 2
Perry. 1
Law. 2
PDBR 2
OSTEP. 166
SEG_MASK) 2
OUR 2
Program 20
Sleeping 3
Reese’s 1
RDLK 2
Replacement 6
Simpler 2
River” 1
Lu. 2
OSes, 1
algorithms 26
Randall. 1
Than 1
SPARCv9). 1
Negative-Growth 1
Run 68
O’Reilly. 2
Pthread_cond_signal(&c); 4
VAX/VMS 11
Scalability 3
TLB_Insert(VPN, 3
OBS 1
Needed 1
Problems” 1
Summary 30
S). 2
Peter 5
Learn 1
PD_MASK) 1
Overlap 2
Saavedra-Barrera 1
Optimal 3
Pthread_create(&c, 2
Software-based 1
References 28
RR) 1
STACK: 2
Solaris” 1
Runs? 1
MAX) 1
OUBT, 1
annotate 2
Rate 4
Threads 5
Scheduler 5
Nelson, 1
S_IRWXU); 2
PLDI 3
Pthread_cond_wait(&cond, 6
Scheduled 1
TLBs) 1
VPN 69
ONDITION 1
The 821
OSSpinLock 2
Processes, 1
Once 41
SDS 2
Pons 1
Low 2
PTHREAD 4
P.M. 1
Segment 10
Oracle 3
Queue_Init(queue_t 2
Solution: 1
SJF/STCF 1
RUNNING, 1
STCF 8
Sounds 6
S09]. 2
MB 1
anymore? 1
OW 34
Rudolf 1
UTUAL 1
Seg 1
Nevada, 1
Section 1
PTE 17
Pthread_mutex_lock(&lock); 6
Science). 1
TR-95-22, 1
ONG 1
WWW.OSTEP.ORG 42
Through 1
Survey 3
Professor 5
Ott. 1
SER 1
Poor 1
Mac! 1
Paperbacks, 1
PACE 21
Share 4
Our 25
Queues 4
Sorin, 1
San 12
Random, 5
Shah, 2
Staelin, 1
SHIFT) 8
MMU 3
approach, 25
Otherwise, 1
SET 2
VMS), 1
Showing 1
Non-Coalesced 1
Shedler. 1
PTHREAD_COND_INITIALIZER; 3
RISC, 2
Setup 1
TRUCTURE 3
OPERATIONS 1
Well 1
Timer 1
TLB, 21
Programming 15
PAT 1
SHIFT, 1
PowerPC 1
Marco 2
Pilot 5
PDE 8
South 1
PAGING 22
R/W 1
Spin(), 1
Santiago, 1
Readings 1
Sharedmemory 1
Stallman 1
Secure 1
McGee. 1
arose 5
P6 1
Schedulers: 1
Va4 2
Soon 2
OK! 2
Solomon. 2
Page, 1
RaiseException(SEGMENTATION_FAULT) 5
Silicon 1
Technische 2
OU 1
Werthman. 1
Underlying 3
TLBWI, 1
Q2 9
PDE, 1
Shan 2
Prints 1
Mattson, 1
Prentice-Hall 1
Spectrum 1
PIECES 38
PF 3
Raging 1
Spin(1); 2
Similarly, 6
Reprinted 1
Short 1
Support” 1
Semantics 3
Mechanism: 2
array; 1
PID) 1
Set 6
Was 1
Spaces 3
Obtaining 1
Stack? 1
PageTable[39] 1
Reclaim 1
Similar 3
Think 12
OWERFUL 1
Unsafe” 2
Tcompletion 2
RISC-like 3
PageTableBaseRegister 1
What 214
Probability” 1
Simple 29
Maurice, 1
Pretty 8
Student, 1
Page-Reference 1
Paging 6
Redell 2
Stephen 4
Single 7
Research 3
Single-Threaded 2
T1). 4
September 13
Metha 2
asleep 3
PPROPRIATE 1
Sharing 12
Windows 10
Streams 1
O’Hallaron 2
Statement 1
Pass(A) 1
Restoring 1
Simulation, 1
Traffic” 1
Operations 3
P4 1
Time” 1
RR? 1
Patt, 1
Without 15
Pthread_cond_wait(&fill, 2
Smaalders. 2
Measure 5
Pthread 11
Such 16
Patt 1
Patel 1
Redirection 1
Support: 1
Slab 1
Running, 1
Smaller 1
TLB: 2
Shedler 1
Multics. 1
assume, 2
Page-Fault 2
Signals; 1
Woodlands 1
System: 1
O’Reilly 3
Steven 1
Perspective” 5
Resulting 4
Sitaram 1
Transitions 1
VPN=0 1
PDP 1
Timothy 1
RUNNABLE, 1
Persistence 1
XIST, 1
Pthread_mutex_unlock(&lock); 6
Spider-Man: 2
Measurement, 1
Mesa, 1
T3, 4
Pieces 2
Phenomenon” 1
Reduce 1
Switzerland 1
Russ 1
So 30
Stored? 1
Thesis, 1
Star.” 1
batches 1
NIX 55
Physical) 1
Smotherman. 1
Write 11
TOPLAS, 2
PTE.PFN 1
Storage 10
Processing, 1
Richard 9
Standard 2
ULTI 11
Working 2
Tudor 2
PFN 43
Recommended 1
Prof. 1
Zebra 1
Published 1
Spurious 1
Pthread_cond_wait(&empty, 2
Microsystems 1
THER 1
Pillay. 1
Play 1
Processes” 2
Systems” 7
TLBWR, 1
Sometimes, 9
Structure” 1
Traiger. 1
Steve 4
Neither 1
Processor-Memory 1
Smotherman’s 1
been 100
Yale 1
Tc1). 1
PWT 1
Swapping, 1
Proportional 2
SUPPORT 1
Steinberg. 1
ULTIPROCESSOR 12
Wrapper 2
UILD 3
PT 2
Repair 1
Pthread_create(&p, 5
Zuckerberg 1
R. 33
Stallman. 2
Q7 1
MongoDB, 1
Texas. 2
Portable 1
Reeves. 2
Pthread_create(&p1, 5
Say 2
Thanks. 1
Sun, 2
Switching 4
Turns 2
Surprisingly, 1
Nelson 1
Protection” 1
Space 20
bit; 1
[3] 1
That’s 6
Perfection, 1
TLBs 10
Proportional-Share 3
Secker 2
Strachey. 1
Unfairness 1
YNAMIC 1
University, 2
PTEAddr 6
Replacements 1
Q4 1
[B+96] 2
RAID 1
Structuring 1
REASON 1
NCREMENTALISM 1
Time-Shared 1
Press, 7
Registers 1
R.H. 1
Schroeder. 1
There? 1
T. 14
TLB. 13
USENIX 8
Swap-Based 1
Q5 1
Thomas 3
break), 1
[B89] 2
Try 11
O 247
Pioneered 1
Ta 3
Proportional-share 1
Strachey’s 1
See 43
VAX-11 4
YPES 2
VPN: 1
Patel. 1
SJF 21
Queue 8
[B75]. 1
RAM 5
Susan 1
RITICAL 1
ND 10
Tracking 1
Process: 2
Represent 1
R4000 5
Scott 10
Tickets 1
TLBs; 1
UST 1
T3 8
Rather 1
Redell. 1
Redell’s 1
SPINNING 1
SSDs) 1
ULTIPLE 2
ORRECT 2
Probably 11
Tuning 1
Pthread_cond_signal(&empty); 2
Structure 3
Seems 1
VLSI 1
[B+10]; 2
We’re 1
Pennsylvania, 2
SLEEPING, 1
RAND 5
[CK68] 1
[D82]. 1
Switches 1
Rajimwale, 1
Namely, 1
USTERHOUT 1
Producer/Consumer: 3
Rule 14
RINCIPLE 2
Segmentation” 1
Trap 2
TLB’s 1
WITH 1
TCB. 2
TLB 173
Turner, 1
[D+13] 2
buffer 43
Same 2
URSE 1
OSDI 10
Pthread_join(p, 4
Types 1
Q8 1
Synchronization” 2
Shared-Memory 4
Waldspurger. 2
[B+79], 1
Who 4
Personal 2
STDOUT 1
REMATURE 1
Reese, 1
[D91]. 2
Synthesis 1
Report, 2
Naval 1
V.A. 1
Put 4
SE 11
Raiders, 2
Specification, 1
U/S 1
TestAndSet() 6
Wales 1
TILIZATION 1
TORAGE 1
UK, 2
[E95] 1
We 166
Sanjay 1
User 14
One”. 1
RACE 1
ROVIDE 1
System, 2
U 89
Shared-memory 1
Waldspurger’s 1
[BS+09] 1
[AD03]. 1
Plus 1
Sequin. 1
Red-Black 2
Ronald 1
[K+15] 1
TV 1
Resource 4
Neumann 2
Von 2
ROCEDURE 1
SS+10]) 1
RaiseException(PROTECTION_FAULT) 9
Stanford, 1
USA. 1
TIP: 9
Tb, 1
Thus, 206
bugs) 1
[H74] 1
Unfortunately, 37
Whew! 1
Scheduling 12
Vol. 5
OpenSolaris 1
RANSLATION 15
Rago 1
T1, 12
VMM-level 1
Shavit. 2
Wanjohi. 1
[C06] 2
[B+18] 1
Presumably 1
Shacham. 2
Register 8
SPINNING: 1
[L11]. 1
Thread2 6
Responsibilities 1
No-eXecute), 1
WAITING 1
ROPORTIONAL 13
SSD. 1
Recollections 1
Store-Conditional” 2
VA 1
TS 1
Times 1
Tom 2
building, 1
[HP06]), 1
Unknown.. 1
Wilson 2
Science, 1
WITCH 1
P1’s 1
ROGRAMS 1
Raiders” 2
TOOLS 1
WAIT 1
Shavit’s 4
When, 1
[C54,PV56] 1
[B+72] 2
Problems 1
Steinberg 1
Reuter. 2
Scheduling: 6
[O49] 1
Threads? 2
Round 3
OFFSET_MASK 7
RTFM 2
Ritchie. 1
SYSTEMS 42
Sun). 1
WWW. 166
VAX-11/750. 1
Table? 1
To? 1
Tp, 1
bx 2
[J09] 1
Unlock 2
Segments 2
With 82
WORST 1
Pacific 3
Race 2
Really 3
TRUCTURES 17
Wait 1
Solaris 18
Wow! 1
[CD85]), 1
[C+62] 2
Pthread_mutex_unlock(&m); 6
Stoica 1
SIDE 40
Sleeping) 1
[R69]; 1
Threads” 6
Saving 1
OOT 1
Relocation) 2
SSD, 1
Security 2
Surveys, 1
Wahbe, 1
Valgrind 2
Third, 5
Together 1
Tree 1
c->global; 2
[M06] 1
Until 3
Shasha. 1
Word 1
Worst 2
Pfaff, 1
Resources 2
RetryInstruction() 4
TeX 1
XCLUSION 1
Solution 5
[C03] 1
[L78]. 2
[DD68] 1
Q3 1
Structures” 2
SOSP 9
Sorry! 1
[S09] 2
Tim 2
Second, 31
OPT? 1
Research, 2
Schedulability 1
Self-Tuning, 1
Swift 2
Waiting 8
W 17
Turning 2
Translations 2
Tricks 1
c->local[i] 2
[M15] 4
VAX-11/780 1
Specific 1
Worried 1
YNCHRONIZATION 1
Preemption-safe 2
Running: 1
SOLATION 1
Tell 1
Zel-dovich 1
Soyeon 2
[CS97] 2
[P+95] 1
[JM98]. 1
Queues, 2
TO 26
SPARC, 3
Spinning: 2
[W+95], 1
Tony 1
Segmentation: 1
Open 2
Restartable 1
Search 2
Spending 1
System/370” 1
Were 2
WITCHES 1
Typically, 2
Trevor 1
UNIX-based 1
[W95]. 1
calling 55
Va5 3
Virtually 5
Worse, 3
XD 1
Prefetching 1
Scott. 4
Sadly, 2
Scientists 1
Zonkey), 1
Stretch 1
[DV66] 3
[VERSION 42
[JS94], 1
RR 14
Tamil, 1
Saltzer 1
Stanley 1
a3 1
UPPORT 2
Space-time 1
PCs, 2
Restricted 1
Server” 1
Stack11 2
TestAndSet(flag, 4
Which 12
Watch 4
UNSW-CSE-TR-0321, 1
UIDELINES 1
VALID 3
a[2] 2
capacity, 1
Spin-based 1
Wulf. 1
Yes. 1
ZFS) 1
Primer 1
Segregated 1
Texas, 1
Served 1
[B+79] 1
Subramanian, 3
[E06]; 1
[K65] 1
RSS, 2
Tc, 1
Scheduling” 1
Stockholm, 2
VERLAP 1
able 59
Stevens 6
Paul 3
Roscoe. 1
Simple, 1
Stodolsky, 1
ULL 1
Within 4
Whether 4
VPNs 5
University 6
Values 2
accounting 4
card 1
Spinning 4
[4] 1
Zero” 1
[B+18]. 1
Process0 12
Sequential 2
That 14
Servers” 1
[B94]. 1
Suli 1
[LR80] 1
[M28]? 1
Real 3
Those 2
Server. 1
Sure! 1
Va3 2
address. 21
Still 5
Performance 11
Routines 3
Sometimes 9
SunOS 1
URL: 1
Yupu 2
Why? 5
Va0 3
Upon 3
Waldspurger 6
accuracy 1
chan 1
Support) 1
[AC97] 1
[CG68, 1
[BB+72], 1
Professor, 1
Size 10
Tomlinson. 2
Solaris, 7
[C93]. 1
Support 9
[M65]. 2
[O16] 1
Referring 1
Singh, 1
TEST 2
Wanjohi: 1
To 152
administrators 2
Summary: 2
Pollack, 1
S.J. 1
Spectre 3
Systems 18
USE 3
[C69]) 1
Wikipedia 3
Virtual 12
VAX/VMS. 1
X-windows 1
across 30
chapters 14
Systems. 1
[B,C 2
[FP89] 1
[CV65] 2
Programmers 4
State: 2
Tools 1
Sound 2
[HJ92] 2
TLB; 1
[NM92] 2
a 3927
[SR05], 3
Region 1
Slow 1
TLBR, 1
Weaver 1
Trees 1
alike. 1
Sumner. 4
Positive? 2
SIZESORT-) 1
Stack 14
TD 2
Use 35
[CSG99], 1
Workstations” 1
WORST)? 1
VAXen 1
Yandong 3
adjust 1
choosing 2
[BH73] 2
T2 38
[K68]. 1
[GR92] 2
ROCESS 30
Strategies 2
Uman 3
Sundararaman, 4
RPACI 154
TeX, 2
[O90]. 1
about-to-be-run 4
a[5] 1
Requirements 3
System 37
TLB_Lookup(VPN) 4
Weiwei 2
Tresponse 1
all; 4
TABLE 2
Protocol 3
SPARC 9
Stan 1
THREAD 12
User’s 4
[D72]. 1
Yield 2
Waciuma 1
VMS, 1
Yes? 1
advantage 14
chunks. 3
[C03]. 1
TR 1
[KL88] 1
[K65]. 1
Supporting 1
VM. 1
[J16], 1
Swapping 1
Ranganathan, 1
Theodorus 2
[S07], 1
accesses). 1
ability 11
Rewritten 2
T1 30
Tc2). 1
Wilson. 1
Tron 1
allocation. 7
Table 18
Queue_Dequeue(queue_t 2
STCF) 2
Sun 5
THREE 37
VirtualAddress 7
[L+13] 2
Zorn. 1
Weihl. 1
VPN. 1
You’ll 3
alloc 1
clean). 1
[CD85] 1
Technique 1
[MB91]. 1
[L09, 2
Swaminathan 2
VPN_SHIFT 1
[K+61] 2
Tc2 7
Ready: 1
TlbEntry) 4
[SN05] 1
actively 4
accessible 3
Runtime 1
TAKE 1
Technique: 1
Wilson’s 1
VM 18
allocators 9
Tc1 9
amount 37
Sleep 40
Tb 2
Takes 2
WRONG 1
[L78] 3
[B+13]. 1
Wood. 1
VPNs; 1
Zeedonk 1
alright 1
clears 5
[D97] 1
Thompson. 1
[N+02], 1
[LM+89, 1
Swap 4
Wei, 1
[LL82]; 1
Thanks 5
Relocation” 1
Tolerance 1
a:0,b:1,c:1 1
adapted. 1
achieving 7
SQMS 7
TOCS, 3
Times?” 2
Wisconsin—Madison, 1
VMMs 1
Queues: 2
Thrashing 1
an-THREE 1
Small 2
Threading 2
Techni-cal 1
Waiting: 2
[M11], 1
[C95]. 1
Y. 1
Vegas, 1
[BB+72] 1
amortize 2
code? 9
[G85] 1
Time-to-Completion 2
[P81]. 2
[M83], 1
Swift. 2
Xiong, 2
[MM03] 1
Trace: 4
Remember 5
Uh 2
access, 9
address; 3
acquired 15
STRUCTURES 16
Take 2
Tix:100 1
Worse: 2
WARY 4
R 21
Time-Sharing 8
analyze 3
Study 8
Tickets? 1
Techniques” 2
Wakeup 2
[N+02] 1
[E95], 1
[AC97]; 1
What’s 4
[BH00]. 2
amt) 2
codes, 2
[H93] 4
Tix:250 1
[RL81] 1
[MS04] 2
T2), 2
Yes 1
[MS96]. 1
Trigonakis. 2
Repeatedly 1
VAX’s 1
action 15
addresses): 1
again. 24
Scotland, 2
Tarrival 3
True 1
[2] 2
Wanted 2
RIORITY 1
Tracing 8
application 29
Summer 1
Trans. 2
There 42
YBRIDS 1
[N+07]; 1
[H74], 1
[B94] 1
[A90] 1
[BS+09, 1
analogy 1
commonplace, 3
[J91] 1
Transformers 1
[W02]. 1
[O16]. 1
TABLES 15
York, 6
[O11], 1
True) 9
Replacement” 1
VPN=39 1
added, 1
administrator 2
all), 1
Test-and-set, 2
Specifically, 52
UNUSED, 1
[B97] 2
Work 1
RR. 2
Unlike 5
approaches. 2
Swift, 1
Tricky 2
[BJ81] 1
[WW94] 1
[J09], 1
[BC05,G04]. 1
This 201
[B94]; 1
[CG68] 1
answer; 3
compares 1
[M07] 1
Tturnaround 3
[WW94], 1
[O45], 1
TPDS 1
[A91]. 1
[TTG95] 1
Turn 1
Response 3
Rings, 1
additionally 1
adopted 1
am 16
Up 2
Spectre. 1
Unfortunately 1
[BNS69] 1
Workload 11
Randal 1
VLDB 2
arg: 1
Techniques 2
Typical 1
[FLR98] 1
a2 1
[M+70] 1
[BC91] 1
Thompson 1
[BC05] 3
[M65] 1
approximate! 2
completes. 4
[SHW11] 1
ULE 2
a:100:100,b:100:50,c:100:50). 1
Using 19
Tables 9
[B72]. 1
[W06] 1
USA 1
Value 1
Round-Robin 1
addresses 42
affordable; 1
answering 1
VPN=42. 1
Springer-Verlag, 1
VAX/VMS, 2
[C+04] 1
Yield, 4
Rather, 4
VPN_MASK) 7
argue 1
Terminology 1
UCB/CSD-92-684, 1
[FP89]. 1
affords. 1
[M06], 1
[C93] 1
[BC91]; 1
[M83] 1
Thread 95
approximation 1
completion 4
[SN05]. 1
[O72], 1
absolute 6
VERY 1
Then, 19
[BC05, 2
[W15] 1
UT 1
Vyssotsky. 2
Run: 2
adoption 1
afterwards. 1
anything, 5
Van 4
Stan. 1
VMWare’s 1
[C69] 1
[B72] 1
Results 1
Va1 2
argv[1]; 1
Test-And-Set 2
[HP06]). 1
ahead 8
[MS98]. 2
USSEAU 154
[CK+08]. 1
[BH00] 1
[MS91]. 2
Three 4
architectural 2
complexity, 1
a[3] 1
[X+10] 2
accesses), 1
Variable 2
Therein, 1
[D70]. 1
__hash_t 2
VAX/VMS), 1
Wilkes. 1
SJCC, 1
advantages 5
ahead. 1
appeared, 1
Vancouver, 5
Structures 6
VPN, 2
[D68] 7
Well, 27
SWITCH 6
Virtualizing 2
arise 12
Test-and-set 4
[K64] 1
algorithm, 8
[SS74]. 1
Understanding 2
[CSG99] 1
[CK68]. 1
[O45] 1
Time) 2
array, 7
conceptualized 1
above? 3
a; 4
actions. 1
Version 4
Things. 1
[G04]. 1
a4 1
VS 1
Wisconsin 1
Workshop 2
algorithm). 1
alas 1
applies 1
Virtualization 5
Sun. 2
[CP78]) 1
[DV66], 1
[AD03] 1
approach 138
Waiting-Line 1
arose: 1
These 24
[KL88]. 1
algorithmic 1
[W17] 2
[CV65,DD68]) 1
V 31
[JS94] 1
[O72] 1
Transactions” 2
array-based 2
concerns? 2
access: 1
accessible. 2
actively-used 1
Very 2
Third 1
TimeSharing 1
about: 1
Va2 2
SJF, 4
YOU 2
alloc()/free() 1
algorithm: 2
Visually, 1
Sun’s 1
[D70] 1
[G83] 1
SYNCHRONIZATION 1
[G+17]. 1
archive, 1
Warehouse-scale 1
arrangement 1
Transactions 3
[L09] 4
allocate(100), 1
[W95]: 1
[D65] 2
VICT 1
[M11]; 1
[O90] 1
Two-Phase 2
ask, 1
condition3 1
accomplished 9
active 13
Virtual” 1
actually 38
[K68] 1
Tp). 1
achieve 12
Virtual-Storage 1
Save 2
Yes, 9
allocating 19
allocator 26
W. 18
Systems, 3
[E06] 1
[GR92]. 2
Schedulers 1
[JM98] 1
assigned 7
Wilson, 2
array), 1
Turing 5
[L81] 4
allocate. 1
__Node_t 2
[G62] 1
VMS 16
[MS91] 2
[S05] 2
Two-phase 2
assert(tmp 2
conditions 9
accuracy/performance 2
actuality, 1
Warburg, 1
additions 1
[MB91] 1
Traditional 2
acquisition, 2
Wow, 2
Scan-resistant 1
answers; 2
altered 1
You 89
Weihl, 2
System” 22
[G04] 1
[H91] 2
Seward, 1
[NS07] 1
Wouldn’t 1
assume 80
UNESCO, 1
[LM+89] 1
alternates 1
__node_t 10
[H61] 1
W.C. 1
[O49]. 1
a[7] 2
atomic. 2
Volume 35
constructed, 1
accurate); 2
Weighting 1
adds 24
adios, 1
[P81] 2
UMMARY 3
activities 3
Write-back 1
Should 4
appreciate 1
amortization 1
[AD00] 1
Whichever 1
TENEX 3
[I11] 2
[I09] 4
Sorry3 1
[S07]. 1
XITS 1
as 1029
automate. 1
Uncontrolled 2
[Low 1
alternatives! 1
accounting, 1
[M+63]. 2
[M11] 2
[SR05] 6
about), 1
attacks 5
Voorhis. 1
consume 5
action. 1
Wiggins. 1
address-space 5
affairs 1
[P90] 1
UPERUSER 1
add, 3
[1] 2
Stoica, 1
appropriately-named 1
anything? 3
[B+19]. 1
While, 1
This, 2
[MM03]. 1
[K+61,L78]. 1
Speaking 1
[W03]. 1
XXX 2
asked, 1
background. 2
VARIABLES 18
[M62] 1
amazing, 2
accrued 1
WAPPING 1
[MS96] 2
[WG00], 1
abuse 1
attempt, 2
consumer. 2
Why 28
addition 13
Wiggins’s 1
again? 2
affects 2
[RK68]. 1
Usually, 3
addl 2
[A79] 1
Subsequent 1
approximations 2
arises: 1
[D01] 1
Wikipedia. 1
Thus 24
[RK68] 1
[KE+62, 1
[L60] 1
[WL+93]. 1
Zeldovich 1
assumptions. 2
bases 2
YSTEMS 203
[P10]); 1
accumulates 1
Weaver, 2
[NM92]) 2
[virtual 5
accept 2
backward, 1
contents, 1
contrast, 10
addresses. 4
Windows; 1
ahead, 3
allotment, 1
[S15] 1
Valley. 1
addresses). 1
[B+13] 1
Then 17
arg); 8
assumes 14
[H87]. 1
Ticket 3
[TTG95]. 1
Sploitfun. 1
[LR80], 1
access. 8
[B86] 1
atop 1
Variables 3
[B+00] 2
best 31
[RL81]. 2
acquisition. 4
Wikipedia? 2
[anon 1
a[i] 1
accessed), 1
basic) 1
Will 6
become 32
advice 4
X. 1
allegorical 1
although 15
Vyssotsky, 1
affinity; 1
[BH70] 2
Though 5
args->b); 4
assumption. 2
[V 166
[K+96] 2
Tiny 1
[W06]. 1
Sun.. 2
[MS04]. 8
address: 8
[CM00] 1
attains 1
WHILE 2
[D65,D68] 2
body 2
__list_t 2
active; 2
Wiley, 1
about, 2
abbreviated) 1
control-c) 1
accessing 36
Wood-lands 1
beginning: 1
and 2770
ZOMBIE 1
again, 31
allow 22
an- 1
We’d 1
algorithm. 2
[BOH10]). 1
Time 29
argument; 2
atomic_increment 2
[W02] 2
[S15], 1
Torrellas, 1
[W15]. 1
Sweden, 2
[S04]; 1
affected. 1
[CV65], 1
attentive 1
Weihl 1
[D68]; 1
bounds”); 1
a[4] 1
addr:20 2
Woke 1
acceptance 2
abilities, 1
costs. 1
accom-plish 1
X 3
behave 12
ap-proaches 1
Zwaenepoel, 1
amazingly 3
always. 1
answer, 8
Where 7
allocated, 2
[C95] 1
Today’s 1
arrays, 2
attain 3
[stack 1
[W95] 1
Tp 3
accomplish 9
Switch 3
[SS+10] 1
[K+61,L78], 1
attribute 2
again 58
[D72] 1
While 31
branch 3
advisors, 1
above 50
Xerox 2
accessed, 12
above), 3
count++; 1
address>, 1
Zelenka. 1
benchmark 3
applications, 6
[B+10] 3
another; 1
and, 5
another. 6
Wish 2
anon) 1
[CS94]. 1
Torvalds 1
arrive), 1
attainable, 1
__counter_t 6
] 2
ULLER 1
achieves; 1
Synchronization 8
acquiring 22
[LL82]. 3
authors. 1
alternate 5
[G83]; 1
Winter 1
buffer[fill_ptr] 1
ago 1
abstractions 7
Zeldovich. 2
achieved. 3
abused. 2
counter: 1
administer 1
[AD00]; 1
benefit. 1
arise? 3
[B66] 2
anti-gaming 1
approach. 8
applied 5
Yang, 1
applications. 12
[J16] 1
Trace 9
ask? 2
author. 1
a+b,b+c,c+d,c+e,c-. 1
a[i]; 1
UNIX 7
a:30:200 1
Systems: 6
ago, 5
[LM+89]; 1
balance. 1
alternatives. 2
[KR88] 2
Y 3
agreed-upon 1
access; 1
[C69], 1
building 41
address-translation 4
adding 35
course) 1
aforementioned 2
[BH70, 1
bit, 10
arises, 4
[B75] 1
appealing; 1
argc/argv 1
appreciation 1
Yet) 1
aren’t 5
[KE+62]. 1
Translation 5
asks, 1
authors’ 1
a:100:100,b:100:50,c:100:50) 1
accommodate 4
Unix 1
a[1] 1
T2, 4
akin 2
[MS04], 2
basically 6
amazed. 1
[M+70]. 1
[CK+08] 1
allocated. 5
accidentally 12
[CM00]. 1
built. 1
advanced, 2
address! 1
credentials, 1
aggressive 3
[BH73], 2
block 22
arranges 1
[D82] 1
book 47
arrives 4
arguments) 1
Zhiqiang 2
arg; 7
[L+75]. 1
Trials 1
atomics. 2
a[8] 1
available 31
actions 18
V. 3
Tc2) 2
accesses 47
all... 1
[S59, 1
basing 1
analyses 1
[Y+18] 1
[D+13]. 2
anytime 1
account 6
[H61, 1
burden. 1
advantageous 1
admission 1
cycles). 2
allotment 2
[BNS69]. 1
array[1000]; 1
appears 1
[D91] 2
born: 1
assigned. 1
[BJ81]. 1
array 46
arises. 2
[L+93]. 2
Undoubtedly 1
attempts, 3
accordingly. 3
avoid. 3
activate 1
VMS. 2
TestAndSet(int 2
according 3
analysis” 1
[W+95] 4
batch-like 1
apparently 1
accesses; 1
[E95]. 1
appearing 1
activity 3
[HP06] 2
buying 2
advent 1
advertise 1
almost 13
[C+04]. 1
aspects 10
approaching 1
[G+95]. 1
bottleneck 1
assistance. 1
[CS94] 1
data 252
ask 12
around, 4
[M04] 2
VAX 5
baby 2
acquires 8
back-and-forth 1
ago: 1
Whenever 2
Too 3
answers 3
[X+10], 2
acquire 57
below; 1
approaches: 1
achieved, 1
[H74]. 2
approach) 1
alas, 3
[W+95]. 2
cache: 1
age), 2
affecting 1
alone! 1
[D01]; 1
assumption 10
appropriately 3
[L11] 1
available; 1
[EF78]) 1
bounds 48
datacenters, 1
assembly? 2
art. 1
[MS98] 2
VM, 3
baby!” 2
actions, 1
barest 1
albeit 2
Why, 1
Transparent 2
anywhere 6
above; 7
active. 1
better. 7
bit), 1
ad 3
addr:0 4
approached 1
allocator, 5
[WG00] 3
calculate 5
algorithm; 2
against 9
amplifying 1
[D68]. 2
atomic_decrement 2
answer 29
[LL82], 1
avoided 2
[FLR98]. 1
brk, 1
daunting 1
attaining 1
[O11] 1
VPN; 2
backwards, 1
address(es). 1
basi-cally 1
algorithms). 1
X, 1
U.S.S.R; 1
Undefined 1
abstraction. 1
actively) 1
arise, 4
black). 1
[LR80]; 1
address? 1
arrives; 1
anyhow). 1
at 576
__queue_t 2
caller; 2
all) 1
allocators. 3
[D70]), 1
assembly, 3
atomicity 8
author 2
[QI15]. 1
battle 1
[High 1
decision, 4
attempt 14
[P10] 1
Vasileios 2
base/bounds) 2
address). 1
be: 2
along 10
Xerox. 1
approach), 2
Users 2
accessibility 1
adapt 1
but 288
arrange 4
blocked 16
[M+63] 2
advances 1
articles 2
all, 17
attributes. 2
a[1], 1
capacity 2
ain’t 2
already 28
[G+95] 1
attempts: 2
anything. 1
[R+89] 1
behavior, 3
avoid 50
[K64]. 1
defense 3
away.” 1
[PV56] 1
Wait: 1
addresses? 1
We’ll 38
beautiful 9
alternately, 2
Years 4
approximating 1
VMware 1
accidental 1
address); 1
byte). 1
arrangement, 1
boot 11
[R69] 1
applicable 2
asking: 3
all-too-trusting 1
axis 4
allocate 31
careful, 3
amazingly!), 1
algorithm 34
[G85], 1
badly 1
appropriate) 1
[W09]. 2
believe 5
base-and-bounds 4
[KE+62] 2
describing 4
axes. 2
design 22
becomes 18
alive, 1
behaves 11
before. 7
Zhang, 4
always 53
architecture 18
Visualization 1
accumulated 1
addresses, 3
c->value 4
array[i] 1
bounds) 1
[S+03] 1
approach? 3
assembly). 1
abilities 1
bad. 7
allocate(10). 1
alternately 1
amount. 2
all. 9
[H91]. 2
behaves. 5
arbitrary 13
bigger, 2
bash), 1
[L+75] 1
[RT74] 1
back-to-back 1
desktop 4
Whereas 3
allocation). 2
behavior. 4
begs 2
[C54] 1
beyond 20
Warm-start 1
another 105
accurate 2
again!) 1
cache). 1
address 561
aside: 1
byte 15
[S+68]), 1
args 8
assume) 1
about; 3
bandwidth 3
cares 2
animals 1
ancient 2
amazing 9
[H93], 3
behaviors) 1
architectures: 2
billions 1
be, 2
[L+93] 2
[SA96]. 1
back. 2
detector 1
William 3
allowed), 1
behaviors; 1
argument 22
[C63] 1
blame 3
We’ve 2
answer! 1
accustomed 1
aims 1
candidates; 1
affinity, 1
aspect 15
c->local[cpu]; 2
[S05]) 2
array. 4
assured 1
above) 6
base/bounds 5
cases? 2
answered, 1
anticipate 1
amounts 7
[I09]. 2
bits: 1
arguments: 3
bounce 1
[L83], 1
[SS74] 1
backward 1
devices). 1
XECUTION 15
before 130
allowing 22
benefits. 1
arrive: 1
[DV66,V+65]. 1
boring 1
answers. 2
achieves 7
answer: 2
When 122
cast 4
algorithms, 3
assembly 13
c1 10
[S59] 2
array’s 1
attacks, 3
accesses, 4
basics 13
chaos 2
approach). 4
anyhow, 2
anti-hero 1
[N+07] 1
blocks. 2
argv 3
brag 4
[M82], 4
a1). 1
base); 1
differentiate 2
based 17
before!” 1
always, 5
best-fit 7
assert(count 2
[HP06]. 3
bottom, 2
arbitrarily, 1
active, 2
anyone 3
YSTEM 2
allocation 24
certainly 32
associated 18
[S68] 1
arrived 6
cache 86
avoided; 2
addr:10 1
be. 11
chosen. 1
approaches? 1
anything 17
any? 1
[P+95]). 1
book! 1
array.c 2
build, 2
[PP03] 2
a:100:100,b:100:100,c:100:100) 1
YOUR 1
difficult 10
before, 7
begin. 3
amortized. 1
bible 2
assigning 1
[PS81] 1
bounded 8
architecture. 4
activity; 1
approximate 20
Yet 2
applications? 1
apply 1
awful! 1
[SN05]; 1
assertion), 1
cake 4
awake. 1
advanced 7
begin\n"); 5
citations 1
arbitrarily 2
application. 4
anymore, 1
[Page 2
books. 1
aware 2
bx=1000,bx=1000 2
[R97]! 2
a[0] 2
Your 1
dismantling 1
bidding. 1
belt, 1
amt; 2
big!”, 1
avalanche 1
[SB92], 1
boxes 2
architectures; 2
affinity. 4
approximation? 1
Zhou, 2
choice 8
approaches 31
background 15
assumption: 1
above, 39
centers 1
best-case 1
allowed. 1
books). 1
classic, 1
args->a, 4
architectures, 1
[QI15] 1
applications 29
both? 2
basics; 1
bytes), 3
[SA96] 1
about. 6
You’re 2
documentation 3
better.” 1
another, 12
bit 93
big, 3
basics. 1
[V+65] 1
bragging 2
argument. 2
age; 1
architects 4
[A79]) 1
class), 2
are. 4
base-and-bound 3
available, 11
abundant, 1
cesses. 1
bitwise 1
altering 1
boost. 1
clustering. 1
assign 3
arguments, 5
[S+11] 2
appropriate 3
bottom). 2
bowels 1
c->value++; 4
a:100:100,b:100:50, 1
abusing 1
[B+19] 1
dominant 4
binary. 1
approximates 1
bits”. 1
bits, 7
behaviors 2
about) 1
brilliant!” 1
arguments; 1
algorithms. 5
arithmetic 2
[BOH10] 3
classmates; 1
arg, 2
big. 3
away; 1
achieved 1
change. 6
block, 2
arcane, 1
bottom 10
codes 2
assignment, 3
arise. 3
[SB92] 1
area. 1
behalf. 1
buffers? 1
a[9]) 2
accessed. 4
[C06]. 2
dread: 1
boost, 1
argc 1
bombs, 1
blocks 9
bits1 1
call 230
above). 7
broken 1
arrival 1
allowed 8
arrives. 2
assert(p 1
client, 2
arise2 1
arose, 1
beautiful, 1
additional 15
changes; 3
book, 18
architectures 2
bouncing 1
column 5
assumptions? 1
arriving 2
[W09] 2
arena 1
business 1
behavior 35
achievement 1
[D70], 1
drive 5
boots, 1
argument: 2
born. 1
books 21
breaking 1
care! 2
accumulate 1
c2, 1
avoiding 16
[C63]. 1
assists 1
about 294
clustered 1
bit! 1
any 171
arrive] 2
big; 1
addresses; 4
chooses 3
bounds, 5
arguments 23
box, 1
automatically, 2
commonly 13
attackers 2
a:30:200. 1
bye, 1
arises 21
below). 3
acquisition 6
[H87] 1
ease-of-use 1
break. 1
asking 4
boundary; 1
botte 1
builds 1
address> 1
calculates 1
case 62
awesome 2
[EF78] 1
atomically; 2
above. 20
command, 4
bits. 2
appetite, 1
aside 4
bit. 5
advantage. 1
classically 1
but, 1
astute 2
buffer; 6
auxw 1
commonplace 1
attention, 3
a[1]. 1
check. 4
art 1
benefits 5
[L83] 2
bigger 19
broadcast 1
add 82
aspiring 1
break: 1
bucket 2
analysis 5
calculations? 2
caught 8
[G+17] 1
attained 1
c 177
back 65
companies, 1
accessed 42
blocked, 3
applicable; 1
asleep, 1
age-old 1
assumptions 14
c4 6
both 87
attention 10
bytes. 3
awoken 3
communicating 3
authors.. 4
a[3], 1
choices. 1
assuming 25
eat 6
[M28] 1
bolts, 1
btrees. 1
affect 10
association 1
brk 1
buffer); 1
anyhow. 2
caller. 2
chagrin 1
[MM00] 2
avoided. 2
c4, 1
beginning 15
cannot 21
accident 1
book), 2
approach: 5
command-line 2
authors 8
call; 2
briefly 7
award-winning 1
c2 10
barons 1
company). 1
base/bound 1
all 247
a[6]) 2
chosen, 1
basic 94
ebx; 1
[M82] 2
boosted 3
buffer[MAX]; 1
again) 3
broader 1
atomic 25
bug 4
architectures. 1
caller’s 1
challenging 6
[PS81]. 1
balanced 6
compared 7
behaviors. 2
caused. 1
accomplishes 1
boolean 2
arg. 2
commonalities 1
auto-matically 1
careful), 1
broadly 1
beguiling 1
caches. 1
compilers 1
begin 32
allocations 8
accesses. 5
attr, 4
chucking 2
batch 7
edition. 1
[S+04]), 1
broadcast(), 1
browser, 1
al-though 1
buggy! 2
atomically. 2
bugs. 11
are, 4
chapter), 1
can’t 30
[S07] 2
bash, 1
completes? 1
big? 1
chain 2
account. 1
break; 5
array) 3
complete; 5
avoids 5
case; 3
broken, 2
beware 1
carved 1
complexity 10
alternating 2
accused 1
being 54
attributes 4
chunks 13
behalf 2
effective) 2
[S+11]). 2
bytes, 10
al.’s 2
attacks2 1
buggy 1
bx=100). 2
build 118
argued, 1
characteristics 2
caused, 1
[W03] 1
beauty 2
computers) 2
big” 1
challenge 5
activity. 2
built 19
asked 2
components. 1
balance 15
certainly, 1
buffers 6
beyond), 1
caused 2
computation; 2
amt>0) 2
act 3
below, 2
automatic 2
cleaned 1
below) 3
efficacy 2
[S04] 1
cache? 2
attempting 1
allocated 46
build. 2
c->global 4
bunch 6
arguments. 4
checking 6
center 2
[WL+93] 1
behave? 4
concepts, 1
binary, 1
chapters) 1
addr 2
c->value--; 4
assume: 1
concern, 3
be? 9
chips 3
c:100:50 1
bit). 3
centralized 1
computers, 1
answer) 1
addition, 4
better? 1
bad 31
clearly 17
beneficial 1
emphasis 1
[V+65,BH70]. 1
enables 23
awesome, 3
also: 1
bx=2,bx=2 2
caller, 4
burst 3
arranged 1
co-authors). 1
choose 5
a1 1
behaves, 1
bits? 1
concurrency 36
cheating 1
address), 1
cache, 11
attempted 2
concurrently, 1
begins. 1
choice, 2
caching 9
bodies 2
chances 4
better 88
answered 1
addr:21 1
biggest 4
base, 1
clock 11
blocked. 2
caches, 5
[VPN 11
enterprising 2
b; 4
always!). 3
bytes). 3
calloc() 1
buy 6
arrive; 1
codes. 2
cleaning 1
a[9] 1
behavior: 1
born 4
condition); 1
child? 2
addressed, 1
call); 1
avoided, 1
conditional 1
chosen). 1
call1 1
both) 1
conceptual 4
black) 1
chapter. 25
appear 4
advice, 1
billions) 1
close(fd); 1
binary 14
call). 5
a[6] 1
entirely. 4
back, 4
analogous 1
c; 3
cause. 1
bytes) 3
article 3
commercial 3
clear: 6
break, 1
behind 31
construction 7
chopped 5
admit, 1
campaign 1
bad! 1
access 133
consumers), 1
cloud 2
camp, 1
brutal, 1
concert 2
book; 1
characterize 1
are! 3
alas). 1
book). 5
cloud), 1
be 785
bookshelves 2
called. 4
accommodated. 1
entries 22
became 21
anonymous 4
can, 4
changing 9
caches) 1
asleep... 1
complexity. 2
clever 5
bugs 6
benefits: 1
consumers, 2
chunks). 1
again; 3
can. 3
before), 2
accesses)? 1
controls 5
cofounded 1
clean-page 2
bus, 1
confidence 2
bounds; 2
children, 3
area 5
all? 8
both), 1
clustering, 1
below. 13
break 5
caller 14
accordingly 1
began 4
exactly 39
anymore. 1
casts 1
argc, 23
capability. 1
assert(fd 1
constructed. 1
close(STDOUT_FILENO); 1
busy. 1
contiguous; 1
clean 9
between 79
al. 5
case); 2
biased 2
accesses?) 1
converts 2
comes 14
clever, 1
bus-based 1
confirm 6
broadcasts 1
circular 1
array.c) 1
allocate(int 1
bounds). 1
cmpl 1
bits), 2
brings 1
carefully, 6
address) 2
begin\n", 2
examines 3
client 5
chapter). 3
careful. 1
around 42
attention. 1
contention; 2
coalescing) 1
call), 1
correctness 9
cloud-based 1
blocks, 1
also, 1
categories: 1
bit) 1
added 12
cost; 4
company 1
client. 1
butter 1
constructed 4
bucks. 1
class? 2
array: 1
allocates 11
breed 1
co-exist 1
co-workers 1
c6, 1
caution 1
addressed 2
chapter, 16
coalesce 2
example. 31
chance. 2
char 35
arrive 21
avenue 1
contents. 2
columns 1
called, 10
costs? 1
company, 2
book? 1
altogether, 1
cell 1
blank 1
address, 7
couldn’t 2
compare-and-exchange 2
client’s 2
c3 10
buffer, 11
contents 28
clear. 2
asides 1
alter 2
bytes; 2
boost 8
code/stack/heap? 1
call) 1
beginning, 1
admit 1
clear, 5
code); 2
examples; 2
child, 8
associative. 1
check 46
balanced: 1
context-switches 1
combined 1
catastrophic, 1
cover, 2
concern; 1
bounds? 1
anticipating 1
centers, 1
bounded-buffer 1
address-based 1
competitive. 1
create 49
cocoon, 1
call: 2
bytes? 1
contrast 7
code: 7
ask: 2
amazingly, 1
cache. 9
boots 2
coherence 3
begun, 1
adversely 1
close(), 1
called 111
colleagues’ 1
exclusion 21
chip, 2
atomically: 2
child: 1
because, 1
copy! 1
complete?) 2
cause 24
brutal 1
arising. 2
concurrent 80
critical 140
chosen 5
brief 4
advance 1
computers), 2
currency) 6
command. 2
came 12
c->value; 4
controversy 1
common, 1
attacks. 3
analyzed 2
caches; 1
brand 2
collection 3
behavioral 1
agent 1
combination 11
case) 1
color 1
executing. 1
chunk). 1
attachment 1
circuitry 2
becoming 2
cores 1
complicate 1
challenge. 4
bug, 1
associative 1
concurrently; 1
currency 4
circumvent 1
broad 4
affected 1
concurrency, 10
daemon 8
commands; 1
case: 4
calls). 1
counter. 12
communicate 2
auto-magically 1
apologize. 1
calamity. 1
cannot? 1
com- 1
benefit 1
alas. 4
community. 1
changes, 1
command 12
execvp(myargs[0], 2
coarse-grained, 1
average. 1
clean; 2
begin” 6
counts 4
computation. 2
chapters). 2
bus 3
atomically, 2
connections 1
days: 2
clustering 3
buffer. 6
cond_t 5
after 54
dealing 2
compaction 3
cen-tral 1
cases). 1
counter_t; 6
compact. 1
automatically 6
append 2
builder 1
careful 16
come–great 1
better-than-expected 1
all!), 3
complain 2
cheat 2
commentary 1
exit 13
code), 4
awake 1
commands, 1
behaving 1
crime, 1
computed 1
checks 25
bx=3 2
attacker, 1
consist 2
define 9
cmp 1
bx=1 2
configurations, 1
alike, 1
declared 1
compete 1
chains 1
cast; 1
counter’s 2
comparison: 1
ax 4
carefully; 1
bytes 41
commands: 1
bind 1
allocator. 2
complete: 1
choice: 1
commonlyused 1
explained 2
combines 1
base. 1
completely 6
borrowed 1
critically, 1
condition: 1
cons. 1
c;, 1
attr 2
constructing 3
deliver 8
combina-tion 1
confused 1
call, 19
allocation, 2
degenerate 1
compiled 6
challenges 2
darned 1
certain 26
completion; 5
ax=0,ax=1 2
challenges, 1
caches 16
commonly-used 2
bitmap 2
allocators; 1
are 870
complicated. 4
chunk, 3
companies 6
extreme 4
compacted 1
best; 1
completion); 1
bother 1
crux: 5
chores.” 1
contention 4
call. 17
average 16
contributed 1
descriptor, 2
comparing 5
consider 26
canonical 3
delivered 2
depressing 1
con- 1
changed, 3
deadlock). 2
chanced 1
complications 1
ax=1,ax=0 2
chance 4
call-ing 1
completes 6
black 3
alone 6
assertion 2
component 5
cite 2
compiled(!) 1
failing 3
complete). 1
bet. 2
concatenating 1
breath. 1
curr 6
community, 1
can’t) 1
avoided? 1
convention 2
device; 1
control 79
complementary 1
continuous 1
carefully! 2
allows 37
depths, 1
conclude 2
class 12
deallocate 1
comprises 1
balances 1
change 55
chapter; 1
care, 2
concept 9
born, 1
attack 9
computation 2
clearing 2
client/server 1
fast, 6
compromised. 1
bits). 4
condition). 1
also 213
browser 1
datacenters. 2
complicated, 1
case. 3
background; 1
copies 12
difference 18
cooperative 5
components: 3
base 66
alternatives 4
describes 6
consumers. 1
cleans 2
case, 105
condition. 8
decision 15
bed. 2
chapter? 9
chooses. 2
carefully 17
concurrent) 2
bugs, 2
avoidance. 2
conceptually 2
complicated: 2
clues) 1
faulting 2
computers. 1
blocking 2
congratulations! 1
am! 1
built-in 1
decision. 2
decrease 2
causing 3
correctly, 3
creation, 6
core. 2
concludes 1
bet 2
disk 54
among 14
design: 1
consumes 2
close 11
challenging, 1
conditionals. 2
decreases? 1
begins! 2
depending 12
class, 3
change! 2
confusing 2
byte) 2
badly, 1
concrete 1
computation, 2
co-authors 5
file: 1
conclusions 1
cabinets 1
consumed 2
amount; 3
c->threshold) 2
concerned 5
defeats 1
challenging. 1
could, 1
changed 18
corollary 2
concurrency), 1
bits) 1
disrupt 1
and? 1
designate 1
contention, 2
code; 3
chapter! 1
conditions; 2
chapters, 9
behave. 2
dequeue 5
changes. 1
classic 26
consider-ably 1
cache) 1
condition, 7
concepts 7
an 545
because 93
fills 3
condition) 1
calculation: 1
continuing 4
c5, 1
concurrently) 1
demands 2
criteria. 2
creators 1
charge 7
correctly 19
considered 10
borrow 2
distinguish 2
approaches, 1
destruction 2
control, 4
combat 2
chapters. 6
confines 1
clarity. 1
cleverness, 1
desired. 9
clear; 1
consisted 1
chapter 37
does 256
confuse 1
community 3
concrete, 1
anomalous 1
begins 13
connection 1
calls: 3
contiguous 13
causes 5
flag 73
configurable 1
desire 7
curr->next; 4
crucial 2
children! 1
correctness, 4
constituent 1
both. 4
are: 2
detail10 1
convenience 2
combining 7
characteristics, 1
considering 6
behind-thescenes 1
collect 1
despite 6
close, 1
calls. 5
cheapskate. 1
consumer 26
doing: 1
connected 4
company’s 1
cond; 2
answer? 3
below? 1
convention; 1
casting 1
copyon-write 1
cheaper, 1
flash-based 2
consulted 1
destination: 1
currently-executing 2
ctxt 1
chop 5
costing 1
context; 1
breathe 2
arrays 5
details. 34
communication 2
cool 17
checking, 1
contiguously 2
convince 1
combinations 3
detail; 1
cluster 2
candidate 3
chunk. 4
contain 6
domains 1
consuming 3
compile-time 1
considerably 1
answers, 2
blocked); 2
convoy 2
central 7
correcting 1
forever! 2
child 59
context, 2
detailed 8
deallocates 1
culprit 1
co-advisors 1
continue; 2
broaden 2
aside, 2
could 137
deterministic 8
compiler; 2
correct; 1
closer 2
below 11
cooked 1
compare? 1
didn’t 11
cold 3
carts 1
chunks; 1
continuing. 2
easy-to-read 1
context. 2
complete, 7
consumers 9
application; 1
blocks: 1
copy-onwrite. 1
checkbook 1
craft 2
forgets 1
chip 1
continue, 1
device, 1
decisions 7
concurrency? 1
constant 1
control? 3
broadly. 1
asks 4
count. 2
deterministically. 1
computing 16
creating 9
code.” 2
binaries, 1
core, 5
competing 6
digest. 1
comfortably 3
cases. 3
clear 12
correct: 1
ebx, 1
continue. 7
complicated 13
consumption 1
approximately 1
bold). 1
correct, 2
children 1
crazier 1
forth). 1
coalescing, 4
control-c 1
differ, 2
delight 1
current 37
containing 4
control” 2
brought 10
assert 3
counterpart 1
developer. 2
concurrently-running 1
curr->stride; 1
communicates 1
block. 3
crashes, 3
completion, 2
directly. 3
compiling 1
challenge: 9
clock; 1
costly. 3
enabled 4
contributions 1
concatenate 2
architecture, 4
contains 32
bookstore 1
costly 7
citation. 2
creation; 1
game 4
coarse-grained 2
correct? 3
differently 1
deployable 1
cycles 11
converted 1
cooperative? 1
built; 2
assumed 12
crazy. 2
disable 3
concurrently. 1
decisions, 2
completion. 2
book. 23
cream.” 1
complex. 2
dividing 6
complete) 1
child/parent 1
costs 8
enact 1
correct-ness; 1
code, 73
concurrency: 2
argument, 11
counters, 6
bound 4
count--; 1
cited 2
creator 1
get: 4
code) 3
counter++; 1
direction; 1
data) 2
data[100] 1
cooking 1
correct. 2
bx=0,bx=1 2
assumptions, 6
critical, 2
discretion 1
consists 8
definitely 4
counter 116
both, 1
creation 20
components 1
do; 2
comprise 3
chops 1
counter, 15
engineering 2
cost: 4
collector 2
consider. 2
arise; 1
course. 4
breaks 2
cover 11
closes 3
cycle 4
getpid(), 2
by 705
counter1 1
discussing 4
describe 14
declares 2
detail. 12
atoi(argv[1]); 1
cyclic 2
disk) 3
controlled 8
computing2 1
delaying 2
create(); 1
bottleneck. 2
data; 1
comprised 3
double-click 1
compromised 1
closest 1
coverage 2
ensuring 14
counters 14
commandline 1
constitutes 1
assert(rc 5
curr->pass 1
buddy 11
crash. 1
declare 4
code. 44
colleagues 3
globally-shared 1
c->threshold 2
course 20
do) 1
cores. 1
deeper. 1
details; 3
attack: 1
deadlock 5
doesn’t, 3
correctly? 3
concern 5
deploy 1
create, 2
bounds. 5
database 13
computations 1
draw 2
computers 7
coarse 1
cycles) 1
equals 3
counting, 2
compact 3
construct 5
atomically 16
cycle. 1
buffering 1
cyclic-sequential 1
delve 5
collaboration 1
come 9
gracefully, 1
caching. 1
crash 2
don’t, 2
corre-sponding 1
deeply 1
deter- 1
attempts 4
deciding 5
done. 10
corruptions. 1
curious, 1
deployment, 1
curr); 1
bug; 2
deal? 2
concept: 2
eax=50. 2
computing, 4
cold-start 2
date. 1
errors. 1
counting-based 1
compare 6
attacker 4
dandy. 1
byte(s) 1
context 70
day! 1
depend 3
complex, 4
granting 1
common 61
calculation, 1
create(), 2
downsides, 1
costly, 6
depends 5
determined 9
average). 1
decodes 1
double-precision 1
concurrently 9
currently-running 9
designs 1
current->tickets; 1
c->local[cpu] 4
debug. 1
concluding 1
endless 4
concurrency). 1
combine 7
debugging 1
especially 13
crude 2
comparison, 3
available. 14
date 2
c5 5
continue 10
days. 1
depends.” 1
computing. 1
grasshopper, 1
competitive 1
call? 4
cycles. 4
draw. 1
coupling) 2
design) 1
developer; 2
away 12
dedicated 2
downward. 3
conditions. 5
deal 16
desktops 1
deadlock) 2
c6 6
decreasing 1
changes 20
etc.); 1
configure 5
coming 7
decreased, 1
customer! 1
compiler, 2
every 52
award 4
day 5
cached 3
converse 2
delete, 2
description, 1
concise 7
grow; 1
compile 11
calls, 3
danger 2
drawn 1
crazy! 1
designed 9
diagram, 6
awesome! 1
deleted 1
duty. 1
consult 2
e.g., 8
dest_buffer[100]; 1
decisions? 1
deletion, 1
deeper 5
channel 1
confusion. 1
completed 5
degree 3
debug, 2
complete. 6
example? 2
backing 1
decide 23
even 148
cat 3
correctly-working 1
depiction 2
designers, 1
cond 17
handle. 1
completed, 2
can) 1
data). 1
dreams 1
cross 1
development 13
direction 1
backwards 1
demand. 1
demand-zero 1
continuously, 1
emailing. 1
developing 7
concurrency; 2
descriptors. 1
defense; 1
check; 1
desired 52
completes1 1
depicts 1
desired, 1
complex-instruction 1
examples, 3
battles 2
deep 7
evicts 3
century. 1
correctly. 8
derive 1
destination. 1
constraints, 1
determines 17
compulsory, 1
device 11
days 4
dx 2
curious 3
devices 15
directory, 8
before? 2
demise 1
descriptor). 1
control-z 1
enacted 1
differentiates 1
condition3, 1
depth 2
choice. 1
context-switching 2
destruction, 1
compulsory 5
dedicate 1
detects 1
concurrently? 2
excess 1
begin... 1
descriptor? 1
execl(), 1
changes? 2
correctness: 2
descriptor 1
happening 1
context-switch 4
canceled, 1
concurrentlyrunning 1
differ 2
decides 11
easy-to-use 2
date, 2
different-sized 1
diving 1
begins: 1
dependence, 1
better, 14
couple 10
enough. 2
direction, 4
condition? 1
diagram 10
conventions, 1
chunk 44
deterministic, 2
compute 12
deeply-nested 1
diagram). 1
exercises 4
behaved 1
descriptors, 2
executable, 3
condition 81
chopping 1
cost, 5
detail, 6
hard-and-fast 1
contexts, 1
care 10
confront 1
directory; 1
deeply. 2
edx; 1
day, 2
differs 1
do. 18
determining 4
dependent 1
course). 1
big 44
entirety 2
disabling 5
conference. 1
directory 18
couldn’t. 2
claims 2
directly 8
computer. 1
destroyed 1
differences. 2
existing 14
behavior? 2
device. 1
execution: 1
confusing; 1
chunks, 4
countermeasures 1
did. 2
convenience). 1
hardware, 15
case? 5
constants, 1
disappear). 1
default, 2
encountered 1
deep, 1
directory. 6
done; 1
developments 1
desired). 1
covered 2
entries: 1
disaster. 1
bits 70
configured 1
dirty) 2
counting; 2
compete, 1
disciplines) 1
concerned, 2
directly, 5
detail 26
exit() 6
better) 1
die, 1
exists. 4
conspired 1
clarify. 1
create() 11
different-size 1
counter); 6
hardware-based 5
discipline, 1
cases, 27
contending 14
descrip-tion 1
entering 9
demands. 1
distributed 7
dump”, 2
died 1
details1 1
cpu 4
excessively 1
do: 2
born! 1
confined 1
discipline1 1
crux 3
compiled, 1
disk), 2
concurrently), 2
dirty 11
detour 1
experts 1
beyond. 1
differences 2
expires. 1
const 3
clean), 1
cruces 1
do, 11
created, 14
heavy-handed, 1
disconnection 1
catches 1
continued 1
devices. 4
errorprone. 1
demonstrated 2
efficiency. 3
efficiency, 3
dirty-page 2
detecting 1
current->next; 1
either 49
drives 2
bring 4
confuses 1
discrepancy 1
curse 3
distribution 1
complete 23
configure; 1
disappears 2
developed; 1
extents 2
bizarre 3
disassembler 2
exploited 2
consumer; 1
coalescing 6
daemon1 1
discuss 53
creativity 1
hide 1
discussion, 1
character. 1
copy-on-write, 1
dictates 1
errors? 2
esi; 1
end, 5
discusses 1
difference, 4
exchange1 1
encounter. 1
currently 27
dynamically-allocated 1
browser. 1
continues. 6
discussed. 1
dark 3
does), 1
concurrency. 7
connects 2
disassemble 2
difficulty 4
famous 21
brilliant. 1
extracts 3
cope 1
coherence, 2
document 1
darn 1
discussion: 1
dangling 1
hierarchy; 1
doing? 2
citation 1
copy. 1
desire. 1
did 22
estimate 2
environment. 4
display 2
enough; 1
currently-pointed 1
earlier) 1
execution 48
bumping 1
cooperatively 1
divide 6
deallocations 2
easy. 3
construction. 1
constants 2
different 196
disassembler. 2
disabled; 3
features, 2
broken. 3
fair, 1
copy, 1
complete? 3
doesn’t). 2
debate 2
disks 4
decade. 2
high: 1
closing, 2
core 8
destroy 1
dies, 2
don’t 81
exceptional 5
escalation 1
eax=51), 2
environment, 2
dangerous 5
easy; 1
exit()) 1
bytesLeft 3
counterbalance 1
drop 4
decided 6
dedication. 1
convenience, 1
consulted, 1
differently; 1
disposal.” 1
discussed, 1
felt 3
brutally 1
copying. 1
fast 19
completed; 1
doing. 3
debugger 6
documents, 1
decimal), 1
hit), 4
details); 2
count 25
different: 2
earlier, 3
exciting! 1
esp; 1
effectively 5
epic 1
data. 9
edi; 1
experiments 3
calculated 1
created. 3
eagerly, 1
eax=50 2
code 391
demoted 1
convenient 1
convoys, 1
disciplines 2
doing; 1
few) 1
buffer), 1
cost. 1
fetches, 2
completely: 1
doubt! 1
default 7
doing.” 1
default? 1
hoc 2
diagnose 1
do 328
counter) 1
digit 1
efficiency; 1
can 699
evidence 1
efficient) 1
equation; 1
databases 5
effect 4
expose 1
critical; 2
easily. 3
effects 1
columns: 2
depicted 2
converge 1
copy-on-write 5
disk, 14
doubt. 1
driver 1
buffer[use_ptr]; 1
counting 7
few, 2
completes, 9
drivers 1
complex 22
described 36
defaults, 2
differently. 3
holds 38
driving 1
crashes 2
execvp() 1
elsewhere, 1
child. 2
doing 76
example). 3
element, 2
etc.). 1
decay-usage 2
efficient 19
far; 1
critique 2
efficiency 8
efficiently. 1
compare-and-swap, 2
depressing. 1
cool, 1
corresponding 10
does, 6
find!) 1
dummy 4
cache; 2
fewer), 1
creates 34
done\n", 2
each. 4
comprehensive 2
device), 1
deployed. 1
discuss, 1
honorable 1
editor, 1
crazy 3
expects 3
evicted, 1
chip’s 1
dollars 2
exchange 2
employ 4
eviction 3
decides). 1
efficiently; 1
fashion, 1
currency; 1
else, 7
data, 18
comparison 7
destination 2
coolest 2
counter1, 1
domains, 1
flaws. 3
ease. 1
calculation 1
fewest 2
customized 1
don’t. 1
earlier; 2
configuration 2
difference: 4
description 9
disk-access 1
hope. 1
encounter 7
create()); 2
fail 13
evil 1
chocolate 2
dominate 3
excluding 1
end” 8
example), 10
deep... 1
emptying 1
finds 10
enabling 15
first, 20
declaration 5
compiler 26
deterministic. 2
copying 4
dramatically 2
flexible 9
easy: 2
course, 73
call3 1
figure, 15
datacenter, 1
doubt 2
eaters; 1
confusing, 2
different. 2
designers 9
disk? 2
how, 1
endlessly 2
datacenter. 1
fast. 5
excellent, 4
chose 1
doubts 1
executed, 5
error, 3
exceeds 8
definite 1
emulate 2
enable. 2
enacted, 1
floating 1
defaults. 2
computational-overhead 1
devices? 1
correctness. 3
dream. 1
flushed 1
eax. 5
covering 7
file. 2
debug 1
downsides. 1
calls 88
economist. 1
constant. 1
disciplines. 1
destroy()) 2
disks, 1
however: 1
entered, 2
de 1
fault 12
exec(): 1
coalesces 2
exited 1
etc., 1
exceptionally 2
demand? 1
entry; 2
ending 1
engineers 2
follows. 4
defend 2
computer, 3
directions. 3
each 340
dynamically 1
fly 1
cost 49
effect” 1
crash, 1
file.txt 2
definitive 1
due 19
effective. 3
cases 29
constraints 2
does: 2
developments. 1
eax, 3
http://www.sparc.org/standards/SPARCV9.pdf. 2
entirety? 1
declaring 1
feel 8
fair. 1
coined 2
expect: 4
example... 1
experiment 5
demand” 1
essentially 11
entries; 2
entry. 10
forays 1
defense, 1
concerns 3
disk). 3
eases 1
ele-ment 1
following: 8
costly; 2
elapsed. 1
current: 1
file’s 2
degenerates 2
ease 4
employed 4
challenge, 1
consumer, 6
done? 1
deviously 1
element 14
hypervisors, 1
establishment 1
defeat 1
fewest-possible 1
family. 1
commands 2
expensive, 6
exec() 13
family? 2
descheduled. 1
everyone 1
enum 2
examining 4
forever; 2
defer 2
confections 1
distinct 2
eater 2
employs. 1
form). 1
court, 1
end), 1
days, 6
fine, 1
demanding 3
easy, 1
endlessly, 2
closing 2
contexts 2
downfall. 2
digested; 1
ends 4
iMac 4
etc.) 11
definition 6
files) 1
famously 3
common) 1
explanation 1
existed 1
figures, 1
design. 2
examples. 3
environment 4
execution, 8
deletes 1
form 46
confining 1
does). 1
effective 12
en-us/um/people/mbj/Mars 2
formed. 1
cpu.c 2
energy-efficiency 1
decimal. 1
focus. 1
desk 1
eax 20
establish 3
cold- 1
continues 7
dramatic 2
discipline 1
error 17
illegal 11
evenly 3
delving 1
fill_ptr 2
fancy? 1
completed), 2
explored 2
expectations? 2
files. 1
desire, 1
excuse 1
events 5
exhibits 2
demonstrate 5
freed. 3
consults 1
d’un 1
efficiently? 5
enabled, 4
former 5
currency. 2
entirely 4
defined. 1
fragmentation? 1
details! 1
ecosphere 1
examples 21
collected 1
correctly! 2
dx) 4
discredited 1
etc. 5
execle(), 2
imagine 41
execute 29
finegrained 1
few. 1
completing 1
external 10
eyes 2
desktop. 1
exhibit 3
eventually, 1
find 86
exists 3
dereference. 2
consume! 1
effectively, 1
eight 1
dairy 1
frame 40
end 46
equivalent. 2
deletion) 1
framework 3
developers. 2
efficiently, 1
excellent; 2
collectively 2
costs, 1
dynamic 20
discussion 17
exam? 1
demand 11
implications. 1
execution” 1
from 443
fixed-sized 11
field, 2
conception 2
failure; 2
facets 2
destroying 1
exist 11
evolved 1
finish 13
exact 26
derivatives 1
control: 1
embarrassment. 1
encountering 1
darker 1
free) 5
estimator? 1
errant 3
design-ers, 1
free, 5
discussed 24
execute, 2
enter 32
columns. 1
coverage, 2
e 1
double) 1
exception; 2
deschedules 3
inc 1
expressed 2
fully-associative 1
flag[self] 4
filled 6
conflict 2
fashion; 1
failure. 1
diagrams 1
exits 3
expand 1
for: 1
example) 10
descheduled, 1
conundrum 1
enforcement, 1
enters 21
data? 1
free-list 1
evaluate 6
est 1
designer, 1
full; 2
doesn’t? 1
explore 5
entries); 1
compare-and-swap 10
easier, 1
created 22
down, 1
execvp(). 1
die). 1
increased, 1
far: 2
function. 2
followed 5
fine. 2
consideration 2
feeble 2
fashion. 3
differently, 1
expected; 3
expected. 4
forget: 1
executing) 1
design, 1
copy 18
event 3
entries). 2
defensive 1
friends 3
executed 17
details). 4
getpid() 1
done! 3
extremely 3
entry, 8
completion), 1
end. 1
curious. 1
driver8 1
experimentation. 1
example 131
difficulties. 1
incremented, 1
faster. 6
functions; 1
fixed 13
consistency 3
fell 2
found 84
fetch, 2
difficult. 3
experiment, 1
exporting 1
fork()ing 1
exit; 1
desk? 2
correct) 1
exceptions 3
entry? 1
demonstrates 3
from). 2
exit(1); 6
gettimeofday(); 1
determine 34
double-ing! 1
factor 8
ever, 1
enjoy 3
debugging, 1
decide: 1
dx=3,dx=3 4
express 1
exceeding 1
displays 1
indicating 8
fetched 5
fundamentally 3
for) 1
corn 1
fields, 1
finish), 1
discovered 4
four 52
fancifully 1
failed; 2
formal 2
exited2 1
despairing 1
counter; 2
exec(), 6
exec(); 1
designs, 1
func(). 1
exiting? 1
did, 1
goes 27
drops? 1
fall 5
execlp(), 2
ensures 14
computer 59
defaults 3
earlier 18
executed), 2
fact, 28
double. 1
inseparably 1
files 10
gates 1
free. 13
corner-case 4
field” 1
finished, 10
dive 4
free()) 1
fast” 1
familiar; 1
forms: 1
expect, 2
create()6 1
details 46
executable 13
existed; 2
design” 1
expect. 2
generate 28
disk-like 1
grep 7
groups. 2
guard; 2
expected, 4
entities 5
error; 1
dereference 1
eaters 2
fail. 2
executing 26
downside, 1
integer, 4
follow 2
funny 1
going 29
fine! 1
correct 42
first-out) 1
divides 6
free(void 4
features. 2
faster; 1
four-level 1
explicitly. 2
creature 1
developed. 1
execution. 17
exit). 2
explicit 22
expectations 1
fair 19
give 30
glock; 2
google’s 1
guide 1
fact 20
field: 1
essay 1
evermore 1
effectively. 3
families 1
exists, 3
dream 1
intensively 1
for, 2
guessed 1
heap-allocated 1
first; 6
correctly; 1
fit 27
do), 1
generalization 5
ghastly 1
favorite 8
fprintf(stderr, 6
exploration 1
credit 3
developer 2
expected? 2
desirable. 1
expensive 3
doing, 3
fair-share 7
easier. 1
fashion). 1
grouping 4
hacker 2
concurrent, 2
filled. 1
designated 2
everything 12
elsewhere 3
fault. 7
exits? 2
during 29
interact 15
forced 2
handled 4
heart 2
count) 3
first. 10
flag) 5
documented 1
fg 1
github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
fetch-and-add 8
fragmentation2 1
exports 1
datacenter 1
did), 2
explain 1
detect 5
exploring? 1
downward). 1
family 5
easily 17
features 17
grow, 1
hands 4
constantly 3
fit; 1
designing 3
evolution 3
empty), 1
favor, 1
expected: 2
interesting. 2
forget, 1
else 45
happy. 4
held). 2
covers 4
fits 9
flag[1] 2
finish, 2
doesn’t 51
grab 11
fight. 1
free(). 6
facility 3
days... 1
disk; 4
extended 5
developers 12
fault; 2
each, 1
far) 2
editor 2
fetch), 2
guesses, 1
happens? 2
contention. 2
focusing 2
developed 23
exec 2
end”. 1
ensued 1
fact. 2
intergalactic 2
free() 8
employs 3
have, 1
hello 5
crazy) 1
customer 2
first-level 2
fork() 25
drive. 2
grabbing 2
free? 4
fact). 1
de-queue 1
failed, 1
diagram); 1
into 339
fellow. 1
done 72
fetches 10
files, 3
enable 24
early 68
harmless, 1
control. 1
fork(); 4
dirty, 2
executed. 1
fd 1
envisager 1
feature 5
freely, 1
emulator 1
heavily-used 1
himself, 1
formula 2
deallocated 4
hardware 263
flags 10
forth 3
driven 1
gray) 3
freed; 1
failed\n"); 4
deallocation, 1
fancy 7
file 95
digging 1
introduces: 1
few), 2
double-check 1
finding 15
end\n"); 5
effective, 2
creation: 1
held. 16
few 102
forth; 1
down 25
expensive. 2
equal, 2
fetch 29
file, 9
enacting 1
full 33
honor. 1
here, 22
forward! 1
decrement(counter_t 4
high. 3
fork; 1
frees. 1
else? 2
guarantee 21
frustration 1
fairshare 1
decrees 1
fares 1
flexibility; 1
directing 1
invention 1
fields 2
down-wards 1
flag[2]; 2
endeavors 1
efficiencies 1
criterion 2
hierarchy, 1
forwarded 1
download 2
figure 35
exploit 1
era, 1
first-in 2
entity, 3
final 51
functions: 1
finished 14
http://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1303.PDF. 1
fourteen. 1
demanded 2
formal, 1
gave 3
email 2
guessed, 5
fundamen-tally 1
fanatics, 2
deleted); 1
faster, 6
flushing 1
disappear 1
invocation 1
figure), 1
downward 1
flexibility: 2
enough! 1
elements 8
cycles, 3
homeworks, 3
frames 5
drink 2
fill; 2
failed 8
errantly-freed 1
free-page 1
entry). 1
futex_wake 2
herein), 1
how 441
five 8
http://www.intel.com/products/processor/manuals. 3
fraction 5
descriptors 5
fought 1
embracing 1
generally 28
guide. 1
goal 19
faulty 1
dense, 1
first) 1
focus 21
disk. 14
job? 1
flexible, 1
drive, 2
flexibly 1
else-where, 1
data), 1
entire 46
hot 1
dynamics 1
fine 7
general 41
familiar 2
evicted 3
fullness 1
error-prone. 1
gaming 2
heuristic 2
hugely 3
flavor 2
hundreds). 1
free(rvals); 2
designers. 2
free(): 1
emptied 1
gadget), 1
handled, 1
hack, 1
fetch-ing 1
designs. 1
flag). 2
follows: 21
dissertation 6
jobs, 14
frankly 3
duration 2
folks 1
empty. 1
decayed 1
entirely; 2
https://gruss.cc/files/kaiser.pdf 1
eating 1
fit? 1
generates 10
far, 13
fully 8
error? 2
excellent 42
gently 1
https://quoteinvestigator.com/2015/07/23/great-power. 1
hybrid, 1
flight, 1
idea! 1
future; 1
destructive 1
frequency; 1
entries. 3
glibc 3
happen 15
hand-over-hand). 2
figures 4
destroy() 2
form, 6
divided 8
following 55
jumping 2
free), 2
edit 2
follow, 1
encouraged 1
decimal 2
entry), 1
electrical 1
fits, 1
implement 30
gives 15
further, 2
faster 16
etc.? 2
exec(). 2
hybrid. 1
idea; 1
gets 51
foil 2
gcc) 1
immediately 23
details, 4
frequently-used 1
essential 3
great. 1
hardware. 10
hard-hitting 1
file), 1
develop, 2
formally: 1
does. 1
forgot 2
kill. 1
friends, 2
editor? 1
forest, 1
end-of-string 1
decisions. 2
element. 1
flag)? 1
examine 36
imply 2
goofs 1
fault) 1
futex 16
exist). 1
eventually 15
improve. 1
illusions, 1
gettimeofday() 5
found. 2
gdb) 1
implementation. 4
developer, 1
funky 1
exclusion. 6
greater). 1
hardware’s 1
have? 2
fill. 1
differentiation 1
forthcoming 3
doivent 1
fork(). 2
laid 4
forth. 10
effort 3
forward-growing 1
enemy? 2
decreases 3
elements; 1
flag[0] 2
exist: 1
increases. 5
granularity, 2
faulting”, 1
general. 1
existed. 2
evict. 3
indefinitely, 1
immense 1
giant 1
fragmentation; 1
generalized, 1
implemented 10
die 1
gcc 10
execvp(), 2
grew, 1
header: 2
fitting 3
difficulties 2
free(10), 1
downwards 1
friend” 1
lations 1
fully-developed 1
encounters 2
free(), 2
enormously 1
defined 5
enjoys 1
floor 1
explicitly 12
inform 4
has 348
graph, 6
feedback 5
generalpurpose 2
expect; 1
except 6
indexes 1
implementation)” 2
gray 3
frequent 4
gettid()); 4
inclusion 1
directed. 1
gdb 5
exert 2
hackers 1
headway 1
fix. 1
digest; 1
freeing 6
drives, 1
fully-operational 2
learned? 1
get() 7
engineering; 1
free(tmp); 3
equally 1
delay 2
enlisted 1
flush 5
fairly 9
initializing 1
head->next 1
instruction) 9
filling 1
generation 1
expert, 1
execution), 3
inefficient, 2
in-between 5
frequently; 1
globally 4
independently! 1
indicates 3
great 79
globallyshared 1
exist; 2
hardware-interpreted 2
heavilyused 1
flag; 6
direct 14
from, 3
dustbin 2
functionality. 3
len:10 6
full, 6
enough 32
global 56
errors 9
deployment. 2
enqueue 4
forces 2
fairness, 2
grows, 4
header_t 1
finishes, 1
get(); 5
explains 2
inflation, 1
extra 18
increased 3
full). 2
go 37
inefficiencies 1
grossly 1
graduate 9
existence 3
int 260
directives 1
hardware-specific 1
help: 1
focused, 1
discussion). 1
fully-associative, 1
dynamically-allocated, 1
good. 6
earliest 13
functional, 1
easier 19
grande 1
evil.” 2
descheduling 2
entity; 1
form. 2
far-reaching 1
halted, 1
headers 2
flexibility 2
global; 2
expect 15
initiating 1
fastpath) 2
incremented 4
general, 18
goals 15
information. 9
guard 14
group 12
exit. 5
intellectually 1
discussion. 1
haven’t 4
for. 3
hence 20
dives 1
further 31
libc 2
hardware) 3
fundamentalist 1
entries, 5
efficient, 5
graphics 2
exception. 1
describe. 1
equal 19
forms; 1
far. 1
hand-controlled 1
helpful, 1
forever, 6
globally-allocated 2
eyes...) 1
field 15
input 20
independent 4
generalized 1
good”. 1
informed 3
guess, 3
grow. 1
exits; 2
interface: 1
disk-drive 1
highlighted 1
forefront 2
here? 3
documents/R4400 1
fusion, 1
lie 1
head->next; 1
gadgets 1
equation 1
efforts 2
green 1
exchange1) 1
desires 1
era 7
formula, 1
fascinating 9
helps 5
handler 24
functions, 1
grand 1
failures. 2
file.txt|wc 1
input/output 3
inexpensive 1
gettimeofday()). 1
habits; 1
init 4
handling. 1
experience 9
diverse 1
http://linux.die.net/man/3/pthread 1
had 57
fork.py, 1
heuristics 1
it. 68
double 3
futex_wait 2
life: 1
header. 1
gain 16
era. 1
eip; 1
grows? 2
excludes 2
details) 1
exam- 1
fewer. 1
higher-level 1
hang 1
garbage-collected 2
grows: 1
fairness. 6
finally), 1
insert; 2
init: 2
glance 1
happen: 1
input); 1
has). 2
free 187
extend 2
do? 9
http://www.ostep.org/Citations/notes-solaris.pdf. 1
hard-andfast 1
forward 4
historically, 1
itself); 1
earlier). 1
ecx; 1
effect. 1
it’s 33
listing 4
header_t; 1
gaming, 1
example: 8
en.wikipedia.org/wiki/LoadLink/Store-Conditional. 2
handlers 5
execl, 1
deterministically) 1
fill 11
hinted 3
have: 2
getrandom(0, 1
hallmark 1
fantastic, 1
first-fit, 1
inspiration 1
inodes, 1
gnu 2
harder 4
example, 262
instead, 5
heap), 1
freedom 1
done, 6
failure 21
hurting 2
hard-working 1
free(ptr), 1
historically-based 1
eight-page 1
kernel-owned 1
gains. 1
locations. 1
held: 2
generalizing 1
excited 2
enabled. 1
handling, 1
extension 1
develop 12
finishes. 1
history... 2
head, 1
government 3
hand-over-hand 8
fast; 1
foo 4
insert(queue, 1
good! 2
instruction. 22
haul, 1
executing, 2
instrumentation 1
hierarchies, 1
from. 5
downward, 1
fashion 4
imaginary 1
hard. 1
frees 6
hostility: 1
emails 1
kicked 2
gates, 1
help. 1
generations 1
lock() 38
executes 23
encapsulated 2
havoc 2
fail! 2
devices, 2
hit, 28
hit). 1
graphs 1
handle 17
feasible. 1
foreground) 1
instruction, 19
heap 76
got 16
instructions; 2
http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 1
execv(), 2
int) 2
hint 4
go, 2
earlier. 2
fault, 7
incur 1
hardware? 1
frequencies; 2
he 20
empty, 3
kindly 1
generality, 1
get? 1
higher 24
logic, 1
exhaustive 3
encourage 3
failure), 1
first” 1
differ? 1
honest 1
http://books.google.com/ngrams). 1
hack. 1
handler. 2
feature-filled 1
format; 2
integer 17
hearing 3
greater 4
interchangeably 1
i.e., 29
exercise 4
interleaving, 2
hit. 5
goals, 1
faulting. 1
indexed 3
huh?? 1
frightening 1
easy 50
head; 2
ence 1
helgrind 16
gigabytes 1
historically 2
lookup 12
exiting. 1
engineering. 1
falling 1
fix 3
get 126
direction. 3
hurts; 2
http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD329.PDF 1
handling 14
handlers; 1
fellow 1
fortuitous 1
interest 3
guarantee. 1
here: 10
interfaces, 1
i=0 1
exiting 2
invent 3
hold, 1
going. 1
fetching 4
indicate 15
hurt 3
functionality, 2
ebp; 1
know, 5
enough), 2
here) 4
great, 1
horrible 1
exploits. 1
loop 41
entitled 2
fantastic 1
flag=0 2
graph. 1
directory: 1
ice 1
imbalance 3
happened 5
havoc’ 1
fine-grained 3
foundational 2
introduction, 1
handler, 3
him 1
invoked 2
ignored. 1
expert 3
it). 3
humorously, 1
greater-than 1
ineffec1 1
identifier 3
furthest 5
efficiently 10
knowing. 1
entry) 1
hides 1
greater), 1
imperatives. 1
figured 2
loved 1
equivalent; 1
farmer 1
first 278
flags: 9
greedy 3
disk); 1
impacts 1
in-between. 3
hardware). 3
heap. 10
fingertips. 1
friend, 2
inventory 1
happen. 2
history, 3
it3 1
illegally). 1
exploring 2
judiciously 1
happy 5
infinitum. 1
importantly 1
goals? 2
idea 92
egomaniac. 1
evict 9
hierarchy. 2
greatest 1
implement, 1
flag, 14
main-deadlock.c 2
et 7
evicting 1
fine; 2
flag. 13
groups 3
done) 1
in-use 1
incorrectly. 1
heavyweight 1
helgrind? 2
flag.s. 2
generating 2
iterations, 1
happens; 2
hogging; 1
holder 2
exposed 1
kept 12
harsh, 2
infrastructure 1
in, 6
good, 2
imagining 1
elsewhere. 2
exception, 3
history; 1
impossible 1
grow 18
follows 6
memory! 2
large 93
exactly? 2
its 295
fire). 1
flag’s 2
grows. 1
draconian 1
in: 1
increased. 5
here! 1
hidden 4
focused 3
giving 15
harddisk 1
improvement 3
host 2
extent 1
jobs 102
kind. 1
hate 1
insparable 1
increasing 10
growth: 1
incrementing 12
enough, 5
exhibit. 1
homeworks. 1
guesses 3
for? 2
handles 14
for 1176
larger. 1
exclusion? 2
itself) 1
flaws 1
footnote: 1
guaranteed 1
eax=51. 4
inaccessible, 3
indicated). 1
hex 4
high, 4
forcefully. 1
goals. 2
has. 1
in? 2
hour 1
heap, 22
l/stl 2
large) 1
heap); 1
instant 3
last 37
gruesome. 1
inefficient? 2
exist. 5
http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF. 1
ensure 34
mention 1
forget-ting 1
forever. 1
hard 51
exist, 1
left 21
it’ll 1
formed 3
forcing 1
hacked 1
either. 1
incurring 1
inner 1
high-level 6
highest 20
formulae. 1
hair 4
incrementalism; 1
fact: 3
hptr 1
hexadecimal), 1
leftmost 1
heart. 1
immensely 1
instruction? 3
leading 9
guy 3
innocently 1
exits. 4
idea: 1
entity), 1
mid 1
fragmented) 1
forewarned: 1
hardware/OS 2
exit? 1
length) 1
jars 1
fragmentation. 6
foreman 1
happened; 1
empty 14
inducing 1
input, 1
highly 7
homework 9
fortunately, 2
handed 4
indexing 1
fetch. 2
http://www-formal.stanford.edu/jmc/ 1
hood 1
length, 1
highlyfragmented 1
implemented? 1
left) 1
instructions, 10
hacking 1
inopportune 2
expected) 4
identical 6
missing 4
free(50). 1
entry 55
forget 8
here; 4
exits, 2
levels 9
join 12
fragmented 3
fork()/exec() 1
header). 1
eviction. 1
in 2103
init(), 2
highly-networked 1
inside 30
hope 13
fragmentation: 1
harder. 1
infinite 6
finished. 2
https://birrell.org/andrew/papers/035-Threads.pdf 2
http://www.unix.org/version3/. 1
lesson: 2
hybrid 10
implies 7
library” 1
integers 4
handler). 1
inputs 2
extract 7
indefinitely) 2
mmap(NULL, 1
free(x); 1
etc.)? 1
forms 3
hierarchy 2
far 21
libcrypt-2.23.so 1
killed; 1
free; 5
found, 2
hear 1
exception 15
includes 13
inputs. 1
instruction: 1
hit 32
fragmented, 2
holding 12
front 10
influential; 1
first-fit 3
i5 2
hundred 7
life. 2
identifiers, 1
inaccessible. 1
line, 7
intelligence. 1
hates 1
insert. 2
fail? 1
inspires 2
mode), 1
freed 3
freely 2
ever 19
high-performance 1
few). 1
libraries. 2
fewer 13
frequently. 1
gained 1
hello, 8
excessive 3
incorrect. 1
inquiry 2
intricacies. 2
hardly 3
however, 49
hoping 6
fun 20
initialization. 3
flavor. 1
ideal? 1
idle, 1
idle 5
illusions 1
inactive 4
lived 1
intensive, 1
head->value; 1
instructions. 5
fails, 3
instant, 1
naming 1
future, 5
everywhere, 1
homeworks 5
function 41
laborious 1
fine). 1
friendly 5
good? 1
local 56
execvpe(). 2
high 36
incurred; 1
inverse 1
interface 16
http://www.multicians.org/history.html. 1
hash 17
hypervisors). 1
functionality 2
initialized 8
flow 14
like) 2
imbalance. 1
impact 5
immediately. 2
independently 8
location; 2
interactions. 2
header, 4
intensive. 1
failures 1
integers, 2
nary 1
general) 1
evicted. 2
hopes 1
game, 1
laptop 2
finishes 6
from) 2
guest 1
locates 2
exit), 1
history. 3
initiate 3
involving 1
interval, 1
idiom: 1
ideas? 1
future. 9
insight 1
focuses 3
link 6
impact, 3
implements 6
improve 17
indicated. 1
looping-race-nolock.s 8
intervals) 2
heap). 1
intricate 3
fairness 7
interludes. 1
next; 4
generator 2
executes, 3
hours. 1
generalize 1
latency 9
fires 1
func() 4
guide: 1
long; 1
expensive!). 1
hit; 1
insidious 1
important. 5
idioms 1
introduced 25
garbage 2
instead. 4
forth), 1
list-like 1
important, 7
have 487
importance, 1
inadvisable 1
installations. 1
lucky, 2
invalidate 1
help, 1
intuition 3
familiarity 2
non-executable 1
grammar 1
expected 7
how-to-generate-a-random-number-from-within-a-range. 1
goodness); 1
interrupt 77
leaks 1
flag? 3
gaining 5
habit 2
ls, 1
face 4
honor: 1
insights. 2
info 1
implementations, 1
is), 1
gone 5
integers), 1
fourth 4
incorporated 4
headaches. 1
industry 2
intelligence 1
little 103
machine? 2
inversely 1
highest-order 1
important 63
investigate 1
fault? 1
noted 3
gruesome 1
faint 1
https://lwn.net/Articles/170003. 2
harming 2
idea, 7
introduce 12
flags, 1
general? 1
happen, 2
m->guard 10
fails 5
however 1
install 1
inserted. 1
in-kernel 5
isolate 1
intense 2
fragmented; 1
heard 1
increase 20
inefficiencies. 1
good 99
interactions 4
load. 2
machines, 5
inverted 4
http://en.wikipedia.org/wiki/You 1
in-terface 1
junctures 1
faults, 2
nuance 1
observed 1
field. 1
learning 2
head_lock, 2
ideal 4
isolation; 3
forever 6
generated. 1
hardware-managed 9
management. 3
fault3 1
http://ostep.org/Citations/inside-cfs.pdf. 1
integer) 2
instructions). 1
in. 11
keyboard 2
interrupted 14
friend 3
initial 5
inherently 2
here 46
gum 1
interval. 1
lock(&mutex); 2
main-two-cvs-while-extra-unlock.c. 1
iterations? 1
http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html. 1
in/out 1
feasible 1
keeping 14
guess 8
old; 4
file-system 1
letter 3
held) 1
idle! 1
issued 7
forewarned, 2
generic 4
hardware: 3
mark 6
faults 3
http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF. 5
interested 11
inability 1
interesting 46
kmalloc. 1
is: 9
greater. 1
initiates 4
heyday 1
halt 5
intervention. 1
lock->flag 6
maliciously) 1
join() 9
humans) 1
instruction 130
informs 1
figuring 1
killer 1
hand, 3
once), 3
files” 1
library; 1
higher-priority 2
illegally 3
jobs? 3
forgetting 2
goal: 1
harm 3
matching 1
hung. 2
finally 27
interposition 2
inaccessible 2
interrupts, 4
large-memory 1
iterations/threads: 2
is 2736
greatly 4
input: 1
high-end 4
hand. 3
invalid, 8
logic 7
malloc(20);. 1
k-stack(B) 2
hybrids 1
intend 2
innocent 1
file; 1
languages, 2
hand-coded 1
onelevel 1
findings 2
live 12
hints 4
imbalanced? 1
join(), 7
frames; 1
growing 5
has, 1
measuring 5
immediately, 4
find. 1
involvement 1
incentive 1
intro 3
laugh 1
kernel), 1
hand-assembled 1
issues 26
ins 1
handed-out 1
invited 1
his 37
lost, 3
many” 2
icon, 1
interrupt), 1
inserted 2
finally, 8
library. 10
handle; 1
kernel 123
operator. 3
fork 7
load-linked, 2
hit! 1
independently, 2
kernel, 7
frustrating 1
guarantees. 2
headers, 1
meet 5
implicitly 2
fine-tuned 1
irstrun 1
incredibly 8
kill 10
learn? 1
handle, 1
lead 50
it? 11
installs 2
happens: 5
involved, 6
hits, 2
machinery. 3
marked 11
implement!) 1
interrupted, 3
inspired 1
flag.s 2
libtinfo, 1
hardwaremanaged, 1
keystroke 1
opposed 3
formally, 1
locale 2
hits. 1
instantaneously. 1
key); 4
functions 7
handlers, 3
hire 1
memory-like 1
in) 2
finish. 2
is; 3
killed). 1
increment 14
libtinfo.so.5.9 1
hands-on 1
line. 1
itself), 3
instructions), 1
hardware; 2
it!), 1
hopefully, 3
itself, 8
marriage, 1
important). 1
installation, 1
introduction 17
flags. 2
lives 7
head), 1
lazily, 1
optimizations 1
free()? 1
hold? 2
integrity 1
know. 3
gcc, 1
long 68
happens. 3
hole 1
misses). 1
increment(counter_t 4
fit, 2
issue. 3
knowledge, 3
incrementally. 1
like, 3
head->size 1
list: 3
it’d 1
interactive, 1
header 15
market... 1
matters. 3
killall. 1
impressive. 1
instructions) 2
means 31
intuition? 1
forcefully 2
long-term. 1
heap) 2
ldq 2
options. 3
frequency 5
holds, 2
intelligent 2
gdb, 2
lost. 2
hard-to-find 1
how: 1
known 90
i++) 18
multiprocessor 19
five-level 1
it: 4
latter 5
indicated 4
list), 1
heap: 2
load/store: 1
it” 1
investigating. 2
heavy, 2
house 2
mature 1
kinds: 1
improves 4
intact; 1
indeed, 11
issuing 6
found? 1
loop) 2
helping 2
length? 1
ordering 9
friend: 1
honor 1
interface. 4
general-purpose 8
lot! 1
harmful. 1
indicative 1
la 3
illegal. 2
near-term 1
flag), 2
force 2
layout. 1
init() 6
lives. 1
held; 2
locks: 3
jobs. 7
is. 7
held, 6
http://cag.csail.mit.edu/raw/documents/R4400 2
maybe 4
l/stq 2
measurement. 1
indeterminate, 2
interactive 20
items 9
fragmentation, 6
lying 2
herein, 1
lengths, 1
originally 2
function, 3
interrupted) 1
getpid()); 9
ideas 36
luck! 1
informed, 1
having 29
later), 1
imbalance, 1
nearly 9
jobs) 1
fork(), 9
life, 3
initializes 5
long-lived 3
highlight 3
lottery.py, 1
join, 2
isolating 1
http://history-computer.com/Library/AltoUsersHandbook.pdf. 1
help 38
memory), 5
memoryintensive 1
memory; 19
insert 12
isolation, 2
iterations 4
free-space 4
machine. 9
hierarchies 2
library, 10
otherwise 14
generalizes 1
interruption, 2
gettid() 2
illegal, 1
machine; 2
init(); 2
heap? 3
latest 8
included 4
leave 13
juggling 1
forth, 4
lightweight, 1
innovation 2
longrunning 1
hits 13
love 2
homework, 9
it.” 1
http://www.ibm.com/developerworks/linux/library/l-solar/. 2
herein. 5
launches 2
merely 1
methods 4
installing 1
it! 14
million 17
frequently, 3
machines; 1
lifesaver 1
hold 27
overhead, 1
investigator 1
imagine, 4
getting 33
mainframe 2
graph 11
given 80
heavy 5
necessitates 1
increasingly 6
lies 4
jump; 1
fragmentation 13
linking 3
integer). 2
lower-half 1
interval 8
lwarx/stwcx 2
hopefully 6
item; 1
https://github.com/mit-pdos/xv6-public. 1
home 3
microkernels 3
instance 3
itself; 3
jacket, 1
let’s 73
mind, 4
fringe 1
made, 5
likely). 1
http://ftp.gnu.org/gnu/glibc. 2
overwrites 1
kernel?” 1
implementation 7
innovator 1
malfeasance 1
grows 16
gods, 1
next, 1
held 25
initialization 8
limitations 1
kids, 1
free(16500) 1
load, 3
jokes 1
locations 11
intervention 1
machines. 6
http://en.wikipedia.org/wiki/ 1
kernel) 2
http://cag.csail.mit.edu/raw/ 1
i; 16
mirrors 1
kick 8
join. 2
like. 6
instructions 78
misses 21
mail 1
future 21
links 3
humorously 1
p3). 1
kills 2
improved 6
installed 1
malloc(sizeof(int)); 2
hash_t; 2
happening? 1
nice, 3
hogs, 1
instances 2
limits; 1
languages 4
freed) 1
m;) 1
loops? 1
jump 22
intrinsically 1
main() 11
https://en.wikipedia.org/wiki/Buffer_overflow 1
killing 2
huge 20
ideally 1
miss-handling 2
last. 1
knows, 1
list). 2
insufficient. 2
month. 1
manipulates 2
manually 1
literature 1
imag-ine 1
page-replacement 6
incl 1
int), 2
manipulate 2
know 71
have. 3
heap; 2
non-practical 1
http://stackoverflow.com/questions/2509679/ 1
locality, 8
large, 7
frequently 7
machines) 1
lowest. 4
instead 95
kernel; 2
invisible 1
main-race) 2
humans, 1
landmark 3
i 22
ignore 5
mistake 3
leap 3
latency. 1
lists[BUCKETS]; 2
interconnected 1
more! 1
gather 1
many. 5
impetus 1
locality 18
park(); 4
incorporate 7
materials. 1
interaction 13
knowledge? 1
helgrind, 2
none-too-subtle 1
head 39
humble 2
lock(&m) 1
laws 2
from; 1
made: 3
machinery, 1
interact. 1
larger? 1
isn’t, 2
main.c 6
increments 7
least-recently-used 4
illusion: 2
improvement. 1
mix 1
least) 1
layout 2
llock[NUMCPUS]; 2
interesting) 1
multicore 6
generated, 1
mechanisms; 1
implementations. 4
loss 2
park, 2
index. 1
mem.c 2
left-shifted 2
here), 2
interrupts 33
not: 3
heavily 2
hundreds 5
lock(lock_t 14
left, 6
functioned 1
main(); 1
main-race.c. 2
interest: 2
later); 1
it?) 1
many! 1
lest2 1
index 20
illustrate 5
in- 1
mode) 9
left). 2
learn, 1
invalid. 2
loads 19
names 1
get(counter_t 6
memory-management 2
important) 1
lottery. 1
participated 1
info: 1
memory). 6
like: 3
hog; 1
interval’ 1
numer-ous 1
held), 7
illusion. 2
locked; 2
mainstream 1
fundamental 18
less 29
majors 1
interleaving 4
ldl 2
join()); 1
measured 2
indirection 3
implementing 8
incarnation. 1
likely 73
move). 1
legends 2
library) 5
involved. 2
locking, 2
networking, 1
grocery 2
memory?”, 1
interesting; 2
low-priority 1
partition 1
men-tioned 1
limit 6
https://events.static.linuxfound.org/sites/events/files/slides/elc 1
information 57
intriguing 1
old, 1
help) 1
imbalances. 1
lookups 1
maintain 4
generally, 7
letting 6
make. 1
interrupt; 1
len:30 1
jump) 1
memorymanagement 1
inheritance. 2
implying 1
include 18
list. 21
ms. 5
limits, 1
length 16
isolated 2
logarithmic 3
new->next 4
growth 1
mentioned 7
interrupt: 4
machine, 8
perfectly, 1
merest 1
load” 1
human 4
infrequently 1
introduces 6
oldest 1
helped 2
important? 1
loops 18
generated 12
lifeless 1
makes 57
maliciously! 2
libc-2.23.so 1
is, 22
jumped 1
mind. 1
init(lock_t 4
improbable, 2
inefficient 4
list_t; 2
multiprogramming 8
loading 6
line: 2
issue, 3
longer, 1
newly-created 3
habits 1
invalid 8
magic 7
perform? 1
merge 2
ls 1
identical, 1
most 130
inherits 1
k-stack(A) 1
on. 9
here. 11
in-memory 2
lowest-priority 1
goal, 1
link) 1
malloc(strlen(src) 1
linked 18
jobs: 2
miss: 1
inkernel 1
keep 48
increase? 2
list 103
infinite. 1
list’s 1
mutex; 6
lock), 2
lingo) 1
itself. 19
looking 13
nice), 1
half 8
involved 9
malloc(10 2
phone 1
meters 1
macOS, 1
implement. 5
much?). 1
injected 2
kernel” 1
one) 4
here’s 1
ls. 1
including 51
grabs 16
manual. 4
manuals 2
list; 4
judiciousness 1
mistakes), 1
innovations 2
languages. 2
increases, 2
load/store 3
inflation 2
located. 2
myarg_t; 4
long-running 15
listens 2
joke, 1
node. 1
lottery 24
hand 6
isn’t. 3
manner 7
physics). 1
metric, 2
machinery? 1
implementations 4
multilevel 2
innovations. 1
kicking 1
one-word 2
hey, 1
m 1
increases 6
grade, 1
mapping 13
maps 7
loader 4
known; 1
modification 2
inode) 2
learns 1
incremented; 2
located 13
informative 3
locks. 6
n 4
looked 8
lost 4
key, 2
node_t; 5
malloc; 2
happen? 8
isses 1
matters! 1
picks 5
modifies 1
machines). 1
implication 1
munication, 1
instruction(s) 2
kind: 1
other) 1
historical 14
main.c). 2
history 16
ground 1
mask 1
measure? 2
lie. 1
modified), 1
lock. 64
insisting 1
least, 7
lock_t 2
indeed 26
initializer 2
make, 2
nearly-infinite 1
low, 3
lots 12
kicks 2
node’s 4
message. 1
happening! 1
it!) 2
mean 6
pipe, 2
modulo 1
main-one-cv-while.c. 1
important; 4
notes: 2
intervals. 1
know! 1
output: 4
influenced 2
malloc()); 1
honor, 1
guarantees 6
master 4
message, 2
limit) 1
modularity, 1
lock_t; 8
interacting 1
legal 6
indeterminate 2
innovations, 1
manifests 2
interfaces 17
nonconcurrent 1
lowered, 1
main(), 1
kidding; 1
metal 1
happens, 4
it... 1
mechanism, 2
please 3
moment 5
main: 12
in-depth 1
occurred, 4
into, 1
now 184
knowledge 14
outs 1
inherent 5
managed 6
idea? 2
guts, 1
matter? 3
messy 2
limited 17
monolithic 1
lock’s 2
interested! 1
low-level 16
individual 3
locks 79
manual, 2
interfere 2
normally 2
lowest 9
managed), 1
killed 2
millisecond 1
hardwaremanaged 1
megabytes 3
itself 32
pmap, 1
monopolized 1
makes. 1
incorporates 2
odd, 1
intricacy 1
old_ptr 4
large-scale 1
owner 4
inject 2
manner, 11
ideas, 3
hackers. 1
matters, 2
miss), 3
line 14
mode, 13
legitimate 1
interesting, 4
lowly 2
informally, 1
long, 5
masking 4
interrupted. 2
notice, 3
machine) 2
managing 9
knew 5
miss). 1
harmful, 1
memories 4
job, 19
pool 1
moving 13
mappings 8
influence 1
odd-sized 1
introducing 5
on). 1
last, 1
ownership, 1
inputs: 2
mappings. 3
implementation, 2
happen?4 1
mem- 1
most-recently 1
model 8
list, 26
happens 78
let 36
informing 1
made 23
lowers 1
math 4
issue; 1
now: 1
madvise), 1
memory) 5
least-significant 1
mlfq.py, 1
has? 2
mental 2
known: 1
populated, 1
muck 1
masks 2
instrument 1
of. 1
intuitively 1
otherwise: 2
lazy 5
p; 7
instead), 1
match 12
importance 8
memory-allocation 10
neat. 1
most. 1
interlude, 2
lock? 10
hence, 3
levels: 1
interleavings. 2
magic; 1
mathematical 1
job) 3
making 63
on-chip 4
magnitude 1
methods. 3
led 8
mocked 1
headed 3
mentor, 2
lags 2
power.” 1
meaning 3
multi-level 30
interpose 1
offerings 2
invocation, 1
overflow 3
lean 1
packages, 1
instruction; 3
matter 13
in; 2
meta-level 1
networking. 2
myret 4
interpretation 1
locks, 22
high-priority 2
internet 1
looks 39
maximum, 1
journalism 1
malloc(). 4
one, 26
migrating 2
lengths 5
mode. 4
helgrind. 2
like 215
metadata 1
lawyers 1
pre-configured 1
mem 10
nanoseconds), 1
interrupt, 4
make 214
one! 1
it) 5
left), 1
page. 21
interactivity. 2
mem. 1
own 72
inconclusive 1
minimally 1
new, 1
nearly-complete 1
intervals 6
hits). 1
main-two-cvs-while.c 1
intervening 3
lookup. 3
microcode), 1
key; 6
malloc’d 3
other, 5
minimize 11
libcrypt, 1
herein 3
linker 1
method 8
learned, 1
predictable; 1
more, 6
newlyrunning 1
interrupt-based 2
malloc(sizeof(node_t)); 8
ones. 3
it?!) 1
legal; 1
pages; 9
internal 12
memories, 1
p); 1
incremental 1
minus 5
new_head; 2
necessitating 1
it; 14
hy-brid 1
more 470
mainframe, 1
invented, 1
loop. 8
migration 5
known). 1
malloc” 1
outcomes? 4
misses. 7
holes 1
list) 5
millisecond. 1
library 47
lessons 5
preferred; 2
most-significant 1
next-to-last 1
mandated 1
isn’t 26
open() 6
itself? 1
levels), 1
pairs, 1
interposed 1
mesh 1
p3.c 3
indefinitely. 2
monopolize 6
nonetheless. 1
needed, 7
jumps) 1
identifier, 2
mutex 17
malloc(3) 1
inversion, 4
loops; 13
minicomputer. 1
language 8
later, 5
overcome. 2
modification, 2
however; 2
listed 1
milliseconds; 1
lively 1
lines, 1
primitive! 2
multiples 1
noble 1
manual 13
journaling 3
lock, 61
life 22
papers 8
interpret 1
microkernel-like 1
page). 1
index: 1
ms, 5
note 27
keeps 13
myarg_t 8
malloc(strlen(s) 1
lucky 3
minimum. 2
issue 33
manages; 1
just 304
law 2
overhead 12
motivating 1
http://portal.acm.org/citation.cfm?id=540365. 2
location, 6
mistakes 3
location. 3
primitives. 8
multiprocessing). 2
none 3
operates 4
map 7
kinds 5
locking. 3
lightweight 1
not 449
parameters). 1
invented 5
misbehaved), 1
pages); 1
if 483
indivisible 2
noticeable 2
large-file 1
naive 3
man 21
needed. 11
multiple 95
miss. 9
mapped 14
ldrex/strex 2
oversubscribed, 1
movement). 1
it, 68
if, 4
kind 54
locks) 3
modified 15
mutex, 4
process; 13
locking 34
not? 2
organization. 1
marks 4
know: 2
logs 1
like; 2
nothing”; 2
park(), 2
objdump 8
misbehaving 2
parameters 9
inefficient. 4
illusion 20
obliged 1
last); 1
m; 1
much 135
needless 2
multiprocessors. 4
mistakes) 1
metrics 7
level, 3
parameters: 1
multi.py 2
job. 8
illusion, 2
late 4
macros 1
more. 14
mutual-exclusion 2
protections 4
note: 4
longer 17
ours: 1
marvelous 1
known, 2
longer-running 1
limits. 1
inversion 6
pdflush), 1
objectoriented 1
peaches; 1
information, 6
immediate 2
observe 6
last-in 1
manages 9
name, 4
machines 21
negative 14
mythread. 2
mocked). 1
miss; 1
likes, 1
park 6
multiplexing 2
job’s 2
implicit 1
later. 9
made. 2
music 2
myret_t; 2
pthread_join(pthread_t 2
notice. 1
lowering 1
outdated) 1
maximum 8
large. 3
is! 2
load 35
physical. 1
once, 9
piece. 3
look 121
initialize 15
immediately; 7
off; 2
manner; 1
napping 1
later 36
main-deadlock.c. 2
new) 4
natively 1
more). 1
mmap(); 1
linear) 1
paths. 2
necessarily 8
improving 4
key 28
leaked 2
least- 1
least-frequentlyused 1
negative, 3
pthread_mutex_unlock(&c->llock[cpu]); 2
pthread_mutex_unlock(pthread_mutex_t 2
lowest-order 1
overall. 1
mem-access 1
latency) 1
lock). 10
points. 1
lock_init(lock_t 4
logically 6
portion 20
plain 2
loop; 2
installation 1
importantly, 9
older 13
memory): 1
neatly 4
latter, 2
matter; 1
no?). 2
necessarily!) 2
moves 15
modifications. 2
load-linked 14
perfectly 2
newly-freed 1
influential 4
knowing, 1
magnificently; 2
mutex. 1
leaving 3
num 1
purpose, 1
manager, 3
next 101
overhead), 2
mem? 1
laughably 1
looping-race-nolock.s, 2
it 1299
practice 4
pointers 5
intent 5
machine 34
init(counter_t 6
micro-instructions 1
optimal 20
necessary 9
lets 10
now? 7
neighboring 1
mechanisms 32
multiprocessorbased 1
lock; 24
move 31
nitty-gritty: 1
performs 21
initially, 2
labeled 3
name 22
level. 7
obvious) 2
main 66
our 230
marvel 1
p3 5
metric: 1
nice 34
lay-out. 1
ongoing 1
looping-sequential 3
item. 1
precise 4
postulates 1
interposing 1
main-signal-cv.c. 2
initially 3
mines 1
next. 10
numbers). 1
level 23
nondeterminism 1
memoryreference 1
multiprocessors, 2
logically-different 1
ms). 3
nodes) 2
pipe 8
initiated 1
larger, 2
nearby 2
libc, 1
off), 2
queue), 1
matches 1
over-written 1
p4.output 1
moment. 1
not. 14
lays 1
online, 2
low. 1
iteration. 1
predict 16
intervals: 4
powerful 21
malloc(), 3
may 123
inode 3
minicomputer 5
notes); 1
obscure 1
light 1
not; 1
microprocessor. 1
longlived 1
mythread, 14
much... 1
nonsolution: 1
pmap 5
insertion 2
laser-like 1
negatively) 3
libraries) 1
offending 10
races, 4
measurements, 1
overheads), 1
part, 2
mouse), 1
of... 3
least 35
operation 20
machinery 10
jne 3
predictors, 2
isolation 3
pre-WWII 1
malloc(strlen(src)); 1
mem.pdf 1
instructions: 2
minimum 2
nuances 3
obvious, 2
likes 1
notion), 1
mind 5
main(). 1
need. 2
multiprocessor, 2
note, 5
previously, 1
interleavings 4
laziness 2
newer 2
lifted. 1
offset=000000, 1
randomness 6
measures 2
overseas. 1
particular, 28
movl 28
length). 2
paging 28
main-two-cvs-if.c. 1
just-finished 1
old 60
pressing 1
it), 4
preferring 1
memory-related 1
interactivity 2
occurs?” 1
offset, 2
miss 32
lives), 1
null.c 1
miss, 10
main-signal-cv. 2
needs; 1
myargs); 2
priority, 7
intermediate 1
notice 34
many 252
leads 13
non-blocking 2
locally-allocated 2
once”, 1
rate. 3
peeking 1
multiple-queue 1
optimal; 2
lmbench 4
paging-policy.py, 1
malloc(sizeof(double)); 1
keyboard, 1
online: 1
previously) 1
memory, 124
job). 1
presents 7
iss 6
ones!). 1
once. 5
mmap() 7
locate 3
object), 1
modify 3
maintains 1
negative). 1
memory. 103
natural 9
priority-based 1
interrupt. 4
now. 7
marking, 1
leak, 1
notice? 1
location.” 2
readied, 1
people.cs.clemson.edu/ 1
one. 24
multiprocessors 5
optimize 4
local-to-global 2
pain. 1
manner? 1
kill() 1
operation. 5
primitives? 2
memory-user 4
jobs); 1
message 10
it1! 1
oops, 1
one-quarter 1
mode). 1
locations, 1
observation 5
money 1
manipulations 2
network 2
millions 3
newly-opened 1
proceeding. 1
is? 2
occasions 1
mathematician 2
legality. 1
obvious: 2
lock(), 8
reading 21
period 8
open-source 2
mutex_unlock 2
order), 1
paragraph 1
manufacturers 1
location 39
knowing 6
opposite, 1
printing 3
presumes 1
minutes 1
key) 16
item 9
opposite: 1
operate): 1
more) 1
lock->ticket 2
obviously 5
mostly 4
maximize 2
memory-bug 1
mind-blowing 1
news: 2
processor. 9
omitted, 1
meant 1
liked 1
occasionally 3
lookup, 2
reality 7
phrase 2
operations, 3
job 144
new->key 4
orphaned 1
parallel) 2
memory-constrained 1
long-list 1
optimal) 1
larger 23
priority) 1
principle. 1
miss) 1
kind, 1
join(). 2
or, 5
opposite 5
multiprogramming. 1
lock-free 3
occurring 3
much; 1
network-connected 1
memory-user.c. 1
minimal 7
notes. 1
programmed 1
mechanism 18
linear. 1
offset: 1
loaded 17
recommend 2
physics 1
original; 2
known. 1
new_head->value; 2
otherwise). 1
patient! 1
memory-failing 2
lookup? 1
organize 1
leak 2
privileged) 2
privileged 24
missed 2
judicious 1
knows 18
jumps 7
opt 1
myargs[1] 2
looping 1
offset=04); 1
multiprocessing 1
metric 5
misbehaves 1
nothing 5
proportionally 1
memory-reference 1
loop, 10
one-to-one 1
local[NUMCPUS]; 2
new 140
recursion 1
popular 7
other. 8
lack 4
nptl 4
periods 4
one 500
message; 1
output 36
loop? 1
output. 2
libraries 3
proc 5
probes 1
orderings 2
mode 23
problem: 25
kernel. 6
optimization, 3
name; 1
naturally 4
modern 90
operator 3
naturally, 1
microsecond. 1
mitigates 1
notion 12
pthread_cond_signal(pthread_cond_t 3
microseconds, 2
main-deadlock-global.c. 2
one? 1
non-ASLR 1
recycles 1
porting 2
others; 1
launch 2
number), 1
persistently 1
methods, 1
p4.output. 1
loops, 4
overcome? 1
limiting 1
proc_state 2
otool 2
language. 3
kernel’s 4
out; 1
process, 51
only 202
n). 1
optimality 1
lock 370
low-cost 1
neat 8
min 3
much: 1
number. 2
need 152
purpose 9
mid-instruction, 2
malicious 14
ones, 2
noticeably 4
register), 1
preemption 2
other’s 1
lazy; 2
perspective, 1
numerous 12
miss); 1
pageable 1
overzealous 1
lists. 1
major 28
process), 3
out-of-bounds; 1
larger), 1
kind) 1
outlines 6
processing. 1
oops! 1
named 8
options 3
logical. 1
lower-priority 2
necessary; 1
mini-computer; 1
nanoseconds, 2
object 10
needed). 2
put(i); 5
no? 8
malloc. 1
one” 1
nuclear 1
relaxing 1
prior). 1
p 1
leaking 3
pipeline 1
of) 3
misses, 8
part: 4
ownership 1
ll/sc 2
malloc(100e6)); 1
profit 1
p1, 5
larger-scale 1
laptops, 1
own? 1
producing 1
open()? 1
others). 1
lower 13
needed 44
need, 1
main(int 23
models 2
numbering 1
occurred 3
obvious 12
oddity: 2
none, 1
manifesto 1
oops 2
nuts 1
pro2 1
releasing 16
p1–p3). 1
play 4
learned 13
on! 2
mode; 2
patterns 4
page-directory 5
loathe 1
managed, 2
pagereplacement 1
pthread_mutex_lock(&L->lock); 8
largest 2
laughing 2
lengths: 1
optimal, 5
output; 1
over-designed 1
p3) 1
networking 3
malloc 8
programs 85
mode” 1
minimal. 2
minimizes 2
q->head 4
off, 3
numbers 12
mapping: 1
opposite. 1
objects 5
occasion; 1
occur. 3
occurs; 3
odds 1
one-third 1
open("./p4.output", 1
opinions; 1
reliability 2
remaining 13
reporting 2
resources? 1
rolls. 1
says: 1
scales? 2
scheduler; 2
scope 2
scorned, 1
segmentation, 4
sensitive 1
sent 3
sequential” 1
set. 2
sharing. 3
shouldn’t. 2
sidebar 2
signal/wakeup 1
life; 1
point, 30
on-going 4
movie 1
pauses 1
park() 4
lock->turn 8
matter, 3
paging). 1
publicized) 1
ld-2.23.so 1
p2.c 1
lifetime 1
lowlevellock.h 2
new; 8
package 4
non-contiguous 2
mapping, 1
properly. 1
modification. 2
occurrence. 1
misses! 1
queue) 1
oblivious 1
masses: 1
offset 42
other 303
proceed! 1
optimizing 2
or 469
packaged 2
simultaneously, 1
lifetime, 1
pointier, 1
open, 1
people, 1
ms 14
patterns. 2
luck. 1
measurements 4
pairs. 1
quantum) 1
page-number 1
list_t 2
machinery) 1
learn 65
newly-allocated 2
norm, 2
pair 21
massive 4
provided. 2
multiplex 1
odd 6
ms), 4
quote 7
occur 9
max 1
oops.x 2
overflow. 1
own. 2
others), 3
orderly 1
sizes, 2
possession 2
operational 1
linear 34
percent 6
much-improved 1
percentages. 1
maintain, 1
parallel 6
rabbit 1
paging-multilevel-translate.py; 1
pages 195
memory 568
main); 1
len:9 1
nothing. 2
occur, 2
passed, 1
master, 1
pseudocode 7
myret_t 6
offender. 1
must, 1
races 4
oddly 1
meaningful 5
optimization 6
process); 1
p2 7
outcome. 6
processes, 31
slumber 2
pressed 2
others) 2
lines 14
performance? 3
multi-CPU 3
perhaps, 1
makes, 2
parameter, 4
paradigm. 1
raise 10
lists 13
pals 1
mess! 1
limits 6
numbers) 1
malloc() 32
often, 7
patent 1
math. 1
pthread_mutex_init(&c->llock[i], 2
needed? 6
oh 2
naturally-occurring 1
re-acquire 1
offset), 1
meanwhile, 1
overflows 4
paging, 4
organization, 1
over. 1
producers, 1
small! 1
printed 6
out"); 1
list? 1
performance” 1
multiply 2
pipe() 2
park(). 2
management 29
parent) 1
reason, 8
lives, 2
patch 5
literally 1
object. 1
oops.y 2
pattern. 2
manage 19
measurements? 1
purify, 2
nicely 1
order; 1
newlyfreed 1
reads” 1
might 218
measurement 3
overwrite 4
often 69
parameters. 2
original, 1
overload. 1
professor 2
something, 2
printf("%lld\n", 2
p. 1
lists, 7
permit 1
myarg 2
played 1
path 8
material. 3
password 1
recently. 2
locality. 4
performance-minded 2
lock) 4
offers 1
optimizations. 1
performance: 4
management, 1
megabytes). 1
non-performant. 1
putting 17
ority 1
notes, 3
referenced; 1
models), 2
messages. 2
owns 2
once). 1
parentheses 2
other? 1
p: 18
programming 7
printf("location 3
space. 45
load; 1
pages. 28
persistence, 1
needed; 1
pouvoir”, 1
peach, 3
maximizing 1
penalties. 1
lock()), 2
refer 27
performed, 2
locked 7
omniscient, 1
order, 5
permanently-valid 1
manager. 4
memory-access 1
non-zero, 1
quantum 5
out? 1
notices 2
references, 1
much, 1
met 1
p1.c), 1
one: 3
multi-threaded 44
others, 4
pages: 2
progress. 3
pro-cessor) 1
sparse, 1
locality: 2
paid 1
logical 15
predictors 1
peanut 1
never 38
memcheck 1
people. 1
releases 14
lot 35
physically-indexed 1
looking? 1
ordering. 2
pesky 1
marking 2
once 60
memory? 9
occurs), 1
questions 13
overview 12
now! 1
register) 2
mild 1
pages). 3
perror("malloc"); 4
oops; 2
multiplied 3
overall, 1
painful; 2
project, 2
process). 2
spawn() 1
persistent 4
pattern 5
lookaside 4
preferred 2
performance; 5
nothing) 4
memory); 2
per-process 12
reliably 3
luck 5
pioneering 6
low 10
origin 2
practice! 1
policy 50
online 6
memory” 1
odds: 1
randomization, 1
page: 1
number, 4
rele-vant 1
milliseconds 6
pause) 1
persistently, 1
opinion 1
multiprogrammed 3
overheads 14
ps 2
processes? 3
parent 44
species. 1
persistently; 1
pause 2
lookups. 1
presenting 1
permissible. 1
noticed: 2
memory-mapped 3
perfect... 2
resource, 4
magic. 1
lower-case 3
ory. 1
meeting 1
precision 2
possess 1
opens 4
mesmerizing. 1
once? 2
re-enable 2
papers, 6
obvious. 2
relocated; 1
minute?), 1
peaches. 1
physically 2
nears 2
overlays, 1
re-referenced, 1
order 80
processes” 5
parts 19
spend 10
phase 3
percentage 5
loop.s 6
preserves 1
phones 3
spin 79
now, 18
restored, 1
main-signal.c. 2
perhaps 39
lowered 1
ourselves 3
microseconds 2
preferably 2
potential 12
opportunities 1
mess 1
read-only 1
operations 26
parallelization, 1
modes. 2
remove 10
pipeline, 2
next: 9
per 57
overly 3
reach 2
outcome 4
produced 2
pause, 1
physics. 1
pay 12
loops. 1
prio_to_weight[40] 1
phrase... 1
milliseconds). 1
spin-waiting 4
now-extinct 1
reused, 1
maintaining 1
persistence. 2
m->flag 6
over, 1
migrate 1
preserve 1
precisely 2
option, 2
messages 1
read-write). 1
optimal. 1
parcel 1
modifying 2
replies: 1
ponder: 1
perform, 1
node_t 24
p1 8
of 3668
ready. 1
professors 3
performance, 14
place, 9
peep 1
lovely 1
over 90
piena 1
minicomputers. 1
problem. 26
stand 1
once; 4
routine. 2
manner. 7
rudimentary 4
place. 16
packed 4
migration? 1
primitives 15
preempts 1
ordered 4
microcosm, 1
rearrangement 1
optimizes 4
module 1
responds 2
power-of-two-sized 1
performance), 1
part 52
non-cooperative 2
page(s) 1
offset. 6
receive 11
profilers 2
period; 1
platform, 1
percentage, 1
magic: 7
overhead. 1
pipes, 2
moglie 1
store-conditional, 4
onto 17
macro 1
material 8
run? 8
ploticus 1
pain 1
runs, 21
problem; 2
previously. 2
out.” 1
migration. 1
reboot 6
monitoring 3
responsive 1
out, 27
powerful. 3
performant) 2
non-preemptive 2
paged 1
on-disk 5
recommended 1
particular 60
projects, 1
placing 7
poorly, 1
perl). 1
malloc.py, 1
overheads; 1
player 1
mother. 2
stream. 2
open. 2
maintains. 1
meltdownattack.com 1
patches 2
pointed 15
miniscule 1
process 403
satisfaction, 1
processors, 9
printf(), 1
producer/consumer 9
million); 1
reduced-instruction 1
mutex_t 5
restricting 1
p4 7
prerequisite 1
pick 15
non-stop; 1
parameter 6
notably 5
regions, 2
proverbial 1
plans 1
popular. 1
pass 54
permanent 1
manager 3
page? 1
pointer, 10
multi-queue 4
structure) 1
out-of-memory 1
malicious, 1
memories. 1
paying 3
pointers? 2
misses), 1
problematic: 1
scale, 1
overlap, 1
priority. 8
producer; 1
mobile 1
reduces 9
my 6
return. 1
paging. 4
preventing 3
pieces. 1
previously 3
peach 4
occurs)! 2
periodically 9
pthread_mutex_trylock(pthread_mutex_t 2
policy. 4
possibilities. 1
pausing 2
persons 1
manner: 1
pages, 26
possible, 14
multitude 1
students 3
overcome 3
me 6
memory-add 2
picture, 5
policies; 1
mobility 1
processor, 13
scenario 4
p5 5
problem? 2
promise 1
modes 2
relocation; 1
namely 5
rewrite, 2
paper, 3
ones 8
pleases: 1
regs(A) 3
omit 2
pigs. 1
priority 61
ptr 16
portions 7
powerhouse 1
perceived 3
perspective 8
match. 1
paging-linear-translate.py, 1
power 8
myargs[2] 2
success! 4
overheads? 1
measure 21
method. 3
pointing 2
middle 11
molecules 1
program-debug 1
scheduler), 1
pages), 1
problems, 12
prone; 2
modified). 1
replacement; 1
scare 1
near 13
parallelism. 2
optimization. 1
pressure. 2
repair 3
one). 1
pipes 4
proceed 6
query 1
preserved. 2
printf("child\n"); 3
printf("%d\n", 7
pessimal, 1
matter. 2
parameter; 2
precautions 2
mystery 1
sure; 1
overwriting 2
memory-mapping 1
preparing 1
poorly. 2
modified. 1
positive 4
program4 1
scheduling. 9
pagetable 4
problem” 1
proportionality 1
multi-processor 4
represents 4
scorned 1
nearly-endless 1
paralleliza-tion, 1
ordering; 1
primitive. 6
replacements 2
open("/tmp/file", 1
option 1
processes”, 2
questioning 1
perfect. 2
printf("hello 3
privacy 1
memory-intensive 1
paranoid. 1
preemptive, 1
point 39
news 2
swap? 1
own, 3
mentioning: 1
monster! 1
mother 2
motivate 1
practical 8
prove 5
school, 2
paradigm 1
producer, 2
provides 30
mutex->flag 6
require. 1
screen. 3
newfile.txt. 1
parent: 2
organization 2
primitives; 2
reset 3
ple 1
out! 1
produced, 1
read/write 1
person 3
problematic, 1
mid-execution 1
park. 2
present, 2
pre-initialized 1
problem 121
system), 3
p1.c. 1
metric. 4
pretty 26
mythread() 2
process) 6
prepared 1
searching 4
parent; 1
no 140
proves 1
pthread_mutex_init(&lock, 2
pseudo-random. 1
requirement: 2
mutual 29
searches 3
partially-ordered 1
node 12
printf("Final 1
original 19
resource; 1
pleasure 1
overcoming 2
professor? 1
reason. 3
phenomenon 1
problems: 2
middle, 1
prevented 5
precious 2
particularly 27
processes: 4
table2 1
p3.c, 1
mighty 4
moustache 1
myturn 2
processed 2
processors 16
section? 4
part. 1
none.” 2
purify 1
q->tail->next 2
pushl 1
respectively, 1
myturn) 2
segment; 4
past, 4
not), 3
printf("Initial 1
restricts 1
others 14
overlap 6
pointer 55
professors, 1
receives 4
placed. 1
process? 4
minds 1
presented 8
partner 1
print 25
professor. 2
tables? 1
parameters, 5
milliseconds, 2
name. 4
professionals 3
production, 1
sections, 2
peaches, 1
not, 14
rage 3
quickly. 5
put(int 2
response-time 1
name). 1
performance2 1
must 152
segmentation 26
noticed 5
private, 3
retain 1
our-selves 1
overly-large 1
positively) 3
prompt 4
recollections 1
policies? 1
protocol, 1
minimizing 1
prevention 2
per-CPU 5
printf("%s\n", 3
programmer), 1
tens 2
part) 1
more? 1
nasty 1
programmer, 1
productive. 1
mov 33
peek 1
obey. 1
randomization 3
radical 2
puts 19
result, 12
necessity! 2
performed 11
n; 1
sensed, 2
observed, 1
privilege 8
revolutionized 1
overall 9
overwhelm 1
protection; 2
possible 31
recover 1
practice, 1
pthread.h 2
miss? 1
printf("%p\n", 1
performs. 2
programming. 5
test-and-set! 1
passed 18
process. 69
properties; 1
nature 8
see). 1
program; 3
must-read 3
pending 1
obtain 10
rates 1
rc; 4
ret 1
rate 27
needlessly 3
personal 1
nanoseconds. 3
share; 1
obtained 1
probabilistic 1
rightly 2
overlays 1
pages) 3
pthread_mutex_lock(&q->tail_lock); 2
preemptive 2
regain 1
prevents 3
pthread_cond_t 3
mjtsai.com/blog/2015/12/16/osspinlock 2
priorities 5
permissions 1
property, 2
test-and-set.s 2
paths 4
proportion, 1
process’s 18
needs 32
seeds 11
prohibitive. 3
nanoseconds). 1
obviates 1
people 28
re-accessed 1
readable 1
reverts 1
re-referencing 1
network. 2
phases 2
networks, 1
short-circuiting 2
ocean 1
properties: 1
routine1, 1
owns. 1
papers. 4
ptr, 3
representing 2
printf("(%d) 2
present 36
pthread_create(pthread_t 2
monitors 5
programmer. 5
picture 5
ps. 1
peach? 1
them, 20
properties 8
newly 3
segments. 3
pthread 57
protection, 2
nearest 1
occurs. 3
persistence 1
reader, 1
real, 2
right.” 1
reached 1
new. 3
place? 1
no, 1
shortcomings. 1
on) 1
protection 22
p4.c 2
run. 22
parallel, 2
python 1
requiring 11
procedure. 1
printf("parent: 6
pushing 2
moreover, 1
progressed, 2
plenty 3
ptr; 2
per-futex 2
processes 107
pthread_mutex_t 22
ship 1
question; 1
negatives, 2
picking 6
realizes 3
quite 114
they 149
realized 8
rip 1
realize 5
newfile.txt 2
thing 38
non-computer-types 1
simulator. 2
operation), 2
pthread_mutex_init(&L->lock, 4
page-frame 1
runs; 3
path, 2
resource. 2
quickly 21
priorityadjustment 1
race): 2
moved 6
prohibitively 2
pmap. 1
quantify 3
newly-fetched 1
producers 3
performance. 35
pthread_mutex_unlock(&q->head_lock); 4
shoppers 1
queue. 12
nicely. 2
pieces, 5
recall, 1
quote: 2
rearranging 1
rules 6
regardless 2
planet 1
non-synchronized 2
timespec 2
normal 11
opposites 1
simultaneously 11
on 719
quoting 1
panacea, 1
rv; 2
peaches 2
resources; 2
performing 14
probability 2
readable. 1
much. 6
projects 3
policy, 12
non-scalable 2
queue, 17
program? 6
place; 1
queue_init(m->q); 2
queue_t; 2
nightmares 1
piece” 1
rechecking, 2
randomness. 1
reasonably 3
shows 94
rvals->x 2
remote 1
plus 11
non-zero 3
transforming 3
notes 5
optimizations, 3
sincerely 1
operation, 9
r-x-rw--r-x-r-x-r-x-r-x-rw--- 1
passing 12
rvals; 2
randomly-generated 3
respect 2
pieces 19
processors. 3
readonly 1
multipro-gramming 1
promoted 1
possible; 2
nor 1
re-use 1
programmer; 4
players 1
rage. 1
queues; 1
node, 1
pioneers 4
record 6
range; 1
reclaims 1
place 46
satisfies 1
responsibility, 1
policies, 7
nondeterminism, 1
transistors. 1
now), 1
optional 2
single, 1
opportunity 1
raises 8
patience, 1
placed, 1
re-check 3
restored. 1
placement 1
product 1
reasonably. 1
mutex_lock 2
protected 4
possibly-failing 2
o 2
read), 1
programs, 16
pointer? 1
raising 3
re-reads 1
now-standard 1
referenced, 1
re-initialized. 1
single-queue 4
references. 2
placement, 1
saw 12
rest. 2
poorly? 1
noticeably. 2
transparency 1
null-pointer 2
ordering, 2
situation. 2
order! 1
reac-quiring 1
satisfy 9
possibly 1
reacts 1
retains 1
player, 1
program) 1
reboots 1
myargs[0] 2
pthread_mutex_lock(&q->head_lock); 2
posterity) 2
obey 1
receive. 1
project 4
poor 10
ran, 1
reader 7
ocean, 1
regained 2
read, 7
six 3
region, 5
poorly 3
saying 4
returning. 1
positivity 1
now-sleeping 2
null. 2
out. 11
sizes 8
output, 2
reasons, 6
sbrk() 1
potentially 7
realization 1
retry 6
plural) 2
progress, 1
relatively-short 1
mythread(), 2
pthread_mutex_timedlock(pthread_mutex_t 2
precisely, 1
two 241
observing 1
recommended. 1
pthread_mutex_lock(&c->llock[cpu]); 2
powerful, 2
random, 1
realloc() 4
olden 1
region; 1
reap 1
sleep; 4
relates 3
predate 1
revenge 1
scheduler, 20
prac-tice, 1
objects. 1
p6 5
sleeping). 1
outside 4
received 3
scheduler); 2
premature 2
reason: 3
running), 1
policy) 1
protect 11
relocation. 2
number 198
nanoseconds 1
put() 4
prematurely-optimized 1
two-fold. 1
recursion). 2
occurs 19
pthread_mutex_lock(pthread_mutex_t 2
powers 1
randomized 2
referenced 6
open 7
relaxed: 1
software) 2
reason 32
relocation 6
preserving 1
right. 5
second-chance 1
prefer 2
obviously, 1
page) 4
slowed 1
overstate 1
refers 9
school; 1
premise 1
recourse: 2
runs. 11
pool? 1
pthread_mutex_lock(mutex); 2
replacement. 4
objectives; 1
nature, 2
puzzle 2
printf("main: 8
ubiquitous 2
reducing 6
onnv/onnv-gate/usr/src/lib/libc/port/threads/synch.c. 2
pthread_mutex_unlock(&L->lock); 12
pre-specified 2
range 7
register. 4
operations. 8
remedied 2
solution). 1
rechecks 2
pressure, 2
rvals->y 2
replacement 30
secretly 3
presumably 4
oh! 1
page-fault 3
small-scale 1
oversubscribed; 1
relocation.py 1
presence 11
section. 34
rw- 1
references 28
popularity 1
purely 1
requested, 2
observes 2
necessary. 1
queue_add(m->q, 4
problem”, 1
unexpectedly 1
register, 6
open(), 1
questions, 3
rarely-used 1
prints 41
registers; 4
out-of-bounds 1
remind 1
recorded 3
pretends 1
say? 1
see. 4
requires 25
prevent 8
on; 1
paper. 1
p2; 5
removing 8
printf("this 1
so, 37
sections; 4
scale. 1
relinquishing 2
potentially-starving) 1
purposes 2
resident 2
ran 15
needs, 2
rare 2
programmer 12
unless 1
regs 3
opinions 2
r-x 5
read() 1
proactively. 1
relatively-slow 1
outputs. 2
repeating 1
recourse 1
primitive, 2
says, 1
root, 1
some 505
seen 31
primary 9
operator, 2
par-allel, 1
packing 2
requesting 1
priori 3
somehow, 1
sentence. 2
scientist 1
remembers 2
remove_min(queue); 1
occurs: 1
rest 18
non-concurrent 1
re3 1
random 37
proportion 5
unlock. 4
replete 1
opposing 2
re-referenced 2
reader: 2
proceeding 1
released. 6
page), 2
resort 1
redoing 2
priorities; 1
scheduled; 1
rude 1
soon-to-be-exec’d 1
series 9
printf() 1
partition, 1
resources, 4
proceeds 4
separa-tion 1
pressure 5
search 20
responsiveness; 1
off. 1
out 181
results, 4
noticing 1
something 132
read. 6
rc, 3
page 635
unmapped 1
reset. 2
orders 2
read-only, 2
recent, 1
processes) 1
relocated 6
responsabilit 1
referencing 1
page-table 31
result 30
run; 1
processes. 22
sophisticated 13
set” 2
prioritizes 1
patterns), 1
restricted. 1
professional 1
server, 1
primarily 3
second: 1
retry, 1
outrage! 1
rewrite 8
retries 4
null 2
space-usage 1
readability 1
provisions 1
re-acquires 4
painful. 1
used) 1
resistance 1
out). 1
really. 1
reduction 2
renders 1
processor 28
regards 2
pagedirectory 1
screen, 1
return? 2
runtime, 2
produces 7
soup.” 1
shooting 1
phone, 1
return-oriented 1
progress 8
server-based 2
problems 55
primitive 9
sections. 4
on, 11
packet 3
right); 2
obtaining 4
sparse 7
returning 27
readily 5
pure 2
re-energized 1
passion 1
user; 3
resource) 2
outcomes 1
rearrange 2
region) 1
representation 1
programs5 1
reliability. 2
paper: 1
sense. 11
returns, 7
rvals->y); 2
property 10
specific. 1
simplest: 2
returning) 2
proportional-share, 1
piece 36
serviced. 2
process-run.py, 1
principles 5
semaphores” 1
once); 1
page; 5
rogue 1
occur? 2
spatial 7
src.opensolaris.org/source/xref/ 2
paper 85
reaching 1
pays 1
operating 151
right 42
results? 2
overheads. 4
reassurance; 1
registers), 2
reside). 1
relocating 1
sequences 5
prompt> 37
reveal 1
returns 61
prot 8
spinning. 2
simplifying 3
right) 1
performance 91
protection. 3
place! 2
sits 3
produced. 1
priority). 1
semi-nal 1
saves 9
occurs, 14
ready), 2
parent. 4
ready, 3
start 58
purpose. 2
recent 16
v); 2
p3.c), 1
safe? 2
resume 8
own; 3
reboot, 1
relegated 2
request? 1
protocol. 4
section; 2
rid 1
rise 2
protective 1
stage 3
sketched 1
routines. 1
states 15
set 146
pthread_attr_t 2
platforms. 1
sizeof(PDE)) 1
probabilistically 2
separation 5
producer 26
say), 2
reasonable. 3
past 6
off 30
starving 1
penalty 2
queue). 5
refer- 1
victim. 1
scheduler? 5
revolutionary. 1
page, 28
painful 7
repeat, 1
passes 5
requests, 2
peach. 6
sees 4
robust 9
routed 3
protocols 2
slight 2
person; 1
runaway 1
stays 4
set-top 1
pthread_mutex_init(&q->tail_lock, 2
pleasant. 1
sketch/review 1
proc-struct(B) 1
servers, 2
professor! 2
scale: 1
recall). 1
penalize 1
offered 1
states: 1
performance”, 1
quote. 4
regard, 2
vmalloc, 1
schedulers, 1
ruins 2
page-not-present 1
regions 11
repeating. 1
protocols; 1
research; 1
perfection 1
services, 1
rwrw- 1
rvalue); 2
pthread_cond_wait(pthread_cond_t 3
slightly; 1
piece, 1
runs? 2
stopping 4
pthread_mutex_unlock(&c->glock); 4
sharing 30
policies. 7
shouldn’t 5
process: 2
similarly 3
scary 1
recognized 1
person! 1
often? 1
program, 58
store-conditional 7
perspectives 1
ran; 1
registers) 2
secondchance 1
vruntime 10
run-time 7
page-sized 4
relaxation 1
reproduced 1
pthread_mutex_unlock(&lock); 2
reside, 1
periodic 1
rw— 2
short 29
pthread_create(&p, 2
saved 11
sneaky 2
pioneer 2
sane 2
strange 8
publishing 2
sleeping, 3
preempted 4
signal. 3
simple, 9
programs. 25
scenario. 4
reduced. 2
perspective. 2
opened 1
proofing 1
stores. 1
peterson.s, 2
random; 1
see! 2
related 18
safer 2
pal, 2
reload 1
required, 3
want 50
published 4
research 18
resource 14
safe 6
single-threaded 4
pthread_mutex_init(&c->glock, 2
scenarios, 2
plots 3
software 17
scenarios 2
stride) 1
rapidly 1
slices 10
principle 6
signals; 1
size; 6
proliferation; 1
scheduler.py, 1
register-level 1
pid; 1
operating-system 3
pros 1
successful. 1
phase, 4
randomizes 1
sense 26
relatively 16
scalability 2
parameterize 1
remainder 1
way) 1
periodically. 1
push 2
research.microsoft.com/ 2
restored 4
scalability. 1
sit 6
pthread_mutex_unlock(&q->tail_lock); 2
scripting 1
policies: 2
solution. 8
sched 7
stronger 2
rate) 2
snippet 9
printf("%d 4
simulator, 1
slowly, 4
promotes 2
school: 2
remarkably 1
places 6
origins 1
pursue 1
successfully) 1
photos 1
randomly-accessed. 1
setting 15
scanning 3
parent? 1
release 23
request. 7
wc 11
philosophy 1
read 91
resize; 2
resulted 2
scheduled. 2
sizeof(int)); 2
security; 2
politely 1
physical 236
slice 36
points 15
queue 55
rc 13
solidify 1
printf("returned 4
sleeps 4
someone 3
proofs 1
scientist, 1
seamlessly 1
shells). 1
sometimes 73
platforms 2
outcome? 5
question, 1
summary 5
shift 1
patience 2
scheduled 11
relevant 13
requests; 1
winning 7
queue; 5
pointer. 3
reasonable 9
respectively. 2
returns), 1
seemed 1
soon, 1
renewed 1
schedule: 2
stronglytyped, 1
preempt 2
slightly 19
realizing 1
rc_wait, 2
solve: 1
scheduler 110
privileged; 2
shipping 2
sooner 1
point. 7
provide 65
p1.c) 1
queue? 1
superuser 3
short-running 4
perfect 7
scoff 1
removes 1
researchers 8
worked. 1
random-access 1
pop 1
reduced 5
reused 1
result. 11
space 278
pretend 5
specified 8
requests. 6
scream, 2
stuff, 1
segment 56
previous 19
small). 3
red-black 4
re-checks 4
sometime 1
searched 1
shrinks 1
space-management 1
pointer). 2
pthread_create(..., 4
program. 46
pains 1
queues, 12
survey 16
short. 3
permission 1
scratched 2
repeat 1
resizing, 2
worker 6
ranges 1
popular, 1
references: 1
ridiculously 1
rosy 1
sorry, 1
problematic 2
space? 6
reside. 1
seconds!). 2
subsequently 4
semantics, 5
previously; 2
redirects 1
smaller 14
reaction 2
space). 3
segment, 14
similarly, 3
spaces). 1
points; 1
programs; 3
passive 2
put 41
raised, 2
swaps 3
shot 2
persists, 1
segmenting 1
represented 3
restores 4
signal 28
rdtsc 3
popular-sized 1
register). 1
rights). 1
split 9
problems. 11
running, 30
spaces, 5
rest, 1
secure 3
subverted 1
sequence: 1
printf("hello, 6
reflect 4
snapshot 1
spaceshared 1
service. 3
ready 33
simplicity; 2
program’s 9
path. 3
question! 1
policies 35
system) 1
stack 79
personally 2
real 53
senses 1
working-set 1
return-to-libc 1
required 15
realistic 3
relative 3
possible. 14
round 2
src); 3
processes; 7
runtimei 1
space” 1
resuming 1
semantics 8
success; 1
setassociativity; 1
priority; 1
simply 128
spear-headed 1
so. 15
really, 4
register 75
sets 27
promote 1
questions. 3
pollutes 1
system-call 5
stack”! 1
physical, 1
recall1 1
perform 70
serve, 1
wrap 2
returned. 2
resumed, 1
rebooted, 1
single 203
pragmatists 1
relax 10
stack-allocated 2
processes’ 1
safe. 2
stack), 2
return-tolibc 1
runs 83
sequence. 2
survive 2
share 36
slice. 1
problem, 24
started, 1
solutions 11
replacing 3
relaxed 2
shape. 1
pulled 1
read(), 1
pragmatic 1
task; 3
straightforward; 1
pipe; 1
redirection, 1
philosophical, 1
service 11
wreak 1
returnsfrom-trap, 1
retaining 3
reg/PC 1
sitting 4
precisely? 1
relinquishes 1
starting 14
produce 9
said, 10
starvation 3
returning, 2
rv 4
short). 1
she’ll 2
swapped 12
slices; 2
processing 4
stash 1
spin-lock 2
reproduce, 1
released 10
showing 8
q->tail 4
real-world 2
predates 1
thankfully, 1
stuck, 1
referring 2
placed 24
pioneered 4
settle 1
wrote) 1
room: 1
returns. 3
regions) 1
sketch 3
preemption, 2
relocation, 5
starve). 1
producer. 2
statistics 4
right, 3
say 29
sat 2
shorter 6
simple) 1
switching); 1
smarter 1
programmers. 2
statement. 2
stack: 3
request, 10
remainder. 1
similar. 2
question. 7
reboot. 1
pri- 1
subset 3
plays 2
region 25
pleasure: 1
short-lived 2
x-axis 1
routine1 1
them 99
risen 2
register; 2
slab 5
prefetching 2
rely 5
stems 1
program: 6
stopped, 1
scaling, 1
roughly 24
saves/restores 1
signaled 1
simplicity, 16
t 10
solutions. 4
programming: 2
storage. 1
standpoint, 1
requester), 1
reside) 1
size); 2
queues. 2
recognizes 1
primitives, 3
substantial, 2
poorly-programmed) 1
surprising 7
point1 1
sign 3
y-axis? 1
rules, 1
then? 2
release? 2
run, 24
sleep) 1
prepare 1
remain 8
strdup("wc"); 2
prone. 2
streams, 1
scenes, 2
run), 2
saving 6
similarity 1
simulation. 1
sources: 1
table, 26
pronounced 1
tackle 4
starve; 1
properly 15
restart 5
skill 2
raised. 1
reduction, 1
priorities. 1
register? 2
procedure 12
switches, 2
popl 1
signals 13
yourself! 3
rvals->x, 2
thr 7
reliable 6
slot 7
primer 1
replace 9
stream 7
protocol 3
stride 17
schedule 14
rvalue; 2
scale 4
simplicity 7
situations 3
splitting 3
string, 2
tasks. 1
residing 2
stored? 1
provided 20
running 227
software4 1
return-from-trap 17
randomly 4
refine 3
proc-struct(A) 1
registers, 10
processing, 3
swtch(struct 1
posed 5
× 1
possibility 5
thr_join() 3
similar 45
repeats, 1
small) 1
printf("%s: 4
replacement, 3
structure; 2
struction 1
talk 10
scheduler. 10
rx 4
schemes 5
singlequeue 1
sizeof(PTE)) 7
stance 1
structures? 1
technique. 1
rethink 1
pthread_mutex_init(&q->head_lock, 2
structures, 13
rwx 4
some_function(char 1
so 197
ranging 1
rent 1
process-run.py 1
regs(B) 3
rather 29
symbol 3
rw59 1
’d’ 1
possible: 1
thumb. 1
tight. 1
replaced 2
time? 9
report 9
providing 16
structure: 2
testand-set 1
requests 28
second. 5
school 2
size, 12
slow. 3
strictly 2
strung 1
terms) 1
returned, 2
pthread_mutex_lock(&lock); 2
subject 4
return-to-libc. 1
sometimes) 2
solving 4
said 43
replacement) 1
processing; 1
properly, 1
relies 1
readers 1
system1 1
saying, 1
“Exterminator: 1
power. 1
similarly; 2
product. 1
repository 1
times, 10
pthread_mutex_lock(&c->glock); 4
suffer 8
scheduler’s 1
themselves, 1
require? 1
section), 2
science. 2
sizeof(int); 1
slowly) 1
sleep. 8
sudden 1
theoretical 1
rewrites 1
pull 2
subsystems. 1
road” 1
somebody 5
soon 25
somehow 6
research, 4
proportional 3
relinquish 5
reading, 1
“Inside 3
scalable 15
table. 26
private 18
professor, 1
simplest 13
required? 2
together, 3
quest 3
suggested 8
secretary; 1
think. 2
reserve 4
scratch 3
seem 7
reside 11
small: 3
sleeping/waking 2
susceptible 3
thing: 4
right). 2
queuingbased 1
sufficient 2
rough 3
program 321
satisfying 2
sorry 1
sometimes, 2
restricted 7
proportional-share 6
request; 1
reality, 1
“Intel 4
second; 1
tables; 1
program). 2
sinister 1
reserved 6
tolerate. 1
question: 7
superpages, 1
probably 32
tickets), 1
processor; 5
time-slice 5
stringent 1
responsive. 1
send 13
sparsely 1
sense, 6
switch() 3
threads) 1
quick 4
throw 6
routines, 5
projects. 1
scaling 2
source. 1
stack, 18
result: 2
provided, 2
requirements 1
reasoning 1
“Is 1
see: 2
thank 2
programmers 13
sizeof(PDE)). 1
resided 1
trace? 2
queues: 1
support. 9
seemingly 12
second, 6
segment: 10
sections 6
tmp; 7
structures: 2
running; 3
slice). 1
specify 10
serious 10
swtch: 1
summarizes 1
quickly; 3
timely 3
scalable. 5
proofs” 1
scheduling; 4
states. 1
returning; 1
spaces 20
q->head; 2
researcher 2
recently 6
“Segmented 1
semaphores 1
thinking: 2
programming, 2
slow, 8
responsibility 6
translate 19
rather, 11
surprise. 1
properties. 1
run 374
segmentation? 1
seek 2
to) 1
stub 1
satisfactory 1
sloppy 4
speculation, 2
servers 1
table; 5
supports 5
rarely. 2
timing, 3
scan 5
scheme, 1
proper 14
statistics). 1
right; 1
spectrum, 1
queued 1
restore 17
refers? 1
“With 1
server 11
thoughtful, 1
proportions 1
snippet. 1
responsibility!” 1
translations, 6
ratios 1
suspicion. 2
proportions, 1
scenarios. 1
segmentation” 1
segment), 3
too: 2
suffers 5
satisfied 1
small. 1
spring 1
servicing 5
teaching 1
rears 1
switching 17
tracing, 1
scheduling? 1
scientific 1
proponents 1
store), 3
speeds; 1
quick, 1
routines 41
resumes 5
registers. 3
“owned” 1
setaffinity() 1
thoughts 5
provably 1
soon-to-be-running 1
result! 2
true. 3
readers, 1
switching; 1
schedule(curr); 1
pthread_t 14
sets. 2
sending 1
tool. 1
supports. 1
scaling; 2
step). 1
smart 13
setting, 1
them), 2
reclaim 3
tables), 1
traversal 3
segmentation). 2
second-level 3
provides, 1
strcpy(dest_buffer, 1
splits 1
qu’une 1
run-and-yield 2
reuse 1
remaining, 1
→ 17
threshold) 2
question). 1
sorted 1
results. 6
tuned. 2
really) 2
shared 67
t). 2
scheme 6
pthreads 8
show, 1
shorter! 2
tragically 2
surfing 1
scenarios), 1
strategy 6
space; 11
severe 3
recursively 1
targeted 1
reference. 8
segmentation.py 5
section, 24
those 84
strdup 1
spread 9
question 27
race. 4
sad! 1
root 3
remedy 2
tmp->next; 2
ran. 1
source 23
type, 4
recently, 1
shells, 1
tailor 1
script 2
purchase 1
simplify 1
shortest, 1
transistors 2
switch, 8
strdup() 1
return 169
spawning 1
showed 4
trigger 2
tell? 2
refined 5
self; 2
second 78
segment. 8
strengths 2
thought 17
stack) 7
queue_t 2
ravages 1
queues 6
runtime 2
reply: 1
topmost 7
random. 1
sparsely-used 2
typeset 2
reclaimed, 1
shuts 1
technical 3
size=100); 1
sibling 1
section 55
transparency2 1
race 28
swpd 1
student, 3
routinecalling 1
speculation 2
signal, 1
two: 1
textbook 1
refuses 1
sequence, 8
see? 6
segments; 1
strongly 5
tickets, 4
stipulated 1
say, 5
rc_wait 3
rate, 3
safely 3
responsible 6
rarely 1
tricky 10
speed 12
underneath 2
records 1
single-CPU 2
tend 7
sizeof(), 1
similarly-named 2
semantics. 2
trap), 1
range. 1
succeeded. 1
taking 11
runnable) 1
stages 1
signaling. 1
underpowered 1
that? 7
reject 4
serve 2
segmentation. 3
segment’s 1
strut 2
timeline, 1
stopped 2
stored. 1
re-place 1
re-create 1
sake 5
rich 2
rarely-taken 2
src) 1
typical 26
undoes 1
redirect 2
skip 5
terms 10
snooping 1
simpler, 2
sensible 4
traverse 1
re-awaken 1
success: 2
tcsh, 2
running? 4
stops. 1
unlucky) 1
thesis 1
relate 1
shade 1
segmented 4
serviced, 1
subsystems 1
show 24
strategy, 2
re-duces 1
simple 196
scheduled3 1
robin, 2
react 1
really 52
stack; 3
unanswered: 1
uniform. 1
region. 1
sleeping 5
solved 2
simulated 1
sentence 1
true, 3
reaches 2
tends 5
sage 1
than 149
straightforward, 2
thorough 2
unused 14
remains. 1
shared. 1
self)) 2
sense; 5
suggest 3
simplified; 1
streams 2
recommending 2
simpler. 1
scourge, 2
such 274
reads 10
reasons. 10
routine 60
understanding 19
units; 4
reference 57
regular 2
so), 1
removed 6
slower, 1
unallocated 2
separate 17
react, 1
testing 2
says 2
that: 3
strdup("p4.c"); 1
thread-local 2
upper-half 1
repeatedly. 2
think 66
those; 1
shifting 1
supervisor 1
sequence 24
single-entry 2
recursive 1
structure. 16
simply, 4
se, 2
threads 197
recency 1
sad. 3
undo 4
standard 22
upon, 1
soon. 1
software, 4
referred 27
requested 8
solve? 1
uncommon 2
sort 6
read? 2
sbrk. 1
student 3
thread-safe, 2
upwards. 1
require 10
side 4
thus: 1
short, 3
surprising, 1
setpark(). 2
situations. 1
redirection 2
structures; 2
skimmed 1
supposed 4
seconds), 3
tick 1
regains 3
unimaginatively 1
standards/SPARCV9.pdf. 1
uses. 3
sorry. 1
software-based 1
relevant. 2
researchers/engineers, 1
serviced 4
understandable 2
same 145
spaces) 1
reasons 6
scenario, 3
study. 2
us, 2
resides. 3
simulation 7
to; 1
thus, 54
shortest 2
surround 2
sets: 2
sizeof() 7
style. 1
reduce 15
skips 1
symbiotic 1
security, 1
tick-by-tick 1
remains: 2
stated, 2
variables), 1
space! 2
updates 33
solution: 1
relocate 5
shortly 1
remains 11
undertaken; 1
saying; 1
sparc/ 2
reclaiming 1
schedulers. 5
stuff? 1
restoring 5
sleep, 13
too, 2
ticket, 2
shutdown 1
useful 69
suspend 2
shmget() 1
slots, 3
subdirectory 2
reference) 1
slower. 3
semaphore 1
times) 1
remember: 1
system. 57
sure 56
systems; 9
spaces. 7
us. 4
solve. 1
results 17
simplicity. 3
remember 20
unfortunately, 14
spin-waiting. 2
redirected 2
schedules 4
success. 3
sleeping. 4
scheduling 102
resulting 24
time! 2
tool 15
side). 2
useful2. 1
t. 2
short) 5
snatch 1
services 1
slowly 12
topic, 4
reproduce 1
stored 15
registers 48
virtualized; 1
system: 6
system’s 3
request 35
usability 1
sploitfun.wordpress.com/ 1
returned) 2
site 1
uniform, 1
repeatedly 15
spin. 4
reference, 2
screen 1
surprisingly, 6
slice), 2
scribble 2
slow 15
times. 7
tracked 2
signal?? 1
signaling 17
table: 3
simpler 6
so? 5
set-it-to-1 2
sockets. 2
trade-offs 5
represent 5
visible 2
table). 3
specialized 4
taken 16
resources. 5
use) 10
sprawling 1
structure 73
review 2
size: 16
unlock 13
replaces 7
stateful 2
region). 1
seeds, 2
suspect 1
se. 1
reusing 1
slowly; 1
tirelessly 2
tract 1
user-facing 1
six-level 1
terminating 5
simplicity), 1
space), 4
shell, 5
software? 1
tradeoff 1
special 22
walling 1
taken, 5
spends 1
takes; 1
restrictions 1
usual, 3
sptr. 1
returned 15
road, 1
sizeof(node_t); 1
role 11
statements 1
until 52
remain? 1
segments: 1
swath 1
seconds). 1
richer 1
small, 7
together. 5
translated, 1
using. 2
terminology) 1
sizes. 3
sleep 30
shown), 1
sounds. 1
required). 1
transition 6
specification 1
watermark 2
talks 1
spins 11
task 16
v 2
sub-jobs, 1
started 11
right”, 1
reports 2
slabs 1
roused 2
update) 1
remains, 1
static 21
select 4
t(B) 1
security. 1
right? 8
small-sized 1
traces. 2
treating 2
utility 3
thread!) 2
variable. 8
sparked 3
restarts 1
spent 7
small 61
treasure 1
to 4068
well-known 4
starts 25
task, 5
splits. 1
tests 5
valgrind? 1
succeeded, 2
starvation, 1
rw 6
required. 5
slots 7
routine, 10
upper 1
remembering. 2
step, 5
silently, 2
table? 3
segments 22
room 17
smallest 5
track; 1
tree. 5
slice, 7
threads). 2
variable’s 1
simple: 39
restricted? 1
spurious 2
snooping, 1
trickier. 1
together! 1
we’re 3
test? 2
stack). 4
text. 1
varies, 2
state 73
successfully, 1
stealing 1
scales. 1
resides 9
space) 4
rule: 2
urging 1
repeatedly, 3
simulator 16
tables, 8
selection 1
rotational 1
still 59
sneaks 2
translations. 6
trees; 1
slower 6
throughput?) 1
vengeance’.” 1
simulate 3
return-fromtrap 3
storeconditional) 1
so). 1
trouble. 3
touch 4
thanked 1
stands 1
theme 6
who 41
wasted. 3
widely 9
switch? 2
store-conditional) 1
scientists 4
stacks, 3
runnable; 2
response 31
used; 2
replace? 3
situation 9
talents, 1
sense?) 1
seconds. 3
strategy), 2
software-managed 5
trapped 2
trends. 1
smaller, 1
thrown 1
vruntime: 1
size) 5
revert 1
streaming 2
software. 2
twenty 1
translations! 1
that. 9
starts, 3
there; 5
statement, 1
weird; 1
win 1
stride, 1
scream. 1
string 12
rw45 1
system, 65
retrospective 3
users: 1
report? 4
sixteen 1
target 6
setpark(); 2
stuff 8
soon-to-be-run 1
tread 1
solutions, 3
under 18
wait(). 3
slides 1
rule 4
strings 1
somewhere... 1
times 40
type) 1
trap, 3
that’s 8
state, 13
thereby 1
stay 3
willing 3
within; 2
see 272
starting) 1
see, 15
studying 9
same, 3
table) 2
revisited 1
valuable 3
requests? 2
virtually 9
tcsh), 1
sharing: 1
subtract 1
spans 1
tree 15
solves 7
unfairness 4
weight, 1
slow? 1
running). 2
soon-to-be-faulted-in 1
stuck 16
tn 2
unasked 1
trees 4
the?? 1
well 88
thr_exit(); 1
storage, 2
woke 1
wonder? 1
seems 12
starve 2
segmentation; 2
super-linear 1
saved? 2
take, 3
roam 1
skills. 2
round-robin 11
waiter 2
team 2
shells; 1
suddenly 2
speculative 1
tricks 2
something. 2
unrealistic; 1
small/random; 2
sad 4
what 280
succeed. 3
to? 2
uncaught, 1
underly 1
step-by-step 2
ticket; 2
thread; 7
storeconditional 1
wonderful 11
x86)” 2
sends 3
statement 3
seminal 1
surface. 1
sbrk 3
technology-driven 1
research. 1
slow; 2
run: 3
web. 1
ten 7
shrink). 1
sz; 1
starvation: 1
tricky: 1
soon-to-be-executing 4
update(counter_t 2
snuck 1
specifics 1
sanity 1
suite 1
together 12
under- 1
undertake 1
without 70
tlb.c, 1
threadID. 2
store 24
strategy. 1
workloads 14
sense? 1
zero. 11
stolen 1
served 3
surprise: 1
schedulers 14
resides, 1
tell 28
software), 1
worked 6
running. 23
test-and-set. 4
similar), 1
stated 2
type. 1
sounds 6
update; 1
sources 6
spins, 2
scans 1
traces 3
switches 14
undergraduate 4
unexpected. 2
table 175
won 3
ticket.s. 2
topic 18
streams. 1
studies 4
setup, 2
’05. 1
works 54
storage 12
shaded 1
systems? 2
scheduling, 15
resources 6
tennis 1
some, 2
written? 2
theory, 1
save 27
simplified 2
understanding: 2
special; 1
users, 1
struct 49
stale 1
specifically, 13
security 21
translations 22
tail 5
underlies 2
unrealistic 2
tempting 4
world!”, 1
tidbits 2
totaltickets); 1
sub-microsecond 1
such. 1
short-lived, 1
’07, 2
world. 3
straightforward: 6
simultaneous 1
terminate. 3
seasoned 1
respond 1
text, 2
return; 10
x[10]; 1
thermodynamics 1
think) 1
third, 2
unified, 1
spin-wait 10
val; 2
stuck; 3
starvation. 7
speeds 4
sense: 2
trapframe 1
talking 5
task). 2
terminal, 1
world, 6
time-shared 2
update 54
worth 20
sum, 1
should. 1
“ARC: 1
try 64
stringing 1
size. 7
terms, 3
secretary 2
spell 1
root). 1
yet: 2
scaling. 1
software; 1
seconds 9
— 131
unknown 1
start. 1
valid. 2
study, 3
starved 1
speedup. 1
serves 6
trust 14
unit”, 2
technology. 1
test-and-set.s. 2
time-slicing. 1
supply 1
usage. 4
wrappers 2
sun.com/solaris/articles/atomic 2
signal(). 1
“Alto 1
two-level 7
strlen(), 1
sizes; 2
them) 1
security: 1
states, 1
routine), 4
running: 1
threats, 1
somewhere). 1
seed. 1
’94. 1
unlock(&m) 1
state; 2
values. 1
studying. 1
steal 3
set, 3
stack. 17
unlock? 2
termination 4
tests), 1
told 2
sure. 2
type 73
val 2
x86. 1
surprised 2
signals, 2
“Control-c” 1
units, 2
suffering, 1
sloth” 1
used. 15
segment? 1
yourself2! 1
stores 16
zero, 3
three-instruction 3
sorting 1
seeds; 1
’Precise’), 2
“Evaluation 1
step 2
variety: 1
succeeded 4
store, 2
severe. 1
standpoint 1
status 5
then; 1
thing. 2
too! 2
surely) 1
unmasks 2
vastly 1
y; 2
systems) 4
simulating 1
“Evaluating 1
suggests 2
themselves). 1
solid-state 1
segments, 5
solution, 10
string) 2
zeroing. 2
timeout 4
space: 2
sentence: 1
unlock(lock_t 10
user 117
“Man-Computer 1
store-conditional. 3
vast 2
success, 5
strict 1
successfully 5
user, 3
strcpy(dst, 4
therein; 2
things; 3
systems), 1
unpack 2
vice-versa. 1
yelling 1
taken. 1
top 32
sitting; 1
“E”, 2
sum 3
there? 4
runs...) 1
services. 1
subsequently, 1
solve 20
’03. 1
timing? 1
unmodified, 1
specific 21
utilizing 4
“Program 1
sub-sequent 1
that 1398
waited 1
sharing, 3
stride. 1
suffice 3
valid; 1
stronghold 1
think, 2
thinking, 2
tail_lock; 2
unpark() 2
voo-doo 2
you). 1
task. 7
toughest 1
sizeof(x)); 2
“TENEX, 2
surprising? 2
this? 5
sampling 2
several 1
should 274
substituted 1
someday). 1
’Approximate’, 2
tip: 1
unnecessary 1
spin, 2
vector, 1
“There 1
substitute 3
things); 1
ways: 2
shell 12
suit 1
surprisingly!) 1
though; 4
thrashing 2
study 52
taken: 2
unrealistic? 1
structures 59
vruntimei 2
yourself; 3
taste 2
tracking 2
slowdown 2
“havoc” 1
snippet: 3
thread? 2
savings 9
since 7
successful 5
sound 5
“010101”, 1
tough 2
shown 35
updated) 1
violations). 1
spinning 27
“Volume 4
succeed 2
thinks 7
web 10
shrink) 1
value. 12
switches; 1
thoughtful 1
threat 1
success 9
task: 1
unsafe 4
subtleties 2
wait. 2
ˆC 2
transfer. 1
swapping, 1
so; 2
say. 2
size). 2
surrounding 2
specialize 1
threads, 38
“Guide 2
translated), 2
shudder 1
upon. 1
virtualized, 1
spot 2
“Why 2
sufficient, 1
threadID, 2
went 3
simple. 10
vi, 1
switching), 1
threads? 4
threshold; 4
suggested. 1
taught?! 2
unused. 2
swapoff. 1
waitpid() 2
’85, 1
treats 1
target. 1
sbrk) 1
skip-ping 1
survive, 1
splay 1
thread” 1
solution 44
“Hoare” 1
traversals 2
signal() 4
usage; 1
virtue 2
“looping 1
stop 21
support? 4
tickets: 1
when, 3
simulations 4
vmstat, 1
synchronizations 1
three-queue 1
time-sharing 7
time; 16
terminated 2
upcoming 1
symbol. 1
wanted 3
’92. 1
triggers, 1
target’s 2
scales 6
sleep-ing. 1
switch. 4
sptr 2
stacks 4
“She’s 1
significant 4
tickets 30
used? 1
vmstat 2
“out 1
“real-world” 2
was 188
switching, 2
tmp 8
work; 6
slip 1
time-space 2
suitable 2
tool, 6
terribly 1
system 363
wary 7
’94, 2
twice). 1
upon 40
test-and-test-and-set.s. 2
schedulers) 1
slogan. 1
synchronized 10
stood 1
take 97
single-processor 5
“Survey 1
user/supervisor 1
waiters 4
storing 1
tries 41
somewhere. 3
“steal” 1
way: 5
synchronize 2
to. 4
workgroup. 1
slowly. 2
timing 5
switching) 1
trace; 1
testand-set! 1
system? 4
water 1
“80-20” 1
units 1
use_ptr 2
systems, 49
seconds, 2
sounded 1
system; 8
store-conditional; 2
teach 1
timeline 3
site: 2
“hello”; 1
waiting, 5
strdup("p3.c"); 1
turning 9
valid 51
sounds! 1
“tried 1
while2 1
system). 4
worse. 6
values 75
softwaremanaged 1
tomes 1
tandem 5
transcript 1
them? 3
widely), 1
“Advanced 4
unreasonably 1
thanks, 1
won’t 21
useful. 10
seeing 1
space-efficient, 1
t, 2
straightforward. 2
techniques, 7
times), 1
slices, 2
“second-system 1
wake(address) 2
stream: 2
typing, 1
source, 1
tables! 1
tools 16
vary. 2
writes 21
solely 1
top), 1
translation; 1
techniques 24
“Our 1
system” 1
up. 7
thing; 1
things 46
variables) 1
segfault 1
speeds. 1
tension 3
strategies. 1
text 9
totals 2
smaller? 1
“walk” 1
would 200
work 150
way. 6
system! 2
workload 14
space1 1
tasked 1
too” 1
vulnerable 2
yet, 10
solution; 1
tracing 6
traps 5
tricks: 1
“Shared-access 1
tables) 2
updated, 2
tmp); 5
thread), 2
variants: 1
segmentation.” 1
spinning, 2
test 7
strength: 1
them). 2
transformation 2
somewhere 4
wreak1 1
well-regarded 2
unpark(threadID) 2
world; 1
specifying, 1
stack-smashing 1
transparent” 1
wall 1
zeroing 4
systems. 64
tracks 8
terrible 3
ultimately 1
space, 50
“Someone 2
test-and-set 15
uplifting! 1
threshold 11
track 27
vary 4
segregated 3
state1 1
themselves 4
strings? 1
these, 4
translation-lookaside 1
speeding 2
which, 4
updated 8
technology 7
statically-initialized 1
worry 21
write 63
truth: 2
way? 1
“01” 1
t(A) 1
“A” 8
understand2 1
species, 1
take? 2
“Understanding 5
test-and-set.s? 2
upward 1
through, 1
trans- 1
virtualizes 3
sequential 8
stop, 1
timer? 3
strong, 1
thousands, 1
transparently 3
splintering 1
whole 5
valid). 1
terminal 4
str); 1
yield(); 2
wrote: 1
ways, 1
treasure-trove 1
targets, 1
trylock 4
“Get 1
unsurprisingly, 1
specifically 6
takes, 1
“goodbye”. 1
there! 1
useful? 1
timer, 4
transparency; 1
walks 1
seriously, 3
strike 1
timers, 2
subsystem: 1
threadID 2
spuriously 2
wine, 1
values). 2
terminates 1
trap 52
strive 5
yield, 2
yes: 3
well-defined 1
typedef 33
tasks 2
twice, 5
“THE” 2
upside 1
specified, 1
tech 1
“perfect”. 1
utility? 2
tip 2
trusts 4
shown, 2
tips 2
well. 30
subtle: 2
structures. 22
tickets. 5
starve: 1
within, 1
text). 2
variables. 13
unblocked 2
strong 2
yield-based 2
’a’, 1
weren’t 1
unfair, 1
two. 3
“Test 1
usable. 2
technique 29
speed-of-light 1
tells 11
vector 1
today, 4
tuning 1
tolerate 1
what’s 2
suffering 2
these 222
studied 5
tightly 1
state. 10
worst 7
textbook, 1
size 124
vice 1
undesirable) 2
you. 8
structure, 24
“Ad 2
wild 1
uniformly, 1
uber-engineer 1
“hello, 1
usual 2
there. 6
spending 3
temporal 7
virtual, 1
too; 1
twins!” 1
too. 6
while) 1
summarize, 1
they? 2
sub-job 3
time-slicing 1
steps 3
years; 2
slicek 1
view, 1
unique 7
unqualified 1
style, 1
untimely 6
woken, 2
their 91
unlock(&mutex); 2
unsuspecting 1
“high 1
utilization. 1
there’s 1
splitting: 1
thing, 6
thinks), 1
topic. 1
two-thirds 1
traditionally 1
work? 7
things, 6
subjunctive 1
support, 16
time-tested 1
stitch 1
yell) 1
slower? 1
yourself2 1
“Dynamic 3
submitted, 1
wonders. 1
valgrind 15
unpark 2
them. 16
“reserved 2
utilized 4
terrific, 1
thinking 23
virtualization. 4
us 84
this. 4
total) 2
virtual 253
transferred 4
workloads, 1
types 33
thing” 1
subsections 1
surface 3
timeline. 2
storeconditional. 1
yes. 3
solved. 1
“Everything 2
substrate 1
© 21
worse 9
unrealistic. 1
vs. 8
“running” 2
valid: 1
sponse 1
there, 2
three-quarters 1
virtualized 6
use; 4
traffic. 1
thread. 20
waitpid()); 1
treat 4
u 2
works, 15
this! 2
suc-cessfully 1
swapping 12
top-to-bottom 1
strange; 1
transfer 10
“A 15
“Mesa” 1
summarize 5
’04, 2
xv6, 1
’13, 5
wait-for-me.s. 2
“starts” 2
varies 5
staring 1
therefore 2
timedlock 4
utilization, 1
try. 1
threads; 2
wake? 1
treatment, 2
unaffected 1
written), 1
thousands 10
switches? 1
somewhere, 1
waiting 94
studies. 1
transformed 2
“B” 8
switch 62
“Microreboot 1
up, 12
years, 9
“Efficient 2
warm 3
“test 2
weightB 1
stateless 1
support 110
therein), 2
timer; 1
variants 4
unlikely 3
weaknesses. 1
thread’s 14
unlocked 2
true 14
“Analysis 1
truly 9
threads. 19
sorts 9
website 2
specifies 5
subsequent 24
“Membrane: 1
synchroniza-tions 1
“OSSpinLock 2
update. 1
yours. 2
synchronization 26
warnings. 2
which). 1
stdlib.h 1
surprise 2
thing... 1
top) 1
transform 4
unsatisfying) 1
while. 2
time). 3
unpacks 1
swtch 1
“Towards 1
turnaround. 1
threshold, 2
trap. 1
weightk 1
spectreattack.com 1
subsystem 4
“OS” 1
“System 1
upper-level 2
“He 1
system.” 1
wastes 10
winner). 1
you’ll 37
stream, 2
table), 1
thirty 1
versus 5
translations: 2
unusable. 1
winter. 1
too4 1
unrealistically 2
table! 1
“Wait-free 2
typesetting 2
throughout 13
trapping 3
spinning), 2
subtle 1
“RISC-I: 1
“Take 1
“OS”, 1
systems: 5
watch 5
worse: 2
were 76
’09, 1
’18, 2
tapes 1
virtualizing 14
tree, 4
unusual 3
this, 32
wondering: 4
trade-off. 1
upper-case 1
tables. 6
“have 1
used 175
uint 1
times). 2
traversing 2
stashes 1
succeeds 3
“being 1
“Parallel 1
taken? 1
“The 40
writes, 4
when! 2
strings. 1
whether 59
’81, 5
that, 11
vruntime. 1
trend? 1
work-stealing 2
transac-tions 1
tcsh). 1
usage 16
“modern” 1
thread, 48
user-mode 3
undefined. 1
tip, 4
truth. 1
state: 2
super 2
“commoncase 1
“best” 2
tasks, 1
“a 1
x86); 2
support; 4
why? 2
’flag’ 2
then. 1
tune 1
world? 1
transaction 4
terminate 6
use?) 1
waits 36
use 317
“parent: 1
three, 3
v; 2
unfortunately 4
tmp->value 2
ubriaca. 1
step? 1
surprised. 2
“reliability”, 1
“same” 1
tcsh 2
“batch” 1
“cold” 2
survived 1
swapon 2
“Animal 1
theory-types 2
world” 1
transfers. 1
tested 1
turns 37
uses), 1
user. 7
wake 33
which 501
unimaginably 1
winner 5
unfair 2
systems). 1
straightforward 9
“emulation” 1
technique, 2
xchg 2
“free” 1
wikipedia 1
switches. 1
swoop 1
therein. 5
think? 1
tremendous 1
thanks 4
two, 3
variable-length 2
user’s 4
variablesized, 1
want. 1
transactions 1
translations). 1
type). 1
understand! 2
uninitialized 1
universal 1
use, 15
user-managed 1
utilizes 1
variables 33
unit 7
t; 2
strangest 1
technologies. 1
yields 5
“glibc 2
windows, 1
“Performance 1
yet), 1
thus 486
thinking! 1
tweak 1
them; 2
useful2 1
up 156
variant 3
virtual-memory 1
variants) 1
wasn’t 2
the 8323
vary). 1
unpacking 2
telling 1
systems 185
wisdom 1
strategies 8
zeroing, 1
“lost” 1
worker(), 1
this: 49
“big 1
yourself. 1
three-level 1
therein: 2
twice 5
ticket 27
updating) 1
vengeance’. 1
virtuallyindexed 1
virtualization, 7
wasted 4
threaded 2
versions 8
unused, 1
tackled 2
stretching 1
wishes 16
’his/their 1
“the 1
write, 3
thousand, 1
“easy 1
zplot. 1
“too 3
think-ing 1
type: 1
time), 4
using? 2
time. 66
violation 2
void; 2
then 227
way). 1
three) 1
viewing 2
up; 2
tail. 2
subproblem 1
“A”, 2
“wreaked”? 1
x? 1
three: 1
way 97
using 140
yield 21
takes 50
within 89
updating 13
valgrind. 1
tiny 21
times; 3
waking, 1
there). 1
weight 1
took 16
wait 53
useful, 11
succeeds, 2
through 56
“CPU-bound” 1
” 4
ticket. 2
weighted 1
“Electrochemically 1
utilize 5
thr_join(); 1
you: 1
value) 13
x; 4
usable 2
valid), 1
to! 1
therein 1
visually 1
wherever 2
wants 16
tool? 1
want; 1
users. 1
supporting 1
“Hmm... 1
timer 36
tickets; 1
weighti 2
“I 1
thread.c 1
techniques? 1
zero). 1
temporarily 5
yet! 1
utilities 1
variables, 5
tons 2
those, 1
wakeup, 1
whims 2
welcome! 1
tools, 3
watching 1
translation. 10
“brain 2
times? 2
“Operating 2
uses 70
work. 24
time-efficient 1
vantage 1
’95. 1
you’ve 6
term 15
utilization 5
terrific 4
too 85
valid, 14
widespread 1
total 26
winner: 2
though 29
suppose, 2
works? 3
translations; 1
tive) 1
“fault.” 1
utopian 1
workload. 6
time: 2
’a’ 4
’75, 1
variable” 1
was. 1
toolbars, 1
variable 75
value? 2
word, 1
towards 3
wondering 2
threads); 2
worlds: 1
surprisingly 7
swap 34
today 7
“operating 1
variable-sized. 1
works; 1
timings. 1
“Earliest 1
“1984” 1
vector-like 1
wasteful. 2
topics 5
vectors 1
values, 12
transfers, 1
workers 1
world 26
world”. 1
trials. 1
switched 2
touching 1
“response”; 1
variable: 2
worry. 3
there 250
too). 2
“Jack 1
“A”), 1
version? 2
weaknesses 1
trade-off: 1
virtualization). 1
translation), 2
version 31
worthwhile 2
worst-case 5
www.stanford.edu/˜ouster/. 1
trick 3
syscall 3
track, 1
varying 2
time 306
worse! 1
took, 1
“MIPS 3
“Machine 1
viewpoint 1
transaction, 2
visible. 2
tried, 1
written 18
wouldn’t 5
yielding 5
trouble 9
translates 5
very 60
time-share 1
tables 49
trace: 1
wrote 10
“Memory 1
via 53
“Monitors: 1
translated 3
while 170
visualize 1
virtualization 20
turn; 4
wrapping 2
wrong 15
zero), 1
true! 1
trying 15
vruntime, 1
timer. 1
terminated. 1
trading 1
www.cs.tau.ac.il/˜shanir/concurrent-data-structures.pdf. 2
“Purify: 1
virtualization; 1
“Myths 2
transparent 4
wishing 3
wait(NULL); 3
waste! 1
unbounded 1
write(), 1
zero.” 1
zsh 2
ugly 3
w/ 2
unlock() 14
unsigned 2
unused) 1
to, 13
transitioning 4
www.sparc.org/ 1
treated 6
visualization. 1
“Premature 2
trap; 2
workers, 2
warmup 1
watch. 1
understand, 3
written; 1
˜mark/syscall.html. 1
uncommon), 1
– 19
wait() 26
themselves; 2
update: 2
today. 6
“Tolerating 1
’19, 1
trouble, 2
void. 1
“U 1
turn) 2
write. 2
whichever 4
understanding. 1
yeah! 1
turnaround 30
’93. 1
underlying 9
was; 1
upsides 1
then, 16
today’s 2
“all 4
“Aspects 1
volatile 5
“at 1
turn 32
written, 1
up? 3
while, 8
’15, 1
yield() 2
turned 2
’95, 2
units. 3
way), 1
used, 8
theory 4
“uninitialized 1
“Before 1
vulnerabilities. 1
trace 24
“older” 1
transforms 4
wrong, 4
useless 2
wily 2
user-level 6
’10, 4
understand: 1
’wreak 2
“Cloud 3
wc, 3
users 27
therein, 2
“H”, 2
wakeups 2
unifying 1
“works” 1
x86-version 2
’w’ 1
with) 2
usermode 1
“Ah! 1
translation 46
urgent, 1
“Idleness 1
using). 2
value), 3
this 1109
variable, 8
“Lottery 2
warmed 1
uninteresting: 1
“An 9
yourself 7
zombies 1
variety 3
viewed 4
tree? 1
usage, 2
“Making 2
websites 1
things. 7
thr_exit() 3
variable-sized 7
“Mach: 1
weirdly 1
unit) 1
“B”. 2
write: 1
· 4
we 992
“Aleph 1
virtualization? 1
trees, 4
using; 2
“buddy” 1
thinking? 1
whatever 15
vectors, 1
value 233
“lmbench: 1
unlock(), 2
well, 15
“Computer 6
x86” 2
’current’ 1
winner) 2
“Principled 1
visionary 1
trials 2
value); 2
“drum” 1
third 18
whose 8
though, 8
variable). 1
“pinning 1
unpark(queue_remove(m->q)); 2
well-meaning 1
“If 2
yourself, 2
’c’ 3
“Profiling 1
visited, 1
tweaks 2
variable; 2
“the”). 2
view). 1
why. 2
threshold. 2
waitFirst 2
“yeah, 1
unpleasant. 1
when. 2
“John 1
zombies, 1
“Cooperating 7
“SDS 1
two-CPU 1
waste 23
vector. 1
visualization 1
worker, 2
wary: 1
utilized? 1
workings, 2
“OpenSolaris 2
’c’, 1
time, 75
“Improving 1
“bounds” 1
undoubtedly 2
violation, 2
ways 19
wreak, 1
way, 20
world\n", 1
thread 449
“Perfection 1
value, 17
“Load-Link, 2
timer-interrupt 1
tmp->next 4
“got 1
unlock): 2
virtual-to-physical 6
whenever 3
www.ajwm.net/amayer/papers/B5000.html. 2
well) 1
wrappers, 2
void 153
“TLB”. 1
“One-Level 2
various 27
“Multics: 1
total). 1
with 638
“hot” 2
unmask 1
virtualized. 1
three 69
why, 1
x-axis, 2
which... 1
yet. 4
vulnerabilities 2
“Time 1
“One-level 2
wait-for-me.s 4
“Virtual 8
touches 2
“privileged” 1
word 14
unrealistic, 3
voluminous 2
time) 4
will, 2
x. 2
work: 1
zero 10
“child”, 1
x86 23
“PThreads 2
weightA 1
“bad 1
trace, 3
“ticket-assignment 1
workflows. 1
update, 1
wait(); 1
tired 1
window, 3
workload: 1
’14 1
wait(), 6
x86-64) 1
“cooperating 2
well), 2
“condition 1
traditional 11
worried 1
wait, 4
to), 1
wished 2
worry: 1
woken 13
’new’ 2
warm-start 1
zombie 2
“direct 1
wide 1
“discovered” 1
translation, 15
worse, 8
waking 5
top-level 2
usually 52
x86). 2
work! 3
’peek 1
waste. 7
“100x” 1
“double 1
works3 1
“limited” 1
trials, 1
wrapper; 2
weakness 1
trade-off 4
v9 1
transfers 7
workloads. 3
’self’ 2
way! 1
“CPU 1
“fault” 2
workshop, 1
“ten-items-or-less” 1
trivial 2
write() 5
were. 1
you? 9
valid? 3
translation) 1
“21” 2
works. 22
ways. 11
“Experience 1
“private 1
worlds. 2
typically 1
yes, 6
typing 9
yours: 1
values? 3
trees), 1
“Introduction 3
worry! 2
“Hoard: 1
“reasonable” 1
wrangling 1
we’ve 21
winner. 2
unfortunate 5
vanishes. 1
you’d 9
tried 4
“One 1
wreakers 1
“Ils 1
write(fd, 1
within. 1
variable) 1
use. 16
| 8
two-phase 6
“Priority 1
“Pthread 1
writing 21
x86.py, 4
versa. 1
user-defined 2
working 28
“Fact 1
“Reese’s 1
“Relocating 1
written). 1
understand 112
usually, 2
virtualize 13
wrapper 3
“Think 1
“catch” 1
“Reminiscences 1
you, 11
x, 2
understandable, 1
xv6 6
wait()) 1
wreaked?” 1
“baby 1
“crux 1
“Time-Sharing 1
younger 1
varied 2
uniprocessor, 2
wait(address, 2
years 19
www.nds.rub.de/lehre/seminar/SS06/Werthmann 1
“demon”, 1
“other 1
“core” 1
zeroed 1
unlock, 2
view 14
wakeup/waiting 2
yield.s, 2
wakes 15
“ease 1
“first 1
’02, 2
unsurprisingly: 1
when 480
walk 1
x) 1
’63 3
weights 2
“familial” 1
“fun” 1
’11, 2
use”, 1
woken. 2
watches 2
“Concurrent 2
’b’, 2
weird 3
“right 1
“lock” 2
’68 1
usual. 2
www.gnu.org/gnu/manifesto.html. 1
wc), 1
“H-Pucks”) 1
“...with 1
“yes.” 1
we’d 9
“loop.s”. 2
’e’. 1
utilized. 1
well-suited 2
x86, 8
“Multilevel 1
“Change 1
“Programming 7
“turn” 2
’mutex’ 2
well; 1
xv6. 1
years. 4
“Extending 1
− 7
“foo” 1
“But 1
value; 22
yes! 1
“Hints 3
where 166
“real” 3
“It’s 2
vision 1
“Information 1
yet 20
whom 2
we’ll 112
“first-in” 2
weight0 1
“Just 2
young 3
wired 2
whatever) 1
“longword” 1
whet 1
“My 1
’83, 1
wish 26
“prove” 2
whereas 14
while? 1
“RTFM.” 1
you 995
“Informed 1
with? 1
wonder 3
“Transaction 2
yuck! 1
“Nonblocking 2
words, 5
won’t, 1
why 58
“Using 2
“Policy/mechanism 1
worst-fit, 2
words 2
“bad” 3
“What 5
worstcase 1
“jemalloc” 1
work, 23
“as 2
worthwhile. 3
“just 3
“hello 1
workload, 11
wrong. 3
“smart” 1
“ready” 2
worst-fit 2
www.takeourword.com/TOW146 1
“what 1
x86) 1
y-axis 2
• 69
} 271
’Classic 1
’pedantry’ 1
“Bell 1
“Converting 1
“Observations 2
“Practical, 1
“T”, 2
“daemon”, 1
“interrupts” 1
“main: 14
your 201
“process 1
“test” 2
you’re 18
’threshold’, 2
“History” 2
“Javascript: 2
“Mac 1
“Run-Time 1
“Structure 1
“Valgrind: 1
“correct” 4
“out-of-bounds” 1
{ 281
’ 11
“2Q: 1
“Atomic 2
“Cold-start 1
“It 2
“KASLR 1
“On 2
“Solaris 3
“Solution 2
will 580
“Symmetric 1
window 3
“You 2
wise 1
“atomic 2
wondered 1
“implements” 2
worked, 2
“interactive” 1
writes: 1
“it 1
“on 1
x 12
“page 1
yield.s 2
“right” 1
you; 1
“setting” 2
zeroes 2
|| 2
}; 8
’89, 1
’98, 1
’b’ 1
“Algorithms 2
“Dahm 2
“They 2
← 2
