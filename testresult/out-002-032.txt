S 28
$0x0,(%edi,%eax,4) 1
%bx 2
(-a) 2
$0x03, 1
%eax,0x0(%ebx) 1
6 22
(232 1
(ARM). 2
(Hardware) 1
(P2), 1
(PDE.Valid 1
(a.k.a. 6
(but, 2
(evicts) 1
$0x1 2
&mutex); 8
(212 1
(5 1
(PowerPC), 2
(Run 1
(TCBs) 2
(at 12
(average: 1
%edx 1
%esi 1
& 29
(1024). 1
$0x03e8,%eax 1
(2134) 6
(32768) 1
(7030) 1
(And 1
(EEVDF) 1
(MMU); 1
(P=1), 1
(TestAndSet(&flag, 2
2 25
!= 7
"wc" 1
%ax 4
(1e7) 2
(APIs) 2
(BFS)2 1
(P1), 1
"common.h" 7
# 16
%eax 24
%edi, 1
(-n 1
(0xC0000000 1
(101) 2
(2) 4
(34K) 1
(Alpha), 2
(DMA) 1
(Lines 6
(NULL 1
(PFN). 1
(PTE.PFN 2
(R) 1
(T2), 2
(Third 2
(Tp). 1
(about 1
(by 13
(double 1
(job 2
(literally) 2
(new_head 2
(p1.c) 1
(p4). 1
(preempting 2
(pretend) 1
(probably 1
(remember, 1
(size 1
(too) 1
(usually, 1
 32628
4 23
T 10
&stack); 1
(-T). 1
(/tmp/file) 1
(010101), 1
(224 1
(512 2
(8 1
(@PFN:100) 1
(KNUTH’S 1
(MMU) 1
(PTE.Present 2
(SJF), 1
(TD 1
(This 1
(Thread 2
(Volume 1
(alas). 2
(104) 1
(I/O). 1
(LDE) 1
(OS)3 1
(R, 1
(TLBs) 1
(char 8
(due 6
(lazily) 1
(p4.c) 1
(pause 3
(potentially) 1
(realistically, 2
(returning 2
(t0.c) 2
(taking 2
(think 5
(web 2
(indeed, 4
(insert 1
(latter) 2
(many 4
(minimally) 1
(of 10
(original 2
(rc 8
(rc_wait:%d) 2
(ready 4
(size: 1
(stride=40) 1
(unrealistically 1
(wait 1
(Q0), 1
3 1
(C 1
(DEC). 1
(Hardware-based) 1
(LW 1
(STDOUT 1
(VPN=06, 1
(a.k.a., 2
(flag) 2
(hence 1
(mentioned 2
(most 2
(stride=200) 1
(to 10
10 21
!zero, 2
"common_threads.h" 4
%esp 1
%p\n", 4
(24114) 5
(32 2
(August, 1
(CFS) 2
(Dynamic 2
(PTEs) 1
(Success, 4
(T1 2
(Tarrival 1
(atomic_bit_test_set 4
(binary 1
(called 9
(cleared), 1
(continue 1
(curr) 4
(described 5
(dramatic 1
(hex 2
(highly 1
(holding 1
14 14
"usage: 2
%ecx, 1
(-s) 3
(34KB), 1
(ASLR). 1
(Again) 1
(COW 1
(Good 1
(P0) 1
(StoreConditional(&lock->flag, 2
(Tc2 1
(VPN), 2
(allocated 3
(c1), 1
(count 8
(during 1
(emacs 1
(i 19
(implicitly) 2
(implying 2
(labeled 6
(ld.so) 1
(locked). 2
(pid:29266) 2
(pid:29383) 2
(remember: 2
(shaded 1
(thanks 1
"wc"... 1
%ebp, 1
( 6
(*start_routine)(void 2
(-s 2
(28KB) 1
(7.2) 1
(P0 1
(U/S) 1
(VA) 2
(again 3
(arbitrarily; 1
(c1, 1
22 1
#3: 1
%ebx, 1
(26 1
(4096), 1
(CPU 2
(D); 1
(Line 5
(S), 1
(Spring), 3
(Tc1 2
(a2), 1
(instead 1
(limit) 1
(line 3
(maliciousness) 1
(p2.c), 1
(still 1
(swapd) 1
(worst-case 1
(turn 2
(“Buzz 2
*(*start_routine)(void*), 2
(like 5
(where 12
! 2
%d\n", 9
%dx 6
&; 1
(-L 2
(-c) 1
(-l 4
(117 1
(@PFN:101) 1
(FCFS). 1
(Linux) 2
(MLFQ) 1
(OS). 1
%eax). 1
(200 1
(CTSS), 1
(P=0), 1
(PID), 1
(PTE) 9
"A"); 4
$0x1, 6
%d 5
(10 1
(1000 1
(4KB 1
(9.1) 1
(A 14
(Bounded 1
(Niceness) 1
(R/W) 1
(Ready, 1
(TM 1
(Timer 1
(yet) 3
!StoreConditional(&lock->flag, 2
"B"); 4
%d)\n", 4
((flag[1-self] 2
(0x1) 2
(9.2) 1
(B 3
(counter 17
(freeing 1
(get 1
(load 1
(myarg 2
(onto 2
(pthread_join) 2
(via 6
*arg); 4
*child(void 3
*hptr 1
(because 8
(created 1
(finally) 1
(first-in, 1
(hopefully 2
16 9
"hello"; 3
&lock); 2
(11) 1
(B) 1
(K 1
(MRU). 1
(modern 1
*cwd; 1
*input) 1
*myargs[3]; 2
*str 1
--trace-mem=yes 1
*curr 4
#include 62
(-i) 4
(0x200000), 1
(120−0)+(20−10)+(30−10) 1
(7.1) 1
(Advanced) 1
(CanAccess(PTE.ProtectBits) 4
(HW 1
(London), 1
(Process 1
(c3) 1
(ironically) 1
(mutex, 8
(next 1
(nice 1
(t1.c) 2
(that’s 3
(untimely?) 2
(user 3
(which, 2
*q, 4
*value 2
-1) 1
-l. 1
0). 2
00007f4e7d2d0000 1
07 1
0x300, 1
0xC0000000, 1
1-GB 1
1024 10
128, 1
13.5 1
137, 1
14.4 1
15.3 1
L 17
%eax), 1
(117). 1
(2012-01-30-1-g1c41342) 1
(BKL). 2
(BSD). 1
(B’s 2
(G) 2
(LFU) 1
(P 1
(PDE). 1
(VPN=08). 1
(Virtual) 1
(a[7] 1
(curr->key 4
(easily) 2
(erroneously) 1
(formerly 1
(its 2
(long 2
(modulo 1
(note: 2
12 19
+ 45
 26
$0x1,%eax 4
&& 2
(24113) 5
(Code) 8
(Logical) 1
(MMU), 1
(PFN 2
(TestAndSet(&m->guard, 4
(assert(hptr->magic 1
(atomic_add_zero 2
(include 2
(lock-holding) 2
(probably) 1
(pthread_create) 2
**) 4
-5; 1
%edi 3
&args); 4
&m); 3
(20-ms 1
(400)2 1
(4200) 1
(A’s 2
(C, 1
(Measurement) 3
(O 1
(RSS). 1
(SJF, 1
(probabilistic) 1
(probably), 1
(switching 1
(target) 1
(v1) 3
(virtual) 3
(you’ll 1
*malloc(size_t 1
*mutex; 2
*new); 1
-k 2
-t). 1
.... 1
/proc/meminfo; 1
0,0,0,0,0,0,1? 1
0x200000. 1
*producer(void 5
(thus 9
(“0101”th) 1
*ptr, 5
, 15
--b0 1
-S, 1
00, 1
00007f4e7cf06000 1
0th 2
0x800, 1
10+20+120 1
100+110+120 1
1074 2
12) 1
1234567 7
16.7 1
18.5 2
19.4 1
1960’s. 1
1970; 1
1980’s, 2
(and 111
(approximate) 2
(atomically); 1
(do 5
(initial) 1
(let’s 4
(likely) 1
(lowest), 1
(more 3
(mutex 2
(myarg_t 4
(new) 1
-P 19
(in 45
(making 1
(mutex); 6
(n) 1
(p2), 1
(part 2
(sorry!). 2
(whether 2
*), 2
**old, 1
PAGING 21
&oops; 2
&x); 1
(-M 1
(-m 2
(./x86.py 4
(1) 13
(100) 1
(Editors 2
(PA) 3
(Q2). 1
(ROP) 1
(always) 1
(bugs) 1
(flag 4
(imagine 2
(into 4
(non-restricted) 1
(releasing 1
(source) 1
(they 3
(way) 1
(mutex->flag 2
F 8
%edx, 1
%esi, 1
&rvals); 2
(01) 1
(14th) 1
(28 1
(64 1
(A) 2
(ASID) 1
(CanAccess(TlbEntry.ProtectBits) 4
(P1) 3
(PCB), 2
(SN) 1
(a) 5
(broken) 1
(c2), 3
(causing 2
(kernel) 1
(milliseconds); 1
"fork 4
(1110) 1
(21) 1
(22.1) 1
(AMAT) 1
(C) 1
(L 2
(PCB). 1
(PDIndex 3
(PTE): 1
(Pmiss 1
(SJF) 1
(VM) 1
(VPN=06), 1
(a[3] 1
(again, 3
(c) 3
(c2). 2
(c4), 1
(clearly 1
(current) 1
(generally) 1
(highest 1
(minus 1
(regardless 2
(starting 3
*new 4
8 22
1; 42
1KB. 1
2.2: 1
2.5). 1
23254, 1
25% 1
26.6 4
27.5 2
28.4 2
29.3 2
29.9: 2
(RDLK) 2
(perhaps 7
(pointed 1
(recall 1
(roughly) 2
(size=200) 1
%ebp 1
M 20
%eax,8049a1c 4
%esp, 1
%lld\n", 2
&rvalue); 2
(1 1
(100 4
(32-bit 1
(Another 1
(CFS), 1
(C’s 1
(MFU) 1
(NOT 1
(Tc1) 2
(a[8] 1
(another 1
(each 2
(global 3
(non-contiguous) 1
(R 1
(Tc2) 1
(a[0]) 2
(after 4
(among 3
(bytesLeft 1
(THE), 2
(c1–c3). 1
(effectively 1
(out 3
(seconds) 6
(there 3
(this 4
*attr, 2
(P2) 1
(a 21
(once 4
(threads.c) 1
(T2) 2
(also 7
(an 2
(done) 2
(generated 1
(hence, 2
-g 3
%ebx 1
(0, 3
(20%), 1
(3) 2
(G), 1
(LRU) 1
(Linux, 1
(LoadLinked(&lock->flag) 4
(PC) 4
(PSJF) 1
(PTIndex 3
(S) 3
(With 1
(dare 1
(fill_ptr 1
(four 1
(full) 1
(header_t 1
(often 2
(p2.c) 1
(p5). 1
(particularly 7
(read 1
(reduced 1
(si 1
(too!) 2
(we 2
(with 21
(word 3
); 1
*mem; 1
0); 8
0.6 1
0x00000000, 1
0x03e8, 1
0xBFFFFFFF 1
1000s 1
112 2
15. 1
15.2. 1
16.1. 1
+= 9
2: 3
(eventually) 2
(io.c) 1
(ldstub); 2
(m->flag 2
(namely, 1
(p6, 1
(rather, 1
(results 1
(studied 1
(too 1
(turned 1
*L) 4
*arg) 26
C 16
#2: 2
%dx. 2
%eax, 8
(-q) 1
(16 3
(Bad 1
(Blocks) 4
(Chapter 2
(LAUER’S 1
(MLFQ). 2
(MQMS) 1
(Offset 1
(P). 1
(PTE.Valid 4
(PWT, 1
(Right) 3
(September 1
(TestAndSet(&lock->flag, 2
(VPNs 1
(Virtual 1
(i.e., 96
*consumer(void 5
(such 25
(waiting 2
(thread 6
*c); 1
(PDE.PFN 2
(VPN). 1
(a3). 1
(b) 5
(but 14
(c3), 1
(especially 2
*kstack; 1
(Figure 45
(OS 1
(PDE) 2
18 4
I 26
(-w) 1
(A, 5
(FIFO) 2
(M 1
(PFN) 6
(RR) 2
(SQMS) 1
(Tp) 1
(VPN=07), 1
30.10: 1
-Wall 7
*L, 8
(assuming 5
(bytes 2
(code, 7
(continuing) 1
(discussed 1
(usually) 2
(assumes 2
(available 1
(either 3
(fun!). 1
(hopefully) 3
(kernel 6
-v 17
(free) 21
(gadgets, 1
(int 6
(left 1
(nearly 2
(quantum 1
(quickly) 1
(new 7
20 1
B 13
#1: 2
#define 2
(-P) 1
(256) 1
(PA), 1
(SSDs) 1
(TlbEntry.PFN 4
(VP 3
(address 2
(bash?) 1
(done 4
(just 5
(max 2
(my 1
(myturn). 2
-D 154
-d 2
0-byte 1
*current 1
-> 10
0-9), 1
/proc 1
00000000019d5000 1
0111 1
03 1
0x1096008c0 1
1)) 2
10.4 1
104. 1
(ns) 1
(not 20
(quite) 1
(similar 3
(somewhat) 1
(that 5
(tmp 1
(v2) 1
(va.c) 1
(vruntime). 1
(wc). 1
(incredulous) 1
(interrupt) 1
(modified), 1
(which 39
(for 24
*(*start_routine)(int), 2
(p2); 1
(physical) 1
(pid:29146) 4
(spinning 2
(stop 1
1 461
0; 116
0x30 1
0x700, 1
0x7ffe1033b8f4 1
100%), 1
1028 1
110000) 1
143012 1
16.6 3
17.5 1
18.4 2
19.3 1
10). 3
16KB 24
./main-two-cvs-while 2
(VirtualAddress 9
(a[4] 1
(both 2
(c3). 3
(c5), 1
(he 1
(hint: 6
(i); 1
(known 1
(or, 5
(real) 1
(reduction 1
(running, 2
(runtimei 1
(or 83
(using 9
(version 1
*d 1
*thread, 2
--tool=lackey 1
-10 1
-A 6
-X) 1
*) 23
-15 1
-F 3
-f 1
1024, 1
12(3), 2
1000). 1
107 1
//acquire 4
08 2
0x00000000 1
0x1095afe50 1
0x400, 1
0xFFF. 1
1). 6
100). 2
100+(110−10)+(120−10) 1
103.33 1
105-117, 1
1124 2
128KB 1
*rvals; 2
(say 17
(store 1
(tiny) 2
(total) 1
(use 1
*dst 2
+19 1
-H 1
-pthread 5
./process-run.py 2
./thread 3
0% 5
0th) 1
0x3C00). 1
1: 7
120 9
12000 1
135: 1
14. 4
15.1. 1
15.3, 1
*/ 16
*dst; 1
*value) 2
--leak-check=yes 2
*H) 2
(pid:29147) 2
(right) 2
(sched 1
(turning 2
(virtual 1
*parent; 1
*tail; 2
-20 2
*mutex) 12
*x); 1
-is-unsafe. 2
-m, 1
-p) 1
./fork.py 4
0.1). 1
06 1
0x200, 1
1), 5
10% 5
10.7 1
100), 1
1032 1
13.4 1
14.3 1
-p 44
/dev/zero 1
/proc/meminfo 1
0KB 13
0x0DC0. 1
0x7ffd3e55d2b4 1
0xC0000FFF 1
*argv[]) 23
*m); 1
(void 12
(when 3
*cond, 2
- 25
--b1 1
100 87
-B 4
(if 13
*next; 6
(TLB 16
(Thousands) 2
(above), 1
(conservatively); 1
(cpu.c) 1
(free 1
(https://github.com/remzi-arpacidusseau/ostep-projects) 1
(left). 1
(lots 1
(managing 2
(non-paged) 1
(notably) 1
(note, 1
15 96
15.2 3
16.1 2
16384 1
16492 1
16708 2
17.6: 1
170. 1
172, 1
18.5: 1
19.4: 1
1959. 1
*p 6
(pid:%d)\n", 9
(required 1
(running 1
(said 2
(middle 2
(myturn 2
(scheduling) 1
(shown 5
(simplified) 1
(specifically). 1
(stop) 1
(though 6
(usually 7
0x3F80, 1
2.1: 1
17, 1
1928 1
1964 1
1:0,4:100. 1
*mythread(void 12
15KB 7
2.3 1
2003. 4
(note 4
(older 1
(our 4
(p1), 1
(p1– 1
(queue_empty(m->q)) 2
(rc_wait:29267) 1
(rc_wait:29384) 1
(requiring 1
01, 2
12. 2
-b 3
/ 1
0.1 2
0? 3
0x1024 1
0x900. 1
1.0 1
(pid:29267) 1
(pid:29384) 1
(potentially), 2
(v9 1
1); 4
10.1), 1
100); 2
1024. 3
104 1
1110101 1
*x 3
*c, 5
*old_ptr; 2
-1; 8
-1KB. 1
1, 80
*m) 6
1.01] 203
10,000 8
13); 2
14.5 1
148K 1
15.4 1
0] 4
14, 2
(the 61
(through 1
(xchg). 2
(PCB); 2
-a 41
1101 2
10. 7
1000. 2
11–12), 1
12, 2
12-bit 2
2.4). 1
2000) 2
20000000) 2
22.9 1
2.4 1
113 4
--tool=helgrind 2
-1); 1
-5 1
-u 6
-L 18
*ptr; 6
*ptr 9
*chan; 1
100, 6
10th 3
11:5, 2
1277, 1
13.1: 1
15). 1
16.1). 1
19221041) 2
1950’s 1
1ms, 1
20-29): 1
20.3: 1
20.6). 1
2000; 2
21.2: 1
21: 1
(we’ll 2
). 3
*args 4
30.13). 1
384KB 1
26.5 4
2004. 7
128: 2
13–14). 1
140 2
18, 2
18-bit 1
-l 19
./main). 1
-S 24
*tf; 1
1968. 11
-M 15
(sometimes 10
(thank 1
(v 2
*H, 4
*old_ptr 2
*p); 1
*worker(void 1
-c. 1
. 53
0.0 2
10-ms 4
11916, 1
16KB)1 1
18.7 1
19.6 1
13.1), 1
*head; 4
--l1 1
-5), 1
0x03, 1
0x3000, 1
12(%eax) 1
14949, 1
160 2
17.3. 1
19.3, 1
*tmp 7
/* 16
0) 40
0x0(%ebx), 2
1.2.1) 1
-m 3
./x86.py 14
0+ebx 1
14-bit 4
*q) 2
-i. 2
/bin/ls. 1
0(%eax) 2
0.001), 1
0000000000400000 1
04 2
0x000, 1
0x7ffe45522e94 1
10.5 1
100%. 1
100s 1
1030 1
(one 6
(only 5
(other 1
(sometimes, 1
(stride=100) 1
(upon 1
(use_ptr 1
./main 6
0011 1
0101 1
0110 2
02 1
0x7fff691aea64 1
1986. 1
10,000,000 2
100,000, 1
0x0(%ebx) 1
1) 52
1-second 1
10.1: 1
100) 3
109 1
12). 1
17.8, 1
19.4. 1
200,000, 1
(repeat) 8
22.1: 1
15) 4
1] 4
2-MB 1
2.4: 1
39 11
27.4 4
2008–18, 5
2013. 4
2015, 1
202 1
22.11 1
220 1
2.7 3
-n 19
0x37) 1
0xC0000000 2
1.0, 1
1995. 6
16-byte 4
100:100,100:100), 1
108 11
16KB] 5
18705, 1
1970 1
1992.. 1
2.1 2
2001. 1
2003, 2
"A" 1
$0x0) 1
% 8
%ecx 1
(-p 2
(256 1
(AS) 1
(CompareAndSwap(&lock->flag, 2
(No 1
(PM 2
(Page 1
(Tc1), 1
(VAX/VMS) 1
(VPN) 2
(argc 2
(ignoring 1
(including 10
-s 21
................ 1
0x80000000)) 2
10-byte 1
10.3 1
100%, 1
10, 14
11). 1
11:1, 1
) 46
(PFN), 2
./p1 2
1110 2
"hello 1
(15th, 1
(MIPS), 2
(Simulation) 16
(T1) 4
(VPN=1, 1
(assume 2
(c4). 1
(depending 2
(even 3
(forever), 1
(hardware 1
201 4
-C 6
* 17
18.2, 3
24. 1
20), 1
(it 12
(lock->turn 2
(no 4
(nods) 1
(non-toy) 2
(on 11
(p.81).” 1
(p3.c) 1
16 92
16(%eax), 1
16.2 2
17.1 1
17.7: 1
18.6: 1
19.5: 1
21:1, 5
(roughly 2
(simple 2
16KB; 1
16.5. 1
1111 7
128) 1
4.3). 1
28.3 2
(-1KB) 1
(-p). 1
(3764 1
(4 3
(4088 1
(As 1
(Gulps) 1
(KASLR). 1
(Left) 3
(P); 1
(PD 2
(PID). 1
(Proc 2
(Software) 1
100,000 1
1000, 5
10ms, 1
11168, 1
1174 1
14KB; 1
18.6 2
2010. 7
1969. 3
24(%eax) 1
25%. 1
(stuck 2
17:10, 1
17.4. 1
20, 3
13 93
48 9
4MB) 1
(main) 4
22.10 1
22–23), 1
**value_ptr); 2
*abs_timeout); 2
*old_ptr, 2
-1, 1
-= 1
./p3 1
10.2: 1
1:0,4:100 2
16.3 2
11 110
(VPN 14
(Without 1
(array-based) 2
*mutex, 2
*ofile[NOFILE]; 1
./random 3
.globl 1
19.5 2
1970’s. 1
1We 1
2.3: 1
28.11 2
*cond); 2
19.7 1
170 3
1959 1
13.2 2
14.1 1
5). 6
655, 1
-c 22
24KB 3
2.5 1
2501, 1
26, 1
29.10: 2
... 84
00 4
10:1,10:100). 1
20); 1
20.6 1
21.5 1
22.4 2
23.3 1
(as 49
(STCF) 2
*ptr) 7
0+1+2 1
09 1
0x500, 1
0x8049a1c). 2
110). 1
1224 1
14.6 1
15.5 2
16.4 1
17.3 1
1968 2
2017. 2
29.1. 2
3Like 1
7), 3
-pthread; 2
26.1, 4
2005. 9
2007. 3
2016. 1
2018, 1
21.1), 1
0000 14
0x8049a1c. 2
1.0001 1
10-entry 1
(page 49
(physical 1
(pointers) 1
(resulting 1
(see 12
(that, 2
23, 2
// 294
1978. 5
23:2, 1
2008–20, 49
28.4. 2
3KB: 1
4.8 1
20-bit 3
18 54
28.9: 2
15.6: 1
16.5: 1
17.4: 1
17.7). 1
.EXE 1
28.10: 2
2007, 2
-R 13
-r 5
./multi.py 4
./p2 1
0,0,0,0,0,0,1:0,0,0,0,0,0,1:0,0,0,0,0,0,1 1
0,0,0,1,0,0,0:0,0,0,1,0,0,0:0,0,0,1,0,0,0 1
00007f4e7d932000 1
10.1 2
10.2? 1
24 37
(e.g., 108
(from 16
(gasp) 2
(horribly) 1
23-bit 1
0. 11
1987. 1
256 6
26.7 4
*rvals 2
2.5: 1
5% 3
200-MHz 1
18.2 1
29 25
29.2 4
29.8: 2
75 3
8(%eax) 1
0 384
3 231
30.11 1
300 4
3121, 2
3412382, 1
4.1 1
4096 3
50. 1
6100, 1
64GB 1
101. 2
24(%eax), 1
26.6: 2
12 89
(unused) 6
(value 2
(yes, 4
00007f4e7d508000 1
1996. 4
1KB) 1
27.6 2
*src 3
2010, 2
5.7 1
50), 1
19.1 2
192KB 1
19384 1
38 8
18.3: 1
8(9):569, 2
0.2 1
0x80000000 2
10.3. 1
100? 1
108). 1
11. 3
115–116, 2
13, 2
13.2, 1
132: 1
19.8 1
1? 1
1” 1
2.6: 1
20. 1
20.2. 1
28.9 4
(you 5
*malloc(size 1
28.14 2
1Note 2
28.5 2
-nw 1
20KB 2
2000, 1
5:100,5:100. 1
7.5 2
70%. 1
1989. 5
1998. 2
19.2: 1
93 1
2KB), 1
30.12 1
0: 4
214 1
128 13
17 66
17.2 1
17.8: 1
18.1 2
18.7: 1
1800s, 1
1979. 2
28.4: 2
12(%eax), 1
(int) 10
(large) 2
(log2 1
(marked 1
(now 6
(privileged) 1
(sadly). 1
(some 1
(what 4
(without 1
(write) 1
*head 1
3a); 1
78-101, 1
4). 7
2). 7
2016 1
22.7 2
26.3 2
34KB 1
0x200000 4
0x600, 1
1.0; 1
1.3.37 1
10) 2
1036 1
6= 2
12:7, 1
15.2: 1
1586, 1
16.1: 1
16KB, 1
1793, 1
18). 1
19.1). 1
19.3), 1
28.9, 2
2), 3
29.4 4
0.4 1
0x068, 1
0x8049a1c 6
1-byte 1
100ns 2
101 4
110 2
13. 2
14KB 2
ALLS 2
2008–19, 138
27 32
36K 1
250 5
15), 1
1100 3
1. 43
100. 6
12:6, 1
13.2; 1
13.3: 1
15.1: 1
15:3, 2
15KB, 1
1961. 1
1963, 1
1970. 4
1970’s 2
2- 1
2K 6
20% 7
2014 1
21.6 1
22.5 2
2212 1
*lock) 20
+1 1
-O 1
47 2
19345221) 2
15, 7
ASPLOS-IX, 1
203 1
27.2 2
3764 4
27.2. 2
28KB 2
29, 3
3); 1
30.15 1
7.4: 1
7.7). 1
70, 1
7282 1
7354 1
2000. 9
29.8 2
0x8049a1c, 8
*new_head 2
-l, 1
...; 1
2k 1
2; 5
21, 4
28.6 2
(normally 1
(slow) 1
(something 2
(start 2
(trustingly) 1
(who 2
1957. 1
16.1, 2
Again, 3
22.12 1
28.1 2
28.7: 2
29.6: 2
3-GHz 1
30.8 1
111). 1
14.7 1
15.6 2
16.5 1
17.4 1
18.3 1
8.3: 1
21.3, 1
29154, 1
110, 1
1962. 7
20.5: 1
2015). 1
22.3: 1
23.2: 1
28.16 2
2:70, 1
25 33
4.6 1
8.4 2
-o 9
./array 1
./mem 5
0+5+10 1
16384, 1
16K 1
16k 5
1962 2
1990s, 1
15.4: 1
135 2
17.5. 1
4.5 2
(Success 4
1988. 2
29.3: 2
13.1 2
19 58
9.2: 1
22, 1
30. 2
30.15: 1
1963.” 1
1971. 1
1980. 1
30.11: 1
21-bit 1
29.5 6
2KB 8
26.1 2
44000 1
88761, 1
4:1, 1
*c) 18
1966. 3
0, 55
00007f4e7d731000 1
010000; 1
3980 3
16(%eax) 1
16.3: 1
17.2: 1
17: 1
17:4, 1
18.1: 1
1964. 2
1973. 2
33 12
15.5: 1
19.2 2
<stdio.h> 15
22.2, 1
1234567)) 1
13.2: 1
137298 1
13: 2
13:4, 2
17.1). 1
1792K 1
19.1), 2
2m 1
26.7: 2
4KB). 2
4MB), 1
60% 4
*q; 2
1970s 1
Amazingly 1
Apparently, 2
0x0(%ebx),%eax 1
3A 1
1780K 1
2 257
36 11
1996 3
5.4 2
56, 1
6.3 1
1982. 7
42 7
152K 1
1960’s, 2
<sys/types.h> 1
28.8 4
30.2. 1
32, 1
30.2: 1
1991, 1
30.14). 1
30.3) 1
2github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
1960. 1
2”. 2
272, 1
9.3 2
5.5 1
64-Byte 1
--l0 1
1975. 2
25. 1
B-Trees: 1
1.00] 5
10+20+30 1
10.3: 1
1000; 1
4), 2
2.9 2
(all 6
1997. 5
64KB 9
1991. 9
4200 4
16.4: 2
1990). 1
1999. 1
1KB, 1
21:10, 1
32-bit 16
4) 2
4904, 1
4GB 1
31) 4
30.12: 1
1960’s 5
3, 25
28.5: 2
29.4: 2
512 9
64-byte 7
-I 6
1993. 6
254: 1
BUCKETS; 2
179–180, 1
4 164
4(%eax), 1
4.2 1
40% 5
2009. 5
22.9. 1
1:1, 3
1Each 1
7 127
51 18
17.3: 1
<sys/wait.h> 3
29.7 2
30.1. 1
30.14: 1
36291, 1
3752 1
4.5: 1
7.8 1
3: 3
30.4) 1
1KB 13
30.4: 1
300, 2
4096, 2
55. 1
74 1
83 1
Accounting 1
Actually, 1
Aha! 1
1980’s; 1
1998 2
100K 1
400 1
4088), 1
(almost) 1
28.10 4
1e7; 2
20 95
20(%eax), 1
20.2 1
17.6). 1
A2 1
./cpu 5
22.8 2
256KB 1
256m 1
21.2, 1
40-ms 1
8.7 1
4.1: 1
3; 3
1m 6
90%, 1
29147 2
4k 1
56KB 2
-i 18
..., 2
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 1
0.10). 1
0.8 1
0x00000FFF, 1
1% 1
10), 1
40000 2
45 6
526, 1
28.3. 2
20,000,000. 2
21.7 1
60 13
2000 15
21.1 1
22.6: 1
26.2: 2
27.1: 2
1MB 1
26.4 4
28.7 4
40KB 2
9.6 1
448KB 1
3A: 2
2, 38
30.6 1
32896; 1
: 289
6.4 2
20.4 2
26.3, 2
27.2, 2
Andrea 7
2.2 2
2) 7
10; 2
100% 5
105 6
128; 1
132 2
14:7 1
7.2 1
22.6 2
7.10 1
18.2: 1
AFIPS 4
0), 1
32K 3
30.1 1
30.7: 1
320KB 2
29.6 2
4page 1
940 1
49 1
3KB. 2
4-KB 3
4.2: 1
4.3BSD 1
== 91
7.3 2
21.3 3
215, 1
28K 3
Approximation 2
200 24
2002. 1
128-Byte 1
4088 1
4096-byte 1
4196 1
4:100,1:0. 1
5.1 1
7.8: 1
8.1 1
8. 12
184–199. 1
AME 1
AND 6
32k 6
34920. 1
27.3 4
4. 27
2Fortunately 1
5.4: 1
4:3, 1
2-bit 1
5121024 1
335, 1
4: 2
5.1: 1
ALGORITHMS 1
7.9: 1
Bovet, 1
22 38
29.11: 2
Attacks 1
B) 3
2011. 7
128-byte 2
13:2, 1
14). 2
324 1
150 10
17.2. 1
26 32
8.7: 1
820, 1
19.1: 1
0.9. 1
05 1
0x100, 1
36.4% 1
28 33
4.2. 1
2] 2
50, 5
4KB, 3
20.4: 1
54.5%. 1
34 12
= 415
50) 1
API 62
8 109
8(%eax), 1
22.2 1
30.10): 1
36, 1
B-tree, 2
2013, 1
23.1. 1
24-bit 1
29.9 2
32868. 2
40050 1
1957 1
26.2 4
80-20 4
9548, 1
1956. 1
AVOID 7
2. 29
10); 1
3:50,3:50 2
28(%eax), 1
4088. 1
30, 3
5000, 1
5.3). 1
6). 1
64-bits); 1
76 1
8), 1
68 1
Abstraction 2
Affinity 1
8.2 2
22.8: 1
20.1: 1
218 1
Beginning: 1
(bigger) 1
(c->local[cpu] 2
(given 1
(long) 1
(mem.c) 1
(p2). 1
(result: 1
27.1 2
85.7% 1
API, 1
1965. 6
Abstract” 1
20.6: 1
10.6 1
3] 1
28.2 2
44:1/2. 1
30-bit 1
30.13: 1
200, 3
5→0 2
372K 1
ACM, 19
80% 7
85 1
<sys/time.h> 1
Algorithms 4
9.1 1
23.1 1
3764-byte 3
24113 1
Block 9
63 3
64bit 1
32KB 5
34K 3
3” 1
1966 1
2.6 3
28.6: 2
99% 2
ARDWARE 2
Act. 1
Adam 1
200. 3
100-bytes 2
4.4: 1
28.8: 2
4b, 1
5th 1
6.3: 1
2015/02/10/understanding-glibc-malloc/. 1
20th 1
21.3: 1
22.2: 1
7). 2
7232 1
A, 16
Assume, 3
BOUT 1
26.4: 2
27.3: 2
27KB. 2
28.2: 2
16), 3
90 1
51. 4
48KB 4
40%) 2
40. 2
20(%eax) 1
28KB1 1
ARPACI-DUSSEAU 38
Anticipatory 2
Address 25
Ahead 2
2018), 1
100byte 1
40, 2
4000, 1
4b: 1
5.3: 1
7.2: 1
75% 1
43 8
AMAT: 1
23.1: 1
24:2, 1
256-byte 1
28(%eax) 1
9” 4
BUCKETS], 4
3One 1
254 3
But 49
29.1: 2
16500 1
ACE 1
ADD 1
49, 2
5.6 1
4200, 1
2006. 6
29.5: 2
3), 3
Arpaci-Dusseau 3
Algorithm” 1
22.4: 1
And 108
117, 1
29.1 2
5KB 1
30.5) 1
57.1% 1
6.2: 1
8.1: 1
7.4. 1
AT&T/Bell 1
Brian 2
8.1). 1
APIs 10
28.1), 2
<< 9
Background: 1
4-byte 3
28.12 2
CONCURRENCY 3
30-byte 1
1K 1
7.5: 1
ALLOCATED 2
Ah 1
512-byte 1
46273, 1
2015. 1
204 3
30.7 1
Basu, 1
Allocated] 2
28.17 2
2N 2
2’s 1
30.5: 1
7.1, 1
3000, 1
39016, 1
7.1: 1
9:2, 1
ACHE 1
ATOMIC 2
Annals 1
86 2
ASID, 1
28.15 2
3.33). 1
Birrell. 2
4.3 1
28.5. 2
CRITICAL 1
30.3 1
1k 9
2.3) 1
20.2: 1
Allocated 9
59–73, 1
5(2): 1
50-ms 2
27.1. 2
300), 1
Berger 2
Allocation 3
Atomicity 2
13.3 2
29.7: 2
3KB 3
8-page 1
846 1
3B: 3
9). 1
70 2
ACM 11
AKE 1
Anoop 2
8KB) 1
9), 1
30.3: 1
ASY 154
Boneh. 1
40100 1
29.11 2
Certainly 1
30.9: 1
7.8). 1
(say, 11
20.5). 1
BFS. 1
6.5 1
7.4 1
51, 3
2KB). 1
35 12
Bit-precision” 1
Bobrow, 2
Avere 1
14 71
29267 1
4, 5
4-bit 3
9) 1
4.3: 1
ANAGEMENT 17
AccessMemory(PDEAddr) 1
Accessing 2
Almost 1
Architecture: 4
<pthread.h> 8
90% 1
30.8), 1
3000; 1
Buffer 9
CHEDULE 2
CONDITIONS 1
Coherence” 1
31 21
32-bits 1
*mutex); 8
21.1: 1
Babaoglu, 1
1974. 3
8-byte 1
6.4: 1
3): 2
4(%eax) 1
Anderson, 2
But, 7
B1 1
14.2 1
29384 1
6) 5
7) 3
<assert.h> 4
4146 1
9. 9
<fcntl.h> 2
ALWAYS 1
Alto 2
Atomic 2
AIN 1
AM 2
AUER 1
32KB, 1
45, 1
4:10, 1
7); 2
Compared 2
Concept” 1
Concurrency 1
-t 20
./p4 1
0.03 2
0.5. 1
0001 1
0010 1
01 2
0100 1
0xFFFFFFFF) 1
Certainly, 2
Base-and-bounds 2
143,012. 1
15.1 2
16.6: 1
17.5: 1
AIX 1
4a: 1
5.1; 1
<string.h> 2
Along 2
Answer 1
Award. 1
ATC 2
AMPSON 1
Above 3
3906, 1
3:50,3:50. 1
3K 3
4(%esp), 2
4.3) 1
40 28
Controlling 2
22.3). 1
Bart 2
1983. 4
1992. 4
6000, 1
4.4 2
44 6
4400 1
10 165
10.2 1
Before 21
2This 1
6.2) 1
@ 8
18.4: 1
ARC, 1
Anyhow, 1
5.2: 1
<unistd.h> 6
Alternately, 2
B. 18
B; 1
ATTACK 1
AUSE 1
Abstractions 1
4a 4
CPUs? 3
7.6 1
7620, 1
5) 3
4000 3
Couleur, 2
24114 1
Butenhof. 2
8.3 2
20.3 2
7.3: 1
4b 4
Applications” 1
4K) 2
Comes 1
1000 10
100000 2
11–19 1
120. 1
15.3: 1
15:5, 2
16.2: 1
17.1: 1
5: 2
<value>\n"); 1
Always 4
BUILD 1
Babaoglu 1
AW 5
Ability 2
Al 8
Calling 8
5 169
7094 1
8.5 2
7.9 1
50? 1
Critical 2
Crockford’s 2
Currency 1
8049a1c,%eax 4
21 45
7.6). 1
5.3 1
Approaches 1
62 2
Consider 2
Berkeley 7
3). 5
30.9 1
A1’s 1
18–21); 1
19.3: 1
1949. 1
1980s 1
1985. 2
1994. 1
Anomaly 2
Bigger 1
Bairavasundaram, 1
Amazingly, 4
Achieving 2
Anita 1
Clayton 1
5.2 2
7355 1
87, 1
9.7 1
549–557, 1
255 2
C.J. 1
DVICE 1
9 119
21.2 2
73-96, 1
56483, 1
Aside 1
80 18
Could 1
D.B.G. 4
64-bit) 1
37 8
ARM 2
C) 3
Anything 1
18.3). 1
6.1: 1
Adding 7
20.1); 1
Another 38
Brooks 1
Became 1
April 10
Aleksey 3
Approach” 3
Coffman 1
Completion 4
Conditions 1
Cups” 1
99, 1
6. 20
28.13 2
28.6. 2
3) 2
9.2 2
ALICIOUS 1
APIs, 4
Acta 1
Assumptions 3
;store 1
CHEDULING 50
Davis 8
8:10, 1
4-GB 1
ASIDE: 4
ASIDs, 1
Appavoo, 1
19). 2
7332 1
82% 1
20.5 3
Architecture. 1
Bryant 4
Build 4
Are 6
ArpaciDusseau. 1
Artificial 1
500 4
52. 2
6.1 2
64k 1
7.6: 1
7KB 3
8, 1
8-bit 3
30.1: 1
22.1 2
7353 1
5–7), 1
Algorithms” 1
A’s). 1
ANDOMNESS 1
CONDITION, 1
December 8
Deciding 1
4.1). 1
CHEDULER 1
AccessMemory(PTEAddr) 4
Architecture” 3
1945. 1
1954. 1
9.1). 1
2016.. 1
Avoiding 1
Belady, 1
Buy 1
Antoine 1
Approach 1
Baby: 2
8.4: 1
9.4 2
DATA 16
99.9% 1
7.9). 1
CCESSES 1
Disk 5
;add 1
7.7 1
76–86, 1
8.2: 1
All 21
6 116
BETTER 1
ANY 1
Cache” 1
Chile. 1
Different 5
5), 5
55 1
Again 2
Afraid 2
B 157
1963. 2
1965, 1
21.4 1
22.3 1
22.9: 1
B’s 8
Bonwick 3
Assume 33
Because 50
Borg. 1
; 25
Dahm 4
> 5
70–76, 1
71755, 1
Does 29
ANDLE 1
22.7: 1
8.6 2
9.1: 1
Assignment 1
6+5 1
Barton 3
API. 5
Accurate 1
Comment 2
Dijkstra; 1
EALLY 1
64 17
9.5. 1
A) 2
BSD) 1
96 2
1972. 5
BUCKETS 2
Black 1
23 37
CA, 7
Both 7
B, 22
BEST 1
Buddy 1
;load 1
Darago, 1
ABCABCABCABCABC 1
ACKGROUND 1
7356 1
ERFORM 1
AddressOfPTE 1
250, 1
9.5 1
99 7
Attempt: 4
6.2 1
64, 1
9.8 1
Amazing! 1
Conference; 1
CLOCK 2
ERMS 4
Allocation: 2
Algorithm 5
ACHING 1
Basic 10
A. 29
1981. 7
Belady 3
C: 2
23.2 2
CISC. 1
Burroughs, 1
CPU-bound 2
Balakrishnan 1
C), 5
>= 5
Data 13
Descheduled 1
ASPLOS, 1
8.5: 1
ESS 1
Analysis 5
26.3: 2
< 24
<stdlib.h> 9
August 5
Base[Segment] 1
64-bit 10
? 9
A2, 1
Counters 8
CPU(s) 1
Edward 2
Allocator” 2
Applications 4
Accesses 2
Batch 1
ADDRSORT, 1
1990. 2
20.1 1
2008). 1
26.5: 2
CPUs), 1
9.3: 1
Caching 1
Baumann, 1
Chapman 2
A: 13
COW 3
Design 3
Account.html. 2
9.4: 1
ETTING 1
EVELOP 1
27.2: 2
28.1: 2
A1 3
Automatically 1
Better 4
7.1 1
Anderson. 1
ACM. 2
Culler, 2
CVs 2
Emacs. 1
Apparently 1
Art 3
Approximate 10
CISC 7
AMAT, 1
Bits” 1
CPU), 6
22.5: 1
27.4: 2
Come, 1
AS 10
Center, 1
Best 2
Clearly, 9
ABOUT 1
CPUs. 7
EAKED 1
Allocating 1
Analysis: 1
April, 3
Engineering 1
>> 11
28KB, 1
AMD 1
B). 2
California. 3
7.7: 1
Any 3
APPING 1
DO 1
Caching” 1
Gandhi, 1
Apple’s 1
Atlas”, 1
Behind 4
CPU: 1
AN 18
Bruce 1
CPUintensive 1
26.1: 2
28.2; 2
28.3: 2
AZY 1
Chang, 1
Bhandarkar 1
Coalescing 2
Cobham. 1
Cobham’s 1
EC2 1
AT 1
Andreas 2
Arrivals 1
Envision 1
A; 2
29.10) 2
ASLR 1
B86], 1
Callers 2
8.6: 1
Approach: 5
ARGE 1
Daily 1
Chunks 2
HAPTERS 1
Assuming 10
Austin, 1
Between 2
Carl 5
ANGRY. 1
C. 24
Compute 4
26KB, 1
29146; 1
29.2: 2
Abstraction: 3
Compaction 2
Blocked: 1
APIs. 1
Casting 1
Complex 1
ECIDE 1
Ah, 2
Apple, 2
Bradford 2
Evans. 1
ANAGE 3
29.3). 2
Access 9
BSD 3
Canada. 2
9.5: 1
B+96, 2
Actually 4
Delete 1
Detail 1
Deterministic? 1
Deuterium” 1
Authors: 1
Bus 1
Charles 1
Also 10
Cocke, 1
Copy-on-write 1
Compacted 3
3. 32
30.4 1
Addison-Wesley, 11
Control, 1
Building 5
Butler 3
CISC, 1
Calculate 1
EMBRYO, 1
EXCLUSION 1
Ask” 2
BufferOverflow.pdf. 1
Every 1
Alan 3
2Q 3
After 21
BSTRACTION 20
Certain 1
A), 2
BAD! 2
Address-space 1
And, 2
Annual 1
Anomaly. 1
Do 18
Basically, 5
Buttlar, 2
Classic 1
An 65
Computing; 1
Covering 2
Corporation 1
30.6: 1
32 33
Allocators 1
Corbet. 2
About 5
Chevalley, 1
Conference 1
Compilers 1
Aren’t 1
Edsger 8
B-tree” 2
Burnett 1
Flexible 3
Although 16
30 31
Allows 1
Below 2
Change 4
ARC 1
BF 2
Clock 2
HREADS 1
B5000 4
BE 1
E. 20
Bertinoro, 1
Beyond” 1
Compiling 2
Atlas: 3
Convention. 1
C’s, 2
Correcting 1
300. 3
41 10
Amazon’s 1
Couleur. 1
As 158
Atlas” 1
Austin 3
Computers, 3
At 31
EnvyFS” 1
B97, 2
Baby 2
Frame 1
Generate 2
30.2 1
Alpha, 2
Buffer” 1
Concept: 1
ATA 21
Benchmarking” 1
Coherence 1
Hash_Insert(hash_t 2
Array 4
BFS, 2
EnableInterrupts(); 2
CPU-intensive 4
Bovet 2
Computers 2
Atlas”; 1
C’s 1
Daley. 1
Craft 1
3:0,5:100,5:100,5:100 1
423, 1
Creating 2
AccessMemory(PhysAddr) 6
Allocator: 1
Corbato. 1
Base[SN] 1
Computer” 5
Atlas 10
Exactly 1
COND 2
Baron, 1
And...? 1
Hansen. 5
30.8: 1
Alternatives 1
C++ 2
DOS 1
Abdel-Wahab. 1
Blasgen, 1
Costs 1
Hill. 1
Attempt 3
BIQUITY 1
Execute 7
Cambridge, 2
Burchfiel, 2
Computing, 3
Award 2
DID 1
Discovering 1
D, 2
4KB 16
50 46
D) 3
Daniel 3
Definitely 1
Corbato’s 1
Blocked 4
Contents 1
B.W. 1
Exclusion 4
CPUs) 1
Bone: 2
Brooks. 2
Hansen’s 2
3000 4
Amazon, 1
CCS 3
Death 1
Advanced 1
CFS, 3
DEC 3
Hong-Tai 1
B-tree 2
CPU 255
CPU-bound; 1
CR3 1
Bye 1
Custer, 1
A’s 7
Days 1
Dominion 1
DRAM, 1
4m 1
512KB 2
Common 3
Also, 1
Dennis, 2
Cox. 1
Boot 1
Contrast 2
Base/Bounds 1
Failing 3
California, 6
B: 12
B’s. 1
Implement 4
400MB 1
Animal 1
CV 2
Design, 1
Android), 1
Daggett, 1
Hydra” 1
BSD. 1
BASED 17
Fagin. 1
Gaming 2
Candea, 1
Canyon 1
Case, 1
Björn 1
Boyd-Wickizer, 3
EFERENCE 1
Don’t 17
5, 6
512m 7
6.3. 1
Atomically, 2
ENERALITY 1
Cybertron 1
C-language 1
Correspondingly, 1
Base/bounds 2
Fast, 2
Canada, 4
Bach. 1
C; 2
It’s 4
49).” 1
Apple 3
Caching, 1
Details 1
Architectures 4
Debugging 2
I. 1
Bad 3
Before, 2
Concurrency? 1
Gets 2
C-callable 2
DOO 1
CompareAndSwap(int 2
Denning. 2
C, 12
Early 3
EALING 1
50,000 2
50th 1
7. 16
801, 1
Efficient 2
Dilemma” 1
CACM 1
Create: 1
Boston 1
Flag 2
Flash-based 1
Battle 1
Check 8
Jacob, 1
4MB 2
Aq 1
Chunk 1
Done 1
Druschel, 1
Dirty 2
IBM” 1
Be 5
Belady. 1
Corbato 4
Goodman. 1
C.A.R. 1
Decepticons1 1
Contents: 1
Denning’s 1
COMPCON 1
Eligible 2
ECHNOLOGIES 1
Communications 20
64). 1
Available: 29
8KB 6
Everyone 1
DiskRead(PTE.DiskAddr, 1
CPU, 33
Decision 1
Bottom 1
Bouron 1
Frans 4
C9 1
Child: 2
Jeffrey 1
5. 27
Better, 1
Cohen, 1
Complete 1
EARN 1
Distribution, 1
EG 1
Boost 2
B’s). 1
C.H. 1
Goodman’s 1
CACM, 5
Dekker, 2
Cup 1
Doing 23
Calls 4
Elliott 1
Compile 1
8) 3
Average 1
ERSION 166
9, 6
FFICIENTLY 2
Doctoral 1
Donkey. 1
Depending 2
Despite 1
Brother” 1
FreeBSD” 1
C95]. 1
Christenson. 1
Johnson, 1
6KB 1
Big 2
B-trees); 2
Concurrency. 1
EDUCE 1
IRECT 15
EMORY 36
Belady’s 2
Dennis) 1
CONDITION 19
Gray 6
CPUbound 1
ECTION 1
DD 1
In 387
Candy 1
Errors 3
Evans 1
<string>\n"); 1
A’s, 1
BFS 1
Base 3
Guide” 1
CREATE 1
Cache 18
Coding 1
Conditions: 1
CPUs: 1
G62]. 1
CFS 40
Circuitry 1
K 6
7, 2
Bits 1
Blumofe, 1
Conditions? 2
EMORY-M 1
END), 1
Bell 2
Dialogue 3
CPU? 11
Great 5
Clustering 1
EPARATE 1
Each 19
David 19
Includes 2
Com-puting, 1
Copper 1
Examination 1
ESX 2
9-bit 2
Bonwick. 1
HE 83
Chemistry, 1
E) 1
Create 3
A 728
Download 4
Class? 2
Germond. 3
CRUX: 6
Completely 5
Large 2
7.2, 1
Buddy-managed 1
Brinch 7
Cool, 1
EMORY: 26
EVEL 11
Berkeley, 2
Dijkstra. 9
CPUs, 14
HARES 1
Comparing 2
Emery 1
Ed2.pdf. 2
Dead: 1
Indeed. 1
Compare-And-Swap 2
Core 3
FILENO 1
Electroanalytical 1
Adaptation 1
Bosch, 1
HYSICAL 27
Child 1
Elias 1
Data: 2
A2’s 1
D′ 2
Code: 2
Hoc 2
Call 8
Convoy 1
Lauder. 1
8k 1
CPUs). 4
Butter 2
Design” 4
EPRESENT 1
Example 18
Bit 3
Dijkstra’s 5
Caches 3
Humorously, 2
Compatible 1
Fair 6
Facebook). 1
Decay-Usage 1
Interposition 1
Compare-and-swap 2
DMA). 1
Follow-on 1
Europe(!). 1
Ajay 2
Broken: 1
Hall, 5
Coarse-grained 1
Even 20
David, 2
ASID 9
E.W. 2
Commodity 1
How, 1
Case 4
Corporation. 1
Levels 1
991 1
Can 40
CPU-optimized, 1
Detect 1
ERSISTENTLY 1
Examples”. 1
Bounds[Segment]) 1
EAD 1
Cesati. 3
I/O, 3
Concurrency), 1
Fekete. 2
Formalizations” 2
Dijkstra, 4
Doesn’t 1
Computer 20
Declaring 1
Figure 335
Evaluating 4
Allocate 3
Allocation” 3
Hastings, 1
Come 3
Experimental 2
Dealing 1
Allocator 1
Equipment 2
Considering 1
I/Os 3
Cassandra, 1
Corwin, 1
Linus 1
<virtual 2
Consistency 1
CPU. 31
Dissertation 1
Enough 1
F.J. 1
CHEDULERS 1
CPU). 1
Chapter 1
Idea 2
Considered 2
History” 1
Introduction), 1
ECHANISM 30
Corporation” 1
Fortunately 2
Definition 1
First: 1
FIFO, 7
By 58
Arpaci-Dusseau. 3
He 3
Conference, 7
FAST 7
Developer’s 4
Andrew 4
Era 2
Creation 6
Imagine 39
Characteristics 1
Digital 2
Manual”. 1
AMAT 4
Correct 4
CPUs; 2
CS 1
Came 2
February, 1
EE 1
Colorado, 1
Clear 1
Instrumentation” 1
Counter 6
IRTUAL 19
Javascript 2
Electronic 2
Creation: 1
Google 2
ESOURCES 1
Free 8
FIRST)? 1
CFS” 1
Assign 1
Hennessy 3
Countermeasures” 2
Fast 4
Diego, 4
Available 8
Evaluation 2
Culler. 1
January 14
Cores 1
ELOCATION 2
March 14
Approximating 1
Counters” 2
EASUREMENT 1
Example: 6
Close 2
Further, 8
Effectiveness 1
Concepts 2
Clements, 3
Intelligence 1
D.H.J. 1
In-ternational, 1
Job:B 1
Exactly. 2
Daley 1
Growing 1
Emacs 1
Freedom 1
FetchAndAdd(&lock->ticket); 2
CODE 2
August, 1
Hint: 2
FindFreePhysicalPage() 1
D 109
ECESSARILY 1
B1’s 1
FLOW 1
Culler’s 1
L. 10
Corporation, 1
EPLACEMENT 2
Mark 14
Architecture 9
D. 33
EBOOT 1
F 36
Commu-nications 1
Computing 4
Embedded 1
Conceptually, 2
Condition 6
Jonathan 3
Dave 3
Introduced 3
Isolation” 1
FFICIENT 1
Dennis. 1
Having 4
EvictPage() 1
Hank 2
G) 1
CPUs 37
Begin 1
HotOS 2
Framework 1
DEKKER’S 1
ECURE 2
B5000: 2
Flow 6
DVANCED 13
Lampson 6
Critically, 1
EY 4
Martin 1
Argument 2
D.R. 1
ERFECT 1
Facebook, 1
Futex 2
Conversely, 3
English 1
Conway. 1
Counting 2
Kaashoek, 4
Department, 1
KB64 1
Italy. 1
FIRST 1
Development, 1
Hoare. 1
Fine-grained 1
Harper 1
Golding, 1
Cache-Affinity 1
Being 3
How? 1
From: 1
DRAM 1
Earth 2
B? 1
GE, 1
Database 1
MA, 2
Detailed 1
Easy, 2
Measuring 2
Arpaci-Dusseau, 10
Donald 1
Earliest 1
Farm 1
Geometry 2
Corbato, 5
F.H. 4
Couleur 1
Dickey. 2
LRU 33
DisableInterrupts(); 2
LATER? 1
I’m 5
Facebook. 1
Douglas 1
INVERSION 1
Fortunately, 9
Hybrid 2
Here, 13
Chou, 1
Bershad, 1
ID 7
Fujiki, 1
Dekker’s 6
Edition)” 2
Bayer. 1
Heap: 1
Devang 2
Mac) 1
Dijkstra 12
FIFO: 1
Melvin 1
Atlas. 2
EAL 1
Far 1
First-in→ 11
Glaser. 1
Cox, 1
Fetch 5
DeWitt. 1
ESTRICTED 1
Least-Frequently-Used 1
Distribution 1
EECS 1
KB); 1
Failure 4
EC-11:2, 1
IT 3
Fun 3
I/O; 3
Hits+M 1
Clark. 1
Binary 1
IMER 1
Gibson, 1
Destroy: 1
Environment” 4
Berkeley. 1
Heinrich. 3
Directory 5
Manager” 1
Errors” 1
FAULT 1
Minneapolis, 1
Berger, 2
EASY 38
FetchAndAdd(int 2
Function 2
Handle 4
Custer 1
Deadline 2
Determining 1
Dharmendra 1
LESS 1
Let’s 90
ETERSON 1
LWN 2
First 23
ELADY 1
ITHOUT 2
GB 7
INTRODUCTION 15
House, 1
Code 24
Boilen, 2
Ingo 1
Goodness, 1
Dr. 1
Execution 8
Beyond 14
Hershey 1
Efficiency 2
McCall. 2
Graham. 2
Fault 4
Multiprocessor 4
Beth 1
EKKER 1
Forgetting 3
GAINST 1
Hardware?” 1
Final 4
Detection 1
Electronics, 1
Discusses 2
Languages 2
Lindberg, 1
Eindhoven 2
Like, 1
Fleischmann 1
Exception 1
Influenced 1
GHz 2
IP) 1
I/O) 2
Code00 2
CFS) 1
Investigator. 1
Guide 3
EGAIN 2
F. 8
Boston, 3
Hits 2
Figures 2
Mellor-Crummey 4
H&P 2
GBs 1
Next, 9
No-Locality 2
Entry 3
George 2
Handbook 2
Helen 1
Forin, 1
EEDBACK 11
Examine 9
EASON 1
Lepers, 1
Lottery 6
Emacs7 1
Logistics 1
Frankenstein 1
FAULTS 2
H 42
GUIDELINES 1
Instruction 4
INITIALIZER, 2
Computer, 6
CMU 1
Jones. 2
HOW 6
ETTER 1
FILENO). 1
Bouron, 1
Hopefully 2
G. 9
Microprocessor 3
Heap 16
Gecsei, 1
Bill 1
No. 6
Ever 2
Given 15
Harry 2
History: 1
GNU 3
EYOND 27
Embedding 1
END? 1
Libraries: 1
Louisiana. 1
Engineers 1
Lord 1
Interestingly, 3
Finnish 1
HFE-1:1, 1
Good 8
Introduction 8
KB), 1
Control: 1
Cores” 2
KB 18
Hardware 18
Earl 3
FOOLISH 1
Broken 3
Hydra 1
Good, 1
NPUTS 1
I/O). 3
Ginting, 1
Boles. 2
OMPLEXITY 1
FIFO. 4
Group, 1
Henry 1
Hive/HDFS, 1
Generalized 1
FOR 2
Examples 3
ESIGN 1
Linked 8
M.J. 6
February 16
MAC 2
Fredkin, 2
It 92
Hall/CRC 2
Google, 2
IST 2
Labs 2
CONCURRENCY: 15
Cutler, 1
Kenneth 2
Harmful” 2
Earlier 2
False) 10
Burroughs 5
IBM 9
Gouicem, 1
OK 4
IT! 1
Gollum, 1
Buffer) 1
ONTENTS 1
FIFO’s 1
HARING 2
Hershey. 1
Hmm... 2
Goh, 1
Fill 1
FIFO; 2
Easton, 1
LoadLinked 2
MBALANCE 1
Fetch-And-Add 2
Mac 12
G.L. 2
Jose, 7
Hardware/Software 1
Header 2
ITS 1
Length 1
Capel 2
DBMS), 1
Kleiman, 2
Evolution” 2
How 141
Farrell, 2
CONTROL 2
IEEE 7
Hill, 3
ONSTANTS 1
Innocent 2
Guide. 1
OS) 2
Factors 1
HINGS 1
C 212
Hierarchies” 1
Homework 28
HINK 1
Factor 2
Edwards, 4
For 194
Low-level 1
MORE 2
File 3
Mail. 1
Generally, 1
Kaufmann, 5
I/Os. 1
Hill 1
Ideally, 2
Loads/Stores 2
Cilk-5 1
Dick 2
LAW) 2
Excellent 1
Incorrectly 1
Fellner, 1
Cheap 1
IF) 1
I, 1
OS-ignorant) 1
Interactive 1
HICH 1
PFN=55 1
File-System 1
Handled) 1
CONCURRENT 15
Hydra. 1
I! 1
However, 120
Fall 5
Epema. 1
Forget 1
Making 3
MS-DOS 1
Freeing 2
Manuals 1
Grove, 3
Knowing 3
Included 1
Home 1
Its 4
Lots 2
Cocke 1
Direct 8
LRU→ 11
Extra 1
Innovator’s 1
First, 58
Computers” 1
IO 7
I/O. 10
OSes 2
Joe 3
Has 1
PID. 1
Flesh 2
Hazelwood, 1
CPU; 11
I/O? 1
ISTORY 1
Hugh 4
Finding 2
Epema’s 1
FreeBSD, 1
March, 1
MUTEX 2
GB). 1
Mars?” 2
Gupta. 2
L1 4
Inserts 2
Huge 2
Jain. 1
Lucco, 1
Computations” 3
ECHANISMS 11
Lamport’s 1
FIFO 37
Israel. 1
Fleischmann, 1
Control 11
Index 11
INDETERMINATE, 1
Joy, 1
Hash_Lookup(hash_t 2
PERATING 184
Paranoia 1
Frequency 1
Human 1
Cilk 1
IALOGUE 4
Increase 1
IGHT 1
Finite 1
French 2
Future, 1
Metrics 1
Mars 5
Get 5
Murphy, 2
Hit/Miss? 4
LL/SC 2
Instead 20
Jain’s 1
MPLEMENT 1
I 171
Concurrency: 2
EGMENTATION 12
Leave 1
Fourth, 1
Italian, 1
Form 1
Cooperative 1
Instinct, 1
Indeed, 20
Jozef 2
I/O), 3
Park, 2
Pass(C) 1
Friedman, 1
IKE 1
Claypool 1
INTERLUDE: 11
Initial 3
ISBEHAVIOR 1
Firefox, 1
Go 4
G 12
Mixed 1
May, 1
Gruss, 1
NBA 1
Hoare 4
Least-RecentlyUsed 1
Intel, 2
James 1
Managing 1
I/O-intensive 2
Context 3
Evict 4
Loops 1
Francisco, 1
Jackson-Edwards. 1
From 23
D.A. 1
International 3
Instructions 1
June, 1
IA-32 4
Pesterev, 3
Pn−1 1
Full? 1
IP 41
Concurrent 25
Ideas 2
Intel. 1
Interesting 1
Gain 2
Goals 2
HOLD 1
Modha. 1
Memory: 3
HARE 14
NOT 1
IGHER 1
Libraries 1
Interscience, 1
Java. 1
Microsoft, 1
DDRESS 25
IECES 154
Extract 1
Lu, 4
G.A. 1
Jiaqi 2
Fusion 1
Dennis 6
J. 33
Kanev 1
Ken 2
IMITED 15
Prentice 4
Precise 2
GB) 2
IRTUALIZE 5
Current 3
Imagine, 4
Internals: 3
L 59
Garner 1
H. 20
Moir 6
I/O 86
Merritt, 2
HTTP 1
Not 23
IMMEDIATE 2
MAC, 1
I’d 1
K+96]. 2
Minimize 2
Default 1
Implementing 2
Fairness 2
HERE 1
Jobs 2
Finally, 70
M 139
Directory, 1
Job:C 1
Keith 1
L2 1
IRIX 1
R+89, 1
Privileged 3
Getting 1
ISN’T 1
Denning 1
Implementation 6
J 1
LDE). 1
Gray, 1
Hash_Init(hash_t 2
Mountain, 1
ISSES 1
Michael 10
Hear 1
Novark 1
IO). 1
MALLER 15
I” 1
Kleinrock. 2
Modadugu, 1
Dissertation, 1
Indeed 1
HP, 1
Gates 1
Juan 1
Fox. 1
Marvin 1
ETH 1
Joe’s, 1
KPTI 1
L60, 1
IS 1
Induced 1
Problem: 6
Gorman. 1
Informatica, 1
Development 2
Information 6
Knowlton. 1
Leffler, 1
Guerraoui, 2
Inc.. 1
Nothing 4
Incrementalism, 1
Miller. 2
High 2
O(1) 4
IRTUALIZATION 5
MMU. 2
Jing 1
LWAYS 1
Motivating 1
Dynamic 7
Internet 1
HREAD 12
Glenn 4
Julin, 1
Free-Space 1
Microprocessors 1
Either 4
Krieger, 1
Keeps 2
Linux. 8
README, 1
Intel 10
Programs 4
Grows 2
Isn’t 2
Distributed 5
Interlude: 4
Knuth 6
Levy, 5
HW 1
Interrupt) 1
OMEWORKS 2
Invalid 2
Milton 1
IDs 2
ODING 1
Mac, 1
Joyce. 1
If 167
Law, 2
NECESSARILY 1
Issue 4
Going 1
Karels, 1
HREE 154
FreeBSD 3
E 195
Mr. 1
Experiment 1
LDE 1
Knuth. 1
Linux’s 2
ROTECTED 1
Is 14
Pthread_mutex_lock(&c->lock); 6
Here’s 4
J.S. 1
EC-11, 1
Ion 2
LaTeX, 1
List_Lookup(list_t 4
Handles 1
Job:A 1
OS), 2
Jaswinder 1
Mitoma, 1
IRE 5
OINTER 1
Management 11
KB; 2
John 14
Kawamoto, 1
Letters, 2
Joseph 1
KASLR, 1
KEY 1
Hash 8
HEN 4
ERMINOLOGY 1
Much 9
Find 4
LOCK-BASED 15
LATER 1
Long-Running 1
Reliability 1
Issues 6
Putting 1
Hey, 1
Jack 5
END, 1
January, 2
Larry 1
Levin, 1
Hard 1
Jr., 1
Oh 5
Journal, 2
More 24
ISCA 4
OSSIBLE 2
Manual” 3
Lampson. 2
Leaks 1
NT 4
Linux” 1
Harcourt, 2
L4. 1
Key 1
Here 30
IFIPS 1
Evolution 1
Multics, 6
Fred 1
Laszlo 1
LISP 1
Long-running 1
Robin 3
It” 1
Questions 26
Historical 4
K. 1
Ed2.pdf 1
Just 15
MASK 3
LoadLinked(int 2
Heap01 2
KB) 3
Overview 3
Lauer. 2
NE 1
Interaction 1
Object-Caching 1
Memory-mapped 1
Lampson’s 1
Learning 2
Note, 2
Lipman. 4
Heart 2
Lanyue 4
L->head 8
His 3
II) 1
FASTER 17
NULL2 1
Gray. 2
Led 1
Later 2
MLFQ. 2
SIGMETRICS 2
I’ll 3
RY 1
History 4
KB, 1
FIFO? 1
L1) 1
Mayer. 2
Lynch, 2
Hussein 1
Lighting 1
PCD 1
Lauer’s 2
NY, 1
Interrupts 2
Operation 1
Muller, 1
Limited 6
ONCURRENCY: 15
Linux 107
Lists 5
Instead, 7
Levy. 2
L4) 1
Hopefully, 4
IME 2
Failed 2
Nice. 1
Gray’s 2
Lock-based 2
Loading: 2
MQMS 2
SIZESORT+, 1
KASLR” 1
Rachid 2
INITIALIZER. 2
LEXIBLY 1
Facebook) 1
L78]. 1
Media, 3
MANUAL, 1
Incorporating 1
List: 2
PPN) 1
Lectures 1
Newell, 1
Jim 8
PAT, 1
Multi-Queue 1
Line 3
ONTEXT 2
Live 1
Lu. 2
Last 1
Little 2
LOCK 2
Hovav 1
IZES 1
Farm” 1
Nucleus. 1
HY 5
Hawkins, 1
Looping 1
Make 5
Spend 3
Knowlton 1
Rafael 1
Initialize 3
LGORITHMS 1
Fit 4
LLUSION 1
Multiple 1
MIT 5
Intel’s), 1
Liu, 1
PROT_READ|PROT_WRITE, 1
Linux). 5
Now? 2
Joy. 1
PDP-10” 2
Multiprocessors” 5
Locks, 1
Long 1
MAX) 1
Library” 2
Man-Month” 1
Lawall, 1
IBM, 1
If, 9
OS 504
Faster 2
Or, 7
Look 1
I/O: 4
MAX_HEAP_SIZE; 1
Metric: 1
Spin 7
LOCKS 23
Relational 1
Intuitively, 1
Lacking 1
Frigo, 1
Lampson, 2
Multiprocessors. 2
MLFQ: 3
Interludes 1
Locks: 2
PTE. 3
List_Insert(list_t 4
OPT 4
Kernel” 1
PD_SHIFT 1
NIX. 2
Mangard. 1
MLFQ 32
MB 1
Linux); 1
Maybe 1
Laziness 2
INUX 1
Jason 1
Feedback 5
P1, 2
One 135
MQMS). 1
Inverted 1
MB) 1
Microsystems, 1
Spin-waiting 2
Linux, 15
Resort, 2
Isolation 1
Lauer 2
Generally 1
Lanigan, 4
Multithreaded 3
MMU; 1
KB-32 2
MIT, 1
PageDirBase 1
Locking 2
PC 16
Kuehner. 1
Performance” 1
Nethercote, 1
Maxwell’s 2
Manuals” 3
MMU 3
M.K. 1
McVoy 1
Lisa 1
Idea1 1
Jeff 3
Festschrift 1
PFN) 2
Only 10
Malloc(), 2
Jacqueline 2
Many 21
Nichols. 2
Success! 1
Linux-based 3
Rules 5
Joy 2
Linux) 2
Greenfield. 1
Late 1
NetBSD, 1
MQMS, 1
KNOW 1
Massachusetts. 2
Part 6
Longer 1
PINNING 2
L4 3
Pioneers, 1
No 10
McKinley, 1
Mogul, 1
McGee. 1
MRU 2
Modeling” 1
List_Lookup(&H->lists[key 2
International, 2
Job 11
Golub, 1
Parallel 3
Oops! 2
MIT. 1
Josep 1
Mechanism 1
Nope, 1
Sullivan, 1
List 7
S.Sahni). 2
June 13
MEMORY 1
Hence 2
List_Init(list_t 4
ORK 1
Manchester 3
Know 2
Meltdown, 1
Processes 8
May 11
POSIX 20
Las 1
Prediction 1
Novark, 1
Mechanisms 3
MostFrequently-Used 1
Mechanism: 2
Machine” 1
Montreal, 1
Lock 12
Johnstone, 2
Journal 7
KB. 4
Peanut 2
Orran 1
MIT’s 1
KPTI) 1
NABLES 1
November 10
TORE 1
Locks 29
SJF/STCF) 1
LOW 1
MIPS 14
Herlihy. 2
MALICIOUS 1
OSTEP! 2
Matteo 1
L3 1
Microsoft 4
Processing: 2
McCarthy, 2
PPLICATION 1
Lavington. 3
Problem 3
O. 1
Morris, 4
Moving 1
Metha 2
Markowitz, 1
Morgan-Kaufmann, 2
Locks.” 2
Joint 5
HPUX 1
Limits) 1
Power 1
Other 15
MUTUAL 1
Kanev, 1
NOWLEDGE 1
ONTROL 8
Tf 1
Ma. 2
Saying 1
Sharing” 1
Mach 1
Hochshule 2
Macintosh 2
Obviously 1
Meltdown 2
LRU, 11
Multiprocessing. 2
Producers 1
Membrane 1
PTE.ProtectBits) 3
Leiserson, 1
Processes: 1
OCK 16
Neat 1
Multi-Level 4
Multics. 1
Massachusetts, 1
Methods 1
Lower 1
July 4
Handbook” 1
Linear 2
Pthread_join(p2, 5
Ousterhout 3
Manual: 3
Kathryn 1
Ngram 1
OO 1
They 5
Transforming 1
LRU? 2
Software 7
Megiddo 1
ICKETS 1
Maurice 2
PACES 8
Moseley, 1
MIT), 1
NCE 1
Project 3
NULL, 20
PTEs). 1
Levy 1
Q 12
OLUTIONS 1
Non-compacted 1
Multi-level 7
Multiprogramming 4
NIX 55
Miscellaneous 1
MAP_ANON|MAP_PRIVATE, 1
KB). 1
Happened 2
List_Pop() 1
Publishers, 1
P2 3
Memory” 1
Kernel 14
OCALITY 1
OESN 1
Man 3
Tucker, 1
Law. 2
Sorry, 1
In, 2
Memory 58
McDougall. 3
PDIndex 1
Network 1
Mac. 1
NTERLUDES 1
Pthread_create(&p2, 5
Nobel-prize 1
Pathfinder. 2
Life 1
Quicksort, 1
OMPARING 1
OK. 2
NIX! 1
Neither 1
N 41
Morse. 1
MPORTANCE 1
KB-64 1
Heavyweight 1
RDLK 2
M. 35
PRIORITY 1
Minimally, 3
LRU. 3
P. 12
OF 9
Management” 2
Two 11
Learn 1
Stalin 2
Inputs 1
Multi-Threaded 2
McKusick, 1
Palo 1
New 9
Michael, 2
NULL; 22
Pthread_mutex_lock(pthread_mutex_t 2
Numbering 1
Perhaps 15
Load 4
RANSFER 1
ON 12
OLICIES 16
NOMALY 1
Nelson 1
NT, 1
Most-Recently-Used 1
Malloc(sizeof(myret_t)); 2
KPTI, 1
RR) 1
Hit 29
MB, 1
Padegs. 1
Mozilla 1
LRU’s 3
PEED 1
OK; 1
Markstein. 1
Warburg 1
Miss 29
Stride 4
Issue: 3
Keeping 2
Kernighan, 1
Patent 1
Nickolai 4
Microsoft) 1
National 1
RE 1
OES 1
Phoebe 1
Looping-Sequential 1
REATE 2
OOLS 1
ONCURRENCY 3
OCKS 23
NTERPOSITION 1
NOW 1
Management, 2
L->head; 8
RUNNING, 1
O 247
Holding 1
MIN). 1
Paging, 1
Mutual 4
Labs” 1
Licklider. 3
Of 70
Win, 2
Low 2
N. 7
TECHNICAL 1
Multi-threaded 1
Measurement 2
Kilburn, 4
Patterson, 1
Nuclear 1
NULL); 35
Nemacolin 2
Rago. 4
OFFSET 1
Pointed 2
M.I.T., 1
REEMPTIVE 1
OS; 8
OS. 26
NUMPAGES. 1
NVERSION 1
Mao, 3
LATER, 1
Random, 5
ORG 166
ORRECT 2
Holt. 1
MMU, 1
Priority 4
Netzer 2
PETERSON’S 1
Lipman 1
Organization 1
X/macOS 1
Mac! 1
Need 2
TERMS 1
Multiprogrammed 5
Mesa 4
NTRODUCTION 59
PowerPC, 3
OMPILED 1
NUTH 1
Note 34
Regions 1
OPTIMIZATION 1
Positive 1
MORTIZATION 1
RISC 14
On 21
OS’s 4
O(n) 1
Node_t; 1
McCarthy. 2
LLOCATE 1
Readings 1
OSes. 1
OSDI 10
Horn. 3
McCarthy 2
Professor? 1
ODE 2
PT: 2
Lipp, 1
P0), 1
X11 1
Marco 2
OS: 1
THREADS 1
TLB) 3
Mike 2
Nancy 2
Provides 1
P1) 1
Nethercote. 1
OMPLETE 19
Revolution 1
Offset 15
Proceedings 2
Microsystems. 1
ROP 3
P=0 1
Ousterhout. 3
OFFS 1
McCarthy’s 2
Now 79
OAD 1
Reprinted 1
Research 3
One”. 1
OpenSolaris 1
P1’s 1
Pacific 3
OFTWARE 1
Oregon. 1
M62, 1
MAX; 2
MS-DOS. 1
Mattson, 1
Occur 1
Oddly 1
TLB-miss 1
NUMCPUS; 4
NX 1
Pthread_join(p1, 5
RAM, 1
Next 2
OUR 2
Scalable 10
Overflows 1
Recall 9
Mitchell. 1
RaiseException(TLB_MISS) 1
PAGE 6
Ousterhout’s 2
OS, 31
Menace 1
Later, 2
OK: 1
PDBR 2
Running, 1
ITH 4
Miss? 1
Q1 15
Pfaff, 1
Peterson. 2
Out 2
PERATIONS 2
Yuanyuan 2
MULATING 1
Maurice, 1
LW 1
Often 1
Technical 4
Narrow 1
OK, 11
PFN_SHIFT) 1
REAT 3
Nucleus 2
Optimal 3
Shared 2
O’Reilly, 2
Relocated 2
Mudge. 1
Ratios” 1
PID 5
October 17
Molnar 1
Lee. 1
ONSIDER 1
P 280
PD_MASK) 1
Russ 1
Implementation” 1
Monitors 1
Randell 1
Preemption-safe 2
Peterson’s 6
PAGESIZE 1
PHit 1
[AC97]. 1
Meehean. 1
Measure 5
Language” 2
Organick. 1
Than 1
Node_t 1
ORE 2
PTEs. 1
RaiseException(PAGE_FAULT) 1
Old 2
Oracle 3
Sleeping 3
PDE. 1
Multics” 1
Reducing 1
PM 4
Ousterhout, 2
Page 39
List_Init(&H->lists[i]); 2
O_CREAT|O_WRONLY|O_TRUNC, 1
S 379
P4, 1
PTHREAD 4
Say 2
Iyer, 1
Mythical 1
Reese’s 1
Prefetching 1
Placing 1
PTBR 5
PREMATURE 1
[B+18], 1
Meehean’s 1
Measurement, 1
Letters 3
Over 6
Threads 5
UTUAL 1
VMS), 1
Va4 2
Was 1
Windows 10
Woodlands 1
Write 11
Yale 1
[3] 1
[B89] 2
OSes, 1
Parent 6
Randall. 1
Orr, 1
Our 25
Software-based 1
PTE.PFN, 3
NDETERMINATE 1
Relationships, 1
Must 2
Overhead 3
Pal 1
List_Insert(&H->lists[key 2
O_WRONLY|O_CREAT|O_TRUNC, 1
SEG_MASK) 2
PAGES 2
Paperbacks, 1
Schroeder. 1
Kay 1
NGINEERS 1
References 28
Primer 1
Problems: 1
PTE.present 1
PTE, 6
[B89, 2
Mistakes 1
Mesa, 1
M83]. 1
PROGRAMMER 1
Non-Cooperative 1
[D+13] 2
OUBT, 1
Pass(B) 1
Rate 4
PC, 7
PAGING 22
Solution: 1
PTIMAL 1
NUMPAGES 2
Review” 2
Now, 26
PageTable[1] 1
Pathfinder/Authoritative 2
Load-Linked 2
Organization” 1
Saavedra-Barrera 1
PDPTA’97, 1
Pilot 5
Scott 10
Keep 4
NIX, 2
SJF/STCF 1
Process0 12
Pthread_cond_signal(&cond); 6
PTHREAD_MUTEX_INITIALIZER; 7
Passing 2
[CP78] 1
Multics 14
Microsystems 1
MLFQs 1
PTEs 3
O(log 1
[E95] 1
OW 34
Point 1
Rudolf 1
POSIX, 2
PF 3
Sorin, 1
Per 5
NIX: 1
Ritchie) 1
OLICY 4
Patterson. 2
Physical 13
Load-linked 2
Overflow 1
Segment 10
PFN, 1
Prentice-Hall 1
Segmentation” 1
LRU-like 1
NIX-based 6
San 12
Professor, 1
Pthread_mutex_init(&c->lock, 2
PTIMIZATION 1
Quarterly, 1
[D97]. 1
NIX/C 1
MongoDB, 1
Maintenance 1
PTIndex 1
OK? 2
[H74] 1
Otherwise, 1
Policy: 2
SET 2
Perl, 2
Paging 6
Spin(), 1
Pick 3
Neely, 2
SGI. 1
ONCURRENT 16
Pons. 1
Processing 5
Locks”) 2
Professor: 37
Share 4
Pages 5
Pretty 8
Specification, 1
Leonard 2
NULL 20
Let 18
Programmers 4
R.P. 1
PT_MASK) 1
RUN 5
[Free] 1
NSA? 1
NCREMENTALISM 1
McGraw-Hill, 2
Page” 2
OS). 2
[HP06]), 1
P6 1
Presented 1
Schedulers: 1
PhysAddr 8
Patel 1
Spin(1); 2
Pren-tice 1
Nimrod 1
SJF. 2
OOPERATION 1
Previously, 1
PD 2
MIN 1
Programming: 3
South 1
Paging: 4
Pthread 11
Stanford, 1
Santiago, 1
NeXTStep 1
Like 6
ROCESS 30
R10k 1
Ph.D. 3
[J91]. 1
[LL82] 4
NT” 2
RPACI 154
Models” 1
Particularly 1
[J09] 1
PID) 1
Programmer’s 2
Protected 1
Plot 1
OSTEP. 166
Phenomenon” 1
Stephen 4
Protection 7
Nir 2
Sanzi, 1
OR’d 1
Priority, 1
PDEAddr 2
Mauro 2
Pthread_cond_signal(&c); 4
Spectrum 1
Peterson 2
Pthread_cond_wait(&empty, 2
Store-Conditional” 2
Similarly, 6
Negative-Growth 1
MIPS, 2
ROPORTIONALLY 1
Physics), 1
Ready 58
[M07]. 1
ND 10
OPT. 1
Ranganathan, 1
Most 9
Plenty 1
[M06] 1
PPROPRIATE 1
Set 6
Pthread_mutex_unlock(&mutex); 8
Priority] 2
Overlap 2
Play 1
Support: 1
Pthread_mutex_lock(&mutex); 8
No, 2
Scalability 3
Orleans, 1
Pthread_mutex_unlock(&c->lock); 6
PID). 1
Microsoft’s 1
Pthread_cond_wait(&cond, 6
Student, 1
Policy 6
Q7 1
Sun). 1
Single 7
Nelson, 1
Nevada, 1
Randomization” 1
Reboots 1
Review, 3
[R97] 2
Namely, 1
OS? 4
Ready: 1
NDERSTAND 1
Pthread_cond_wait(&c, 3
[M15] 4
Page-Fault 2
Sharing 12
Quanta 1
Process 35
P.M. 1
Processes” 2
Switzerland 1
Q6 1
Notes 4
Scheduled 1
P0 4
Python, 2
Phipps 1
Morgan 6
Pthread_mutex_lock(&lock); 6
Such 16
Portland, 1
REASON 1
Surveys, 1
Slab 1
MM00]. 2
Non-Coalesced 1
Policies 3
Recheck 1
S+03] 1
[S+04] 1
Naval 1
OS” 1
Relocation” 1
NTERLUDE 35
Queue_Enqueue(queue_t 2
[W95]. 1
Physical) 1
Signals; 1
Random) 1
Processor” 1
PACE 21
Pthread_create(&p1, 5
Systems” 7
ROCESSES 1
Number 8
Science). 1
Parts”.) 2
Quarterman. 1
Prentice-Hall, 7
Mysterious 1
RISC, 2
T3, 4
Problem” 3
RITICAL 1
Swift 2
So 30
Main 1
OK! 2
Principles” 2
Riak. 1
SHIFT 8
[SHW11]. 1
Neumann 2
Or 9
Remember 5
Oh, 1
RADE 1
a[2] 2
Processor-Memory 1
Smotherman. 1
Recognized 1
Producer/Consumer 5
PDE 8
R.H. 1
TLBWR, 1
Rashid, 1
OOK 1
Setup 1
Patterson 2
Quote 1
Priority(A) 4
NTERRUPT 1
RaiseException(SEGMENTATION_FAULT) 5
THER 1
Process1 9
Rajimwale, 1
System/370” 1
Sometimes, 9
Malcolm 1
Obtaining 1
Program 20
SN_SHIFT 1
Run 68
[Y+18]), 1
No-eXecute), 1
Overall, 3
Repeatedly 1
Orwell. 2
REE 19
accounting 4
Protection” 1
Smotherman’s 1
Relocation: 2
Purify 1
R4000 5
PIECES 38
Thanks. 1
Refers 1
Silicon 1
OPERATING 42
Perry. 1
RAM. 1
Proc 14
NULL) 6
Reclaim 1
Texas. 2
Protection) 1
Report, 2
TestAndSet(flag, 4
Sun, 2
Manchester; 1
O’Hallaron 2
Pthread_create(&c, 2
STCF. 1
S_IRWXU); 2
__lock_t 8
OFFSET_MASK 7
P1 6
Replacement” 1
Response 3
Rings, 1
Round-Robin 1
Q5 1
Space 20
S). 2
Quantitative 2
RINCIPLE 2
Page-Reference 1
There? 1
Remzi 6
Similar 3
OSTS 1
Peter 5
RANSLATIONS 15
Pthread_cond_wait(&c); 1
OBS 1
Restoring 1
Time-Shared 1
Python. 1
Resource 4
ULL 1
T. 14
Manifesto” 1
O’Reilly 3
Queue_Init(queue_t 2
Saint-Exupery 1
Section 1
abstraction 15
OOT 1
PT_SHIFT 1
Orwell’s 1
Read 38
accuracy 1
Run: 2
Rather 1
Thomas 3
SDS 2
RAIDs, 1
Raiders, 2
Patt 1
Tickets 1
River” 1
Simulation, 1
Pons 1
Operating 38
README 20
Read-Write 2
ONDITION 1
Resulting 4
Tracking 1
Q1. 1
Responsibilities 1
URL: 1
Memory, 1
PTE.PFN 1
Queues 4
Scheduler” 2
TLB 173
Shedler. 1
accessed? 1
OPT? 1
Paged 2
P3 1
Read-Execute 1
SJCC, 1
across 30
Redell. 1
Turner, 1
SER 1
ROP. 1
RaiseException(PROTECTION_FAULT) 9
Pieces 2
Trap 2
Runs? 1
Sitaram 1
Poor 1
O’Hallaron. 2
ROM 2
Reese 1
ONG 1
Richard 9
USTERHOUT 1
RR, 1
Round 3
USE 3
MenuMeters 1
Use 35
R/W 1
Simply 3
TORAGE 1
Solomon. 2
accessible, 1
Open 2
Preemptive 1
PCD, 1
Reduced 2
SJF, 4
adjust 1
Redell’s 1
UK, 2
SHIFT, 1
Recollections 1
RUX 33
Pillay. 1
U/S 1
S09]. 2
Standard 2
PowerPC 1
O’Reilly. 2
Recovery” 1
Ritchie, 1
OPERATIONS 1
SUPPORT 1
V.A. 1
Randell. 1
Saving 1
PWT 1
Mesa” 1
User’s 4
Raging 1
Smotherman 1
Tb, 1
Stack? 1
acquire/release 2
PCs, 2
Present 1
PTE: 1
Report 2
SEG_SHIFT 1
advantage 14
SPINNING 1
Unfortunately, 37
Shan 2
Ritchie. 1
Recall, 1
Portable 1
USA. 1
SHIFT) 8
Steinberg. 1
Prints 1
PLDI 3
Remove 2
River, 1
OU 1
Secker 2
Von 2
Relocation 1
Perfection, 1
Second, 31
Modern 3
VirtualAddress 7
Redell 2
Splitting 1
Times 1
Statement 1
acquired, 2
Paul 3
Price. 1
Problems” 1
Save 2
SIGNALING 1
alloc 1
SSDs) 1
Unknown.. 1
Simple 29
SSD, 1
Record 1
Press, 7
VA 1
Secure 1
Strachey. 1
Probability” 1
PTE 17
Return-into-libc 2
Seward. 1
OWERFUL 1
WAITING 1
See 43
Replacement 6
Pioneered 1
Segmentation: 1
Navarro, 1
WRONG 1
Redirection 1
Staelin. 1
To? 1
Steven 1
actual 15
Performance 11
Priority(B), 4
Processes, 1
Scan-resistant 1
STCF, 1
alright 1
Same 2
Unlock 2
Smaalders. 2
Schedulability 1
Responsibility” 1
Process: 2
VAX-11/750. 1
Semantics 3
Strachey’s 1
Pthread_cond_wait(&fill, 2
PTHREAD_COND_INITIALIZER; 3
Robert 9
Single-Queue 1
Operations 3
Seems 1
STACK: 2
Probably 11
Space-time 1
Needed 1
WWW. 166
Waiting: 2
Reduce 1
Status: 1
Together 1
Storage 10
advocates 1
Pollack, 1
Pthread_cond_signal(&fill); 2
Professor 5
Should 4
Short, 2
amortize 2
Sanjay 1
Until 3
Spider-Man: 2
Search 2
Right! 1
Producer/Consumer: 3
Valgrind 2
September 13
Structure 3
Synchronization” 2
Page, 1
SIGINT 2
Some 25
P4 1
Shared-Memory 4
STCF 8
Pthread_join(p, 4
Stevens 6
OSSpinLock 2
Wahbe, 1
Wakeup 2
Reeves. 2
Stick 1
Translations 2
Swapping, 1
affinity 8
Positive? 2
Pthread_mutex_lock(&m); 6
Programming 15
Stoica, 1
Shortest 6
amt) 2
Scheduling 12
VAX-11/780 1
Spurious 1
Server” 1
S, 6
Put 4
W 17
Shedler 1
Pthread_mutex_unlock(&lock); 6
System, 2
PageTable[39] 1
SIGTSTP 1
Sopena. 1
PDP 1
Shared-memory 1
Shah, 2
RACE 1
Still 5
Waiting 8
Once 41
YBRIDS 1
Registers 1
Structures: 1
Trevor 1
TLBs 10
again: 2
Protocol 3
Q0 13
Q2 9
Subsequent 1
Signaling 2
analogy 1
Science, 1
Va5 3
Stallman. 2
Simple, 1
SCHEDULER 1
ROCEDURE 1
WITCHES 1
Star.” 1
Published 1
T1, 12
Pass(A) 1
SOMETHING 1
States 1
Shavit. 2
PFN 43
Sharedmemory 1
RANSLATION 15
Summary: 2
Were 2
Ott. 1
[BJ81] 1
Represent 1
Superpages” 1
UIDELINES 1
Ta 3
algorithms 26
Queue_Dequeue(queue_t 2
ROBLEM 4
RISC-like 3
RR? 1
Silas 3
answer; 3
Segments 2
Virtually 5
Structuring 1
Sometimes 9
SEFUL 2
ROPORTIONAL 13
Watch 4
Steve 4
R. 33
TOOLS 1
Perspective” 5
Schwarz, 1
Stevens, 2
Shavit’s 4
PT 2
Solaris 18
ROGRAMS 1
Sumner. 4
Which 12
PAT 1
PDE, 1
Rule 14
THINK 1
University 6
Tuning 1
annotate 2
Queues: 2
Random 21
Then 17
RUNNABLE, 1
Simpler 2
approximate! 2
Shasha. 1
Wulf. 1
Susan 1
Spectre 3
SEG 2
RTFM 2
Whether 4
Surprisingly, 1
RAID 1
TRUCTURES 17
Processing, 1
Segmentation 3
Storage” 1
Short 1
PTEAddr 6
Solution 5
Race 2
TABLE 2
Within 4
Table 18
PageTableBaseRegister 1
SE 11
TLBP, 1
Upon 3
Types 1
anymore? 1
R 21
Recent 1
Though 5
Recommended 1
Solaris” 1
approximation 1
Specific 1
[4] 1
Switches 1
Stack 14
SPARCv9). 1
Relocation) 2
Why? 5
Swap-Based 1
RAM 5
TeX 1
Proportional 2
Separating 1
StoreConditional(int 2
Single-Threaded 2
Patel. 1
Soyeon 2
Resources 2
[FLR98] 1
Yupu 2
Tc1 9
Patt, 1
SS+10]) 1
TLB_Insert(VPN, 3
VAX/VMS. 1
RIORITY 1
approach, 25
U 89
Required 1
Time 29
Repair 1
Sounds 6
architectural 2
Spin-based 1
[AC97] 1
Synthesis 1
Stan 1
Scheduler 5
Research, 2
Wikipedia 3
T3 8
Reese, 1
Tell 1
Proportional-Share 3
She’s 1
Smaller 1
Pennsylvania, 2
Stretch 1
Running: 1
[FP89]. 1
[C69]) 1
Thrashing 1
Persistence 1
SSD. 1
TLBs) 1
T 378
VAXen 1
RR. 2
arose 5
VMM-level 1
Running 24
Today’s 1
Replacements 1
Staelin, 1
array, 7
Spinning 4
[B,C 2
TV 1
Sun 5
Seg 1
Restartable 1
Workstations” 1
TCB. 2
Ronald 1
Texas, 1
Proportional-share 1
Sizes 1
Stored? 1
Personal 2
Subramanian, 3
Scott. 4
[HP06]). 1
[CSG99], 1
Time-Sharing 8
Prof. 1
SYSTEMS 42
TR-95-22, 1
T2. 4
VMS, 1
Randal 1
array; 1
WAIT 1
S. 22
Torvalds 1
SJF 21
Stallman 1
array-based 2
Support) 1
[BH73] 2
Thread2 6
Tb 2
Showing 1
Restricted 1
Yield 2
TILIZATION 1
SPINNING: 1
That 14
Pthread_cond_signal(&empty); 2
Slutz, 1
Structure” 1
Plus 1
Suli 1
Segregated 1
[K64] 1
[D72]. 1
Tracing 8
Pthread_create(&p, 5
Security 2
TRUCTURE 3
Tc1, 2
VPN. 1
Rather, 4
asleep 3
Wait 1
SECTION, 1
Trace 9
SLEEPING, 1
Support” 1
ask, 1
Systems. 1
[C03]. 1
T2 38
Threading 2
Soon 2
Roscoe. 1
Zorn. 1
TIP: 9
Scheduling: 6
Tomlinson. 2
Q8 1
So, 1
Switching 4
Presumably 1
Support 9
Sequential 2
[KL88]. 1
[L+13] 2
Unlike 5
Q4 1
Self-Tuning, 1
Technische 2
Tel-Aviv, 1
VPNs; 1
Results 1
assume, 2
XCLUSION 1
SN 3
Translation 5
STDOUT 1
T1). 4
assert(tmp 2
[CD85] 1
Threads? 2
TR 1
Tickets? 1
Spaces 3
Routines 3
[B+13]. 1
TS 1
Sleeping) 1
Tools 1
ROVIDE 1
Sriram 2
TLB. 13
Problems 1
TLB; 1
Size 10
[L09] 4
[L78] 3
VLDB 2
Queue 8
Spending 1
Think 12
Tix:50 1
Vegas, 1
SWITCH 6
batches 1
Zel-dovich 1
Saavedra-Barrera. 1
Trials 1
Sequin. 1
TLB: 2
atomic. 2
[D97] 1
Threads” 6
Technique 1
Trans. 2
Streams 1
S.J. 1
[C95]. 1
Table? 1
Sorry! 1
Uman 3
Rago 1
Start 5
TLBs; 1
Pthread_mutex_unlock(&m); 6
TeX, 2
State: 2
[L81] 4
[M11], 1
VPN_MASK) 7
RAND 5
Stack11 2
Traffic” 1
U.C. 2
What’s 4
SYNCHRONIZATION 1
Zonkey), 1
Said 1
been 100
Undoubtedly 1
Shacham. 2
Thesis, 1
attacks 5
[G85] 1
Tim 2
Thompson. 1
Tricky 2
System: 1
SIZESORT-) 1
[E95], 1
Third, 5
Spinning: 2
VM. 1
Raiders” 2
Store-Conditional 2
TLB’s 1
Q3 1
Theodorus 2
Strategies 2
[LM+89] 1
[N+02] 1
Va1 2
REMATURE 1
Stodolsky, 1
Transitions 1
UEUE 11
[A90] 1
Schedulers 1
[B+79] 1
Scaling 6
bit; 1
VAX 5
Steinberg 1
Traiger. 1
attempt, 2
[H93] 4
Tony 1
Time-to-Completion 2
Typical 1
TOPLAS, 2
SPARC 9
[H74], 1
Turning 2
Stanley 1
VPN_SHIFT 1
Really 3
Store-conditional 2
TestAndSet() 6
Queues, 2
TlbEntry) 4
Supporting 1
[Low 1
[N+07]; 1
Virtualizing 2
Red-Black 2
SunOS 1
ULTI 11
US, 1
[B94]; 1
Seward, 1
[B94]. 1
Scientific 1
break), 1
VM, 3
buffer 43
Turns 2
backward, 1
[J91] 1
[M07] 1
[SHW11] 1
UCB/CSD-92-684, 1
Tc1). 1
STCF) 2
[J09], 1
Typically, 2
Stockholm, 2
Wei, 1
RetryInstruction() 4
Summary 30
RR 14
Tolerance 1
Swaminathan 2
[M62] 1
Thus, 206
[WW94] 1
Waiting-Line 1
Register 8
Systems 18
ULTIPROCESSOR 12
Unused 2
[BC05] 3
Sorry3 1
[C93]. 1
Shacham, 1
Stoica 1
VPN; 2
bugs) 1
USENIX 8
basic) 1
UPPORT 2
become 32
[SN05]. 1
That’s 6
Sleep 40
[M+70] 1
USSEAU 154
UNSW-CSE-TR-0321, 1
Sure! 1
Xiong, 2
SOLATION 1
Survey 3
RSS, 2
Uh 2
Swap 4
[P10]); 1
Tom 2
a2 1
Warehouse-scale 1
Reuter. 2
TD 2
Unfairness 1
Useful 1
[BC91]; 1
Speaking 1
[HJ92] 2
Shortly, 1
Structures” 2
Vasileios 2
building, 1
UST 1
Tix:250 1
VERLAP 1
beginning: 1
a[3] 1
Try 11
Small 2
[M06], 1
Understanding 2
VPNs 5
TEST 2
Yes 1
Sadly, 2
TLB, 21
Real 3
VAX’s 1
Swift. 2
[RL81]. 2
Tp, 1
affords. 1
Wilson, 2
SIDE 40
THREAD 12
VAX-11 4
VLSI 1
[BH00] 1
Sploitfun. 1
[J16], 1
Sood, 2
TO 26
Wait: 1
bx 2
We’ll 38
Transformers 1
Va3 2
behave 12
above? 3
ULTIPLE 2
Study 8
[MS98]. 2
V 31
Va0 3
TLBR, 1
York, 6
Scientists 1
TLBWI, 1
Referring 1
VPN=39 1
T2), 2
__list_t 2
a[4] 1
ahead 8
Wouldn’t 1
SOSP 9
VAX/VMS 11
THREE 37
Waldspurger. 2
VPN 69
Sun.. 2
[K+61] 2
Special 1
Tamil, 1
WITH 1
c->global; 2
Whereas 3
Tturnaround 3
Wanjohi: 1
benchmark 3
access: 1
URSE 1
Summer 1
[SS74]. 1
VICT 1
Virtual 12
TLB_Lookup(VPN) 4
[A91]. 1
Served 1
Tcompletion 2
Region 1
Value 1
TABLES 15
Tree 1
algorithm, 8
above 50
XITS 1
SPARC, 3
Takes 2
[CK68]. 1
Waldspurger’s 1
WWW.OSTEP.ORG 42
Sweden, 2
[LL82]; 1
Stanford 1
Tc, 1
Wales 1
c->local[i] 2
William 3
ULE 2
Weaver 1
benefit. 1
accomplished 9
User 14
Swift, 1
[W17] 2
VMS 16
WORST)? 1
Tc2). 1
[B72]. 1
Servers” 1
Time” 1
Requirements 3
Vyssotsky. 2
TPDS 1
Tricks 1
algorithmic 1
abstractions 7
XXX 2
Saltzer 1
Techni-cal 1
[JS94] 1
Wanjohi. 1
Well 1
Switch 3
[MM03] 1
Starts 1
Those 2
XECUTION 15
calling 55
Using 19
Weiwei 2
We 166
bit, 10
accuracy/performance 2
Vol. 5
Techniques 2
[W95]: 1
W.C. 1
Waciuma 1
Technique: 1
[BC05, 2
Solaris, 7
Timothy 1
Rewritten 2
Wilkes. 1
Tables 9
UNIX-based 1
allocate(100), 1
access; 1
Zeldovich 1
Scheduling” 1
Techniques” 2
[M11]; 1
When, 1
Werthman. 1
Synchronization 8
[MS96]. 1
State 12
YOUR 1
capacity, 1
VERY 1
To 152
Wilson. 1
Whew! 1
block 22
accurate); 2
WITCH 1
Terminology 1
__Node_t 2
WAPPING 1
Weihl. 1
Times?” 2
[D70]. 1
Sound 2
Tudor 2
Runtime 1
Wisconsin 1
Then, 19
VALID 3
allocate. 1
accidentally 12
[B86] 1
Server. 1
There 42
[MS91] 2
Wow! 1
Systems: 6
[O11], 1
Student: 36
Your 1
card 1
What 214
Variable 2
Trees 1
Wilson’s 1
Wilson 2
action. 1
book 47
WORST 1
Test-And-Set 2
__node_t 10
Weaver, 2
Wood. 1
Tix:100 1
[G04]. 1
Sundararaman, 4
UILD 3
SQMS 7
Workshop 2
Therein, 1
Values 2
alternates 1
account 6
[CM00] 1
Singh, 1
[O49]. 1
[C03] 1
T2, 4
[TTG95] 1
This 201
Supervisor” 1
You’re 2
chan 1
Without 15
Version 4
Tresponse 1
Wisconsin—Madison, 1
addition 13
With 82
born: 1
Worst 2
Test-and-set 4
accounting, 1
Wikipedia? 2
Y. 1
True 1
[K68] 1
Swapping 1
University, 2
STRUCTURES 16
YOU 2
Things. 1
Waldspurger 6
alternatives! 1
activity 3
[CV65], 1
Slow 1
[SR05] 6
[CS97] 2
Tc2) 2
[W06] 1
Thompson 1
Symbiosis” 1
[B+19] 1
chapters 14
XIST, 1
Very 2
Tron 1
Worse: 2
addresses. 4
Word 1
bottleneck 1
YNCHRONIZATION 1
These 24
accrued 1
Wiley, 1
[AC97]; 1
UNUSED, 1
[MB91] 1
Tc2 7
VPN: 1
Scotland, 2
Yes, 9
Third 1
X-windows 1
amazing, 2
alas, 3
[K+61,L78], 1
System 37
[WG00], 1
[DV66] 3
TestAndSet(int 2
[W15] 1
Systems.’ 1
[C06]. 2
Thread 95
choosing 2
Zebra 1
Virtual” 1
VM 18
[2] 2
advice 4
Worried 1
Yes. 1
bounds 48
Transactions 3
accumulates 1
Woke 1
[B94] 1
Unfortunately 1
[P81] 2
Thanks 5
We’re 1
Specifically, 52
TimeSharing 1
Yandong 3
You 89
allocator, 5
[LL82]. 3
T1 30
[virtual 5
[E06]; 1
Too 3
__hash_t 2
THE 9
[D70], 1
Three 4
chunks. 3
Zuckerberg 1
Warburg, 1
VMMs 1
[B97] 2
again, 31
Worse, 3
Zero” 1
brk, 1
Turing 5
acquisition. 4
Xerox 2
[BC05,G04]. 1
VAX/VMS, 2
[P90] 1
Trace: 4
Who 4
Spectre. 1
Tp). 1
Yes? 1
[AD00] 1
anyhow). 1
[LM+89]; 1
TAKE 1
a[i] 1
[LR80] 1
Transparent 2
a4 1
TLBs, 6
[H87] 1
Time) 2
clean). 1
[B+96] 2
Weighting 1
WARY 4
[BNS69] 1
amazingly 3
XD 1
[CG68, 1
UNESCO, 1
active; 2
Zeldovich. 2
[BC91] 1
VMWare’s 1
VPN, 2
Trigonakis. 2
True) 9
[AD03]. 1
[B+18] 1
Traditional 2
UMMARY 3
[B+19]. 1
applicable 2
[MS04], 2
TOCS, 3
abbreviated) 1
[M65]. 2
U.S.S.R; 1
about: 1
and 2770
TM 2
[L83] 2
Transactions” 2
clears 5
[B75]. 1
Wiggins. 1
Wanted 2
[C+04] 1
another; 1
ZFS) 1
[FP89] 1
Uncontrolled 2
addr:20 2
VARIABLES 18
[C93] 1
[RK68]. 1
Well, 27
but 288
Turn 1
Springer-Verlag, 1
[B+72] 2
You’ll 3
UPERUSER 1
[D01] 1
approach? 3
[S59, 1
Take 2
abilities, 1
[NM92] 2
Undefined 1
achieve 12
ap-proaches 1
[M28] 1
Two-Phase 2
code? 9
[CK68] 1
Wiggins’s 1
Work 1
[C69] 1
anti-gaming 1
[B+18]. 1
[K68]. 1
[C69], 1
advisors, 1
Variables 3
[CK+08]. 1
[S15] 1
[AD03] 1
byte). 1
The 821
USA 1
Stan. 1
[C+62] 2
Zeedonk 1
Usually, 3
[H87]. 1
args 8
[W+95] 4
Tarrival 3
above), 3
[O90]. 1
Users 2
acquisition, 2
applications, 6
[M82] 2
Two-phase 2
codes, 2
[D82]. 1
Windows; 1
Workload 11
[D68] 7
appealing; 1
[BB+72], 1
[KL88] 1
[CM00]. 1
ago 1
WHILE 2
[CSG99] 1
[G+17]. 1
c->value 4
Through 1
UT 1
Structures 6
[V 166
[DD68] 1
[BB+72] 1
Valley. 1
[K+96] 2
array. 4
[X+10], 2
Test-and-set, 2
abused. 2
[S07], 1
VMware 1
activities 3
arise? 3
[S+04]), 1
Volume 35
commonplace, 3
compares 1
X. 1
Yield, 4
[DV66], 1
appears 1
[CV65] 2
[MB91]. 1
[H61, 1
agreed-upon 1
Weihl 1
[CV65,DD68]) 1
[JM98] 1
cache). 1
Timer 1
VAX/VMS), 1
Sun. 2
[W02] 2
[JM98]. 1
[BH00]. 2
Vyssotsky, 1
[S15], 1
array’s 1
above; 7
Up 2
address-translation 4
[SN05] 1
Visualization 1
add, 3
arises, 4
[S+11]). 2
Voorhis. 1
[D91]. 2
Why 28
ZOMBIE 1
[B72] 1
[G83] 1
approaching 1
[GR92] 2
[N+02], 1
[HP06] 2
allocated. 5
[D65] 2
While 31
[NS07] 1
candidates; 1
Underlying 3
VS 1
Sun’s 1
[stack 1
[JS94], 1
[BS+09, 1
We’d 1
[W95] 1
arrived 6
abstraction. 1
VPN=42. 1
advanced, 2
a:0,b:1,c:1 1
Warm-start 1
addl 2
arranges 1
[S04] 1
completes. 4
[K+15] 1
Will 6
Zwaenepoel, 1
[CP78]) 1
[GR92]. 2
appropriately 3
[K65]. 1
[P81]. 2
[W+95]. 2
anytime 1
[G62] 1
Winter 1
[S07]. 1
cast 4
Unsafe” 2
Va2 2
Systems, 3
__counter_t 6
[K65] 1
[CG68] 1
Where 7
] 2
assertion), 1
accessibility 1
Van 4
advantageous 1
access, 9
We’ve 2
action 15
array[1000]; 1
[V+65,BH70]. 1
completion 4
[L11]. 1
Wood-lands 1
[B+10] 3
[D70] 1
[H91] 2
assembly, 3
[L09, 2
[RL81] 1
[WG00] 3
appearing 1
[H61] 1
Y 3
[W03]. 1
VPN=0 1
certainly 32
Virtual-Storage 1
System” 22
a+b,b+c,c+d,c+e,c-. 1
[M28]? 1
[M65] 1
Wish 2
a[i]; 1
assumption: 1
accidental 1
Vancouver, 5
advent 1
addresses). 1
added, 1
aspects 10
[VPN 11
When 122
complexity, 1
[O49] 1
X 3
[B66] 2
[E06] 1
[I09] 4
attempts: 2
[LM+89, 1
[W02]. 1
__queue_t 2
approach) 1
[M+63]. 2
[CK+08] 1
[WL+93]. 1
Working 2
choice 8
Wow, 2
TENEX 3
a:100:100,b:100:50,c:100:50) 1
[O16] 1
[M83] 1
Yang, 1
accommodate 4
available, 11
accumulated 1
Virtualization 5
age), 2
affinity; 1
additionally 1
assumption 10
a[6] 1
YSTEM 2
conceptualized 1
[R69]; 1
Zelenka. 1
[B75] 1
[G04] 1
[K+61,L78]. 1
badly 1
[M83], 1
[WW94], 1
a[1], 1
approached 1
[M11] 2
[D+13]. 2
access. 8
Wrapper 2
class), 2
Write-back 1
This, 2
a[8] 1
[SR05], 3
[MS91]. 2
Yet) 1
accordingly. 3
away; 1
accurate 2
Visually, 1
algorithm; 2
W. 18
atomic_decrement 2
accommodated. 1
addresses 42
Yet 2
concerns? 2
[S09] 2
[AD00]; 1
[D82] 1
[I11] 2
[KE+62, 1
behaves. 5
[MS04] 2
a:100:100,b:100:50,c:100:50). 1
abilities 1
arrives; 1
[MS96] 2
[E95]. 1
address: 8
YNAMIC 1
classmates; 1
[1] 2
Thus 24
actions 18
a[5] 1
[O45] 1
Zhiqiang 2
acquires 8
beautiful, 1
accustomed 1
algorithm. 2
all) 1
Weihl, 2
atomicity 8
accordingly 1
adoption 1
Zhou, 2
condition3 1
[W+95], 1
[BH70, 1
[D91] 2
[MM03]. 1
[L60] 1
behaviors) 1
[O16]. 1
absolute 6
about; 3
articles 2
[NM92]) 2
[H74]. 2
affected. 1
YPES 2
client, 2
again 58
Ticket 3
activate 1
ability 11
[O72] 1
[BJ81]. 1
actions, 1
big; 1
achieves 7
allocated, 2
allocators. 3
Whichever 1
author 2
address) 2
advantages 5
[A79]) 1
conditions 9
a3 1
[BH73], 2
[G+95]. 1
[RK68] 1
[LR80], 1
bits: 1
[O45], 1
accesses), 1
above) 6
asking: 3
[anon 1
[LR80]; 1
[B+10]; 2
[A79] 1
clustered 1
alternate 5
Tiny 1
ago: 1
accessible 3
[O90] 1
[CS94] 1
address(es). 1
bit. 5
active, 2
anon) 1
While, 1
already 28
amazingly!), 1
algorithm). 1
avoid 50
[BOH10] 3
constructed, 1
[BNS69]. 1
[L11] 1
able 59
[TTG95]. 1
[MS04]. 8
blocks. 2
[O72], 1
actions. 1
accesses, 4
assembly). 1
about, 2
[M+63] 2
[B+79], 1
[B+13] 1
command, 4
alternatives. 2
Torrellas, 1
albeit 2
achieving 7
[S05] 2
[EF78]) 1
address). 1
activity; 1
applications. 12
both 87
Wikipedia. 1
addressed 2
amount. 2
alloc()/free() 1
base-and-bounds 4
[C63]. 1
consume 5
YSTEMS 203
[LL82], 1
address. 21
[W06]. 1
[S04]; 1
book! 1
[X+10] 2
actively-used 1
addr:10 1
assume) 1
acceptance 2
[R69] 1
[BS+09] 1
[BH70] 2
companies, 1
amazed. 1
Tp 3
algorithms). 1
acquired 15
a[7] 2
again. 24
addresses? 1
affinity. 4
aren’t 5
briefly 7
admit 1
ancient 2
allocating 19
bash), 1
[EF78] 1
[C+04]. 1
consumer. 2
[B+00] 2
[QI15]. 1
administrators 2
[W15]. 1
[SS+10] 1
books. 1
a; 4
actually 38
advanced 7
allowed. 1
accessed, 12
[S+03] 1
[C06] 2
[BOH10]). 1
compared 7
analyses 1
ULLER 1
along 10
[FLR98]. 1
about), 1
all), 1
alive, 1
age; 1
arg; 7
broadly 1
broken, 2
anticipate 1
answers; 2
be, 2
[G+17] 1
[D01]; 1
contents, 1
[D65,D68] 2
[R+89] 1
alike. 1
accomplish 9
a:30:200 1
both? 2
accessible. 2
additions 1
assured 1
altering 1
achieved. 3
[S+68]), 1
[C54,PV56] 1
adding 35
completes? 1
apparently 1
UNIX 7
alternately, 2
[High 1
abuse 1
am 16
allocation). 2
algorithms. 5
arises. 2
adversely 1
buffers 6
anyhow, 2
appreciate 1
anything 17
[D68]. 2
contrast, 10
[D68]; 1
before 130
[W09]. 2
all; 4
achieves; 1
a[1] 1
bottom). 2
active 13
address-space 5
attacks, 3
arcane, 1
[S05]) 2
[C95] 1
[CD85]), 1
address! 1
computers) 2
approaches: 1
Unix 1
[K64]. 1
accept 2
always 53
answering 1
allowed), 1
allowed 8
around, 4
agent 1
c:100:50 1
[MM00] 2
appropriately-named 1
application. 4
[D70]), 1
control-c) 1
[D72] 1
[G83]; 1
allocation. 7
acquiring 22
bowels 1
actuality, 1
accesses 47
again? 2
avoided; 2
architectures 2
[S59] 2
[CS94]. 1
[L78]. 2
admission 1
concepts, 1
arise, 4
V. 3
[KE+62] 2
accessed), 1
address 561
anything, 5
allowing 22
another 105
answer! 1
alas. 4
caching 9
[PS81]. 1
approximations 2
any 171
architectures, 1
[G+95] 1
costs. 1
before!” 1
[KR88] 2
allocators 9
ago, 5
buffers? 1
adds 24
according 3
ahead, 3
awake. 1
acquire 57
[S68] 1
[J16] 1
[P+95] 1
advertise 1
arrange 4
concurrency 36
VMS. 2
[L+75] 1
accessing 36
affinity, 1
appeared, 1
always, 5
art. 1
answers. 2
all!), 3
call1 1
[S07] 2
arg); 8
appetite, 1
arguments, 5
[G85], 1
count++; 1
begin. 3
[M+70]. 1
akin 2
business 1
amount 37
adios, 1
allegorical 1
arguments 23
best-case 1
active. 1
[SN05]; 1
[KE+62]. 1
affecting 1
[VERSION 42
arrangement, 1
condition); 1
Whenever 2
[L+93] 2
accom-plish 1
address>, 1
applies 1
amortized. 1
arbitrarily, 1
allocator. 2
camp, 1
[W03] 1
args->b); 4
applicable; 1
arise. 3
[H91]. 2
counter: 1
belt, 1
[Y+18] 1
all... 1
bye, 1
an-THREE 1
at 576
affairs 1
allow 22
astute 2
bitwise 1
actively) 1
[L+75]. 1
above, 39
against 9
array[i] 1
construction 7
Why, 1
[L83], 1
algorithms, 3
administer 1
amt; 2
architecture. 4
allocators; 1
approach 138
clean-page 2
[WL+93] 1
argument; 2
approach: 5
arriving 2
[H93], 3
course) 1
better.” 1
accesses; 1
analysis” 1
check. 4
analyze 3
attributes. 2
affects 2
application 29
attention 10
block, 2
adapt 1
[L+93]. 2
abundant, 1
ain’t 2
aside: 1
consumers, 2
aspect 15
[M82], 4
aforementioned 2
allocation 24
another, 12
architectures; 2
alone 6
archive, 1
clever, 1
a1 1
arrays, 2
arg. 2
attackers 2
[I09]. 2
credentials, 1
binary. 1
achieved, 1
answers 3
choices. 1
axis 4
always. 1
allotment, 1
approaches. 2
award-winning 1
book, 18
address); 1
[M04] 2
achieved 1
algorithm 34
X, 1
contiguous; 1
assembly 13
[PP03] 2
aggressive 3
applications? 1
apply 1
argument. 2
assigned 7
client. 1
a[9] 1
arrive), 1
array) 3
attention, 3
also 213
access 133
cycles). 2
boost, 1
ad 3
anywhere 6
chosen, 1
bad. 7
and, 5
although 15
arg: 1
argue 1
data 252
addresses, 3
[MS98] 2
additional 15
all. 9
Xerox. 1
correctness 9
[R97]! 2
associated 18
allotment 2
approximates 1
arguments; 1
approaches 31
client’s 2
ask? 2
assume 80
asked 2
authors.. 4
a 3927
[N+07] 1
am! 1
accesses)? 1
boots, 1
addr:0 4
approach), 2
chucking 2
bandwidth 3
another. 6
an- 1
beguiling 1
bounds, 5
argv[1]; 1
datacenters, 1
again!) 1
[O11] 1
addresses; 4
amazing 9
Years 4
costs? 1
[SA96] 1
awful! 1
almost 13
argc 1
arrival 1
are. 4
cocoon, 1
asks, 1
automate. 1
assume: 1
base/bound 1
about-to-be-run 4
[P+95]). 1
amount; 3
accesses?) 1
break. 1
address? 1
basic 94
chunks 13
base/bounds 5
applied 5
answer, 8
beware 1
but, 1
arise 12
daunting 1
aims 1
[P10] 1
advantage. 1
amounts 7
Zhang, 4
cover, 2
a:100:100,b:100:50, 1
background 15
alone! 1
argument: 2
avoiding 16
arg, 2
command. 2
atomics. 2
background. 2
attempted 2
accesses). 1
[Page 2
added 12
broadcast 1
approximating 1
advances 1
batch 7
cleaned 1
basics 13
appreciation 1
approach. 8
beyond), 1
c4 6
arose: 1
decision, 4
answer: 2
[PV56] 1
age-old 1
anti-hero 1
[C54] 1
a[9]) 2
base-and-bound 3
an 545
amplifying 1
asking 4
aspiring 1
critical 140
arise2 1
commands; 1
attempts, 3
bases 2
avoided, 1
all 247
allocations 8
address, 7
about 294
architecture 18
all, 17
behalf 2
clearly 17
be. 11
arguments) 1
argc/argv 1
bit). 3
call; 2
arrangement 1
defense 3
anyone 3
[RT74] 1
approximate 20
approximation? 1
big. 3
anomalous 1
awesome 2
answer 29
association 1
currency 4
arose, 1
compaction 3
baby 2
best 31
actively 4
bad! 1
[QI15] 1
alternating 2
btrees. 1
address-based 1
above. 20
argument 22
all-too-trusting 1
below) 3
clock 11
begin\n"); 5
arrives 4
array 46
bodies 2
both) 1
array), 1
describing 4
any? 1
[SA96]. 1
[C63] 1
architects 4
bit! 1
answer? 3
anything. 1
back 65
days: 2
atomic 25
arrive] 2
compete 1
baby!” 2
body 2
adapted. 1
before), 2
[S+11] 2
amt>0) 2
buffer[MAX]; 1
advance 1
affected 1
accessed 42
beneficial 1
allocate 31
close(fd); 1
cloud), 1
assigned. 1
ask 12
careful), 1
brutal, 1
design 22
anymore, 1
[SS74] 1
applications 29
arithmetic 2
bits. 2
answers, 2
appropriate) 1
beginning 15
define 9
atomically. 2
aside 4
compiled 6
backwards, 1
bounds”); 1
address; 3
biased 2
[SB92] 1
answer) 1
bytes, 10
arrive: 1
accident 1
blocked. 2
after 54
allocate(10). 1
books). 1
clustering, 1
assistance. 1
assembly? 2
case; 3
bus, 1
desktop 4
[DV66,V+65]. 1
a1). 1
appropriate 3
arrives. 2
blocked, 3
application; 1
arbitrary 13
behaviors. 2
deliver 8
attacks2 1
asleep, 1
con- 1
base/bounds) 2
branch 3
becomes 18
bit) 1
[W09] 2
answered 1
cache? 2
assert(count 2
accomplishes 1
book). 5
alike, 1
alternately 1
boost. 1
cmpl 1
available; 1
attaining 1
certainly, 1
bus-based 1
as 1029
detector 1
[HP06]. 3
a:100:100,b:100:100,c:100:100) 1
area. 1
assert(p 1
book), 2
approximately 1
architectures: 2
big? 1
descriptor, 2
attempting 1
assumptions 14
conclude 2
consumers. 1
buffer[fill_ptr] 1
behaves 11
blank 1
a:30:200. 1
appear 4
caches, 5
assigning 1
account. 1
both), 1
allocation, 2
animals 1
bottom 10
co-exist 1
avoided 2
attempt 14
chips 3
butter 1
asked, 1
devices). 1
[PS81] 1
a[0] 2
arena 1
assists 1
boolean 2
architecture, 4
arguments: 3
big” 1
device; 1
awesome, 3
difference 18
addresses): 1
consumes 2
behavior. 4
building 41
bounded-buffer 1
a[1]. 1
are! 3
call). 5
avalanche 1
activity. 2
bounds). 1
answered, 1
allows 37
bouncing 1
co-workers 1
battle 1
away.” 1
choice, 2
c3 10
assumptions. 2
differentiate 2
[SB92], 1
about. 6
atomically; 2
arises 21
art 1
argument, 11
argv 3
binary, 1
b; 4
authors 8
administrator 2
contention, 2
disk 54
behaviors; 1
built. 1
brief 4
a[3], 1
area 5
called. 4
basics. 1
caller 14
breed 1
approach). 4
alternatives 4
box, 1
code/stack/heap? 1
behavior, 3
axes. 2
chosen). 1
call: 2
atop 1
difficult 10
[V+65] 1
abusing 1
attained 1
break; 5
assuming 25
arise; 1
array.c 2
bits? 1
back, 4
auto-matically 1
adopted 1
control, 4
disrupt 1
benefits. 1
burden. 1
broad 4
a[6]) 2
array.c) 1
addr 2
behaviors 2
carefully, 6
bytes; 2
approaches? 1
among 14
buffer; 6
coherence 3
believe 5
back-to-back 1
cloud 2
came 12
attains 1
dismantling 1
about) 1
accessed. 4
avoided. 2
built 19
attr, 4
assert(rc 5
aware 2
born 4
became 21
avoids 5
affordable; 1
convenience 2
distinguish 2
best-fit 7
buying 2
buffer. 6
accesses. 5
array: 1
address), 1
bits1 1
caution 1
cache. 9
arbitrarily 2
and? 1
bytes. 3
collection 3
bigger, 2
back. 2
cofounded 1
case: 4
attentive 1
documentation 3
above). 7
achievement 1
balanced 6
c->value--; 4
attributes 4
atomically 16
basics; 1
break, 1
began 4
balance 15
afterwards. 1
cool 17
bible 2
cache: 1
bx=1 2
accused 1
asides 1
addressed, 1
admit, 1
does 256
caches; 1
chapter, 16
args->a, 4
approaches, 1
c2 10
com- 1
billions 1
backward 1
comes 14
cen-tral 1
attribute 2
dominant 4
accumulate 1
acquisition 6
bash, 1
cache, 11
automatic 2
attacker 4
behalf. 1
bugs 6
begin\n", 2
be? 9
ahead. 1
correct; 1
big!”, 1
calculate 5
act 3
call, 19
ask: 2
breaking 1
again; 3
doing: 1
calamity. 1
clear, 5
assign 3
are: 2
caches. 1
come–great 1
bounce 1
base); 1
company 1
chains 1
authors. 1
dread: 1
address> 1
beauty 2
call); 1
bad 31
add 82
available. 14
busy. 1
behavior 35
beginning, 1
begins. 1
alas 1
creating 9
curr->stride; 1
caller; 2
addition, 4
canonical 3
attacks. 3
builds 1
al. 5
domains 1
cannot? 1
close(), 1
assignment, 3
arrays 5
c 177
commands: 1
brag 4
based 17
compare-and-exchange 2
challenges 2
balance. 1
drive 5
analysis 5
behave? 4
campaign 1
base, 1
affect 10
award 4
call), 1
below). 3
begun, 1
algorithm: 2
big, 3
better 88
decisions, 2
capacity 2
addr:21 1
carefully! 2
auto-magically 1
also, 1
easy-to-read 1
careful 16
combination 11
assumptions? 1
carved 1
aside, 2
c4, 1
commonly-used 2
build, 2
before, 7
competitive. 1
changed, 3
basically 6
ease-of-use 1
anyhow. 2
behaves, 1
can. 3
again) 3
backing 1
called, 10
benefits 5
behavioral 1
allocator 26
bits, 7
black) 1
definitely 4
careful, 3
advice, 1
automatically 6
altogether, 1
ebx, 1
carefully; 1
community. 1
automatically, 2
case, 105
caused 2
asks 4
cannot 21
completes 6
bx=1000,bx=1000 2
bidding. 1
computers), 2
class 12
be 785
basing 1
eat 6
architectures. 1
behavior: 1
case); 2
al-though 1
battles 2
catastrophic, 1
bigger 19
benefit 1
altered 1
blocks 9
book; 1
delaying 2
cares 2
alas). 1
ax 4
anticipating 1
enabled 4
challenges, 1
complain 2
auxw 1
challenging, 1
centralized 1
assert 3
caused. 1
concept 9
bytes), 3
concurrency, 10
cleans 2
bit 93
below. 13
batch-like 1
ebx; 1
are, 4
behind 31
categories: 1
al.’s 2
begin... 1
cause 24
bolts, 1
better-than-expected 1
amortization 1
books 21
bounds; 2
deploy 1
cases? 2
all? 8
ax=0,ax=1 2
arising. 2
enact 1
chance 4
complete: 1
awoken 3
chapter! 1
chances 4
assumed 12
chain 2
concurrent) 2
c->value++; 4
cond_t 5
close 11
bits”. 1
bombs, 1
born. 1
boundary; 1
break: 1
brk 1
broader 1
buggy! 2
bugs. 11
below; 1
edition. 1
argued, 1
benefits: 1
cell 1
behaved 1
allocated 46
challenge. 4
boosted 3
bind 1
anything? 3
botte 1
broadcasts 1
deployment, 1
chaos 2
allocate(int 1
ax=1,ax=0 2
associative 1
engineering 2
chapter; 1
complicated. 4
barons 1
chapters. 6
assumptions, 6
chapter. 25
challenge 5
confusing 2
configurations, 1
code; 3
call 230
bits), 2
bx=100). 2
better. 7
effective) 2
arguments. 4
centers, 1
behavior? 2
also: 1
between 79
chapters). 2
broadcast(), 1
bitmap 2
arises: 1
bucket 2
bucks. 1
designs 1
chosen. 1
allocates 11
balances 1
atomically, 2
ensuring 14
chooses. 2
component 5
begin 32
characteristics, 1
atoi(argv[1]); 1
being 54
chapters) 1
consider-ably 1
confused 1
combat 2
care! 2
boost 8
c->global 4
bit), 1
efficacy 2
arranged 1
chosen 5
better) 1
always!). 3
blocks, 1
checks 25
browser, 1
black 3
assumes 14
buffer); 1
buffer, 11
desktops 1
build 118
alter 2
bed. 2
attacker, 1
equals 3
errors. 1
computation 2
checking, 1
characterize 1
attack: 1
below, 2
cheating 1
consisted 1
combining 7
consider 26
boots 2
caller, 4
black). 1
case 62
emphasis 1
arrive; 1
circumvent 1
beyond. 1
analogous 1
book? 1
chores.” 1
born, 1
assumption. 2
bug 4
bytes? 1
citations 1
dest_buffer[100]; 1
bunch 6
amazingly, 1
begins! 2
attr 2
class, 3
especially 13
conceptually 2
closer 2
children, 3
attempts 4
better? 1
child? 2
communication 2
consumer 26
continuous 1
brand 2
calloc() 1
blocked 16
caught 8
enables 23
article 3
clustering 3
bizarre 3
anonymous 4
bounds? 1
community, 1
bugs, 2
atomic_increment 2
buggy 1
c->value; 4
classic, 1
developing 7
burst 3
analyzed 2
behave. 2
average 16
classic 26
concrete 1
code.” 2
every 52
circular 1
average). 1
biggest 4
chopped 5
compiler; 2
contain 6
core. 2
builder 1
cause. 1
boot 11
chagrin 1
enterprising 2
asleep... 1
cmp 1
brilliant. 1
anymore. 1
brutal 1
argc, 23
byte) 2
attain 3
build. 2
calls). 1
clustering. 1
differentiates 1
buy 6
apologize. 1
behind-thescenes 1
avoided? 1
clear; 1
condition, 7
communicates 1
example? 2
class? 2
away 12
billions) 1
chunks). 1
computing 16
continuing. 2
corollary 2
bytes 41
changing 9
bounds) 1
challenging 6
entirely. 4
assert(fd 1
combina-tion 1
broken. 3
complicated, 1
bug, 1
cache) 1
around 42
attainable, 1
arrive 21
cases). 1
codes 2
direction, 4
bytes) 3
append 2
below 11
background; 1
close, 1
confuse 1
completion. 2
examples, 3
clear. 2
awesome! 1
binary 14
clean 9
concurrently-running 1
correct: 1
correctly 19
caches 16
client 5
byte 15
chapter), 1
entries 22
attention. 1
comparing 5
brutally 1
concerned 5
bus 3
calls. 5
bx=2,bx=2 2
author. 1
associative. 1
cast; 1
column 5
disabling 5
caches) 1
binaries, 1
cluster 2
connected 4
base 66
computing2 1
excess 1
code: 7
backwards 1
bookshelves 2
cloud-based 1
concurrently. 1
costly. 3
correctness, 4
call-ing 1
coalesce 2
c->local[cpu]; 2
characteristics 2
avenue 1
complementary 1
buffer), 1
exactly 39
concurrently) 1
bx=3 2
candidate 3
bytes). 3
authors’ 1
atomically: 2
certain 26
commonly 13
disaster. 1
capability. 1
block. 3
cold 3
are 870
consuming 3
bet 2
concern 5
exercises 4
common, 1
before? 2
break 5
company, 2
consists 8
costs 8
costing 1
care, 2
code); 2
c1 10
checking 6
balanced: 1
components: 3
buffer[use_ptr]; 1
examines 3
configurable 1
c;, 1
carts 1
c; 3
attachment 1
available 31
chanced 1
commonplace 1
do: 2
careful. 1
comfortably 3
book. 23
assertion 2
context. 2
bits) 1
concurrently 9
existing 14
communicate 2
begins: 1
brings 1
concern; 1
controlled 8
counter, 15
colleagues’ 1
carefully 17
co-authors). 1
because, 1
concludes 1
could 137
cache; 2
cache 86
consulted 1
example. 31
call. 17
cases. 3
can, 4
average. 1
avoid. 3
communicating 3
change 55
drives 2
chance. 2
compiling 1
both, 1
attack 9
continue. 7
borrow 2
conditions. 5
exit() 6
compact. 1
better, 14
c6, 1
correctly? 3
big 44
color 1
concurrent 80
change! 2
codes. 2
becoming 2
concurrency), 1
count. 2
calculation 1
cake 4
context, 2
examples; 2
can’t) 1
challenge: 9
casts 1
awake 1
back-and-forth 1
company). 1
chapter? 9
dynamically-allocated 1
child, 8
complete) 1
bottleneck. 2
avoidance. 2
contributions 1
both. 4
consult 2
experts 1
comparison: 1
call) 1
coverage 2
corruptions. 1
command 12
bits 70
concurrently; 1
changes. 1
commercial 3
begin” 6
considered 10
counterpart 1
call3 1
centers 1
continue, 1
exclusion 21
case. 3
child/parent 1
chapter). 3
base. 1
barest 1
compilers 1
chapters, 9
earlier) 1
chip, 2
comprise 3
bounds. 5
badly, 1
correct-ness; 1
breathe 2
continuously, 1
extents 2
completion; 5
cycles) 1
curious, 1
because 93
born! 1
called 111
connections 1
complexity. 2
behaving 1
chapter 37
constituent 1
crazy. 2
cesses. 1
control-c 1
calls 88
executing. 1
causing 3
chops 1
best; 1
char 35
basi-cally 1
complexity 10
clarity. 1
easy; 1
chunk). 1
compromised 1
bug; 2
cost: 4
broaden 2
control-z 1
famous 21
complications 1
date. 1
commentary 1
currently-running 9
begins 13
bring 4
case) 1
consist 2
constructed. 1
borrowed 1
cheapskate. 1
context; 1
critical, 2
change. 6
correct? 3
cases 29
execvp(myargs[0], 2
challenging. 1
closest 1
bet. 2
be: 2
check 46
computation; 2
computers, 1
conceptual 4
coarse-grained, 1
computers 7
c->local[cpu] 4
counters 14
broadly. 1
couple 10
features, 2
comprises 1
debugging 1
commonlyused 1
deal 16
below? 1
browser. 1
changes, 1
constructing 3
contention; 2
contents. 2
chunk. 4
continue; 2
cyclic 2
changes; 3
counter++; 1
challenge, 1
exit 13
changed 18
coarse 1
bits). 4
beautiful 9
child: 1
cleverness, 1
edi; 1
concert 2
code), 4
computing, 4
c6 6
counting, 2
brought 10
course). 1
felt 3
condition. 8
decreased, 1
companies 6
demand-zero 1
blocked); 2
bumping 1
cheat 2
contributed 1
bother 1
context-switches 1
chunks; 1
control? 3
deadlock 5
chooses 3
counter1 1
closing 2
course 20
charge 7
cold-start 2
blocking 2
before. 7
circuitry 2
collect 1
effect 4
confidence 2
efficient 19
concurrency). 1
changes 20
counting-based 1
built; 2
covered 2
few) 1
conditionals. 2
degree 3
compiled(!) 1
descriptor). 1
blocks: 1
bytesLeft 3
choice: 1
convention 2
breath. 1
copy! 1
clear 12
control” 2
deciding 5
classically 1
explained 2
cold- 1
crash 2
children! 1
combine 7
cabinets 1
begs 2
clean; 2
combinations 3
combines 1
confirm 6
efficiently; 1
configure 5
channel 1
crude 2
bx=0,bx=1 2
cpu 4
find!) 1
conditions; 2
depicts 1
complicated: 2
determining 4
bold). 1
calculated 1
chunk, 3
copies 12
browser 1
cores 1
clock; 1
cooperative? 1
decodes 1
command-line 2
extreme 4
collected 1
create(), 2
chop 5
coming 7
calculation: 1
beyond 20
commands, 1
compare? 1
compacted 1
constructed 4
emptying 1
contents 28
check; 1
customer! 1
current->next; 1
flaws. 3
confines 1
desired, 1
computation, 2
developments 1
bookstore 1
cite 2
correctly, 3
built-in 1
counts 4
correct. 2
dedicated 2
code, 73
commonalities 1
failing 3
collectively 2
cycles. 4
co-advisors 1
completed 5
calls: 3
blame 3
completely 6
competing 6
complete). 1
confusion. 1
emulate 2
contrast 7
choice. 1
debug, 2
currently 27
flexible 9
considering 6
detects 1
concepts 7
died 1
bound 4
clearing 2
could, 1
can 699
by 705
c->threshold) 2
c5, 1
deleted 1
collector 2
complete; 5
fast, 6
columns. 1
danger 2
counter 116
concurrency? 1
completes1 1
casting 1
boring 1
completion); 1
completion, 2
compromised. 1
context-switching 2
entry; 2
controversy 1
essentially 11
chunk 44
currently-pointed 1
flushed 1
contiguously 2
diagram). 1
concrete, 1
dirty-page 2
breaks 2
client/server 1
creators 1
child. 2
c->threshold 2
crime, 1
causes 5
demand. 1
commandline 1
components. 1
faulting 2
compare-and-swap 10
data). 1
create(); 1
constant 1
compulsory 5
central 7
bottom, 2
concatenating 1
complex. 2
computers. 1
conventions, 1
dedicate 1
counter. 12
everyone 1
claims 2
dangerous 5
fly 1
convince 1
differences. 2
cond; 2
discusses 1
buddy 11
clues) 1
crucial 2
chip’s 1
caching. 1
critically, 1
cheaper, 1
demise 1
compact 3
concern, 3
file: 1
completion), 1
days 4
create, 2
containing 4
compute 12
checkbook 1
bounded 8
condition). 1
components 1
conclusions 1
couldn’t. 2
deeply-nested 1
counter_t; 6
examples. 3
compete, 1
data. 9
following: 8
cooked 1
directly, 5
considerably 1
display 2
buffering 1
co-authors 5
ctxt 1
chocolate 2
calculation, 1
crux: 5
dependence, 1
compare 6
child 59
concurrently, 1
fills 3
decides 11
curr); 1
computer 59
converted 1
computer. 1
children 1
boxes 2
congratulations! 1
comprised 3
condition) 1
counting; 2
destroyed 1
counter’s 2
excuse 1
compiled, 1
databases 5
form). 1
core, 5
dirty 11
consumers 9
eax=51), 2
byte(s) 1
community 3
culprit 1
chose 1
call? 4
current 37
dependent 1
comparison, 3
chip 1
conditional 1
deeply. 2
current->tickets; 1
concurrent, 2
cooking 1
concerned, 2
flag 73
citation. 2
bragging 2
consumed 2
computations 1
connection 1
crux 3
contiguous 13
detail 26
exhibit 3
decay-usage 2
complete 23
formed. 1
crashes, 3
disappears 2
consumption 1
effectively 5
c5 5
company’s 1
coalesces 2
calls, 3
curr 6
cycles 11
desired). 1
compiler, 2
coalescing, 4
consumers), 1
default, 2
deadlock) 2
constantly 3
cores. 1
concurrently), 2
flash-based 2
cited 2
brilliant!” 1
continuing 4
concept: 2
darned 1
curse 3
copyon-write 1
detour 1
exist 11
decides). 1
concurrency. 7
former 5
cream.” 1
disassemble 2
efficient) 1
contains 32
cached 3
compile-time 1
coined 2
can) 1
datacenters. 2
data) 2
details1 1
complete. 6
coarse-grained 2
controls 5
descrip-tion 1
decisions? 1
contention. 2
corre-sponding 1
configure; 1
forever! 2
closes 3
broken 1
convention; 1
concluding 1
code. 44
dark 3
correcting 1
developed; 1
exits 3
deep... 1
construction. 1
creation 20
disassembler. 2
frame 40
element, 2
counters, 6
cat 3
complete, 7
commands 2
canceled, 1
decision. 2
data[100] 1
detecting 1
complex-instruction 1
code) 3
converts 2
devices. 4
deletion, 1
control. 1
costly, 6
connects 2
forgets 1
c2, 1
convoy 2
deadlock). 2
concurrency; 2
collaboration 1
deallocations 2
craft 2
difficulty 4
expected; 3
definite 1
convenience, 1
data; 1
disposal.” 1
free) 5
employ 4
course. 4
century. 1
complicated 13
common) 1
care 10
decrease 2
defeats 1
difference, 4
concurrently? 2
colleagues 3
cost; 4
dictates 1
descriptors. 1
creation: 1
coupling) 2
constants 2
forth). 1
calculates 1
copy-onwrite. 1
deallocate 1
condition3, 1
decided 6
crazier 1
disabled; 3
common 61
experiment, 1
demand? 1
convenient 1
database 13
doing; 1
free-list 1
end” 8
cover 11
changes? 2
concatenate 2
completed), 2
case? 5
declares 2
demands 2
come 9
couldn’t 2
did 22
condition 81
criterion 2
desired 52
crazy! 1
consulted, 1
different 196
game 4
calculations? 2
correct, 2
decision 15
condition? 1
dedication. 1
creation; 1
discussed, 1
competitive 1
fancifully 1
demand” 1
converge 1
deal? 2
doubt. 1
friends 3
error, 3
crash. 1
chopping 1
concurrency: 2
completing 1
deeper. 1
cases, 27
desire 7
complex, 4
dies, 2
create 49
confusing; 1
cycles, 3
destruction, 1
cross 1
convoys, 1
differently; 1
get: 4
caller. 2
costly 7
decreases? 1
conference. 1
demoted 1
creator 1
compile 11
fast” 1
descheduled. 1
cool, 1
debug. 1
driver 1
from). 2
etc., 1
cyclic-sequential 1
chunks, 4
consider. 2
conception 2
do 328
deeply 1
catches 1
destination: 1
computing. 1
different: 2
currency) 6
conspired 1
data), 1
deterministic, 2
curious 3
copy-on-write 5
disciplines 2
getpid(), 2
caller’s 1
count--; 1
can’t 30
caused, 1
center 2
choose 5
cleaning 1
clear: 6
clever 5
close(STDOUT_FILENO); 1
coalescing) 1
columns 1
combined 1
complete?) 2
complicate 1
computation. 2
computed 1
condition: 1
cons. 1
contention 4
control 79
cooperative 5
creation, 6
criteria. 2
curr->next; 4
currently-executing 2
deallocates 1
decisions 7
delight 1
deployable 1
describe 14
detail. 12
details; 3
deter- 1
determined 9
developer; 2
diagram, 6
direction 1
directory, 8
diving 1
do. 18
done; 1
dump”, 2
efficiency, 3
either 49
encounter. 1
enough; 1
environment, 2
epic 1
equation; 1
etc.). 1
eviction 3
example), 10
exceeds 8
exceptionally 2
experiment 5
family? 2
figures, 1
files. 1
find 86
finish 13
for: 1
forget: 1
fork()ing 1
formal 2
forms: 1
four-level 1
fprintf(stderr, 6
fragmentation2 1
free(). 6
free? 4
freed; 1
frustration 1
depicted 2
cycle 4
declare 4
delve 5
design. 2
coolest 2
decreasing 1
dummy 4
func(). 1
example... 1
generate 28
clarify. 1
constitutes 1
conflict 2
driving 1
editor, 1
encounter 7
detailed 8
concise 7
digit 1
daemon 8
const 3
decayed 1
directly 8
date, 2
corresponding 10
disk, 14
globally-shared 1
depending 12
curr->pass 1
configured 1
fundamen-tally 1
depressing. 1
completed, 2
features. 2
depend 3
desire, 1
copying 4
deeper 5
ease. 1
day! 1
exec() 13
give 30
clean), 1
construct 5
consideration 2
depends 5
character. 1
endlessly 2
device, 1
cond 17
dealing 2
doing 76
consumer; 1
decimal 2
disciplines) 1
day, 2
counter1, 1
does, 6
gracefully, 1
dequeue 5
cycle. 1
course, 73
gadget), 1
destination 2
compulsory, 1
fg 1
depends.” 1
desktop. 1
correctness. 3
defense; 1
easy: 2
days. 1
existed 1
glock; 2
coalescing 6
consistency 3
design) 1
citation 1
context 70
entered, 2
differ, 2
constraints, 1
declared 1
dollars 2
cope 1
decisions. 2
disk), 2
deep, 1
domains, 1
granting 1
desired. 9
confined 1
dandy. 1
covering 7
glibc 3
deterministic. 2
concurrentlyrunning 1
finish, 2
description, 1
destroying 1
depth 2
eax. 5
delete, 2
cost 49
expectations? 2
google’s 1
coherence, 2
corn 1
designed 9
closing, 2
continue 10
entirety? 1
differently 1
context-switch 4
degenerate 1
dominate 3
copy, 1
decreases 3
distribution 1
demands. 1
dramatically 2
grasshopper, 1
despite 6
confuses 1
date 2
crash, 1
great. 1
devices? 1
confront 1
first-level 2
designers, 1
diagrams 1
diagram 10
effect” 1
depiction 2
costly; 2
eyes 2
grouping 4
complete? 3
corner-case 4
development 13
converse 2
establishment 1
correct 42
contexts, 1
delivered 2
doubts 1
copying. 1
defined 5
does), 1
demonstrated 2
dream. 1
grow; 1
detail; 1
continues. 6
day 5
current: 1
greater). 1
directions. 3
constants, 1
flags 10
destination. 1
differently, 1
directory 18
elapsed. 1
derive 1
court, 1
code 391
facets 2
each 340
completed; 1
devices 15
correctly-working 1
direction; 1
etc.) 11
correctly; 1
convenience). 1
depressing 1
cost. 1
delay 2
easy. 3
desire. 1
dynamically 1
handle. 1
didn’t 11
cooperatively 1
decide 23
days, 6
grew, 1
disk). 3
contending 14
fork; 1
determines 17
difficult. 3
dirty) 2
end), 1
descriptor 1
cpu.c 2
columns: 2
grow, 1
failure. 1
eases 1
completely: 1
different-sized 1
correctly. 8
discussing 4
evenly 3
count) 3
counter); 6
depths, 1
counting 7
deployment. 2
eax=50 2
destroy 1
ele-ment 1
happening 1
digest. 1
counterbalance 1
deep 7
decimal. 1
hackers 1
distinct 2
continued 1
copy-on-write, 1
device 11
discovered 4
discipline1 1
energy-efficiency 1
detail, 6
currency. 2
compare-and-swap, 2
guesses, 1
fashion. 3
eater 2
completes, 9
differs 1
correctness: 2
complex 22
execle(), 2
covers 4
created, 14
execute 29
descheduling 2
creates 34
effects 1
details); 2
employs. 1
hard-and-fast 1
directly. 3
hardware, 15
descriptor? 1
defined. 1
hardware-interpreted 2
does). 1
formal, 1
copy. 1
differ 2
dive 4
discrepancy 1
entirely 4
did. 2
dairy 1
comparison 7
harmless, 1
fetch, 2
effective 12
directory. 6
do) 1
cost, 5
comprehensive 2
crazy) 1
creativity 1
describes 6
execution” 1
describe. 1
customized 1
efficiently. 1
diagnose 1
enabling 15
created. 3
dividing 6
hardware-based 5
descriptors, 2
deletion) 1
hardware-specific 1
d’un 1
fought 1
core 8
directory; 1
divides 6
discussed. 1
equivalent. 2
different-size 1
darker 1
do, 11
held. 16
finish), 1
efficiently? 5
distributed 7
don’t, 2
countermeasures 1
configuration 2
customer 2
dangling 1
design: 1
expressed 2
desires 1
datacenter, 1
en-us/um/people/mbj/Mars 2
differently. 3
enacted, 1
critical; 2
do; 2
heavy-handed, 1
device. 1
design-ers, 1
haven’t 4
effectively, 1
free(): 1
disappear). 1
count 25
do), 1
divide 6
errant 3
compiler 26
data? 1
document 1
hierarchy, 1
finished, 10
eight 1
efficiency. 3
downsides, 1
create() 11
confusing, 2
deallocated 4
decade. 2
designate 1
far: 2
details) 1
debug 1
enabled, 4
discuss, 1
engineers 2
critique 2
double-click 1
hide 1
die, 1
designer, 1
highlighted 1
embarrassment. 1
frequency; 1
discipline, 1
counter) 1
documented 1
drop 4
est 1
computational-overhead 1
defensive 1
doesn’t). 2
homeworks, 3
first-out) 1
encountering 1
end, 5
draw. 1
cruces 1
constant. 1
decrement(counter_t 4
decimal), 1
destruction 2
faster. 6
deterministically) 1
definitive 1
disk-access 1
end 46
entry. 10
currency; 1
draw 2
hierarchy; 1
differences 2
details). 4
http://linux.die.net/man/3/pthread 1
enforcement, 1
frequently-used 1
disconnection 1
crashes 2
eagerly, 1
doesn’t 51
computer, 3
demonstrates 3
doing. 3
hot 1
first. 10
enters 21
environment. 4
drawn 1
example 131
daemon1 1
constraints 2
demanded 2
default? 1
detail10 1
fetched 5
develop 12
degenerates 2
disk? 2
estimator? 1
examining 4
data, 18
eax=50. 2
high: 1
disassembler 2
http://www.ostep.org/Citations/notes-solaris.pdf. 1
determine 34
event 3
funky 1
discussion, 1
gcc 10
easily. 3
drive. 2
concerns 3
designs, 1
doubt! 1
https://gruss.cc/files/kaiser.pdf 1
fits 9
entries). 2
escalation 1
dreams 1
exceeding 1
darn 1
consumer, 6
descriptors 5
defaults, 2
files 10
devices, 2
details. 34
demanding 3
disks, 1
evaluate 6
execution, 8
declaration 5
endless 4
hit), 4
hurting 2
did, 1
discuss 53
exceptions 3
crazy 3
doing? 2
gdb 5
efficiency 8
driven 1
confections 1
design” 1
drivers 1
formula 2
implement 30
entry? 1
esp; 1
dx 2
executed), 2
debate 2
contexts 2
designers. 2
deployed. 1
follow 2
differ? 1
deterministic 8
desk 1
eax, 3
executed 17
element 14
defaults. 2
etc.); 1
hoc 2
imaginary 1
disk-like 1
discussion: 1
exec(), 6
create()); 2
globallyshared 1
else, 7
else? 2
confining 1
desirable. 1
don’t 81
each. 4
forward! 1
imply 2
exec(); 1
evidence 1
easy-to-use 2
debugger 6
executing 26
continues 7
destructive 1
description 9
for, 2
direction. 3
deterministically. 1
details! 1
exhibits 2
exit(1); 6
ends 4
defend 2
incur 1
doing, 3
holds 38
disks 4
executable 13
datacenter. 1
execution. 17
even 148
enable. 2
email 2
consults 1
detect 5
earlier, 3
earlier; 2
fourteen. 1
increases. 5
existed; 2
example). 3
edx; 1
default 7
exists, 3
correctly! 2
described 36
designers 9
forced 2
directory: 1
developer. 2
developers. 2
exists 3
exiting? 1
error 17
defense, 1
indexed 3
downward). 1
honorable 1
documents, 1
graduate 9
de 1
explicit 22
evicts 3
ending 1
embracing 1
consume! 1
developers 12
efficiency; 1
eaters; 1
fraction 5
inform 4
exit). 2
exchange 2
encountered 1
exits? 2
details, 4
costs, 1
device), 1
destroy()) 2
forget, 1
disk); 1
disable 3
expand 1
discussed 24
expect. 2
etc. 5
defer 2
indicate 15
each, 1
hope. 1
doing.” 1
group 12
declaring 1
execl(), 1
fair 19
entries; 2
emptied 1
control: 1
diagram); 1
elsewhere, 1
economist. 1
free(rvals); 2
initializing 1
expected? 2
excluding 1
entering 9
expected: 2
developer, 1
coverage, 2
difference: 4
developments. 1
free() 8
done) 1
discretion 1
expected. 4
doesn’t? 1
expectations 1
exam? 1
deletes 1
ineffec1 1
how, 1
done\n", 2
grow. 1
early 68
defeat 1
executable, 3
fair-share 7
enum 2
entries. 3
conundrum 1
digging 1
evicted, 1
effective. 3
future; 1
instruction) 9
explain 1
executed, 5
errorprone. 1
fact. 2
die 1
different. 2
created 22
deviously 1
freely, 1
draconian 1
disk) 3
exporting 1
done! 3
expensive 3
exception; 2
demonstrate 5
infinitum. 1
however: 1
don’t. 1
effective, 2
definition 6
had 57
execution: 1
family 5
environment 4
essential 3
directing 1
copy 18
evil 1
employed 4
gcc) 1
extended 5
exited 1
errors? 2
feature 5
directed. 1
disciplines. 1
curious. 1
digested; 1
eax=51. 4
full 33
doesn’t, 3
failed; 2
double-ing! 1
exploring? 1
execvp(). 1
dereference. 2
infrastructure 1
http://www.sparc.org/standards/SPARCV9.pdf. 2
doubt 2
efficiencies 1
int 260
delving 1
hard-andfast 1
exists. 4
far) 2
events 5
exclusion. 6
disappear 1
correct) 1
excellent, 4
endlessly, 2
gdb) 1
failed, 1
expect: 4
esi; 1
file, 9
directives 1
does: 2
debugging, 1
discipline 1
either. 1
functions: 1
done. 10
familiar; 1
drops? 1
fault; 2
experimentation. 1
derivatives 1
insparable 1
hypervisors, 1
downsides. 1
elements 8
intellectually 1
demand 11
hard-working 1
expires. 1
fetches 10
eventually, 1
execvp(), 2
disk. 14
counter; 2
exec(): 1
establish 3
generalized, 1
fancy 7
examples 21
estimate 2
first-in 2
discussion. 1
done? 1
decide: 1
discredited 1
empty 14
futex_wake 2
double-precision 1
faster; 1
easier. 1
fellow. 1
express 1
descheduled, 1
instant 3
iMac 4
due 19
else-where, 1
interface: 1
deschedules 3
hard. 1
exploited 2
it. 68
exert 2
dissertation 6
create()6 1
few 102
fair. 1
gettid()); 4
expensive, 6
fares 1
excellent; 2
execute, 2
free-page 1
disk-drive 1
downfall. 2
defaults 3
discussion 17
eviction. 1
gaming 2
downward. 3
favorite 8
easily 17
few), 2
design, 1
fact, 28
instruction? 3
illegal 11
ease 4
empty. 1
die). 1
hardware? 1
evolved 1
extracts 3
exact 26
exist; 2
divided 8
creature 1
family. 1
figure 35
globally 4
explanation 1
faster, 6
exceptional 5
explore 5
fullness 1
diverse 1
dramatic 2
dereference 1
double) 1
exception 15
gently 1
duty. 1
fetch-and-add 8
editor 2
fields 2
desk? 2
fail. 2
instructions, 10
easy, 1
imagine 41
eax 20
difficulties. 1
he 20
fair, 1
itself); 1
example) 10
existence 3
does. 1
credit 3
famously 3
fill; 2
explored 2
go 37
first) 1
exciting! 1
extremely 3
fully 8
do? 9
dx) 4
designated 2
down, 1
excessive 3
e.g., 8
fight. 1
gets 51
enable 24
figure), 1
despairing 1
file 95
integers 4
encouraged 1
implications. 1
ecosphere 1
displays 1
head; 2
fast 19
executing) 1
it’s 33
exit. 5
doivent 1
datacenter 1
fancy? 1
fine 7
external 10
goals 15
flag). 2
execvp() 1
factor 8
further, 2
done, 6
dynamic 20
designing 3
driver8 1
execvpe(). 2
emailing. 1
gettimeofday() 5
end\n"); 5
flexible, 1
families 1
flexibility; 1
details 46
intelligence. 1
end-of-string 1
inc 1
efficiently, 1
double. 1
helgrind 16
fetches, 2
exit; 1
kernel-owned 1
exits; 2
downwards 1
days... 1
few. 1
fit? 1
failure; 2
good”. 1
expects 3
fall 5
following 55
futex 16
downward, 1
e 1
developed 23
dx=3,dx=3 4
exit), 1
enacted 1
giant 1
endeavors 1
frankly 3
fault. 7
flushing 1
developed. 1
intensive, 1
enemy? 2
increased, 1
downside, 1
enter 32
here) 4
few, 2
exited2 1
kicked 2
experience 9
drives, 1
de-queue 1
field, 2
fits, 1
fashion; 1
habits; 1
fail 13
fashion). 1
forgot 2
general. 1
earlier. 2
easier, 1
dirty, 2
earlier 18
expensive!). 1
enough. 2
gray 3
enough! 1
free), 2
favor, 1
focus 21
developer 2
interactions. 2
enormously 1
incremented, 1
dream 1
entries); 1
hides 1
fewer), 1
expect, 2
kindly 1
extend 2
dustbin 2
deallocation, 1
filled 6
flag)? 1
feeble 2
happen: 1
fast. 5
features 17
fork(). 2
generalpurpose 2
end. 1
easy 50
down 25
eaters 2
face 4
entirety 2
friends, 2
fd 1
entire 46
great 79
follows: 21
did), 2
intervals) 2
equally 1
indicating 8
during 29
entry, 8
hierarchy. 2
fewest 2
explicitly. 2
know, 5
dynamically-allocated, 1
failure 21
decrees 1
fine. 2
flag[0] 2
fell 2
harder 4
fault 12
fetch), 2
forth. 10
generation 1
enjoy 3
ebp; 1
download 2
effectively. 3
fails 5
entries: 1
friend” 1
entirely; 2
fetch 29
grossly 1
form, 6
disk; 4
invalidate 1
errors 9
inseparably 1
ever, 1
else 45
history; 1
figure, 15
exploration 1
knowing. 1
earliest 13
fashion 4
deleted); 1
fixed 13
large 93
fields, 1
haul, 1
feel 8
files, 3
fully-developed 1
get(); 5
ensures 14
efficiently 10
drink 2
elsewhere 3
fault3 1
excessively 1
fully-operational 2
entry), 1
formally: 1
guard 14
final 51
inversely 1
evil.” 2
integer, 4
done 72
execlp(), 2
employs 3
homeworks. 1
file. 2
exports 1
easier 19
fault, 7
dense, 1
floor 1
for) 1
larger. 1
field” 1
left 21
fewest-possible 1
finding 15
get() 7
global; 2
entities 5
egomaniac. 1
dynamics 1
empty), 1
faults 3
exchange1 1
functionality. 3
forthcoming 3
examine 36
guess, 3
finished 14
inverted 4
exception. 1
intensively 1
double-check 1
expected, 4
emulator 1
fact 20
file.txt 2
facility 3
efficient, 5
faulting. 1
designs. 1
flush 5
free. 13
http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 1
fine! 1
length) 1
files) 1
flag[2]; 2
globally-allocated 2
error; 1
global 56
elsewhere. 2
eating 1
end”. 1
finally 27
good. 6
free(10), 1
execution 48
exist: 1
handling. 1
five 8
iterations? 1
exchange1) 1
interact 15
down-wards 1
http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF. 1
enacting 1
field: 1
file’s 2
fact). 1
efforts 2
fetching 4
destroy() 2
forces 2
funny 1
i.e., 29
first; 6
levels 9
fill_ptr 2
flexibility: 2
grand 1
essay 1
grande 1
enough, 5
electrical 1
first 278
find. 1
hardware) 3
freeing 6
exit()) 1
explicitly 12
has). 2
flavor 2
join() 9
excludes 2
interesting. 2
downward 1
idea: 1
entity, 3
filled. 1
fine, 1
focus. 1
eip; 1
develop, 2
form. 2
guessed 1
i=0 1
libcrypt-2.23.so 1
finegrained 1
fit 27
flexibly 1
grows: 1
evermore 1
graphics 2
ensued 1
element. 1
ensure 34
flag. 13
fine-tuned 1
head->next; 1
from, 3
experiments 3
fairly 9
heap), 1
flight, 1
k-stack(B) 2
execl, 1
intergalactic 2
drive, 2
identical 6
entry). 1
fit; 1
failed\n"); 4
fragmentation? 1
en.wikipedia.org/wiki/LoadLink/Store-Conditional. 2
differentiation 1
forms; 1
handled 4
ignored. 1
libraries. 2
fixed-sized 11
flag) 5
folks 1
hallmark 1
everything 12
green 1
envisager 1
elements; 1
entity), 1
flag’s 2
finish. 2
header. 1
fully-associative, 1
expose 1
fairness, 2
hierarchies, 1
foil 2
extension 1
duration 2
indefinitely) 2
error-prone. 1
kernel 123
focusing 2
fairshare 1
framework 3
enabled. 1
difficulties 2
formula, 1
happy. 4
illegally). 1
flag[self] 4
into 339
flag[1] 2
local 56
follow, 1
hand-over-hand 8
evolution 3
grows? 2
equal, 2
enjoys 1
footnote: 1
fit, 2
entry 55
header_t; 1
far; 1
further 31
far-reaching 1
hint 4
found. 2
fail! 2
edit 2
inspires 2
error? 2
keystroke 1
fork(); 4
fanatics, 2
free, 5
encapsulated 2
digest; 1
have, 1
improvement 3
followed 5
introduces: 1
fork() 25
locates 2
forest, 1
free 187
handle 17
exec 2
handlers 5
era, 1
enlisted 1
forcing 1
five-level 1
etc.)? 1
held: 2
ever 19
fusion, 1
far. 1
hit. 5
fragmentation; 1
failure), 1
editor? 1
instant, 1
etc.? 2
lazily, 1
forth; 1
faulty 1
full; 2
encourage 3
direct 14
heavily-used 1
in? 2
invention 1
forth 3
long; 1
found 84
forward-growing 1
freedom 1
handler. 2
executed. 1
handling, 1
errantly-freed 1
enqueue 4
foreman 1
flag), 2
fashion, 1
help. 1
everywhere, 1
futex_wait 2
fascinating 9
hold, 1
frequent 4
falling 1
effort 3
integers, 2
eventually 15
ldq 2
forwarded 1
fetch-ing 1
getpid() 1
engineering. 1
discussion). 1
here, 22
incrementalism; 1
invocation 1
frees. 1
ls, 1
free(), 2
four 52
from. 5
handlers; 1
expensive. 2
havoc 2
evicted 3
entity; 1
fork()/exec() 1
force 2
finds 10
higher 24
first, 20
gains. 1
fewer. 1
humorously, 1
frequently; 1
fantastic 1
encounters 2
interludes. 1
evict. 3
length? 1
frames 5
figures 4
gettimeofday(); 1
entitled 2
dives 1
herein), 1
indexing 1
job? 1
gave 3
m->guard 10
free(tmp); 3
free()) 1
go, 2
havoc’ 1
exploit 1
hit, 28
excellent 42
equal 19
found, 2
fork(), 9
evicted. 2
historically 2
floating 1
gates, 1
fill 11
full). 2
farmer 1
engineering; 1
idea 92
except 6
lengths, 1
interrupt 77
file), 1
general 41
equivalent; 1
goes 27
documents/R4400 1
heuristic 2
infinite 6
jobs, 14
management. 3
generally 28
full, 6
goal 19
goals, 1
heap. 10
failed 8
honest 1
exec(). 2
era 7
gained 1
forth, 4
executes, 3
horrible 1
follows. 4
generality, 1
finishes. 1
first” 1
fine; 2
fire). 1
enough 32
execution), 3
library, 10
introduce 12
fill. 1
generates 10
et 7
grep 7
double 3
https://quoteinvestigator.com/2015/07/23/great-power. 1
influential; 1
jumping 2
mark 6
free(void 4
functional, 1
hack, 1
going. 1
helgrind? 2
familiar 2
hurts; 2
exist). 1
exam- 1
good? 1
fragmentation 13
expected 7
imperatives. 1
forays 1
general, 18
fix 3
imagining 1
flaws 1
entries, 5
get 126
expect 15
lifesaver 1
isolation; 3
fitting 3
gives 15
evicting 1
groups. 2
earlier). 1
hybrid. 1
initialization. 3
kill. 1
matching 1
generalization 5
fundamentalist 1
hand-over-hand). 2
greater-than 1
hidden 4
far, 13
ice 1
existed. 2
guest 1
free(16500) 1
faint 1
implement, 1
forever; 2
generalized 1
flag=0 2
immensely 1
formed 3
equation 1
graph. 1
example, 262
eyes...) 1
likely). 1
issued 7
fix. 1
goofs 1
exactly? 2
guard; 2
ecx; 1
improve. 1
initialized 8
laid 4
measuring 5
ghastly 1
gadgets 1
hard-hitting 1
happy 5
high, 4
faster 16
impacts 1
expect; 1
guide: 1
freed) 1
field. 1
impossible 1
gettimeofday()). 1
form 46
flags: 9
implemented? 1
fragmentation. 6
era. 1
greedy 3
executing, 2
failures. 2
links 3
jobs? 3
flag; 6
granularity, 2
exclusion? 2
guide 1
effect. 1
indefinitely, 1
insight 1
lations 1
meet 5
github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
gain 16
have? 2
harsh, 2
highest 20
fault) 1
in-use 1
expert, 1
habit 2
frequently 7
file-system 1
glance 1
freed. 3
implies 7
fragmented 3
example: 8
groups 3
execv(), 2
fairness. 6
literature 1
join(), 7
focused, 1
graph, 6
exist, 1
hacker 2
eight-page 1
indexes 1
inefficient, 2
inflation, 1
initiating 1
input 20
gaming, 1
header: 2
hate 1
homework 9
faulting”, 1
in: 1
explains 2
happen, 2
extra 18
from; 1
gnu 2
inaccessible. 1
free; 5
excited 2
grows. 1
exercise 4
fantastic, 1
locality 18
kernel, 7
for. 3
grows, 4
exit? 1
hands 4
emails 1
instead. 4
learned? 1
memory-like 1
grab 11
input/output 3
generalizing 1
headway 1
heap); 1
hope 13
from 443
feedback 5
inaccessible, 3
hardware-managed 9
files” 1
fastpath) 2
functioned 1
good! 2
inactive 4
for 1176
guaranteed 1
executes 23
exiting 2
fast; 1
loss 2
key); 4
forefront 2
halted, 1
exits, 2
happens? 2
empty, 3
integers), 1
len:10 6
libc 2
grabbing 2
insert; 2
inspiration 1
heavilyused 1
heart. 1
fully-associative 1
filling 1
however, 49
incurring 1
hardware: 3
findings 2
field 15
fundamental 18
frequently. 1
got 16
independently 8
forever. 1
hacked 1
exhaustive 3
expert 3
feasible. 1
lottery. 1
know. 3
fork.py, 1
hand-controlled 1
far 21
ence 1
intense 2
misses). 1
lie 1
gray) 3
generations 1
help: 1
instruction. 22
highlyfragmented 1
function. 2
finishes, 1
http://www.multicians.org/history.html. 1
inducing 1
harm 3
hardware 263
fork 7
file.txt|wc 1
generally, 7
friendly 5
generated 12
indicated. 1
forewarned: 1
happened; 1
exiting. 1
exploring 2
feature-filled 1
in 2103
low-priority 1
forward 4
machine, 8
handler 24
enough), 2
known 90
interrupted 14
life: 1
multiprocessor 19
get? 1
guarantee 21
instructions; 2
hence 20
hybrid 10
functions; 1
flexibility 2
idiom: 1
init(), 2
has, 1
high. 3
formally, 1
finally), 1
greater 4
from) 2
goal, 1
installations. 1
forget 8
header). 1
exploits. 1
exposed 1
fellow 1
includes 13
few). 1
free(ptr), 1
magic 7
malloc(10 2
entry) 1
la 3
is: 9
listing 4
near-term 1
gigabytes 1
guessed, 5
interchangeably 1
here? 3
identifiers, 1
fundamentally 3
forever, 6
important. 5
inputs. 1
headers, 1
free()? 1
first-fit, 1
guarantee. 1
func() 4
intelligence 1
grabs 16
forms 3
hear 1
figured 2
extent 1
flag, 14
incorrect. 1
fewer 13
frees 6
hang 1
manner 7
evict 9
later), 1
iterations/threads: 2
locations. 1
nearly 9
great, 1
guide. 1
interfaces, 1
heuristics 1
illusions 1
how 441
gates 1
functions, 1
info 1
inquiry 2
hire 1
frequency 5
foo 4
handler, 3
gaining 5
interactions 4
grade, 1
freely 2
hello, 8
fine-grained 3
fact: 3
follows 6
incurred; 1
fine). 1
frequencies; 2
have: 2
matters! 1
exception, 3
kernel), 1
latest 8
necessitates 1
greater), 1
lock() 38
handled, 1
invoked 2
historically, 1
immediately. 2
hugely 3
garbage-collected 2
going 29
inserted. 1
interface 16
hole 1
friend: 1
foreground) 1
happen. 2
general? 1
interval. 1
ground 1
future, 5
fingertips. 1
high 36
fetch. 2
for? 2
initiate 3
finishes 6
frightening 1
head, 1
mean 6
exhibit. 1
next, 1
leave 13
lead 50
greatest 1
logic, 1
happen 15
it3 1
historically-based 1
hybrid, 1
improve 17
getrandom(0, 1
heap-allocated 1
instructions). 1
interval, 1
how: 1
function, 3
format; 2
happens; 2
generated. 1
intervention. 1
guarantees 6
general) 1
flag.s. 2
history. 3
finished. 2
forget-ting 1
insidious 1
fires 1
functionality, 2
mechanism, 2
exist. 5
nice, 3
lies 4
line. 1
grow 18
heap 76
lookup 12
hardware. 10
hostility: 1
idea; 1
inadvisable 1
government 3
heart 2
introduced 25
i++) 18
interesting 46
getpid()); 9
fortuitous 1
harddisk 1
generic 4
invalid, 8
guts, 1
generator 2
focused 3
hit; 1
first-fit 3
fragmented) 1
insights. 2
flag? 3
furthest 5
megabytes 3
exits. 4
non-practical 1
limitations 1
its 295
list: 3
guesses 3
hearing 3
hardware’s 1
here: 10
loop 41
illusions, 1
industry 2
graphs 1
held). 2
is), 1
illegal. 2
interrupts, 4
gettid() 2
foundational 2
has. 1
goal: 1
invited 1
hackers. 1
grammar 1
forcefully. 1
honor: 1
flavor. 1
free(50). 1
has 348
flags, 1
goals? 2
memories 4
expected) 4
none-too-subtle 1
limits; 1
itself) 1
load/store: 1
handles 14
huh?? 1
him 1
loved 1
immense 1
inefficiencies. 1
hack. 1
hello 5
isolate 1
imbalance, 1
intro 3
friend, 2
getting 33
growing 5
heap, 22
involved, 6
happen?4 1
gruesome 1
formulae. 1
however 1
install 1
flow 14
free(x); 1
head->next 1
forever 6
good, 2
mental 2
extract 7
not: 3
locality, 8
it’ll 1
locks: 3
hurt 3
history, 3
main-deadlock.c 2
implementation)” 2
hard 51
inherently 2
handling 14
himself, 1
keyboard 2
included 4
kill 10
generating 2
graph 11
guarantees. 2
giving 15
it!), 1
guess 8
fortunately, 2
http://ostep.org/Citations/inside-cfs.pdf. 1
integer) 2
happens 78
focuses 3
freed 3
header_t 1
forewarned, 2
growth: 1
mentor, 2
fail? 1
numer-ous 1
lock(&m) 1
jars 1
lottery.py, 1
identifier 3
hogging; 1
memory! 2
in-between 5
hardware/OS 2
happened 5
honor. 1
kmalloc. 1
increasingly 6
killed). 1
instruction 130
hexadecimal), 1
handlers, 3
grows 16
goals. 2
itself, 8
hand, 3
fragmentation: 1
http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF. 5
hence, 3
interested 11
forth), 1
headers 2
function 41
forgetting 2
gruesome. 1
metadata 1
fails, 3
old, 1
lock(lock_t 14
join 12
love 2
importantly 1
holder 2
mention 1
increased 3
here; 4
hardware). 3
http://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1303.PDF. 1
large-memory 1
initialization 8
knowledge, 3
intend 2
hood 1
happens. 3
hash_t; 2
hair 4
killall. 1
hand-coded 1
fragmented, 2
hung. 2
front 10
interposition 2
fourth 4
helpful, 1
game, 1
frames; 1
guy 3
method 8
failures 1
oldest 1
locked; 2
killed; 1
lwarx/stwcx 2
in, 6
host 2
increasing 10
incremented 4
hierarchy 2
heavyweight 1
http://www.intel.com/products/processor/manuals. 3
laugh 1
instances 2
latter 5
interrupt), 1
http://www.unix.org/version3/. 1
hard-to-find 1
have. 3
handed 4
kinds: 1
handle; 1
high-priority 2
immediately, 4
involvement 1
fun 20
fragmented; 1
helps 5
generalize 1
frustrating 1
hacking 1
millisecond. 1
fairness 7
on. 9
lookups 1
laborious 1
machines. 6
mid 1
main() 11
incrementing 12
independent 4
high-performance 1
here! 1
hundreds). 1
learn? 1
layout. 1
interrupted, 3
hundred 7
harmful. 1
instead 95
harder. 1
having 29
l/stq 2
hardwaremanaged, 1
hits). 1
implicitly 2
irstrun 1
functionality 2
friend 3
higher-level 1
goodness); 1
functions 7
handler). 1
milliseconds; 1
familiarity 2
one) 4
laptop 2
loops 18
hour 1
missing 4
main-race) 2
inefficient? 2
inexpensive 1
homeworks 5
hex 4
idea! 1
libtinfo.so.5.9 1
life, 3
introduction 17
idle, 1
interact. 1
head 39
hardly 3
heap? 3
launches 2
head), 1
hy-brid 1
in) 2
is; 3
future. 9
let’s 73
hinted 3
harming 2
gcc, 1
hates 1
mistakes 3
fault? 1
one-word 2
latency 9
lowest-priority 1
hptr 1
mmap(NULL, 1
main.c 6
innocently 1
init: 2
hopes 1
high-level 6
immediately 23
like, 3
lightweight, 1
intuition? 1
imbalance. 1
interest: 2
heavily 2
hash 17
heavy 5
heap) 2
identifier, 2
increment(counter_t 4
issue. 3
greater. 1
garbage 2
like. 6
history... 2
hit). 1
http://books.google.com/ngrams). 1
http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD329.PDF 1
imbalance 3
in-between. 3
incorrectly. 1
increased. 5
indicated). 1
inner 1
input, 1
inside 30
instruction: 1
intricacies. 2
inverse 1
involving 1
if 483
illusion 20
immediate 2
gdb, 2
modified 15
faults, 2
other) 1
leaks 1
ls. 1
http://www-formal.stanford.edu/jmc/ 1
mode), 1
many! 1
inopportune 2
inodes, 1
hours. 1
highly 7
implementation. 4
list), 1
linking 3
issuing 6
impact, 3
interleaving 4
held), 7
helping 2
herein, 1
hierarchies 2
indicative 1
it: 4
greatly 4
gone 5
list). 2
head_lock, 2
have 487
head->value; 1
immediately; 7
general-purpose 8
feasible 1
more. 14
output: 4
learning 2
m 1
https://birrell.org/andrew/papers/035-Threads.pdf 2
naming 1
measured 2
inputs 2
insert(queue, 1
how-to-generate-a-random-number-from-within-a-range. 1
highly-networked 1
lives. 1
load, 3
implemented 10
locations 11
important, 7
interrupt; 1
help) 1
held 25
informed, 1
hold 27
jobs) 1
hand-assembled 1
lists[BUCKETS]; 2
held) 1
headaches. 1
good 99
header, 4
importantly, 9
generalizes 1
figuring 1
music 2
outs 1
letter 3
main.c). 2
i5 2
nary 1
memorymanagement 1
insert. 2
https://lwn.net/Articles/170003. 2
instruction, 19
long-lived 3
hit 32
items 9
inclusion 1
loops? 1
incorporated 4
helped 2
is, 22
hogs, 1
init(); 2
http://ftp.gnu.org/gnu/glibc. 2
juggling 1
handle, 1
llock[NUMCPUS]; 2
higher-priority 2
heard 1
gum 1
heap). 1
init(counter_t 6
file; 1
mutex. 1
owner 4
library; 1
malloc()); 1
ideal? 1
next; 4
mind. 1
given 80
instructions. 5
idea, 7
longrunning 1
integer 17
holding 12
iterations 4
independently! 1
lowest. 4
increase 20
here. 11
jobs: 2
http://stackoverflow.com/questions/2509679/ 1
innovator 1
humorously 1
jump; 1
hands-on 1
loads 19
hints 4
halt 5
help, 1
here 46
initially 3
finally, 8
ownership, 1
name 22
live 12
managed 6
idle 5
non-executable 1
miss: 1
gods, 1
intensive. 1
ideal 4
lower-half 1
interest 3
hoping 6
itself; 3
indicates 3
machinery, 1
initial 5
here’s 1
judiciousness 1
humble 2
installed 1
imag-ine 1
kids, 1
head->size 1
locking, 2
hit! 1
hand. 3
highest-order 1
heyday 1
inode 3
flag.s 2
p; 7
nearby 2
load-linked, 2
manner, 11
impact 5
noted 3
mistakes), 1
happening? 1
is 2736
intricate 3
idle! 1
m;) 1
introduction, 1
hypervisors). 1
kick 8
inefficiencies 1
main-race.c. 2
initiates 4
hey, 1
known; 1
hundreds 5
int), 2
impetus 1
languages 4
heap: 2
logarithmic 3
hits. 1
handed-out 1
http://en.wikipedia.org/wiki/You 1
high-end 4
instructions: 2
flags. 2
packages, 1
negatively) 3
locale 2
mappings. 3
implements 6
nuance 1
modification 2
heap; 2
issues 26
intuition 3
illegally 3
machines) 1
inventory 1
ideas? 1
last. 1
information. 9
majors 1
input: 1
lie. 1
historical 14
illusion. 2
interaction 13
implementations. 4
large, 7
interrupts 33
longer, 1
hold? 2
happens: 5
http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html. 1
interactivity 2
forcefully 2
his 37
newer 2
page. 21
match 12
importance, 1
observed 1
modified), 1
helgrind, 2
it? 11
important 63
investigate 1
imbalanced? 1
made: 3
iterations, 1
idioms 1
leap 3
informed 3
make. 1
ins 1
limit) 1
history 16
imbalances. 1
important) 1
laws 2
held; 2
interval’ 1
looking 13
holds, 2
hardware; 2
humans) 1
iss 6
found? 1
hits, 2
non-blocking 2
pages; 9
matter 13
old; 4
modularity, 1
here), 2
long 68
itself), 3
in-terface 1
junctures 1
independently, 2
main(); 1
implementations, 1
least) 1
init 4
maliciously! 2
installs 2
limited 17
honor, 1
jobs 102
important? 1
interesting; 2
left, 6
highlight 3
intriguing 1
hits 13
lottery 24
hybrids 1
header 15
it1! 1
fragmentation, 6
hopefully, 3
notice? 1
pairs, 1
mem. 1
papers 8
monolithic 1
hog; 1
lost. 2
it’d 1
in/out 1
keeping 14
instantaneously. 1
mainstream 1
in-kernel 5
left). 2
input); 1
manual. 4
instructions), 1
line 14
idea? 2
l/stl 2
list, 26
interrupt: 4
honor 1
introduces 6
less 29
homework, 9
malloc; 2
icon, 1
heavy, 2
item 9
free-space 4
house 2
obvious: 2
once), 3
memories, 1
parameters). 1
most-recently 1
https://events.static.linuxfound.org/sites/events/files/slides/elc 1
lot! 1
it” 1
informs 1
killer 1
integrity 1
maintain 4
in. 11
legends 2
instead, 5
interactive, 1
mapping 13
ideas, 3
in-memory 2
leftmost 1
lock? 10
invalid 8
k-stack(A) 1
letting 6
ideas 36
hopefully 6
message. 1
implement!) 1
held, 6
join(). 2
frequently, 3
http://cag.csail.mit.edu/raw/documents/R4400 2
help 38
onelevel 1
mesh 1
park(), 2
neat. 1
human 4
luck! 1
jobs. 7
innocent 1
languages, 2
intelligent 2
library. 10
length 16
instrumentation 1
makes 57
investigating. 2
mask 1
implementation, 2
length, 1
involved 9
kernel” 1
locks, 22
lifeless 1
including 51
illegal, 1
http://en.wikipedia.org/wiki/ 1
metal 1
important). 1
judicious 1
fringe 1
occasionally 3
http://history-computer.com/Library/AltoUsersHandbook.pdf. 1
herein. 5
operator. 3
microkernel-like 1
pdflush), 1
networking. 2
identical, 1
machine; 2
join, 2
inserted 2
inability 1
interface. 4
libtinfo, 1
line: 2
int) 2
malloc(strlen(src) 1
is. 7
master 4
importance 8
lesson: 2
isn’t. 3
kicking 1
link) 1
increases 6
looks 39
imagine, 4
https://en.wikipedia.org/wiki/Buffer_overflow 1
millisecond 1
impressive. 1
jumps 7
future 21
offset: 1
http://www.ibm.com/developerworks/linux/library/l-solar/. 2
home 3
opposed 3
misbehaved), 1
physical. 1
new, 1
implement. 5
mainframe 2
jokes 1
inspired 1
inaccessible 2
interrupted) 1
lives 7
lingo) 1
interleaving, 2
manuals 2
isolating 1
matter? 3
in; 2
life. 2
isses 1
kind: 1
know! 1
influenced 2
lookup. 3
implementation 7
humans, 1
miss). 1
improves 4
kernel. 6
gather 1
one-to-one 1
https://github.com/mit-pdos/xv6-public. 1
http://cag.csail.mit.edu/raw/ 1
optimizations 1
misbehaving 2
points. 1
new_head; 2
implementations 4
malfeasance 1
installation, 1
jump 22
incentive 1
interruption, 2
long-term. 1
listens 2
invent 3
maps 7
it.” 1
matters, 2
inconclusive 1
like) 2
it!) 2
linked 18
knowledge 14
inherent 5
loop. 8
improved 6
increments 7
mlfq.py, 1
indeed, 11
kernel’s 4
generated, 1
one? 1
i; 16
options. 3
huge 20
portion 20
nonetheless. 1
implication 1
malloc(sizeof(int)); 2
instructions) 2
kernel; 2
incredibly 8
investigator 1
much 135
loop) 2
lost 4
it). 3
measure? 2
item; 1
mem- 1
incremental 1
link 6
it... 1
list; 4
large-scale 1
inject 2
incl 1
loops; 13
mocked 1
index 20
indeterminate, 2
kind) 1
insert 12
ones, 2
ideally 1
ordering 9
practice 4
i 22
important; 4
note 27
manipulate 2
intact; 1
larger? 1
increment 14
kernel?” 1
name, 4
lying 2
lots 12
judiciously 1
message, 2
kernel) 2
memory-allocation 10
indefinitely. 2
list-like 1
loader 4
last, 1
itself 32
inputs: 2
lock. 64
lucky 3
mode. 4
indirection 3
get(counter_t 6
laptops, 1
installing 1
one” 1
ignore 5
originally 2
precise 4
illusion: 2
in-depth 1
noticeable 2
materials. 1
later); 1
interactive 20
incrementally. 1
kills 2
napping 1
machine. 9
main(), 1
kept 12
messy 2
killing 2
meta-level 1
index: 1
lazy 5
job, 19
instead), 1
incorporate 7
lock_t; 8
little 103
m; 1
inheritance. 2
grocery 2
laughing 2
instance 3
oops 2
improvement. 1
otherwise 14
illustrate 5
predict 16
incorporates 2
obliged 1
mem.c 2
ldl 2
isolation, 2
indicated 4
neatly 4
know 71
necessary 9
managed), 1
next. 10
kind. 1
landmark 3
minimally 1
indivisible 2
lean 1
known: 1
instruction; 3
index. 1
lock’s 2
load. 2
more 470
init(lock_t 4
machines 21
growth 1
lengths: 1
opposite. 1
in- 1
overhead, 1
instructions 78
implementing 8
predictors, 2
influence 1
observe 6
memory). 6
len:30 1
it! 14
init() 6
machines; 1
knowledge? 1
managing 9
miss), 3
notes); 1
large) 1
least-recently-used 4
minus 5
last 37
left), 1
lags 2
interactivity. 2
info: 1
low-level 16
lock(&mutex); 2
mutex 17
inkernel 1
main-deadlock.c. 2
habits 1
lifetime 1
incarnation. 1
overwrites 1
insufficient. 2
implying 1
pressing 1
instrument 1
off; 2
men-tioned 1
libc-2.23.so 1
jacket, 1
initializes 5
made, 5
left-shifted 2
memory) 5
mode, 13
nuances 3
lest2 1
inefficient. 4
monopolize 6
leading 9
legal; 1
lawyers 1
internal 12
lowly 2
lock->flag 6
information 57
myarg_t 8
innovations 2
matter; 1
half 8
list_t 2
include 18
p3). 1
interconnected 1
improbable, 2
previously) 1
interpose 1
older 13
merest 1
join. 2
innovation 2
mail 1
list 103
like: 3
methods. 3
limit 6
occurs?” 1
or 469
information, 6
ms, 5
left) 1
levels), 1
learned, 1
interposed 1
likely 73
logic 7
made 23
infrequently 1
naive 3
inode) 2
hand 6
inefficient 4
mechanisms 32
lists 13
page-replacement 6
interesting) 1
increase? 2
primitives? 2
interrupt, 4
optimal 20
merge 2
knows, 1
integer). 2
manipulates 2
load/store 3
model 8
migrating 2
load” 1
ones!). 1
orderly 1
initialize 15
library” 1
lessons 5
life 22
interpret 1
lost, 3
multiple 95
list. 21
inherits 1
needed. 11
insisting 1
making 63
happen? 8
infinite. 1
memoryreference 1
lives, 2
park(); 4
invalid. 2
increases, 2
printing 3
interrupt-based 2
meters 1
latency. 1
interval 8
manually 1
located 13
most. 1
minimize 11
ls 1
oops, 1
organization, 1
installation 1
line, 7
lines, 1
lightweight 1
invented 5
machinery. 3
our 230
multiprocessors. 4
list_t; 2
injected 2
needless 2
interacting 1
negative 14
happening! 1
inflation 2
microprocessor. 1
locality. 4
park, 2
involved. 2
incremented; 2
priority) 1
metric, 2
isn’t 26
layout 2
intervention 1
many. 5
lock_t 2
myret 4
misses. 7
macOS, 1
opposite: 1
original, 1
intent 5
lived 1
location. 3
like; 2
inversion 6
locking 34
over-written 1
mythread. 2
list’s 1
innovations. 1
malloc(). 4
interested! 1
new) 4
happens, 4
informative 3
mind 5
lock()), 2
participated 1
isolated 2
indeed 26
privileged 24
modifies 1
journaling 3
learn, 1
intrinsically 1
mechanisms; 1
nearly-complete 1
modification, 2
machinery? 1
locks 79
or, 5
other? 1
interposing 1
location; 2
limits. 1
market... 1
is! 2
longer 17
overheads), 1
natively 1
located. 2
instruction(s) 2
malloc’d 3
interesting, 4
no?). 2
hardwaremanaged 1
initializer 2
miss, 10
partition 1
lot 35
issue, 3
indeterminate 2
itself. 19
modulo 1
kinds 5
library) 5
invisible 1
memory-management 2
necessitating 1
motivating 1
machines). 1
long, 5
orderings 2
others, 4
intervals: 4
looping-race-nolock.s 8
matters. 3
load 35
lowering 1
overseas. 1
necessarily!) 2
locks. 6
intervals. 1
malloc” 1
interlude, 2
now? 7
harmful, 1
innovations, 1
modify 3
perfectly, 1
luck 5
probes 1
individual 3
joke, 1
moment 5
know: 2
limits, 1
isn’t, 2
memory?”, 1
needed, 7
movement). 1
main-one-cv-while.c. 1
lowers 1
otool 2
overall, 1
isolation 3
lucky, 2
mature 1
lock). 10
lowest-order 1
neighboring 1
paging 28
make, 2
into, 1
manages; 1
interpretation 1
numbers). 1
has? 2
interfaces 17
money 1
perform? 1
magic. 1
informally, 1
problem: 25
key, 2
monopolized 1
known, 2
loading 6
it?) 1
mentioned 7
multi.py 2
magic; 1
main: 12
out-of-bounds; 1
overheads 14
it), 4
machine? 2
maybe 4
lock_init(lock_t 4
manager, 3
nondeterminism 1
paging-policy.py, 1
manifests 2
intricacy 1
mapped 14
it 1299
intervals 6
obscure 1
it; 14
interfere 2
mostly 4
phone 1
main-signal.c. 2
informing 1
kicks 2
not 449
process, 51
moving 13
large. 3
lock), 2
join()); 1
multiplexing 2
main-two-cvs-while.c 1
makes. 1
p1, 5
overlays, 1
job). 1
most 130
machines, 5
memory), 5
logically 6
marvel 1
not; 1
pain. 1
manual, 2
introducing 5
metrics 7
item. 1
headed 3
obvious, 2
jumps) 1
interrupted. 2
much; 1
physics). 1
maintaining 1
interleavings. 2
kidding; 1
nothing”; 2
processing. 1
muck 1
latency) 1
long-running 15
multi-level 30
necessarily 8
mainframe, 1
mappings 8
pagereplacement 1
overly 3
jobs); 1
much?). 1
main-two-cvs-while-extra-unlock.c. 1
memoryintensive 1
looping-race-nolock.s, 2
notion), 1
paragraph 1
masking 4
intuitively 1
miss; 1
iteration. 1
may 123
helgrind. 2
offset, 2
keeps 13
issue; 1
multiprocessing 1
picks 5
manner. 7
internet 1
killed 2
objdump 8
producing 1
laughably 1
jump) 1
looked 8
nanoseconds), 1
newly-freed 1
malloc(3) 1
masks 2
paging). 1
p1 8
key) 16
multilevel 2
maliciously) 1
merely 1
looping-sequential 3
null.c 1
parallel) 2
math 4
invocation, 1
mmap(); 1
jne 3
mem.pdf 1
herein 3
once. 5
large-file 1
job) 3
naturally, 1
pipe, 2
neat 8
intervening 3
knew 5
objectoriented 1
lay-out. 1
jumped 1
low, 3
newlyrunning 1
nitty-gritty: 1
programs 85
malloc(strlen(s) 1
meaning 3
pairs. 1
man 21
kind, 1
munication, 1
malloc(20);. 1
microkernels 3
low. 1
object), 1
patient! 1
mathematical 1
it) 5
modifications. 2
just-finished 1
memory-related 1
holes 1
one-quarter 1
last); 1
journalism 1
material 8
please 3
necessary; 1
invented, 1
least-significant 1
once, 9
led 8
lowered, 1
next-to-last 1
nodes) 2
properly. 1
keep 48
page(s) 1
mem 10
parallel 6
manages 9
notes: 2
knows 18
many” 2
mirrors 1
machinery 10
observation 5
periods 4
maximum, 1
it?!) 1
keyboard, 1
move 31
however; 2
operate): 1
last-in 1
key; 6
meltdownattack.com 1
pmap, 1
need, 1
inversion, 4
memory. 103
lays 1
issue 33
lengths 5
lowest 9
noble 1
nonsolution: 1
provided. 2
languages. 2
paged 1
more, 6
parameter, 4
manner; 1
occurred, 4
language. 3
miss-handling 2
marked 11
main-two-cvs-if.c. 1
obviously 5
persistently 1
microcode), 1
itself? 1
kill() 1
ms). 3
http://portal.acm.org/citation.cfm?id=540365. 2
opposite 5
known). 1
memories. 1
later 36
pool 1
networking 3
millions 3
ongoing 1
libcrypt, 1
least 35
machine) 2
it, 68
none 3
note, 5
pseudocode 7
learns 1
parameter 6
most-significant 1
park(). 2
memory): 1
odd, 1
larger), 1
mistake 3
marriage, 1
malloc(sizeof(double)); 1
occurring 3
perspective, 1
migration 5
knowing 6
much... 1
if, 4
opt 1
language 8
memory-add 2
latter, 2
populated, 1
non-contiguous 2
mind-blowing 1
online, 2
length). 2
madvise), 1
job. 8
library 47
not? 2
pthread_mutex_init(&c->llock[i], 2
just 304
notice 34
least, 7
peach 4
multiples 1
path 8
micro-instructions 1
odd-sized 1
larger-scale 1
mix 1
manner? 1
mode) 9
offset=04); 1
pipeline 1
minicomputer. 1
multiprocessor, 2
larger 23
illusion, 2
optimization, 3
later, 5
method. 3
lets 10
power.” 1
norm, 2
minimal 7
operation 20
lmbench 4
magnitude 1
job’s 2
lively 1
note: 4
purify, 2
now. 7
legal 6
kind 54
periodically 9
multiprocessing). 2
peach, 3
mines 1
of. 1
largest 2
means 31
manufacturers 1
move). 1
operator 3
play 4
minimum. 2
myargs); 2
leak 2
implicit 1
out; 1
law 2
middle 11
pre-configured 1
level 23
occur, 2
misbehaves 1
optimal; 2
local-to-global 2
key 28
notice. 1
occasions 1
putting 17
lock, 61
legitimate 1
late 4
pigs. 1
mutex, 4
peanut 1
make 214
minicomputer 5
offerings 2
ld-2.23.so 1
measurement. 1
memory-constrained 1
ms. 5
optimality 1
miss. 9
point, 30
natural 9
libraries 3
improving 4
outlines 6
ldrex/strex 2
modified. 1
predictable; 1
light 1
often, 7
mitigates 1
optimize 4
knowing, 1
location 39
num 1
omitted, 1
quantum 5
locking. 3
later. 9
let 36
pipes 4
mutual-exclusion 2
performance; 5
malloc(sizeof(node_t)); 8
minimum 2
one! 1
memory-failing 2
memory; 19
multiprogramming 8
options 3
learn 65
mistakes) 1
pointier, 1
newly-opened 1
limiting 1
influential 4
own? 1
level, 3
mother 2
preferred; 2
likes 1
oops.y 2
much: 1
order), 1
labeled 3
long-list 1
obvious) 2
questions 13
logs 1
leaked 2
levels: 1
ple 1
myret_t; 2
permissible. 1
mandated 1
ones. 3
miss 32
message; 1
methods 4
mutex; 6
million 17
len:9 1
mocked). 1
possession 2
news: 2
lists. 1
initially, 2
p2.c 1
likes, 1
mythread() 2
primitive! 2
one 500
lives), 1
optimizations. 1
nanoseconds, 2
orphaned 1
larger, 2
lookup? 1
off), 2
randomization, 1
longer-running 1
least- 1
pleasure 1
negative, 3
phones 3
open() 6
manual 13
mmap() 7
methods, 1
others). 1
myarg_t; 4
mind, 4
limits 6
more). 1
like 215
pressed 2
notes. 1
ll/sc 2
initiated 1
page-number 1
linear) 1
myturn 2
primitives. 8
locate 3
order, 5
numbering 1
otherwise). 1
laser-like 1
loop? 1
re-enable 2
offending 10
least-frequentlyused 1
phrase... 1
only 202
pointer 55
operates 4
map 7
mode). 1
miss); 1
output; 1
look 121
n 4
next 101
literally 1
misses 21
linker 1
moves 15
printed 6
nothing 5
loathe 1
insertion 2
paging-multilevel-translate.py; 1
load-linked 14
name. 4
locations, 1
process; 13
ordering. 2
obvious 12
laziness 2
output 36
loops, 4
read-only 1
offset=000000, 1
major 28
piena 1
oops! 1
positively) 3
organization. 1
marks 4
more) 1
misses, 8
over-designed 1
loop; 2
nearly-infinite 1
lock) 4
month. 1
nice 34
list) 5
not. 14
printf("%lld\n", 2
notion 12
lock->turn 8
interleavings 4
paradigm. 1
nasty 1
lock; 24
lock->ticket 2
protections 4
origin 2
oddity: 2
leads 13
p4.output. 1
read-write). 1
leaving 3
once”, 1
malloc(100e6)); 1
pipes, 2
open()? 1
ours: 1
possible 31
marvelous 1
multiprogramming. 1
mode; 2
p3) 1
nonconcurrent 1
machine 34
locked 7
more! 1
multiprocessorbased 1
listed 1
of... 3
printf("location 3
number. 2
luck. 1
intermediate 1
parent) 1
nature 8
logically-different 1
lock-free 3
pthread_join(pthread_t 2
ory. 1
off, 3
leak, 1
pageable 1
rearrangement 1
level. 7
managed, 2
one. 24
player 1
optimal, 5
outdated) 1
preemptive 2
maximum 8
myargs[1] 2
movie 1
package 4
normally 2
main-signal-cv.c. 2
looking? 1
multicore 6
multiprocessors, 2
location, 6
mythread, 14
object 10
maintain, 1
old 60
interrupt. 4
password 1
other 303
needs 32
looping 1
pthread_mutex_unlock(&c->llock[cpu]); 2
ourselves 3
legality. 1
part: 4
offset 42
reboot 6
libc, 1
matter, 3
open-source 2
pointer, 10
overall. 1
mem-access 1
present 36
name; 1
ms 14
notice, 3
malloc(), 3
pair 21
low 10
names 1
pro-cessor) 1
locks) 3
need. 2
occurred 3
makes, 2
online: 1
is? 2
longlived 1
penalties. 1
overflow. 1
newly 3
low-cost 1
pthread_mutex_unlock(pthread_mutex_t 2
over, 1
liked 1
packed 4
oops.x 2
reduced-instruction 1
libraries) 1
measurements 4
operations, 3
possible, 14
overhead), 2
power 8
printf("parent: 6
naturally 4
much-improved 1
now: 1
malloc(strlen(src)); 1
passed, 1
lower-case 3
networking, 1
new->next 4
newly-created 3
nice), 1
need 152
operation. 5
management 29
material. 3
people. 1
own. 2
per-process 12
lower-priority 2
purpose, 1
patterns 4
linear. 1
pain 1
job 144
optimization 6
reduces 9
lifted. 1
original; 2
mem? 1
p3 5
precautions 2
priorityadjustment 1
multi-CPU 3
on-chip 4
patent 1
lowered 1
process). 2
m->flag 6
needs; 1
node. 1
occurrence. 1
needed). 2
opposite, 1
main(). 1
maximizing 1
p2 7
memory 568
many 252
newly-fetched 1
queue), 1
main(int 23
pauses 1
loaded 17
patches 2
known. 1
overflows 4
relocation; 1
locally-allocated 2
other. 8
metric: 1
p4.output 1
preemptive, 1
probability 2
multiply 2
pattern. 2
one, 26
macros 1
processes? 3
macro 1
negative). 1
node_t; 5
odd 6
no? 8
optimal) 1
main-signal-cv. 2
memcheck 1
perfect... 2
paging, 4
mess! 1
marking, 1
perhaps 39
races, 4
malloc 8
people, 1
local[NUMCPUS]; 2
paying 3
lack 4
overwrite 4
replacement; 1
location.” 2
represents 4
lock(), 8
part, 2
present, 2
processors. 3
myarg 2
performance: 4
other, 5
made. 2
processes” 5
maintains. 1
network 2
node’s 4
offender. 1
none, 1
organize 1
maintains 1
memory); 2
parameters. 2
non-scalable 2
mathematician 2
persistence. 2
randomness 6
place. 16
percent 6
picture, 5
launch 2
owns 2
others; 1
moment. 1
require. 1
lookup, 2
prevented 5
product 1
particular, 28
needed; 1
permanently-valid 1
outcomes? 4
magnificently; 2
produced 2
malicious, 1
network-connected 1
might 218
oh 2
output. 2
numbers 12
manipulations 2
memory-mapped 3
parentheses 2
nor 1
meant 1
rate. 3
mechanism 18
lock 370
mapping, 1
performance? 3
pointing 2
lazy; 2
p1.c), 1
now 184
other’s 1
mouse), 1
requirement: 2
loop, 10
program) 1
peeking 1
print 25
pesky 1
overcome. 2
never 38
professors 3
me 6
main 66
measure 21
order; 1
overcome? 1
oblivious 1
maximize 2
milliseconds). 1
perror("malloc"); 4
o 2
readied, 1
ploticus 1
new 140
memory-reference 1
reading 21
massive 4
performance” 1
preparing 1
leaking 3
pages). 3
old_ptr 4
p 1
respectively, 1
main-deadlock-global.c. 2
movl 28
progress, 1
people.cs.clemson.edu/ 1
printf("%s\n", 3
practice! 1
overhead 12
nothing) 4
profilers 2
models), 2
matches 1
memory-mapping 1
ority 1
overzealous 1
occur 9
memory-bug 1
minicomputers. 1
persistently, 1
obey 1
non-ASLR 1
pointed 15
logical. 1
microseconds, 2
lower 13
master, 1
permit 1
learned 13
pause) 1
pretty 26
on). 1
p1–p3). 1
response-time 1
multiple-queue 1
malicious 14
protect 11
period 8
precision 2
oversubscribed, 1
noticed: 2
process. 69
projects, 1
much, 1
measurements, 1
mentioning: 1
out? 1
ownership 1
oddly 1
multi-threaded 44
moglie 1
physically 2
observing 1
noticeably 4
pointers? 2
reality 7
mid-instruction, 2
lowlevellock.h 2
math. 1
persistence, 1
life; 1
peaches. 1
process) 6
otherwise: 2
packaged 2
result, 12
multiprocessors 5
malloc. 1
pthread_mutex_lock(mutex); 2
phrase 2
preferably 2
parameters: 1
now, 18
proverbial 1
process’s 18
measures 2
metric. 4
mighty 4
page-directory 5
memory-user.c. 1
offset), 1
multiplied 3
mother. 2
pipeline, 2
multi-queue 4
occurs 19
often 69
recommend 2
minimal. 2
machinery) 1
measurements? 1
persistent 4
lifetime, 1
processed 2
overflow 3
ret 1
per 57
mutex_unlock 2
manifesto 1
purely 1
physics 1
preserve 1
park 6
now-extinct 1
pthread_mutex_trylock(pthread_mutex_t 2
properties 8
overview 12
pages 195
milliseconds, 2
park() 4
metric 5
multiprogrammed 3
memory, 124
nuclear 1
ponder: 1
multitude 1
policies; 1
onnv/onnv-gate/usr/src/lib/libc/port/threads/synch.c. 2
once). 1
recursion 1
minimizes 2
main); 1
megabytes). 1
persistently; 1
professionals 3
linear 34
reverts 1
perform, 1
new->key 4
mapping: 1
purposes 2
own 72
popular 7
paths. 2
primitives 15
once; 4
ptr 16
page: 1
pthread_mutex_t 22
pals 1
more? 1
patterns. 2
microsecond. 1
nears 2
memory-user 4
nuts 1
power-of-two-sized 1
myargs[2] 2
poorly. 2
open(), 1
one: 3
recycles 1
misses! 1
memory-access 1
phase 3
malloc() 32
programmer, 1
lines 14
right.” 1
performance), 1
new_head->value; 2
masses: 1
p); 1
ran 15
porting 2
perfectly 2
problem; 2
query 1
onto 17
papers, 6
pthread_mutex_unlock(&q->head_lock); 4
patch 5
percentages. 1
min 3
mov 33
next: 9
message 10
objects 5
node_t 24
mystery 1
positive 4
opinions 2
oops; 2
register), 1
ms), 4
memory? 9
physics. 1
manage 19
properties; 1
list? 1
rip 1
performant) 2
nptl 4
max 1
p3.c 3
preemption 2
random 37
problematic: 1
performs 21
questioning 1
open. 2
parallelization, 1
queue_init(m->q); 2
performance-minded 2
perhaps, 1
mini-computer; 1
must-read 3
minutes 1
powerful. 3
occasion; 1
non-cooperative 2
news 2
practical 8
opposing 2
opinion 1
relaxing 1
must, 1
memory” 1
releasing 16
management, 1
order 80
lists, 7
rules 6
number), 1
pick 15
meaningful 5
page). 1
prior). 1
rc, 3
processor, 13
pipe 8
read/write 1
out-of-memory 1
parcel 1
rage. 1
performed, 2
pipe() 2
models 2
part 52
miss) 1
prerequisite 1
occur. 3
non-preemptive 2
prepared 1
orders 2
naturally-occurring 1
place, 9
mesmerizing. 1
reliability 2
proportion, 1
manager. 4
outcome 4
load; 1
rvals->x 2
no 140
numerous 12
pieces. 1
meanwhile, 1
pages); 1
pro2 1
re-acquires 4
program-debug 1
pmap 5
reason. 3
overcome 3
raising 3
physically-indexed 1
played 1
nanoseconds). 1
mode” 1
missed 2
preventing 3
occurs; 3
non-stop; 1
particular 60
out). 1
processors 16
newlyfreed 1
platform, 1
mess 1
remaining 13
marking 2
locality: 2
satisfies 1
none.” 2
saw 12
of) 3
pleases: 1
over 90
measurement 3
parameters 9
proceed! 1
re-energized 1
program4 1
previously, 1
receives 4
overheads? 1
ran, 1
pioneering 6
pouvoir”, 1
nearest 1
modification. 2
previously 3
mode 23
odds 1
notably 5
outcomes 1
production, 1
notes, 3
pass 54
poorly, 1
messages 1
reporting 2
meeting 1
logical 15
pthread 57
saying 4
not, 14
on! 2
pressure. 2
overhead. 1
messages. 2
peaches; 1
process); 1
reaching 1
quite 114
priority, 7
recollections 1
overwriting 2
random, 1
predictors 1
negatives, 2
multiplex 1
policy 50
one-third 1
occurs)! 2
overheads. 4
productive. 1
notices 2
priority 61
pausing 2
popular. 1
microcosm, 1
modern 90
resources? 1
microseconds 2
lookaside 4
obey. 1
scheduler, 20
on-going 4
primitive. 6
overheads; 1
met 1
piece. 3
prove 5
ready, 3
processes, 31
quote: 2
priority-based 1
provides 30
own, 3
randomized 2
preferred 2
nicely. 2
myret_t 6
possess 1
open("./p4.output", 1
omit 2
own; 3
program; 3
now! 1
proceed 6
perceived 3
possibilities. 1
migration. 1
n). 1
rolls. 1
migrate 1
lookups. 1
obtain 10
second-chance 1
open, 1
primitives; 2
page? 1
mild 1
plain 2
producers, 1
recent 16
randomness. 1
recover 1
proceeding. 1
pseudo-random. 1
p1.c. 1
range 7
presenting 1
nightmares 1
needed? 6
potential 12
opinions; 1
one). 1
painful 7
prohibitive. 3
number, 4
processes”, 2
perfect. 2
powerhouse 1
million); 1
named 8
says: 1
migration? 1
loop.s 6
obviates 1
secretly 3
operational 1
printf("Final 1
milliseconds 6
pages, 26
pointers 5
professor 2
refer- 1
range; 1
regain 1
processor. 9
pushl 1
p3.c, 1
rarely-used 1
preserves 1
node, 1
nicely 1
precisely 2
optimizing 2
open("/tmp/file", 1
passes 5
protection, 2
obvious. 2
produced, 1
person 3
printf("child\n"); 3
mobile 1
scales? 2
needed 44
miniscule 1
loops. 1
occurs. 3
see. 4
others) 2
printf("Initial 1
minute?), 1
paging-linear-translate.py, 1
postulates 1
programming 7
regard, 2
re-initialized. 1
representing 2
programmed 1
requiring 11
parameters, 5
read() 1
prio_to_weight[40] 1
problem. 26
non-performant. 1
preempts 1
others), 3
option 1
peach. 6
question; 1
professor? 1
professors, 1
printf("hello 3
modes 2
scheduler; 2
new; 8
misses), 1
lovely 1
out"); 1
seen 31
private, 3
modes. 2
parameter; 2
powerful 21
progress. 3
registers) 2
read, 7
put(int 2
process 403
resource. 2
part) 1
reader: 2
now-standard 1
non-zero, 1
previously. 2
outcome. 6
out! 1
perfection 1
queue. 12
phenomenon 1
modified). 1
scope 2
multi-processor 4
newly-allocated 2
magic: 7
problem 121
prompt 4
p. 1
series 9
privilege 8
modifying 2
paranoid. 1
pre-WWII 1
project, 2
reap 1
proportionally 1
related 18
processors, 9
relatively 16
resources; 2
on 719
recent, 1
passed 18
ocean, 1
occurs), 1
printf(), 1
over. 1
overcoming 2
periodic 1
queue_t; 2
placed. 1
mobility 1
scorned, 1
mutex->flag 6
nothing. 2
malloc.py, 1
processes: 4
protection; 2
set” 2
probabilistic 1
module 1
pages. 28
park. 2
preferring 1
ps 2
pthread_cond_signal(pthread_cond_t 3
reason 32
purpose 9
puts 19
respect 2
release 23
operation, 9
reduction 2
paths 4
olden 1
odds: 1
priority. 8
overload. 1
overlap 6
periodically. 1
p: 18
policies? 1
molecules 1
segmentation, 4
numbers) 1
manager 3
professor. 2
mutual 29
pthread_mutex_lock(&q->tail_lock); 2
shooting 1
properties: 1
monitoring 3
paid 1
particularly 27
pattern 5
re-referenced, 1
producer/consumer 9
rechecks 2
put(i); 5
restored. 1
rate 27
relevant 13
opportunity 1
region) 1
peach? 1
open 7
once? 2
problem? 2
overly-large 1
problems, 12
philosophy 1
pages: 2
practice, 1
monster! 1
sensitive 1
object. 1
manner: 1
programmer), 1
myturn) 2
ptr, 3
simplest: 2
protection 22
mutex_t 5
presents 7
partner 1
pause 2
reach 2
producer; 1
recorded 3
q->head 4
retains 1
re-referencing 1
removes 1
order! 1
registers), 2
per-futex 2
operations. 8
queues; 1
overwhelm 1
operations 26
problem” 1
pointer. 3
painful; 2
prevents 3
motivate 1
sent 3
offers 1
match. 1
programming. 5
name). 1
python 1
simplifying 3
pthread_mutex_init(&L->lock, 4
my 6
presumes 1
per-CPU 5
percentage 5
ready. 1
promise 1
recourse 1
queue) 1
retry 6
reached 1
repeat 1
output, 2
relegated 2
out-of-bounds 1
performance. 35
re-reads 1
pages) 3
optimal. 1
producer, 2
pop 1
printf("(%d) 2
moustache 1
sequential” 1
omniscient, 1
parent 44
matter. 2
property, 2
necessity! 2
sketched 1
quickly 21
quoting 1
namely 5
principle. 1
near 13
receive 11
performance, 14
prone; 2
redoing 2
quote 7
running), 1
realize 5
represented 3
outside 4
required 15
outputs. 2
place; 1
reader 7
papers. 4
optimizes 4
pthread_mutex_init(&lock, 2
popular, 1
procedure. 1
of 3668
set. 2
parts 19
memory-intensive 1
ps. 1
once 60
needlessly 3
slight 2
randomly-generated 3
r-x-rw--r-x-r-x-r-x-r-x-rw--- 1
must 152
performs. 2
privileged) 2
nearly-endless 1
recommended 1
period; 1
proportionality 1
referencing 1
races 4
runs. 11
regardless 2
repeat, 1
overstate 1
resumed, 1
page), 2
players 1
realloc() 4
parallel, 2
q->tail->next 2
popular-sized 1
out, 27
offset. 6
sharing. 3
pause, 1
mid-execution 1
ptr; 2
online 6
network. 2
processes 107
slightly; 1
re-check 3
raises 8
n; 1
permissions 1
proc 5
newfile.txt. 1
regions, 2
node 12
proves 1
regards 2
re-acquire 1
rw- 1
remote 1
repeating. 1
oversubscribed; 1
retaining 3
pointer? 1
page-table 31
referenced 6
path, 2
quickly. 5
possible. 14
p4 7
on-disk 5
shouldn’t. 2
ones 8
pay 12
quantify 3
opens 4
new. 3
producers 3
sneaky 2
reacts 1
reac-quiring 1
nanoseconds. 3
picture 5
proc_state 2
placing 7
regs(A) 3
not), 3
purify 1
reliability. 2
reads” 1
scale. 1
responsibility, 1
reproduced 1
p2; 5
returns. 3
poor 10
pagedirectory 1
register. 4
peaches 2
radical 2
pragmatists 1
paging. 4
middle, 1
sidebar 2
optimization. 1
peep 1
opportunities 1
queue, 17
newfile.txt 2
program? 6
software 17
realization 1
solution. 8
networks, 1
plenty 3
process), 3
plans 1
repair 3
noticed 5
rage 3
relocating 1
referenced; 1
scientist 1
rest. 2
required, 3
packing 2
risen 2
powerful, 2
paper: 1
registers; 4
rc; 4
performing 14
precisely? 1
paper, 3
minds 1
signal/wakeup 1
ordering; 1
percentage, 1
option, 2
re-use 1
non-synchronized 2
programmer; 4
reasons, 6
reason: 3
soon, 1
no, 1
pmap. 1
profit 1
policy. 4
replacements 2
observed, 1
randomization 3
request? 1
references, 1
returning. 1
search 20
research 18
powers 1
run, 24
relatively-slow 1
readable 1
preemption, 2
pieces 19
parallelism. 2
minimizing 1
simultaneously, 1
organization 2
perl). 1
permanent 1
performance 91
person; 1
non-zero 3
programs, 16
received 3
running 227
refers 9
non-computer-types 1
policy, 12
pthread_mutex_lock(&L->lock); 8
portions 7
reset 3
obtained 1
rates 1
requests, 2
register) 2
revenge 1
second: 1
research.microsoft.com/ 2
pre-specified 2
released. 6
real, 2
relocated 6
placement 1
paralleliza-tion, 1
miss? 1
sizes, 2
ordered 4
original 19
persons 1
read), 1
piece, 1
page 635
nondeterminism, 1
project 4
recourse: 2
sorry, 1
rwx 4
relocation.py 1
normal 11
possible; 2
publicized) 1
preserved. 2
resource; 1
ocean 1
re-accessed 1
research; 1
rele-vant 1
right. 5
sections. 4
resize; 2
prefetching 2
realized 8
renders 1
prints 41
player, 1
parent: 2
mjtsai.com/blog/2015/12/16/osspinlock 2
slumber 2
out.” 1
others 14
perspective 8
receive. 1
pioneer 2
painful. 1
noticeably. 2
pthread_mutex_lock(&c->llock[cpu]); 2
space? 6
references 28
removing 8
notes 5
possibly-failing 2
quantum) 1
printf("%d\n", 7
restricts 1
on) 1
said 43
reader, 1
reside, 1
relocated; 1
rvals->y 2
semaphores” 1
respectively. 2
prepare 1
rearranging 1
representation 1
proactively. 1
plural) 2
partially-ordered 1
monitors 5
small! 1
overlap, 1
our-selves 1
pessimal, 1
overall 9
plots 3
passion 1
now-sleeping 2
pthread_mutex_lock(pthread_mutex_t 2
point 39
relinquishing 2
requesting 1
now), 1
posterity) 2
rabbit 1
privacy 1
retain 1
operation), 2
satisfying 2
realizes 3
resource 14
remove 10
say? 1
semi-nal 1
result. 11
primer 1
reasonably 3
reside). 1
proceeding 1
policy) 1
past, 4
moreover, 1
something, 2
p5 5
recommended. 1
overlays 1
space. 45
pays 1
objects. 1
spaces, 5
pre-initialized 1
pthread_mutex_unlock(&L->lock); 12
remembers 2
resources, 4
null-pointer 2
precisely, 1
raise 10
problematic, 1
reason, 8
opposites 1
scaling 2
recall, 1
restored 4
replies: 1
says, 1
separation 5
rosy 1
printf("%s: 4
reclaims 1
processes) 1
pool? 1
performance2 1
returns 61
moved 6
pages), 1
recursion). 2
policies: 2
reducing 6
sparse, 1
penalty 2
obviously, 1
space” 1
precious 2
questions, 3
remove_min(queue); 1
restricted. 1
null. 2
prematurely-optimized 1
revolutionized 1
problems: 2
recently. 2
optimizations, 3
scheduling; 4
rechecking, 2
resulted 2
responds 2
scheduled; 1
servers, 2
product. 1
running, 30
references. 2
popularity 1
processor 28
rise 2
performed 11
much. 6
pagetable 4
owns. 1
politely 1
register, 6
spawn() 1
performance”, 1
oh! 1
stack), 2
presented 8
r-x 5
responsiveness; 1
return-oriented 1
printf("main: 8
rightly 2
process? 4
optional 2
refer 27
scheme, 1
releases 14
returns), 1
responsive 1
screen, 1
similarly 3
number 198
professor, 1
runtimei 1
region, 5
potentially-starving) 1
programs5 1
routed 3
personal 1
multipro-gramming 1
paradigm 1
p4.c 2
pretend 5
regs 3
species. 1
perspectives 1
on; 1
starvation 3
prevention 2
re-referenced 2
retry, 1
returning) 2
problem”, 1
routine1, 1
programmer 12
ordering, 2
record 6
scientific 1
reliably 3
reused 1
restricting 1
sense. 11
simple, 9
objectives; 1
program). 2
safe. 2
relates 3
pressure 5
rvalue); 2
phases 2
prompt> 37
mutex_lock 2
parent; 1
page-frame 1
problematic 2
replete 1
problems. 11
peterson.s, 2
operator, 2
statistics 4
printf("%p\n", 1
read-only, 2
priorities 5
right) 1
protocol, 1
proportion 5
run. 22
out. 11
referenced, 1
second-level 3
resource, 4
ridiculously 1
return. 1
sequences 5
size; 6
observes 2
programmers 13
said, 10
relocation 6
primarily 3
saved 11
place? 1
protocol. 4
myargs[0] 2
part. 1
panacea, 1
spend 10
reset. 2
processes; 7
phase, 4
stopped, 1
rewrite 8
really. 1
programmer. 5
routines. 1
pthread.h 2
provisions 1
runs; 3
p6 5
regained 2
out 181
restored, 1
section, 24
rights). 1
rewrite, 2
slowly, 4
occurs: 1
programming, 2
say 29
replacement 30
primitive 9
scenarios, 2
planet 1
protocols; 1
mythread(), 2
set 146
peaches, 1
passing 12
resistance 1
processes’ 1
photos 1
streams, 1
right); 2
rearrange 2
spin 79
progressed, 2
runaway 1
pthread_cond_t 3
pure 2
rv; 2
page) 4
region; 1
outrage! 1
reused, 1
segment. 8
round 2
scare 1
someone 3
off. 1
proportions 1
scaling, 1
principles 5
requires 25
scripting 1
plus 11
pthread_mutex_unlock(&lock); 2
nanoseconds 1
set-top 1
peek 1
patience, 1
resource) 2
produce 9
rogue 1
stride 17
reassurance; 1
spin-waiting 4
prohibitively 2
runs? 2
pthread_create(pthread_t 2
purpose. 2
rvals; 2
page-fault 3
relaxed: 1
packet 3
routine. 2
segments; 1
physical 236
scorned 1
on, 11
provably 1
scenes, 2
runs 83
sometimes 73
priority). 1
root, 1
security; 2
policies, 7
published 4
nature, 2
pending 1
sharing 30
placed, 1
results? 2
producer. 2
saves 9
struction 1
reboot, 1
stand 1
regions 11
sane 2
pushing 2
queue). 5
satisfy 9
paper. 1
remedied 2
page; 5
rudimentary 4
segment’s 1
points 15
screen. 3
once); 1
question). 1
schedule 14
rv 4
sooner 1
probabilistically 2
rude 1
seemed 1
poorly? 1
push 2
necessary. 1
shouldn’t 5
possibly 1
people 28
resume 8
program: 6
say), 2
structure: 2
projects 3
store-conditional, 4
relaxation 1
scenarios 2
race): 2
quote. 4
sbrk() 1
par-allel, 1
remind 1
run? 8
serviced, 1
preempt 2
searches 3
show 24
paper 85
scheduler. 10
sat 2
space-management 1
proc-struct(B) 1
run; 1
positivity 1
queue; 5
needs, 2
signal. 3
segment 56
potentially 7
persistence 1
revolutionary. 1
prone. 2
scale: 1
suffer 8
operating 151
promoted 1
stream. 2
reload 1
sched 7
readable. 1
ran; 1
scheduler); 2
partition, 1
repeating 1
runs, 21
ran. 1
segment; 4
previous 19
simplified; 1
parent. 4
scheduler’s 1
saves/restores 1
spaces). 1
process: 2
runtime, 2
prac-tice, 1
random-access 1
non-concurrent 1
signals; 1
semantics, 5
premature 2
picking 6
ruins 2
protocol 3
run-time 7
suggested 8
p3.c), 1
protected 4
structure) 1
remainder 1
schedule: 2
readonly 1
random; 1
school; 1
patterns), 1
resort 1
satisfaction, 1
random. 1
previously; 2
single-entry 2
segmentation 26
past 6
secretary; 1
saving 6
rvals->y); 2
prefer 2
programs. 25
ranges 1
noticing 1
simulator, 1
sequence: 1
stack 79
premise 1
pieces, 5
scary 1
safer 2
providing 16
superpages, 1
pthread_mutex_lock(&q->head_lock); 2
students 3
page, 28
request. 7
scream, 2
reasonably. 1
randomizes 1
phone, 1
responsabilit 1
scale, 1
section. 34
rarely 1
printf("hello, 6
situations. 1
sensed, 2
sizeof() 7
seemingly 12
scale 4
section; 2
presumably 4
proliferation; 1
rdtsc 3
null 2
sleeps 4
setassociativity; 1
stack”! 1
presence 11
piece” 1
scenario. 4
scalability 2
pthread_mutex_lock(&c->glock); 4
support. 9
pthread_mutex_timedlock(pthread_mutex_t 2
success! 4
page-not-present 1
requests; 1
seconds!). 2
reboots 1
randomly-accessed. 1
scenario 4
piece 36
sections; 4
result 30
rarely-taken 2
priority; 1
penalize 1
share; 1
slots, 3
segment: 10
schemes 5
sees 4
prevent 8
promotes 2
realistic 3
obtaining 4
straightforward; 1
printf("this 1
pioneers 4
scheduler.py, 1
share 36
scanning 3
quest 3
surprise. 1
put() 4
sure; 1
page-sized 4
researchers 8
secure 3
relatively-short 1
semantics 8
place! 2
sentence. 2
return? 2
read 91
react 1
space 278
person! 1
problem, 24
short-circuiting 2
snatch 1
segmentation? 1
school 2
services, 1
proofs 1
primary 9
short 29
occur? 2
stuck, 1
priori 3
school: 2
she’ll 2
place 46
scheduled 11
question: 7
suspicion. 2
puzzle 2
swap? 1
pal, 2
resizing, 2
scheduler), 1
relocation. 2
sequence. 2
platforms. 1
separa-tion 1
returns, 7
reasonable 9
reads 10
specified 8
perspective. 2
split 9
shortcomings. 1
so? 5
segmentation” 1
reference 57
rebooted, 1
printf() 1
single-threaded 4
subset 3
occurs, 14
proceeds 4
scientist, 1
simple) 1
provide 65
placement, 1
scoff 1
queues: 1
switching; 1
queue_add(m->q, 4
system), 3
parameterize 1
restores 4
scheduling. 9
replacement. 4
short). 1
pleasant. 1
server, 1
reveal 1
reduced 5
processing 4
pid; 1
src); 3
simulator. 2
space), 4
science. 2
sets. 2
reg/PC 1
prioritizes 1
referred 27
sit 6
substantial, 2
professional 1
surprising 7
seamlessly 1
pthread_create(..., 4
simplicity, 16
poorly 3
scratched 2
rather, 11
t). 2
rare 2
table2 1
parent? 1
return-to-libc 1
school, 2
requested, 2
shorter 6
policies. 7
server-based 2
rid 1
references: 1
programmers. 2
places 6
stack-allocated 2
simultaneously 11
scratch 3
special 22
show, 1
regions) 1
relevant. 2
sizeof(int)); 2
off 30
progress 8
problems 55
switches, 2
shells). 1
simulation. 1
predate 1
segmenting 1
put 41
ratios 1
tailor 1
re3 1
tables? 1
patience 2
returned. 2
searching 4
resident 2
signaled 1
preempted 4
serviced. 2
robust 9
register). 1
programming: 2
platforms 2
starting 14
sincerely 1
second, 6
specification 1
simplify 1
register; 2
starts 25
offered 1
proportional-share, 1
slice 36
process-run.py, 1
swtch(struct 1
symbol 3
situations 3
preserving 1
senses 1
question! 1
readers, 1
technical 3
read. 6
tens 2
perfect 7
returnsfrom-trap, 1
section? 4
sections, 2
see). 1
rest 18
principle 6
sits 3
rwrw- 1
relative 3
pronounced 1
relax 10
properly 15
single, 1
sections 6
size=100); 1
relocate 5
release? 2
often? 1
protection. 3
produced. 1
slightly 19
state 73
shipping 2
system1 1
sizeof(PTE)) 7
pressure, 2
serve, 1
questions. 3
service 11
tend 7
readability 1
test-and-set! 1
permission 1
room: 1
similarity 1
seeds 11
simplicity 7
printf("%d 4
sizeof(PDE)) 1
rw— 2
point. 7
starve). 1
relinquishes 1
provided 20
situation. 2
seek 2
sizeof(), 1
remains 11
reliable 6
opened 1
pthread_attr_t 2
small). 3
statement, 1
producer 26
shrinks 1
slow. 3
similarly, 3
table. 26
really) 2
read(), 1
recently, 1
terms 10
readily 5
test-and-set.s 2
persists, 1
routine1 1
them, 20
segments. 3
singlequeue 1
printf("returned 4
size, 12
safe 6
pointer). 2
stems 1
relocation, 5
pthread_mutex_init(&q->head_lock, 2
sizes 8
segment), 3
snooping 1
repeats, 1
remember 20
operating-system 3
pthread_mutex_init(&q->tail_lock, 2
repeatedly 15
stay 3
professor! 2
pretends 1
slowly) 1
simplicity; 2
tables; 1
settle 1
real-world 2
reclaimed, 1
ready), 2
personally 2
results, 4
rules, 1
ship 1
sketch/review 1
privileged; 2
sizeof(int); 1
scalability. 1
points; 1
strdup("wc"); 2
rely 5
pthread_mutex_lock(&lock); 2
remain 8
sleeping). 1
replace 9
sending 1
solved 2
replaced 2
origins 1
smaller 14
pthread_mutex_unlock(&c->glock); 4
replaces 7
storage, 2
primitive, 2
small: 3
thank 2
short-lived 2
reboot. 1
program, 58
records 1
reasonable. 3
physical, 1
retries 4
rvals->x, 2
shoppers 1
sleeping, 3
single 203
scheduled. 2
sleep. 8
program. 46
stream 7
pull 2
than 149
policies 35
they 149
slowed 1
replacement, 3
shorter! 2
report 9
repository 1
outcome? 5
snapshot 1
publishing 2
reports 2
storeconditional 1
priorities; 1
sparsely 1
thinking: 2
specify 10
recognizes 1
proofing 1
redirect 2
recall). 1
pipe; 1
rw59 1
returning 27
slices 10
sitting 4
sleeping/waking 2
programs; 3
shows 94
structure; 2
queuingbased 1
that: 3
pollutes 1
small-scale 1
thing 38
scheduler 110
shortest, 1
so, 37
required? 2
requests 28
p1.c) 1
rapidly 1
so. 15
required. 5
strategy. 1
processes. 22
sign 3
thoughtful, 1
speculation, 2
spring 1
pros 1
region. 1
recognized 1
saying, 1
placed 24
threads 197
sketch 3
right 42
slice). 1
program’s 9
single-queue 4
talk 10
quick 4
pragmatic 1
timespec 2
searched 1
soon. 1
sibling 1
sorry. 1
reserved 6
require? 1
pains 1
rate) 2
solutions 11
resides 9
studies 4
produces 7
thoughts 5
signals 13
reduction, 1
step). 1
pursue 1
strategy 6
reduced. 2
snippet 9
plays 2
scalable 15
tick 1
slab 5
safe? 2
sloppy 4
promote 1
six 3
testand-set 1
quickly; 3
predates 1
transforming 3
somehow, 1
segment, 14
similarly-named 2
space! 2
resided 1
spaces. 7
responsibility 6
rc 13
spin-lock 2
such. 1
response 31
property 10
threshold) 2
refine 3
regular 2
question, 1
strdup() 1
register-level 1
solidify 1
similar 45
poorly-programmed) 1
second; 1
procedure 12
sleep) 1
scheduler? 5
small. 1
pulled 1
sleep; 4
q->tail 4
rarely. 2
pri- 1
transistors. 1
service. 3
simpler, 2
reserve 4
passive 2
specialized 4
responsibility!” 1
rc_wait, 2
stack: 3
sum, 1
something 132
retrospective 3
prot 8
tmp->next; 2
rent 1
removed 6
queue? 1
requested 8
remarkably 1
solve: 1
similarly; 2
tick-by-tick 1
see: 2
processing, 3
slot 7
schedulers, 1
smart 13
themselves, 1
software) 2
question. 7
rears 1
primitives, 3
transparency 1
simulated 1
sets 27
reside 11
path. 3
spends 1
result! 2
spins 11
standpoint, 1
sun.com/solaris/articles/atomic 2
space-usage 1
revisited 1
protective 1
topmost 7
replacement) 1
student, 3
researchers/engineers, 1
queues, 12
renewed 1
sometime 1
times) 1
simplest 13
semaphores 1
properly, 1
small) 1
secondchance 1
space; 11
think. 2
solution). 1
queues. 2
reclaim 3
priorities. 1
slower, 1
shape. 1
showing 8
similar. 2
splits. 1
results. 6
starve; 1
surprised 2
perform 70
sparse 7
roam 1
protocols 2
tricky 10
research, 4
restricted 7
raised, 2
results 17
requests. 6
return 169
topic, 4
sinister 1
server 11
proportional 3
see! 2
spawning 1
tickets), 1
raised. 1
time-slice 5
two 241
proc-struct(A) 1
solve? 1
responsive. 1
re-checks 4
size); 2
stack). 4
so 197
stored? 1
systems) 4
philosophical, 1
structures, 13
round-robin 11
pthread_cond_wait(pthread_cond_t 3
succeeded. 1
typical 26
result: 2
returned) 2
reside. 1
space). 3
routinecalling 1
real 53
trade-offs 5
sizeof(PDE)). 1
setaffinity() 1
proportional-share 6
speculation 2
sense 26
recursively 1
randomly 4
tmp; 7
two-fold. 1
process-run.py 1
sort 6
running; 3
reaction 2
skill 2
stands 1
solving 4
taken. 1
spatial 7
pioneered 4
subject 4
run: 3
some 505
pthread_create(&p, 2
success: 2
unanswered: 1
returning; 1
review 2
rest, 1
spaceshared 1
runnable) 1
recall1 1
tradeoff 1
slow, 8
provided, 2
stages 1
shared 67
reference. 8
setting 15
ranging 1
to) 1
ubiquitous 2
processing; 1
spaces) 1
satisfactory 1
software4 1
ready 33
starts, 3
somebody 5
task. 7
src.opensolaris.org/source/xref/ 2
pleasure: 1
subsystems. 1
soon-to-be-exec’d 1
running. 23
pthread_mutex_init(&c->glock, 2
start 58
understanding 19
road, 1
resuming 1
spear-headed 1
running? 4
redirection, 1
transition 6
snippet. 1
q->head; 2
stops. 1
shells, 1
refined 5
shift 1
too: 2
unexpectedly 1
rather 29
sparc/ 2
such 274
satisfied 1
some_function(char 1
really, 4
somehow 6
state, 13
taste 2
point1 1
sufficient 2
sophisticated 13
right; 1
pthread_mutex_unlock(&q->tail_lock); 2
starving 1
save 27
undo 4
return-tolibc 1
role 11
started, 1
sage 1
referring 2
treasure 1
soon-to-be-running 1
queued 1
straightforward, 2
shuts 1
refuses 1
short-running 4
tool. 1
unless 1
readers 1
unlock. 4
supposed 4
program 321
scaling; 2
sometimes) 2
replacing 3
sometimes, 2
soon 25
sorry 1
popl 1
summarizes 1
soup.” 1
supports 5
scaling. 1
switching 17
tables), 1
returning, 2
queue 55
roused 2
stash 1
says 2
trickier. 1
region 25
sorted 1
quick, 1
strdup("p4.c"); 1
single-CPU 2
reject 4
short. 3
tragically 2
spin-waiting. 2
reading, 1
unmapped 1
symbiotic 1
system. 57
scenarios), 1
reproduce, 1
stack, 18
step-by-step 2
source. 1
posed 5
states: 1
specific. 1
seconds 9
unimaginatively 1
routines 41
targeted 1
right, 3
realizing 1
updates 33
routine, 10
sbrk. 1
trouble. 3
register? 2
qu’une 1
student 3
source 23
skip 5
relate 1
shot 2
transistors 2
spin. 4
reality, 1
signal 28
projects. 1
systems; 9
request, 10
states. 1
store 24
spaces 20
possibility 5
second 78
store-conditional 7
spinning. 2
seed. 1
run-and-yield 2
tell? 2
statement. 2
red-black 4
us. 4
roughly 24
rule: 2
scenario, 3
twenty 1
race. 4
registers, 10
study. 2
sparsely-used 2
sleeping 5
remains. 1
transparency2 1
trap), 1
stateful 2
reasoning 1
proofs” 1
system’s 3
requester), 1
statistics). 1
streams. 1
spectrum, 1
simply 128
possible: 1
slice. 1
stores. 1
stage 3
seeds; 1
sad! 1
textbook 1
storage. 1
redirects 1
usability 1
run), 2
runnable; 2
schedulers. 5
type) 1
schedules 4
regs(B) 3
stuff? 1
speed 12
so), 1
repeatedly. 2
used) 1
traverse 1
statements 1
recently 6
proper 14
taken 16
residing 2
store), 3
sub-microsecond 1
speeds; 1
see? 6
power. 1
slices; 2
successful. 1
sentence: 1
states 15
say, 5
string, 2
that? 7
reflect 4
use) 10
rvalue; 2
rw45 1
rx 4
unasked 1
screen 1
relies 1
success. 3
src) 1
software, 4
require 10
user; 3
true, 3
refers? 1
proponents 1
static 21
takes; 1
rethink 1
should 274
supply 1
splits 1
segmentation. 3
smarter 1
private 18
successfully) 1
stays 4
summary 5
stopping 4
thesis 1
strange 8
ravages 1
same, 3
second. 5
uncaught, 1
register 75
seeds, 2
relaxed 2
surprisingly, 6
stack; 3
software-based 1
resides. 3
v); 2
unallocated 2
registers. 3
provides, 1
remaining, 1
strcpy(dest_buffer, 1
returned, 2
task 16
sure. 2
spread 9
segmented 4
shown 35
solutions. 4
sense; 5
probably 32
processor; 5
superuser 3
usual, 3
thorough 2
stride) 1
rc_wait 3
saved? 2
section), 2
under- 1
relinquish 5
undergraduate 4
released 10
suspect 1
solution: 1
standard 22
restoring 5
victim. 1
uncommon 2
vmalloc, 1
remedy 2
resulting 24
strdup 1
rewrites 1
tests 5
surely) 1
stack) 7
self)) 2
shudder 1
sources: 1
structures? 1
properties. 1
sequence 24
v 2
survey 16
thread-local 2
stronger 2
re-place 1
sbrk 3
seem 7
segments: 1
schedulers 14
underlies 2
remainder. 1
swath 1
solve. 1
standards/SPARCV9.pdf. 1
step, 5
understandable 2
question 27
reply: 1
responsible 6
rich 2
reusing 1
strengths 2
right). 2
text. 1
systems), 1
stipulated 1
shifting 1
signal() 4
splitting 3
significant 4
proportions, 1
single-processor 5
valgrind? 1
swaps 3
thread-safe, 2
stronglytyped, 1
request; 1
send 13
select 4
unit”, 2
unlock? 2
user, 3
thus, 54
reside) 1
t(B) 1
sploitfun.wordpress.com/ 1
stated, 2
undertaken; 1
queue_t 2
still 59
robin, 2
queues 6
scheduling, 15
strongly 5
theme 6
tail_lock; 2
there; 5
short, 3
strung 1
stance 1
strictly 2
site: 2
pthread_t 14
varies, 2
system) 1
stuff, 1
system-call 5
sense, 6
silently, 2
valid; 1
ticket, 2
restart 5
table? 3
sprawling 1
stored 15
unfortunately, 14
run 374
really 52
strategy), 2
rate, 3
vruntime 10
seasoned 1
strut 2
stopped 2
taken: 2
routine 60
richer 1
thereby 1
shortest 2
sudden 1
want 50
susceptible 3
slices, 2
pthreads 8
wasted. 3
subsequently 4
requirements 1
task; 3
serious 10
simulator 16
value. 12
time! 2
return-from-trap 17
tables, 8
sptr. 1
uniform, 1
started 11
reasons. 10
structure 73
stuff 8
re-create 1
secretary 2
subsystems 1
stored. 1
task: 1
sad. 3
right? 8
thr_exit(); 1
shutdown 1
setpark(). 2
stringent 1
way) 1
structures: 2
smaller? 1
purchase 1
weird; 1
subverted 1
researcher 2
thankfully, 1
servers 1
situation 9
vi, 1
times. 7
return-to-libc. 1
talents, 1
scenarios. 1
unlock 13
starvation, 1
recency 1
sub-jobs, 1
subtract 1
re-duces 1
security: 1
suggest 3
strategy, 2
taught?! 2
room 17
thread; 7
side). 2
sets: 2
switch() 3
wc 11
stub 1
winning 7
suffers 5
willing 3
race 28
success; 1
same 145
restore 17
servicing 5
sixteen 1
vmstat, 1
tirelessly 2
road” 1
target 6
schedule(curr); 1
them 99
stealing 1
regains 3
succeeded, 2
until 52
suddenly 2
recommending 2
segment? 1
supervisor 1
streams 2
terminated 2
rotational 1
threadID. 2
signal?? 1
shmget() 1
swtch: 1
somewhere 4
worked. 1
supports. 1
woke 1
range. 1
survive 2
saying; 1
resumes 5
setting, 1
skills. 2
together. 5
rough 3
tcsh), 1
scheme 6
scheduling 102
store-conditional) 1
remains: 2
successfully, 1
update) 1
sz; 1
recursive 1
segments, 5
surprising, 1
was 188
terribly 1
structure. 16
structures; 2
ticket.s. 2
signaling 17
short) 5
table; 5
speeding 2
worker 6
surfing 1
wonderful 11
re-awaken 1
swapped 12
reuse 1
severe 3
slow; 2
traces. 2
routines, 5
team 2
scalable. 5
script 2
scribble 2
stride, 1
remember: 1
switch? 2
string 12
redirection 2
services. 1
surround 2
reduce 15
reference) 1
system, 65
table) 2
take, 3
technology-driven 1
registers 48
style. 1
represent 5
simpler 6
six-level 1
teaching 1
splintering 1
table 175
working-set 1
switch, 8
workloads 14
reaches 2
switching); 1
root 3
showed 4
software), 1
track; 1
then? 2
ten 7
scan 5
test-and-set. 4
reproduce 1
upper 1
studying 9
section 55
several 1
suspend 2
way: 5
testand-set! 1
seconds. 3
tidbits 2
subdirectory 2
required). 1
tell 28
simplicity), 1
them), 2
sleep 30
spuriously 2
sure 56
wrap 2
swpd 1
react, 1
runtime 2
t 10
signal, 1
works 54
some, 2
translations. 6
thr 7
se. 1
thr_join() 3
theory, 1
urging 1
super-linear 1
request 35
semantics. 2
since 7
t. 2
while2 1
them? 3
time-shared 2
restarts 1
tennis 1
sizes. 3
tempting 4
starve: 1
system: 6
state. 10
taking 11
those 84
small 61
read? 2
safely 3
signaling. 1
sake 5
table, 26
spell 1
trapped 2
scheduling? 1
segmentation). 2
see 272
thumb. 1
thermodynamics 1
used; 2
surface. 1
resources. 5
simple 196
size). 2
table: 3
time-slicing. 1
restricted? 1
text, 2
slice, 7
terminal, 1
things 46
wreak 1
table). 3
steps 3
tcsh, 2
thought 17
snooping, 1
reasons 6
world. 3
scheduled3 1
tackle 4
states, 1
stores 16
tread 1
seconds). 1
segmentation.py 5
seems 12
tight. 1
time? 9
users: 1
surprise: 1
sensible 4
restrictions 1
simpler. 1
skip-ping 1
terminating 5
told 2
return-fromtrap 3
slower 6
test-and-set.s. 2
thread), 2
wrote) 1
x-axis 1
stitch 1
tends 5
tickets, 4
so). 1
reclaiming 1
scourge, 2
se, 2
would 200
string) 2
security. 1
tree 15
self; 2
sends 3
sequence, 8
— 131
times, 10
valuable 3
systems? 2
sentence 1
returned 15
simply, 4
sleep-ing. 1
terminology) 1
too! 2
revert 1
smaller, 1
tests), 1
taken, 5
threshold 11
top 32
storeconditional. 1
testing 2
timeline, 1
software. 2
redirected 2
tasks. 1
seconds), 3
wreak1 1
subsequently, 1
the 8323
tricks 2
segments 22
think) 1
sense? 1
serve 2
’94. 1
together, 3
virtually 9
terminate. 3
right”, 1
separate 17
skimmed 1
slogan. 1
thread!) 2
rule 4
solutions, 3
thing. 2
talks 1
y-axis? 1
through, 1
toughest 1
strange; 1
somewhere... 1
reference, 2
technique. 1
security, 1
think 66
substituted 1
threaded 2
tricky: 1
selection 1
write 63
third, 2
setup, 2
shade 1
’Precise’), 2
tolerate. 1
waiter 2
terms, 3
rw 6
serviced 4
skips 1
sounded 1
threads). 2
running). 2
solves 7
things; 3
task, 5
test? 2
timer, 4
tracking 2
studies. 1
soon-to-be-faulted-in 1
region). 1
terms) 1
semaphore 1
those; 1
successful 5
three) 1
type. 1
sense?) 1
wrote: 1
threats, 1
short-lived, 1
shared. 1
“Evaluation 1
trace? 2
web. 1
them) 1
scales. 1
shortly 1
slower. 3
space-efficient, 1
slowly 12
sad 4
something. 2
thinking, 2
yourself! 3
thanked 1
tip 2
transfer. 1
specifics 1
remain? 1
subsequent 24
theoretical 1
services 1
that 1398
thus: 1
surrounding 2
understanding: 2
setpark(); 2
yes: 3
three-instruction 3
through 56
should. 1
side 4
“Man-Computer 1
translate 19
worked 6
themselves). 1
scientists 4
simplicity. 3
throughput?) 1
speeds. 1
sockets. 2
sanity 1
soon-to-be-executing 4
thrashing 2
× 1
that. 9
today, 4
treats 1
spins, 2
remains, 1
subsystem 4
thing: 4
set-it-to-1 2
things); 1
to; 1
survive, 1
unified, 1
sharing: 1
you. 8
timeout 4
signal(). 1
timer 36
simulation 7
“Program 1
translations, 6
written? 2
there? 4
scream. 1
site 1
see, 15
size: 16
software? 1
scans 1
sounds 6
threat 1
’d’ 1
threshold; 4
too; 1
triggers, 1
stale 1
remembering. 2
starvation. 7
threads) 1
shell, 5
thinks 7
too, 2
switch. 4
unknown 1
tool 15
yourself2 1
timing? 1
signals, 2
times? 2
sleep, 13
“There 1
true. 3
x[10]; 1
this? 5
thrown 1
spinning, 2
segmentation; 2
sizeof(node_t); 1
times 40
special; 1
security 21
spin-wait 10
“Exterminator: 1
topic. 1
time-sharing 7
twice). 1
subtle 1
repeatedly, 3
starved 1
throw 6
shown), 1
threadID, 2
shells; 1
synchronized 10
unlock(&m) 1
tracked 2
tip: 1
© 21
simulating 1
tive) 1
sleeping. 4
“Volume 4
tuned. 2
yet: 2
thread? 2
state1 1
seminal 1
sounds. 1
slabs 1
tn 2
that’s 8
sense: 2
start. 1
“Inside 3
total) 2
time-space 2
units 1
succeeds 3
replace? 3
steal 3
timely 3
tickets: 1
shrink). 1
simple: 39
system; 8
unlock(lock_t 10
tract 1
tough 2
’04, 2
sitting; 1
’13, 5
slice), 2
“Why 2
type, 4
yourself2! 1
stop, 1
served 3
sparked 3
slots 7
threads, 38
to? 2
the?? 1
serves 6
state; 2
“Intel 4
traffic. 1
timing 5
unreasonably 1
super 2
up. 7
store, 2
timing, 3
tracing, 1
similar), 1
simulate 3
t, 2
size) 5
translated, 1
translated), 2
today 7
sizeof(x)); 2
“Efficient 2
“looping 1
slow 15
typeset 2
zero, 3
strike 1
shaded 1
spent 7
space) 4
thread” 1
together 12
ticket; 2
set, 3
step 2
“Is 1
try. 1
tomes 1
report? 4
surprised. 2
updated, 2
strict 1
tmp 8
traversal 3
simplified 2
unmodified, 1
tension 3
slides 1
treating 2
traversals 2
tree. 5
slowdown 2
“He 1
“out 1
slowly; 1
underneath 2
zeroing. 2
simultaneous 1
structures. 22
spurious 2
stacks, 3
traces 3
tlb.c, 1
tickets 30
severe. 1
store-conditional. 3
“Segmented 1
unlikely 3
top), 1
requests? 2
systems). 1
uplifting! 1
stride. 1
to. 4
trigger 2
software; 1
unnecessary 1
test 7
slow? 1
touching 1
trees; 1
snippet: 3
tries 41
“OS”, 1
“real-world” 2
small, 7
undoes 1
’03. 1
size. 7
studied 5
storeconditional) 1
starting) 1
translations 22
topic 18
timeline 3
sharing, 3
sub-sequent 1
“With 1
unsatisfying) 1
tracing 6
research. 1
t; 2
upward 1
two: 1
tools 16
somewhere). 1
study 52
updated) 1
themselves 4
small/random; 2
track, 1
trends. 1
so; 2
turning 9
“Parallel 1
under 18
small-sized 1
uniform. 1
’Approximate’, 2
sizes; 2
sub-job 3
streaming 2
starve 2
trapframe 1
totaltickets); 1
times), 1
shell 12
substitute 3
“owned” 1
unusable. 1
tracks 8
→ 17
telling 1
useful? 1
underpowered 1
too” 1
sorting 1
success 9
upon. 1
timer? 3
snuck 1
translates 5
sources 6
“steal” 1
“best” 2
unfairness 4
solution 44
smallest 5
units; 4
“010101”, 1
sloth” 1
subjunctive 1
strings 1
statement 3
trust 14
stuck 16
shrink) 1
succeed 2
try 64
unusual 3
resides, 1
treasure-trove 1
to 4068
utility? 2
unlucky) 1
transparent” 1
space: 2
suggested. 1
usage; 1
timers, 2
typing, 1
true! 1
specifically, 13
“tried 1
“emulation” 1
unrealistic; 1
somewhere. 3
sneaks 2
then 227
software-managed 5
“Guide 2
solid-state 1
subsections 1
stolen 1
solution, 10
use 317
storage 12
sufficient, 1
simple. 10
two-level 7
type 73
resources 6
trylock 4
together! 1
vector 1
truth: 2
unused 14
suitable 2
specific 21
used? 1
tips 2
unpark(threadID) 2
ugly 3
updated 8
update(counter_t 2
sounds! 1
upon, 1
there). 1
soon-to-be-run 1
“Hoare” 1
suc-cessfully 1
totals 2
user. 7
solve 20
succeed. 3
straightforward: 6
switch 62
simulations 4
units, 2
unmasks 2
respond 1
twice, 5
touch 4
virtual, 1
upper-half 1
switching) 1
spin, 2
tandem 5
user/supervisor 1
tolerate 1
speeds 4
uncommon), 1
valid). 1
underlying 9
source, 1
uses. 3
therein 1
spans 1
“She’s 1
transformation 2
user’s 4
someday). 1
suite 1
support? 4
stringing 1
synchroniza-tions 1
slip 1
unpack 2
used. 15
return; 10
two. 3
translations! 1
virtualization. 4
upwards. 1
typedef 33
spinning 27
techniques 24
too. 6
speedup. 1
update; 1
user 117
values). 2
units. 3
space1 1
variables), 1
those, 1
speculative 1
“Survey 1
translation-lookaside 1
virtual-memory 1
sound 5
switching, 2
strlen(), 1
switches 14
slowly. 2
unpark() 2
synchronization 26
root). 1
uber-engineer 1
trap, 3
us, 2
virtualized 6
unfair, 1
spot 2
terrible 3
traditionally 1
stop 21
users, 1
stack. 17
utilizing 4
variables. 13
urgent, 1
specifying, 1
virtualized; 1
starvation: 1
“hello”; 1
though 29
transparently 3
virtuallyindexed 1
specialize 1
synchronize 2
suffering, 1
tail 5
softwaremanaged 1
unrealistic? 1
system.” 1
routine), 4
unsuspecting 1
trees 4
uniformly, 1
transferred 4
valid 51
storing 1
test-and-set 15
useful 69
us 84
standpoint 1
vector, 1
waiting 94
vice 1
usage, 2
stack-smashing 1
visible 2
stated 2
“second-system 1
threads); 2
void; 2
splay 1
system). 4
trap 52
suggests 2
talking 5
solely 1
unsafe 4
systems: 5
running: 1
underly 1
unlock(&mutex); 2
treat 4
strdup("p3.c"); 1
test-and-set.s? 2
val; 2
useful2. 1
use; 4
status 5
violations). 1
website 2
values 75
view, 1
using; 2
statically-initialized 1
walling 1
“walk” 1
waking, 1
struct 49
sptr 2
tables! 1
unblocked 2
sum 3
task). 2
solution; 1
unused. 2
taken? 1
runs...) 1
undertake 1
unpark 2
treatment, 2
stream: 2
there! 1
true 14
user-facing 1
utilization, 1
strcpy(dst, 4
virtualized, 1
weightk 1
vary. 2
value); 2
str); 1
watermark 2
time 306
wants 16
stuck; 3
stacks 4
tasked 1
undesirable) 2
surprising? 2
technology. 1
upcoming 1
tasks, 1
sampling 2
unexpected. 2
space, 50
unrealistic. 1
system! 2
valid. 2
truly 9
using. 2
variants 4
virtual 253
stronghold 1
virtue 2
vulnerable 2
variable; 2
strive 5
well-known 4
time-share 1
welcome! 1
study, 3
stood 1
technology 7
were 76
unique 7
swapping, 1
termination 4
tcsh 2
upon 40
savings 9
unrealistic 2
these 222
species, 1
up, 12
specifically 6
turnaround. 1
utility 3
versus 5
waitpid()); 1
systems. 64
vmstat 2
wall 1
vector. 1
strong 2
we’re 3
timer. 1
structures 59
winner: 2
studying. 1
store-conditional; 2
terminal 4
when! 2
unqualified 1
target. 1
then; 1
technique, 2
use_ptr 2
say. 2
they? 2
values. 1
update. 1
update 54
specified, 1
typesetting 2
variable. 8
wake? 1
virtualizing 14
t(A) 1
waiters 4
way? 1
violation, 2
structure, 24
subtleties 2
to, 13
wondering 2
who 41
succeeded 4
widely 9
success, 5
target’s 2
untimely 6
therein; 2
technologies. 1
useful. 10
sbrk) 1
things, 6
variety: 1
upper-level 2
usage. 4
speed-of-light 1
uint 1
variable’s 1
weaknesses. 1
vruntime. 1
targets, 1
waiting, 5
ways, 1
virtual-to-physical 6
style, 1
swapoff. 1
workers 1
today. 6
straightforward. 2
terminates 1
win 1
successfully 5
test-and-test-and-set.s. 2
think, 2
valgrind 15
variables) 1
vs. 8
thing” 1
this! 2
this: 49
val 2
spending 3
undefined. 1
vengeance’.” 1
while. 2
tasks 2
wake(address) 2
well-defined 1
virtualized. 1
submitted, 1
waits 36
symbol. 1
worthwhile 2
today’s 2
strategies. 1
text). 2
within; 2
suffice 3
thanks, 1
though; 4
scales 6
variants: 1
wait-for-me.s. 2
which 501
vast 2
thousands 10
thousand, 1
used 175
vastly 1
splitting: 1
unfortunately 4
vruntime: 1
winter. 1
way. 6
weren’t 1
technique 29
voluminous 2
substrate 1
system? 4
written 18
strength: 1
wake 33
textbook, 1
trace 24
wonder? 1
suit 1
thing; 1
thoughtful 1
schedulers) 1
vary 4
warm 3
winner 5
waited 1
three: 1
threads. 19
user-mode 3
vice-versa. 1
sponse 1
unimaginably 1
wait(). 3
unit 7
well-regarded 2
wild 1
there. 6
wait(); 1
summarize 5
strings? 1
wrong 15
want. 1
systems, 49
transforms 4
x86)” 2
surprisingly!) 1
tmp); 5
threads? 4
seconds, 2
seeing 1
warnings. 2
wisdom 1
ways: 2
their 91
ticket. 2
threshold, 2
v; 2
voo-doo 2
staring 1
wondering: 4
weight, 1
unpacking 2
which, 4
woken, 2
there’s 1
wait, 4
strong, 1
waking 5
wasn’t 2
system” 1
switches; 1
zero. 11
support 110
three-queue 1
track 27
virtualizes 3
translation 46
segfault 1
wastes 10
wishes 16
web 10
tickets; 1
them. 16
variablesized, 1
throughout 13
vruntimei 2
stateless 1
work-stealing 2
unused, 1
whole 5
wonders. 1
thing, 6
zero.” 1
subsystem: 1
weakness 1
well 88
wasted 4
tables) 2
switching), 1
’05. 1
surprise 2
’07, 2
walks 1
time; 16
tree? 1
segmentation.” 1
watch 5
went 3
variants) 1
times). 2
wait. 2
thinking 23
stdlib.h 1
world? 1
within 89
up; 2
too 85
wine, 1
thinks), 1
worse 9
˜mark/syscall.html. 1
subtle: 2
were. 1
way). 1
take? 2
synchronizations 1
trans- 1
table), 1
“ARC: 1
tool, 6
trees, 4
well. 30
segregated 3
when, 3
virtualization, 7
work; 6
waitpid() 2
three-quarters 1
stream, 2
whether 59
world” 1
x; 4
toolbars, 1
useful, 11
within, 1
this. 4
xv6, 1
’15, 1
years, 9
suffering 2
winner. 2
weight 1
takes, 1
transparency; 1
tapes 1
“Alto 1
that, 11
trials 2
what’s 2
sequential 8
tip, 4
workgroup. 1
wanted 3
timedlock 4
strings. 1
why? 2
yet), 1
yet! 1
topics 5
way 97
users. 1
worst 7
thread. 20
what 280
’w’ 1
yours. 2
summarize, 1
within. 1
support, 16
tech 1
system 363
trusts 4
trace; 1
“Control-c” 1
then. 1
tweaks 2
while) 1
seriously, 3
tmp->value 2
worse. 6
wary 7
timer; 1
support; 4
writes 21
yourself. 1
you’ve 6
trade-off: 1
weighted 1
years; 2
threads; 2
uses 70
“An 9
wherever 2
without 70
surface 3
you’ll 37
tells 11
working 28
tuning 1
transcript 1
“Evaluating 1
theory-types 2
two-CPU 1
work? 7
shown, 2
transactions 1
take 97
water 1
top) 1
wikipedia 1
survived 1
yet, 10
zplot. 1
’75, 1
transaction, 2
weighti 2
size 124
utopian 1
thread’s 14
“B”. 2
whims 2
won 3
’09, 1
swapping 12
temporal 7
wrapper 3
twins!” 1
translation; 1
“E”, 2
traps 5
undoubtedly 2
workloads, 1
translations). 1
teach 1
widely), 1
techniques, 7
windows, 1
swapon 2
zeroing 4
“Electrochemically 1
“1984” 1
translated 3
yell) 1
slicek 1
yes. 3
work. 24
time). 3
widespread 1
“Computer 6
world!”, 1
’18, 2
switches? 1
’81, 5
wreaked?” 1
two-thirds 1
therein. 5
“TENEX, 2
tricks: 1
types 33
type). 1
works, 15
transform 4
won’t 21
text 9
worker(), 1
switches. 1
“01” 1
“I 1
“A”), 1
transparent 4
variable-sized. 1
slower? 1
workload. 6
“A 15
too4 1
word, 1
“If 2
world, 6
terrific, 1
swtch 1
’flag’ 2
www.nds.rub.de/lehre/seminar/SS06/Werthmann 1
think? 1
“havoc” 1
unlock): 2
ultimately 1
u 2
understand! 2
written), 1
translations: 2
them). 2
write, 3
swoop 1
“A” 8
“Operating 2
“Machine 1
trap; 2
variable: 2
solved. 1
works; 1
“B” 8
worry. 3
work 150
“John 1
world 26
there, 2
table! 1
worth 20
“Animal 1
x) 1
thinking! 1
unmask 1
understand2 1
unrealistic, 3
systems 185
“Analysis 1
tree, 4
these, 4
x? 1
“Get 1
“fault.” 1
“Monitors: 1
turn) 2
varying 2
somewhere, 1
trade-off. 1
“Membrane: 1
worse! 1
“OpenSolaris 2
wrote 10
worst-case 5
therefore 2
tables. 6
via 53
“Performance 1
“Concurrent 2
three-level 1
unaffected 1
unsurprisingly, 1
uninitialized 1
update, 1
tackled 2
“Towards 1
trend? 1
time. 66
“THE” 2
usually 52
yield 21
“Myths 2
sorts 9
turnaround 30
transac-tions 1
“OS” 1
workload 14
“Perfection 1
www.cs.tau.ac.il/˜shanir/concurrent-data-structures.pdf. 2
wouldn’t 5
therein), 2
wrappers 2
tcsh). 1
virtualization; 1
“big 1
“H-Pucks”) 1
unlocked 2
upside 1
universal 1
tail. 2
“Wait-free 2
thousands, 1
tune 1
times; 3
“operating 1
“response”; 1
v9 1
you: 1
“Premature 2
specifies 5
turned 2
transaction 4
“RISC-I: 1
world; 1
“TLB”. 1
www.sparc.org/ 1
wrapping 2
thing... 1
x86. 1
terminate 6
visualization. 1
“easy 1
“Multilevel 1
“too 3
usable. 2
use, 15
“have 1
takes 50
threadID 2
turns 37
“Test 1
took 16
valid? 3
zero). 1
“U 1
spectreattack.com 1
understand: 1
transfers. 1
“Time 1
worry 21
’19, 1
“The 40
write(), 1
thirty 1
y; 2
tested 1
void. 1
unpacks 1
“Programming 7
usual 2
user-managed 1
“modern” 1
techniques? 1
tickets. 5
tweak 1
“hello, 1
tool? 1
values? 3
’95. 1
“at 1
spinning), 2
tremendous 1
“child”, 1
users 27
yield(); 2
“Aspects 1
“a 1
written; 1
yelling 1
thanks 4
this, 32
volatile 5
unrealistically 2
“foo” 1
utilization. 1
utilizes 1
“parent: 1
temporarily 5
tightly 1
twice 5
“high 1
tools, 3
vanishes. 1
’a’ 4
“older” 1
stashes 1
two, 3
value), 3
yield, 2
“Before 1
“batch” 1
yeah! 1
you). 1
them; 2
vulnerabilities. 1
upper-case 1
“real” 3
thread, 48
utilized 4
time-slicing 1
variables 33
type: 1
term 15
“reserved 2
translation. 10
variable) 1
“Earliest 1
“works” 1
state: 2
useful2 1
variable, 8
yield-based 2
“H”, 2
“cold” 2
yield() 2
yourself; 3
therein: 2
wakeups 2
usage 16
three, 3
valid: 1
time-tested 1
vary). 1
using 140
terrific 4
“running” 2
translations; 1
versa. 1
“Jack 1
step? 1
variable-sized 7
straightforward 9
“Lottery 2
“free” 1
’10, 4
ˆC 2
think-ing 1
warmed 1
use?) 1
varies 5
timeline. 2
updating 13
versions 8
utilize 5
“starts” 2
trials. 1
“MIPS 3
virtualize 13
’a’, 1
vectors, 1
strangest 1
“Mach: 1
“glibc 2
“Ah! 1
’85, 1
thr_join(); 1
weirdly 1
uses), 1
weightB 1
top-to-bottom 1
usable 2
viewing 2
“test 2
value) 13
there 250
trick 3
“Memory 1
wait()) 1
“Ad 2
view). 1
strategies 8
“lmbench: 1
“lost” 1
“Aleph 1
’92. 1
thread.c 1
variable-length 2
well, 15
which). 1
transfer 10
utilities 1
visually 1
vantage 1
trouble 9
“Purify: 1
wait(address, 2
“Dynamic 3
visualization 1
thus 486
stretching 1
“pinning 1
“the 1
“Principled 1
’94, 2
time-efficient 1
variable 75
well-meaning 1
winner). 1
transformed 2
utilization 5
wakeup, 1
trying 15
“Tolerating 1
wakeup/waiting 2
“Everything 2
subproblem 1
“yeah, 1
ticket 27
“wreaked”? 1
“Profiling 1
“80-20” 1
time: 2
variant 3
vectors 1
when. 2
worse: 2
trap. 1
void 153
was. 1
valid, 14
unlock() 14
“all 4
walk 1
“Mesa” 1
succeeds, 2
time), 4
” 4
“SDS 1
“Advanced 4
timings. 1
vengeance’. 1
workings, 2
version 31
writes, 4
trapping 3
vulnerabilities 2
wasteful. 2
value? 2
unsigned 2
“uninitialized 1
watches 2
“Microreboot 1
supporting 1
“bounds” 1
tiny 21
“Our 1
too). 2
violation 2
world\n", 1
x86); 2
traversing 2
wait(), 6
weaknesses 1
unused) 1
very 60
wait 53
wc), 1
“OSSpinLock 2
suppose, 2
“got 1
to! 1
“Shared-access 1
took, 1
wrappers, 2
xchg 2
truth. 1
warm-start 1
update: 2
waste. 7
values, 12
want; 1
well-suited 2
“System 1
surprisingly 7
“hot” 2
tons 2
“Someone 2
trace: 1
yet. 4
yields 5
ubriaca. 1
upsides 1
vruntime, 1
while 170
way! 1
this 1109
virtualization). 1
watching 1
well; 1
“Take 1
“privileged” 1
“Understanding 5
trading 1
swap 34
total 26
zero 10
zeroing, 1
unfair 2
used, 8
w/ 2
wishing 3
thr_exit() 3
ways. 11
visible. 2
works? 3
“being 1
“ticket-assignment 1
“goodbye”. 1
transitioning 4
switched 2
towards 3
’14 1
’his/their 1
we’ll 112
using). 2
workers, 2
wait() 26
visualize 1
worlds: 1
we’ve 21
“commoncase 1
“perfect”. 1
treated 6
syscall 3
transfers, 1
translation), 2
’new’ 2
“A”, 2
“CPU-bound” 1
tables 49
was; 1
wait(NULL); 3
world”. 1
“reliability”, 1
value 233
up 156
tried, 1
’peek 1
whatever) 1
“Hmm... 1
“brain 2
terminated. 1
way), 1
warmup 1
www.stanford.edu/˜ouster/. 1
trouble, 2
“same” 1
variable). 1
updating) 1
turn; 4
’self’ 2
whereas 14
write. 2
thread 449
themselves; 2
wc, 3
yielding 5
waitFirst 2
turn 32
using? 2
unbounded 1
“21” 2
wonder 3
written, 1
websites 1
then, 16
zero), 1
wary: 1
unifying 1
three 69
when 480
understand, 3
“Introduction 3
won’t, 1
wrong, 4
theory 4
whatever 15
zsh 2
uninteresting: 1
valgrind. 1
way, 20
– 19
woken. 2
understanding. 1
“One 1
words 2
x86-version 2
therein, 2
whose 8
unit) 1
valid), 1
time) 4
well) 1
’93. 1
www.gnu.org/gnu/manifesto.html. 1
up? 3
“Priority 1
yourself 7
work, 23
things. 7
why. 2
unlock(), 2
variables, 5
tired 1
which... 1
’95, 2
x86, 8
useless 2
“Reese’s 1
zombies 1
workload, 11
thinking? 1
worker, 2
unpark(queue_remove(m->q)); 2
variable” 1
to), 1
work: 1
’wreak 2
xv6. 1
user-level 6
“catch” 1
· 4
worst-fit 2
wreak, 1
unpleasant. 1
third 18
vector-like 1
top-level 2
workload: 1
“Cloud 3
years. 4
usermode 1
“crux 1
’current’ 1
x86) 1
www.ajwm.net/amayer/papers/B5000.html. 2
utilized? 1
though, 8
version? 2
trade-off 4
worry: 1
“Idleness 1
yes! 1
variety 3
we 992
“other 1
’c’ 3
x-axis, 2
threshold. 2
value, 17
viewpoint 1
transfers 7
x86). 2
virtualization 20
viewed 4
winner) 2
yet 20
“Cooperating 7
x. 2
translation) 1
yes, 6
“Making 2
your 201
various 27
waste! 1
virtualization? 1
time, 75
young 3
“Improving 1
trees), 1
x86 23
tried 4
you’re 18
wait-for-me.s 4
watch. 1
visionary 1
timer-interrupt 1
’83, 1
“Multics: 1
“buddy” 1
x86-64) 1
two-phase 6
’threshold’, 2
weightA 1
well), 2
wide 1
works3 1
workshop, 1
worlds. 2
wrangling 1
write(fd, 1
x86.py, 4
you, 11
younger 1
zeroed 1
’02, 2
’11, 2
’68 1
understand 112
tmp->next 4
“Informed 1
“PThreads 2
“drum” 1
zombie 2
“History” 2
whichever 4
visited, 1
’e’. 1
’mutex’ 2
“But 1
“It’s 2
total). 1
“Nonblocking 2
“cooperating 2
“the”). 2
“100x” 1
“Javascript: 2
while, 8
waste 23
understandable, 1
“first-in” 2
touches 2
“Policy/mechanism 1
“direct 1
“CPU 1
“Mac 1
wily 2
uniprocessor, 2
“longword” 1
trace, 3
ways 19
“What 5
“double 1
“Experience 1
“Run-Time 1
with 638
with) 2
unlock, 2
“prove” 2
traditional 11
whenever 3
“as 2
“fault” 2
“Hoard: 1
“Structure 1
write: 1
word 14
unsurprisingly: 1
why, 1
translation, 15
“hello 1
“private 1
“reasonable” 1
“Valgrind: 1
x86” 2
workflows. 1
use”, 1
will, 2
trials, 1
“ready” 2
“Ils 1
“correct” 4
yourself, 2
worried 1
you 995
usual. 2
window, 3
trivial 2
“what 1
“Pthread 1
“out-of-bounds” 1
zombies, 1
worse, 8
yuck! 1
utilized. 1
wished 2
typically 1
“Relocating 1
’c’, 1
wrapper; 2
typing 9
woken 13
“Reminiscences 1
value; 22
“Load-Link, 2
write() 5
unfortunate 5
work! 3
“Time-Sharing 1
vision 1
“One-Level 2
you? 9
workloads. 3
use. 16
“core” 1
weight0 1
“One-level 2
yours: 1
user-defined 2
works. 22
“first 1
whet 1
“Virtual 8
you’d 9
usually, 2
worry! 2
“fun” 1
while? 1
“bad 1
| 8
} 271
varied 2
wreakers 1
“lock” 2
“condition 1
“Fact 1
’Classic 1
view 14
“loop.s”. 2
writing 21
“discovered” 1
“Think 1
’pedantry’ 1
why 58
“turn” 2
written). 1
wakes 15
“limited” 1
“baby 1
“Bell 1
x, 2
weights 2
“ten-items-or-less” 1
“demon”, 1
“Converting 1
xv6 6
weird 3
“ease 1
“Observations 2
years 19
“familial” 1
we’d 9
“Practical, 1
yield.s, 2
“right 1
“T”, 2
’63 3
“yes.” 1
“daemon”, 1
’b’, 2
− 7
“interrupts” 1
“...with 1
“Change 1
“main: 14
“Extending 1
“process 1
“Hints 3
“test” 2
“Information 1
“Just 2
“My 1
“RTFM.” 1
where 166
“Transaction 2
whom 2
“Using 2
wired 2
“bad” 3
“jemalloc” 1
“just 3
wish 26
“smart” 1
with? 1
words, 5
worst-fit, 2
worstcase 1
worthwhile. 3
wrong. 3
• 69
www.takeourword.com/TOW146 1
y-axis 2
{ 281
will 580
’ 11
window 3
“2Q: 1
wise 1
“Atomic 2
wondered 1
“Cold-start 1
worked, 2
“It 2
writes: 1
“KASLR 1
“On 2
x 12
“Solaris 3
yield.s 2
“Solution 2
you; 1
“Symmetric 1
zeroes 2
“You 2
|| 2
“atomic 2
“implements” 2
}; 8
“interactive” 1
’89, 1
“it 1
’98, 1
“on 1
’b’ 1
“page 1
“Algorithms 2
“right” 1
“Dahm 2
“setting” 2
“They 2
← 2
