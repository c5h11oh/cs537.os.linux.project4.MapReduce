$0x03, 1
$0x03e8,%eax 1
(2134) 6
(32768) 1
(7030) 1
(And 1
(EEVDF) 1
(MMU); 1
(P=1), 1
(TestAndSet(&flag, 2
(and 111
(approximate) 2
(atomically); 1
(do 5
(initial) 1
(let’s 4
(likely) 1
"A" 1
$0x0) 1
% 8
"fork 4
S 28
$0x0,(%edi,%eax,4) 1
%bx 2
(-a) 2
(232 1
(ARM). 2
(Hardware) 1
(P2), 1
(PDE.Valid 1
(a.k.a. 6
(but, 2
(evicts) 1
%edx 1
%esi 1
& 29
(1024). 1
(104) 1
(I/O). 1
(LDE) 1
(OS)3 1
(R, 1
(TLBs) 1
(char 8
(due 6
(lazily) 1
(p4.c) 1
(pause 3
(potentially) 1
(realistically, 2
(returning 2
(t0.c) 2
(taking 2
(think 5
(web 2
*curr 4
*kstack; 1
%edi 3
&args); 4
&m); 3
(20-ms 1
(400)2 1
(4200) 1
(A’s 2
(C, 1
(Measurement) 3
(O 1
(RSS). 1
(SJF, 1
(T2) 2
(also 7
(an 2
(done) 2
(generated 1
(hence, 2
6 22
PAGING 21
&oops; 2
&x); 1
(-M 1
(-m 2
(./x86.py 4
(1) 13
(100) 1
(Editors 2
(PA) 3
(Q2). 1
(ROP) 1
(always) 1
(bugs) 1
(flag 4
(imagine 2
(into 4
(non-restricted) 1
(releasing 1
(source) 1
8 22
%ebx 1
(0, 3
(20%), 1
(3) 2
(G), 1
(LRU) 1
(Linux, 1
(LoadLinked(&lock->flag) 4
(PC) 4
(PSJF) 1
(PTIndex 3
(S) 3
(With 1
(dare 1
(fill_ptr 1
(four 1
(full) 1
(header_t 1
(often 2
(p2.c) 1
(p5). 1
(particularly 7
(read 1
"wc"... 1
%ebp, 1
( 6
(*start_routine)(void 2
(-s 2
(28KB) 1
(7.2) 1
(P0 1
(U/S) 1
(VA) 2
(again 3
(arbitrarily; 1
(c1, 1
 26
$0x1,%eax 4
&& 2
(24113) 5
(Code) 8
(Logical) 1
(MMU), 1
(PFN 2
(TestAndSet(&m->guard, 4
(assert(hptr->magic 1
(atomic_add_zero 2
(include 2
(lock-holding) 2
(probably) 1
(pthread_create) 2
(thus 9
(“0101”th) 1
*ptr, 5
%eax). 1
(200 1
(CTSS), 1
(P=0), 1
(PID), 1
(PTE) 9
(R 1
(Tc2) 1
(a[0]) 2
(after 4
(among 3
(bytesLeft 1
(eventually) 2
(io.c) 1
(ldstub); 2
(m->flag 2
(namely, 1
(p6, 1
(rather, 1
(results 1
(studied 1
(too 1
(turned 1
(in 45
(making 1
(mutex); 6
(n) 1
(p2), 1
(part 2
(sorry!). 2
(whether 2
*), 2
**old, 1
*L) 4
*chan; 1
*tf; 1
-R 13
-r 5
./multi.py 4
./p2 1
0,0,0,0,0,0,1:0,0,0,0,0,0,1:0,0,0,0,0,0,1 1
0,0,0,1,0,0,0:0,0,0,1,0,0,0:0,0,0,1,0,0,0 1
00007f4e7d932000 1
22 1
#3: 1
%ebx, 1
(26 1
(4096), 1
(CPU 2
(D); 1
(Line 5
(S), 1
(Spring), 3
(Tc1 2
(a2), 1
(instead 1
(limit) 1
(line 3
(maliciousness) 1
(p2.c), 1
(still 1
(swapd) 1
(worst-case 1
10 21
!zero, 2
"common_threads.h" 4
%esp 1
%p\n", 4
(24114) 5
(32 2
(August, 1
(CFS) 2
(Dynamic 2
(PTEs) 1
(Success, 4
(T1 2
(Tarrival 1
(atomic_bit_test_set 4
(binary 1
(called 9
(cleared), 1
(continue 1
(curr) 4
(described 5
(dramatic 1
(hex 2
(highly 1
(holding 1
20 1
B 13
#1: 2
#define 2
(-P) 1
(256) 1
(PA), 1
(SSDs) 1
(TlbEntry.PFN 4
(VP 3
(address 2
(bash?) 1
(done 4
(just 5
(max 2
(my 1
(myturn). 2
(p2); 1
(physical) 1
! 2
%d\n", 9
%dx 6
&; 1
(-L 2
(-c) 1
(-l 4
(117 1
(@PFN:101) 1
(FCFS). 1
(Linux) 2
(MLFQ) 1
(OS). 1
(PCB); 2
(PFN), 2
(STCF) 2
(Success 4
(all 6
(almost) 1
(bigger) 1
(c->local[cpu] 2
(given 1
(long) 1
(mem.c) 1
(p2). 1
(result: 1
!StoreConditional(&lock->flag, 2
"B"); 4
%d)\n", 4
((flag[1-self] 2
(0x1) 2
(9.2) 1
(B 3
"common.h" 7
# 16
"A"); 4
$0x1, 6
%d 5
(10 1
(1000 1
(4KB 1
(9.1) 1
(A 14
(Bounded 1
(Niceness) 1
(R/W) 1
(Ready, 1
(TM 1
(Timer 1
(a 21
(assumes 2
(available 1
(either 3
(fun!). 1
(hopefully) 3
(kernel 6
2 25
!= 7
"wc" 1
%ax 4
(1e7) 2
(APIs) 2
(BFS)2 1
(P1), 1
(Q0), 1
(RDLK) 2
(THE), 2
(c1–c3). 1
(effectively 1
(void 12
18 4
I 26
(-w) 1
(A, 5
(FIFO) 2
(M 1
(PFN) 6
(RR) 2
(SQMS) 1
(Tp) 1
(VPN=07), 1
(VirtualAddress 9
(a[4] 1
(both 2
(c3). 3
(c5), 1
(he 1
(or 83
(say, 11
(counter 17
(freeing 1
(get 1
(load 1
(myarg 2
16 9
"hello"; 3
&lock); 2
(11) 1
(B) 1
(K 1
(MRU). 1
(P2) 1
(PDE.PFN 2
(VPN). 1
(a3). 1
(b) 5
(but 14
(c3), 1
(especially 2
%eax,0x0(%ebx) 1
%ebp 1
(-1KB) 1
(-p). 1
(3764 1
(4 3
(4088 1
(As 1
(Gulps) 1
(KASLR). 1
(pid:%d)\n", 9
(required 1
(running 1
(said 2
#include 62
(-i) 4
(0x200000), 1
(120−0)+(20−10)+(30−10) 1
(7.1) 1
(Advanced) 1
(CanAccess(PTE.ProtectBits) 4
(HW 1
(London), 1
(Process 1
(c3) 1
(ironically) 1
(mutex, 8
(next 1
(nice 1
(t1.c) 2
(that’s 3
(untimely?) 2
(user 3
(which, 2
*q, 4
*value 2
-1) 1
-l. 1
0). 2
00007f4e7d2d0000 1
07 1
0x300, 1
0xC0000000, 1
1-GB 1
1024 10
128, 1
13.5 1
137, 1
14.4 1
15.3 1
%eax 24
%edi, 1
(-n 1
(0xC0000000 1
(101) 2
(2) 4
(34K) 1
(Alpha), 2
(DMA) 1
(Lines 6
(NULL 1
(PFN). 1
(PTE.PFN 2
(R) 1
*consumer(void 5
*dst; 1
*value) 2
--leak-check=yes 2
-C 6
M 20
%eax,8049a1c 4
%esp, 1
%lld\n", 2
&rvalue); 2
(1 1
(100 4
(32-bit 1
(Another 1
(CFS), 1
(C’s 1
(MFU) 1
(NOT 1
(Tc1) 2
(a[8] 1
(another 1
(each 2
(global 3
(non-contiguous) 1
12 19
(like 5
(modern 1
(once 4
(threads.c) 1
(free) 21
(gadgets, 1
(T2), 2
(Third 2
(Tp). 1
(about 1
(by 13
(double 1
(job 2
(literally) 2
(new_head 2
(p1.c) 1
(p4). 1
(preempting 2
(pretend) 1
(probably 1
(remember, 1
(size 1
(too) 1
(usually, 1
 32628
4 23
T 10
&stack); 1
(-T). 1
(/tmp/file) 1
(010101), 1
(224 1
(512 2
(8 1
(@PFN:100) 1
(KNUTH’S 1
(MMU) 1
(PTE.Present 2
(SJF), 1
(TD 1
(This 1
(Thread 2
(Volume 1
(alas). 2
(because 8
(created 1
(finally) 1
(first-in, 1
(if 13
(the 61
(through 1
(xchg). 2
(Figure 45
(OS 1
(PDE) 2
(where 12
(yet) 3
*cwd; 1
*input) 1
*myargs[3]; 2
*str 1
--trace-mem=yes 1
C 16
#2: 2
%dx. 2
%eax, 8
(-q) 1
(16 3
(Bad 1
(Blocks) 4
(Chapter 2
(LAUER’S 1
(MLFQ). 2
(MQMS) 1
(Offset 1
(P). 1
(PTE.Valid 4
(PWT, 1
(Right) 3
(September 1
(TestAndSet(&lock->flag, 2
(VPNs 1
(Virtual 1
) 46
*mutex, 2
*ofile[NOFILE]; 1
(TLB 16
(Thousands) 2
(above), 1
(conservatively); 1
(cpu.c) 1
(free 1
(https://github.com/remzi-arpacidusseau/ostep-projects) 1
(left). 1
(lots 1
(managing 2
(non-paged) 1
(notably) 1
(note, 1
(int 6
(left 1
(nearly 2
(quantum 1
(quickly) 1
-c 22
-pthread; 2
.EXE 1
(Left) 3
(P); 1
(PD 2
(PID). 1
(Proc 2
(Software) 1
(VPN 14
(Without 1
(array-based) 2
16 92
16(%eax), 1
16.2 2
17.1 1
17.7: 1
18.6: 1
19.5: 1
1969. 3
-v 17
/proc 1
(reduced 1
, 15
--b0 1
-S, 1
00, 1
00007f4e7cf06000 1
0th 2
0x800, 1
10+20+120 1
100+110+120 1
1074 2
12) 1
*mutex); 8
0 384
1. 43
(hopefully 2
(middle 2
(myturn 2
(scheduling) 1
(shown 5
(simplified) 1
(specifically). 1
(stop) 1
(though 6
(i.e., 96
(incredulous) 1
(interrupt) 1
(modified), 1
(note 4
(older 1
(our 4
(p1), 1
(p1– 1
(queue_empty(m->q)) 2
(rc_wait:29267) 1
(rc_wait:29384) 1
(requiring 1
(they 3
(way) 1
F 8
%edx, 1
%esi, 1
&rvals); 2
(01) 1
(14th) 1
(28 1
(64 1
(A) 2
(ASID) 1
(CanAccess(TlbEntry.ProtectBits) 4
(P1) 3
(PCB), 2
(SN) 1
(a) 5
(broken) 1
(c2), 3
(causing 2
(kernel) 1
(milliseconds); 1
(not 20
(quite) 1
(similar 3
(somewhat) 1
(that 5
(tmp 1
"hello 1
(15th, 1
(MIPS), 2
(Simulation) 16
(T1) 4
(VPN=1, 1
(assume 2
(c4). 1
(depending 2
(even 3
(forever), 1
(hardware 1
(main) 4
(normally 1
(slow) 1
(something 2
(start 2
(trustingly) 1
(who 2
*ptr) 7
0+1+2 1
09 1
0x500, 1
0x8049a1c). 2
110). 1
1224 1
14.6 1
15.5 2
16.4 1
17.3 1
*arg) 26
(v2) 1
(va.c) 1
(vruntime). 1
(wc). 1
(1110) 1
*L, 8
*) 23
-15 1
-F 3
-f 1
1024, 1
12(3), 2
100. 6
(mutex->flag 2
(out 3
(seconds) 6
(there 3
(this 4
(as 49
*c) 18
3 1
(C 1
(DEC). 1
(Hardware-based) 1
(LW 1
(STDOUT 1
(VPN=06, 1
(a.k.a., 2
(flag) 2
(hence 1
(mentioned 2
(most 2
(stride=200) 1
%ecx 1
(sometimes 10
(thank 1
(v 2
*H, 4
*old_ptr 2
*p); 1
*worker(void 1
-c. 1
./p1 2
120 9
12:6, 1
(pid:29146) 4
(spinning 2
(stop 1
(using 9
(version 1
*d 1
*thread, 2
--tool=lackey 1
-10 1
14 14
"usage: 2
%ecx, 1
(-s) 3
(34KB), 1
(ASLR). 1
(Again) 1
(COW 1
(Good 1
(P0) 1
(StoreConditional(&lock->flag, 2
(Tc2 1
(VPN), 2
(allocated 3
(c1), 1
(count 8
(during 1
(emacs 1
-t 20
./p4 1
0.03 2
0.5. 1
0001 1
(onto 2
(assuming 5
L 17
%eax), 1
(117). 1
(2012-01-30-1-g1c41342) 1
(BKL). 2
(BSD). 1
(B’s 2
(G) 2
(LFU) 1
(P 1
(PDE). 1
(VPN=08). 1
(Virtual) 1
(a[7] 1
*current 1
(one 6
(only 5
(other 1
(sometimes, 1
(stride=100) 1
(upon 1
(use_ptr 1
(hint: 6
(i); 1
(known 1
(or, 5
(real) 1
(reduction 1
(running, 2
(runtimei 1
(pthread_join) 2
(via 6
(thread 6
(e.g., 108
*q; 2
--l0 1
-I 6
-A 6
-X) 1
(new 7
1978. 5
$0x1 2
00000000019d5000 1
0111 1
18 54
(curr->key 4
*rvals; 2
(to 10
(-p 2
(256 1
(AS) 1
(CompareAndSwap(&lock->flag, 2
(No 1
(PM 2
(Page 1
(Tc1), 1
0.2 1
./random 3
12000 1
13.2; 1
13.3: 1
15.1: 1
15:3, 2
15KB, 1
1961. 1
1963, 1
(usually 7
(v9 1
(we’ll 2
). 3
-a 41
(ns) 1
1987. 1
1996. 4
1KB) 1
1Note 2
18.2 1
(easily) 2
(erroneously) 1
(formerly 1
(its 2
(long 2
(modulo 1
(note: 2
(probabilistic) 1
(probably), 1
(switching 1
(target) 1
(v1) 3
(virtual) 3
(you’ll 1
*malloc(size_t 1
*mutex; 2
*new); 1
-k 2
-t). 1
.... 1
/proc/meminfo; 1
0,0,0,0,0,0,1? 1
0x200000. 1
10). 3
1000). 1
107 1
13.1), 1
16.5. 1
17.4. 1
170 3
1959 1
1968 2
2017. 2
29.1. 2
3Like 1
3a); 1
4.6 1
44000 1
4KB). 2
4MB), 1
5.5 1
(VAX/VMS) 1
(VPN) 2
(argc 2
(ignoring 1
(including 10
(it 12
(lock->turn 2
(no 4
(nods) 1
(non-toy) 2
1970. 4
(when 3
-i 18
*mutex) 12
*args 4
*head; 4
--l1 1
-5), 1
0x03, 1
03 1
2), 3
19.1 2
- 25
--b1 1
01, 2
0] 4
0x0(%ebx) 1
(lowest), 1
* 17
1234567 7
16.7 1
18.5 2
19.4 1
1960’s. 1
1970; 1
1980’s, 2
(say 17
(store 1
(tiny) 2
(total) 1
(use 1
*dst 2
+19 1
-H 1
-pthread 5
./process-run.py 2
. 53
(pid:29267) 1
(pid:29384) 1
(potentially), 2
(repeat) 8
(roughly 2
(simple 2
(stuck 2
*cond); 2
*rvals 2
*src 3
-nw 1
0.4 1
0x068, 1
**value_ptr); 2
(i 19
(implicitly) 2
(implying 2
(labeled 6
(ld.so) 1
(locked). 2
(pid:29266) 2
(pid:29383) 2
(remember: 2
(usually) 2
(from 16
(on 11
(p.81).” 1
(p3.c) 1
..., 2
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 1
0.10). 1
0.8 1
0x00000FFF, 1
1% 1
10), 1
0x1096008c0 1
20% 7
192KB 1
19384 1
*/ 16
*c, 5
*old_ptr; 2
10, 14
(more 3
0x8049a1c 6
1-byte 1
100ns 2
0x80000000 2
10.3. 1
100? 1
108). 1
1; 42
(bytes 2
*arg); 4
(shaded 1
*(*start_routine)(int), 2
(gasp) 2
(horribly) 1
*cond, 2
(page 49
*x); 1
-is-unsafe. 2
-m, 1
-p) 1
./fork.py 4
0.1). 1
06 1
0x200, 1
2014 1
21.6 1
1989. 5
1998. 2
*mythread(void 12
-1; 8
-1KB. 1
-L 18
*abs_timeout); 2
512 9
101 4
.globl 1
135: 1
14. 4
15.1. 1
15.3, 1
(code, 7
(continuing) 1
(discussed 1
*m) 6
1970’s 2
(int) 10
*p 6
(physical 1
(pointers) 1
(resulting 1
&mutex); 8
(si 1
(too!) 2
(we 2
1)) 2
1), 5
+ 45
22.5 2
2212 1
2). 7
*x 3
--tool=helgrind 2
-1); 1
-l 19
./main). 1
55. 1
110 2
13. 2
14KB 2
15, 7
16.1, 2
16384, 1
16K 1
(thanks 1
(for 24
(pid:29147) 2
(right) 2
(sched 1
(turning 2
(virtual 1
*parent; 1
*tail; 2
-20 2
0x3000, 1
12(%eax) 1
14949, 1
10.4 1
104. 1
-> 10
0-9), 1
25 33
2016 1
100,000 1
(mutex 2
-5 1
*old_ptr, 2
-1, 1
-= 1
0010 1
01 2
0100 1
0xFFFFFFFF) 1
15KB 7
2.3 1
16k 5
(turn 2
(“Buzz 2
*(*start_routine)(void*), 2
*attr, 2
*c); 1
./thread 3
0% 5
0th) 1
0x3C00). 1
0x3F80, 1
1); 4
10.1), 1
100); 2
10% 5
10.7 1
100), 1
1032 1
13.4 1
14.3 1
1000, 5
(myarg_t 4
(new) 1
/* 16
56KB 2
... 84
// 294
11. 3
1KB. 1
2.2: 1
2.5). 1
23254, 1
25% 1
26.6 4
27.5 2
28.4 2
29.3 2
29.9: 2
0.0 2
(see 12
(that, 2
-B 4
100% 5
(with 21
160 2
1024. 3
104 1
1110101 1
0; 116
0x30 1
0x700, 1
0x7ffe1033b8f4 1
100%), 1
1028 1
110000) 1
143012 1
16.6 3
17.5 1
18.4 2
19.3 1
*child(void 3
*hptr 1
*producer(void 5
1962 2
1990s, 1
2- 1
(large) 2
-M 15
-m 3
./x86.py 14
0+ebx 1
(212 1
(5 1
(PowerPC), 2
(Run 1
(TCBs) 2
(at 12
(average: 1
(indeed, 4
(insert 1
(latter) 2
(many 4
(minimally) 1
10ms, 1
11168, 1
1174 1
14KB; 1
6.4 2
0: 4
0. 11
00007f4e7d508000 1
1: 7
10 165
10.2 1
+= 9
*ptr 9
-S 24
2 257
(log2 1
(marked 1
(now 6
(privileged) 1
(sadly). 1
(some 1
-b 3
105 6
(word 3
17.3. 1
19.3, 1
2.7 3
20), 1
26.1 2
22.7 2
15 96
(of 10
(original 2
(rc 8
(rc_wait:%d) 2
(ready 4
(size: 1
(stride=40) 1
(unrealistically 1
(wait 1
**) 4
-5; 1
1000 10
./main-two-cvs-while 2
//acquire 4
08 2
0x00000000 1
0x1095afe50 1
0x400, 1
0xFFF. 1
1) 52
1-second 1
(what 4
/ 1
128; 1
); 1
*mem; 1
*next; 6
113 4
128: 2
13–14). 1
140 2
18, 2
18-bit 1
(perhaps 7
0) 40
0x0(%ebx), 2
7.3 2
0x200000 4
0x600, 1
1.0; 1
1.3.37 1
10) 2
1036 1
100000 2
11–19 1
-s 21
2.2 2
-D 154
2: 3
10-ms 4
11916, 1
16KB)1 1
10.1: 1
100) 3
109 1
12). 1
17.8, 1
19.4. 1
200,000, 1
2007. 3
2016. 1
2018, 1
21.1), 1
-u 6
18.2, 3
(pointed 1
(recall 1
(roughly) 2
(size=200) 1
115–116, 2
0x8049a1c, 8
110, 1
1234567)) 1
13.2: 1
137298 1
13: 2
120. 1
................ 1
200 24
-d 2
30.10: 1
30.13). 1
384KB 1
18.7 1
(without 1
(write) 1
*head 1
1101 2
(21) 1
*q) 2
21:1, 5
24(%eax) 1
25%. 1
28.11 2
28.4. 2
3KB: 1
4.8 1
5% 3
1.2.1) 1
7.9: 1
(such 25
8 109
8(%eax), 1
2003. 4
-P 19
111). 1
14.7 1
15.6 2
16.5 1
17.4 1
18.3 1
0-byte 1
1). 6
(unused) 6
(value 2
(yes, 4
(you 5
*malloc(size 1
*new_head 2
-l, 1
...; 1
-i. 2
26.7: 2
26.3 2
15.2 3
16.1 2
16384 1
16492 1
16708 2
17.6: 1
10,000,000 2
100,000, 1
100:100,100:100), 1
108 11
11). 1
11:1, 1
-Wall 7
20.5: 1
13:4, 2
15.3: 1
./p3 1
2002. 1
19 58
100). 2
39 11
1 461
19.6 1
0.1 2
132 2
*lock) 20
+1 1
-O 1
./cpu 5
0), 1
0.9. 1
05 1
0x100, 1
10); 1
10.6 1
18.6 2
5.7 1
170. 1
172, 1
18.5: 1
19.4: 1
8.2 2
9.1 1
135 2
-p 44
/dev/zero 1
/proc/meminfo 1
15:5, 2
00 4
2011. 7
19.2 2
100+(110−10)+(120−10) 1
103.33 1
105-117, 1
1124 2
128KB 1
13); 2
14.5 1
148K 1
-o 9
/bin/ls. 1
272, 1
27 32
214 1
./main 6
0011 1
0101 1
0110 2
02 1
0x7fff691aea64 1
13, 2
13.2, 1
132: 1
19.8 1
1? 1
1” 1
2.6: 1
20. 1
20.2. 1
16.2: 1
0000 14
2013, 1
1960’s, 2
4.3). 1
100 87
12. 2
14, 2
14-bit 4
1110 2
(22.1) 1
15.4 1
./array 1
0(%eax) 2
0.001), 1
0000000000400000 1
04 2
0x000, 1
0x7ffe45522e94 1
10.5 1
100%. 1
100s 1
0x80000000)) 2
10-byte 1
10.3 1
100%, 1
9” 4
11 110
2015). 1
17.1). 1
1792K 1
19.1), 2
1960. 1
1960’s 5
23.1. 1
1990). 1
1999. 1
1KB, 1
0? 3
14:7 1
16KB] 5
18705, 1
1970 1
1992.. 1
2.1 2
2001. 1
27.2 2
250 5
2.5 1
100-bytes 2
100byte 1
117, 1
13.3 2
1030 1
1111 7
128) 1
201 4
17.5. 1
<< 9
1100 3
22.3: 1
0KB 13
2000. 9
17.1: 1
18.3). 1
19). 2
1945. 1
48 9
1] 4
2-MB 1
2.4: 1
20, 3
20-bit 3
200-MHz 1
2000, 1
28.6 2
28.5: 2
29.4: 2
29147 2
27.2. 2
2005. 9
19.5 2
50), 1
(waiting 2
14 71
14.2 1
143,012. 1
13 93
13.2 2
14.1 1
15.6: 1
16.5: 1
17.4: 1
17.7). 1
21.3, 1
0x8049a1c. 2
1KB 13
24-bit 1
1954. 1
4MB) 1
21:10, 1
22.8 2
256KB 1
256m 1
(AMAT) 1
(C) 1
(L 2
(PCB). 1
(PDIndex 3
(PTE): 1
(Pmiss 1
(SJF) 1
(VM) 1
(VPN=06), 1
(a[3] 1
(which 39
*H) 2
1959. 1
15.1 2
22.10 1
1996 3
<pthread.h> 8
15.4: 1
23.2: 1
28.16 2
18.3: 1
22, 1
1.0001 1
1m 6
29.9 2
1963. 2
5). 6
0x1024 1
0x900. 1
1.0 1
26.4 4
16-byte 4
./mem 5
0+5+10 1
2003, 2
28.1 2
30.6 1
28KB 2
2007, 2
1970’s. 1
5:100,5:100. 1
(again, 3
2.1: 1
*argv[]) 23
1968. 11
1986. 1
1995. 6
1:0,4:100 2
AIN 1
16.3: 1
17.2: 1
17: 1
17:4, 1
18.1: 1
10-entry 1
10.1 2
10.2? 1
101. 2
12:7, 1
150 10
12 89
10. 7
1000. 2
11–12), 1
12, 2
0, 55
2010. 7
28.7: 2
32896; 1
29, 3
3); 1
30.15 1
7.5 2
70%. 1
78-101, 1
8.4 2
88761, 1
9.3 2
90%, 1
20); 1
ATC 2
0x0DC0. 1
2:70, 1
19.2: 1
22.2, 1
1964. 2
2, 38
32KB 5
1965, 1
655, 1
15.2: 1
17.2. 1
1957 1
1966 1
16.3 2
29.5 6
12-bit 2
00007f4e7d731000 1
23, 2
29.6: 2
335, 1
1We 1
2008–19, 138
4.5 2
5.4 2
56, 1
*m); 1
16.6: 1
22–23), 1
2.9 2
20.6 1
: 289
ATTACK 1
0x7ffd3e55d2b4 1
0xC0000FFF 1
19345221) 2
1957. 1
1973. 2
2-bit 1
34K 3
1972. 5
7), 3
1586, 1
12(%eax), 1
27.3 4
2.6 3
17 66
2github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
15) 4
010000; 1
23-bit 1
3-GHz 1
34 12
2.3: 1
203 1
(c) 3
2.4). 1
6.3 1
*ptr; 6
17.5: 1
24KB 3
2009. 5
21.5 1
== 91
AW 5
2KB 8
1, 80
28.8 4
1.01] 203
1982. 7
20.4: 1
3” 1
1981. 7
75 3
16.1: 1
16KB, 1
1793, 1
18). 1
19.1). 1
30.12: 1
16KB; 1
0x0(%ebx),%eax 1
28.9 4
30.8 1
372K 1
2008–20, 49
22.12 1
(c2). 2
2000) 2
64KB 9
*tmp 7
18.4: 1
26.1, 4
22.9. 1
22.4 2
ALGORITHMS 1
Amazingly, 4
2m 1
1966. 3
29.7 2
10,000 8
100, 6
10th 3
11:5, 2
1277, 1
13.1: 1
15). 1
16.1). 1
19221041) 2
1950’s 1
1ms, 1
20-29): 1
20.3: 1
20.6). 1
2000; 2
21.2: 1
21: 1
22.1: 1
23:2, 1
(c4), 1
20000000) 2
-n 19
0x37) 1
0xC0000000 2
1.0, 1
10.2: 1
10:1,10:100). 1
API 62
April 10
2”. 2
1970s 1
30.1. 1
1991. 9
1Each 1
40%) 2
40. 2
4200, 1
46273, 1
5(2): 1
20(%eax) 1
17.2 1
19.3), 1
30.4) 1
17:10, 1
1.00] 5
29.8 2
36 11
43 8
26.7 4
25. 1
254: 1
(clearly 1
(current) 1
(generally) 1
(highest 1
(minus 1
(regardless 2
23.3 1
128 13
15), 1
16(%eax) 1
1780K 1
1975. 2
30.14: 1
200, 3
20 95
1990. 2
20.1 1
2008). 1
22.5: 1
50-ms 2
2006. 6
17.8: 1
1962. 7
3; 3
19.7 1
2.5: 1
29154, 1
4), 2
7.4. 1
27.6 2
256 6
28.14 2
22.9 1
7 127
18–21); 1
28.10: 2
28.10 4
(starting 3
24 37
24(%eax), 1
Are 6
3, 25
179–180, 1
1993. 6
32K 3
2015/02/10/understanding-glibc-malloc/. 1
20(%eax), 1
20.2 1
13.1 2
28 33
26.1: 2
51, 3
6.4: 1
6000, 1
7.3: 1
7.6). 1
73-96, 1
7353 1
8.2: 1
40% 5
70 2
28.5 2
26.3, 2
28.9, 2
26.5 4
27.4 4
28.3 2
28.9: 2
3 231
*new 4
Abstraction 2
Affinity 1
ArpaciDusseau. 1
30.4: 1
300, 2
4096, 2
4k 1
5121024 1
54.5%. 1
5→0 2
15.5: 1
28(%eax), 1
26KB, 1
2015. 1
18.1 2
18.7: 1
1800s, 1
1979. 2
1988. 2
30. 2
9.1: 1
4088), 1
9. 9
29.4 4
27.2, 2
2K 6
7.2 1
19.3: 1
28.3. 2
29 25
30.11 1
-g 3
26.6: 2
Algorithms 4
Artificial 1
1980’s; 1
1998 2
32k 6
20th 1
21.3: 1
22.2: 1
23.1: 1
152K 1
28.2 2
29146; 1
204 3
1963.” 1
3A: 2
10+20+30 1
2010, 2
1997. 5
30.15: 1
99 7
45 6
<fcntl.h> 2
2; 5
28K 3
29.11: 2
7.8: 1
1949. 1
324 1
29.2 4
300 4
0); 8
28.4: 2
Assume, 3
BOUT 1
20.4 2
2) 7
20.1: 1
218 1
24113 1
254 3
24:2, 1
16.4: 2
28.8: 2
3. 32
27.1. 2
1971. 1
3KB. 2
10.3: 1
20KB 2
1:1, 3
30.2. 1
<stdlib.h> 9
526, 1
<string.h> 2
30.11: 1
2k 1
30.2: 1
4) 2
4904, 1
4GB 1
7.8 1
8.7 1
9.6 1
940 1
Baby: 2
BUCKETS], 4
21.3 3
34920. 1
8(%eax) 1
8(9):569, 2
6) 5
28.12 2
256-byte 1
17.3: 1
29.1 2
30.6: 1
2KB). 1
1980. 1
4-KB 3
1000; 1
21, 4
21-bit 1
32, 1
A1 3
63 3
<unistd.h> 6
30.14). 1
30.3) 1
8.1 1
1980s 1
1985. 2
1994. 1
20.1); 1
0.6 1
29.3: 2
Because 50
Borg. 1
215, 1
36.4% 1
3:50,3:50 2
3] 1
4.4: 1
6.2) 1
28.5. 2
28(%eax) 1
28.1), 2
28.15 2
300. 3
3): 2
1991, 1
4.2: 1
100K 1
10; 2
128-Byte 1
32-bit 16
AMD 1
64bit 1
<value>\n"); 1
30.10): 1
31) 4
8.7: 1
32868. 2
29.8: 2
3121, 2
20.5 3
0x00000000, 1
33 12
Background: 1
Buddy 1
22 38
= 415
2000 15
93 1
40, 2
64-bit) 1
29.11 2
4:10, 1
7); 2
3.33). 1
3:0,5:100,5:100,5:100 1
4.4 2
1MB 1
4.3BSD 1
1e7; 2
21.2, 1
128-byte 2
36291, 1
ASLR 1
90 1
ACE 1
36, 1
3: 3
80-20 4
40050 1
38 8
3412382, 1
2016.. 1
0x03e8, 1
42 7
Birrell. 2
C), 5
22.2 1
ACM, 19
21.1 1
ALLS 2
4000, 1
8:10, 1
9.8 1
29.7: 2
7.6 1
30.3: 1
30.8), 1
3000; 1
2. 29
20.6: 1
200. 3
28.7 4
13:2, 1
3752 1
Access 9
Adding 7
ADD 1
3764-byte 3
4.1: 1
85.7% 1
48KB 4
4). 7
4.1 1
21.4 1
0xBFFFFFFF 1
4200 4
Boneh. 1
Chapman 2
22.8: 1
23.1 1
22.6: 1
ASPLOS-IX, 1
4b: 1
5.3: 1
57.1% 1
6.2: 1
7620, 1
4KB 16
4b 4
32KB, 1
4: 2
20,000,000. 2
2018), 1
29.6 2
2Fortunately 1
4.5: 1
After 21
Afraid 2
Algorithm 5
3One 1
448KB 1
99% 2
49, 2
47 2
4:1, 1
22.3 1
1000s 1
51 18
Buffer 9
Clearly, 9
AMAT: 1
26.4: 2
26.2: 2
Again, 3
17.6). 1
? 9
A2, 1
ACM. 2
APPING 1
ARGE 1
5.3 1
3906, 1
5.1: 1
50) 1
68 1
14). 2
2] 2
40-ms 1
Allows 1
ALLOCATED 2
Applications 4
4-byte 3
49 1
ARPACI-DUSSEAU 38
5.6 1
512-byte 1
59–73, 1
6.5 1
7.4 1
8-byte 1
CHEDULE 2
Coalescing 2
AT&T/Bell 1
27.3: 2
27.1: 2
Amazingly 1
18.2: 1
184–199. 1
7.1: 1
8.5 2
4m 1
Actually 4
Address-space 1
3:50,3:50. 1
21.7 1
22.4: 1
7). 2
16), 3
30, 3
40KB 2
Alpha, 2
Ah 1
Art 3
4.3 1
4:3, 1
Anticipatory 2
4096 3
60% 4
22.9: 1
112 2
60 13
8.3 2
CONDITIONS 1
Cobham. 1
ATOMIC 2
27KB. 2
30.1 1
Apparently, 2
B-Trees: 1
19.1: 1
1956. 1
87, 1
5, 6
56483, 1
And, 2
3K 3
22.6 2
28.17 2
7232 1
8.1). 1
30-bit 1
30.13: 1
30.5) 1
3000, 1
39016, 1
40100 1
4KB, 3
Arpaci-Dusseau 3
50. 1
64-Byte 1
23 37
15. 1
7.10 1
8049a1c,%eax 4
CPUs? 3
Cobham’s 1
Annals 1
28.2: 2
30.7: 1
29267 1
BUCKETS; 2
9). 1
1965. 6
1974. 3
1983. 4
5–7), 1
Annual 1
4(%esp), 2
26 32
2N 2
16500 1
86 2
8KB) 1
9), 1
90% 1
AM 2
3B: 3
45, 1
5.3). 1
Basu, 1
6100, 1
64-byte 7
23.2 2
15.2. 1
8. 12
Calling 8
9 119
Complex 1
Anoop 2
29.1: 2
320KB 2
29384 1
Bovet, 1
ANAGEMENT 17
AccessMemory(PDEAddr) 1
50,000 2
1992. 4
Anomaly. 1
6 116
4.3) 1
26.2 4
2’s 1
30.5: 1
4page 1
Alternatives 1
Allocated 9
Assuming 10
AMPSON 1
4.3: 1
4a 4
6). 1
64-bits); 1
76 1
8), 1
26.5: 2
16.1. 1
820, 1
Clayton 1
9.2 2
Conference 1
Architecture: 4
30-byte 1
4. 27
4.2. 1
4088. 1
44:1/2. 1
4b, 1
50th 1
20.3 2
Array 4
Attempt 3
5) 3
27.1 2
1K 1
3KB 3
5.4: 1
Amazon, 1
BFS. 1
B5000 4
AUSE 1
4146 1
Berger 2
64GB 1
5 169
74 1
80% 7
27.4: 2
16KB 24
9548, 1
Coffman 1
ALICIOUS 1
Corbato. 1
Atomic 2
30.3 1
2This 1
Brian 2
C) 3
Accessing 2
5KB 1
64). 1
21 45
6+5 1
B-tree 2
7.9 1
28.6: 2
1k 9
4, 5
50, 5
Animal 1
Babaoglu, 1
BE 1
Ability 2
4a: 1
5.1; 1
6= 2
5.2 2
83 1
85 1
28.2; 2
17, 1
API, 1
Completion 4
APIs, 4
Corbato’s 1
Award. 1
30.9: 1
3). 5
30.9 1
CHEDULER 1
Almost 1
7.1, 1
8) 3
21.2 2
6.2 1
BASED 17
9.7 1
28KB1 1
2.3) 1
4-bit 3
5000, 1
5th 1
Bart 2
BFS, 2
Achieving 2
Bit-precision” 1
5.2: 1
7.4: 1
500 4
Accounting 1
<sys/time.h> 1
28.3: 2
1928 1
ARDWARE 2
Conditions 1
Acta 1
Cox. 1
B; 1
31 21
32-bits 1
37 8
CLOCK 2
Alto 2
8-page 1
<string>\n"); 1
22.1 2
64, 1
Before, 2
99, 1
29.5: 2
20.2: 1
7) 3
Apple 3
6.3: 1
Butenhof. 2
BIQUITY 1
Aleksey 3
Bobrow, 2
5: 2
7.7). 1
52. 2
6.1 2
64k 1
29.2: 2
1964 1
Act. 1
Cups” 1
Algorithms” 1
Cybertron 1
Babaoglu 1
Bairavasundaram, 1
Became 1
4-GB 1
CPU(s) 1
Answer 1
846 1
22.7: 1
64-bit 10
Belady. 1
99.9% 1
3), 3
20.5). 1
@ 8
Aq 1
A 728
7.2: 1
C.J. 1
CCESSES 1
Antoine 1
But, 7
6.1: 1
70, 1
7282 1
A, 16
7.6: 1
30.4 1
1:0,4:100. 1
Address 25
DATA 16
All 21
Dilemma” 1
9.4 2
40 28
Belady, 1
4.1). 1
CVs 2
B. 18
9) 1
250, 1
26.3: 2
Belady’s 2
> 5
30.7 1
21.1: 1
A1’s 1
Better, 1
A2’s 1
75% 1
BSD. 1
COW 3
Approach 1
Certainly, 2
7332 1
Actually, 1
Aha! 1
APIs 10
ASID, 1
32 33
2.4 1
Algorithm” 1
Dahm 4
Assignment 1
DiskRead(PTE.DiskAddr, 1
; 25
4000 3
Black 1
5), 5
Caching” 1
BUILD 1
<assert.h> 4
AIX 1
27.2: 2
Bell 2
ABCABCABCABCABC 1
300), 1
22.3). 1
ARM 2
Big 2
ASID 9
8.1: 1
Bad 3
CPUs. 7
Assume 33
Comes 1
82% 1
7354 1
Andrea 7
7.9). 1
41 10
ASY 154
2004. 7
Allocated] 2
Darago, 1
Attempt: 4
Doctoral 1
;load 1
50? 1
C: 2
55 1
Chunks 2
Bigger 1
Brooks 1
ARC, 1
28.1: 2
Berkeley, 2
ACKGROUND 1
35 12
24114 1
ASIDE: 4
Bits 1
Allocator 1
Andrew 4
Be 5
Casting 1
B, 22
Consider 2
9.1). 1
8.3: 1
Approximation 2
70–76, 1
423, 1
AUER 1
50 46
Allocation 3
Data 13
August 5
Donkey. 1
>= 5
549–557, 1
CPU), 6
64 17
Clock 2
7.1 1
Bryant 4
Anyhow, 1
28KB, 1
Bit 3
ASPLOS, 1
4(%eax) 1
255 2
ASIDs, 1
Buddy-managed 1
9:2, 1
Available 8
Boost 2
B’s). 1
C.H. 1
Could 1
96 2
9.2: 1
Attacks 1
71755, 1
2008–18, 5
Above 3
512KB 2
Anderson, 2
Descheduled 1
Automatically 1
Download 4
A: 13
6. 20
CPUintensive 1
9.5. 1
Coherence 1
7.7: 1
Build 4
Anything 1
29.10) 2
Bounds[Segment]) 1
Account.html. 2
44 6
28.13 2
AccessMemory(PTEAddr) 4
CPUs). 4
ACHE 1
B1’s 1
Chevalley, 1
BEST 1
CONDITION 19
D.B.G. 4
A. 29
<stdio.h> 15
B) 3
7356 1
2013. 4
Abstractions 1
512m 7
Applications” 1
Design 3
EAKED 1
D′ 2
ABOUT 1
7KB 3
Compute 4
A) 2
Costs 1
8.6: 1
Buy 1
Appavoo, 1
29.3). 2
CHEDULERS 1
Allocating 1
4400 1
28.6. 2
Again 2
Can 40
ACM 11
AKE 1
ALWAYS 1
Balakrishnan 1
CPU? 11
Davis 8
ADDRSORT, 1
<sys/types.h> 1
B-tree, 2
8.5: 1
2015, 1
Al 8
6.3. 1
Approaches 1
B). 2
EC2 1
E.W. 2
Equipment 2
8, 1
Copy-on-write 1
ACHING 1
DEC 3
9.5: 1
B’s 8
Architecture” 3
2Q 3
CPU). 1
Analysis: 1
4K) 2
3) 2
Allocation: 2
Consistency 1
B5000: 2
Common 3
Along 2
Baumann, 1
CPUs, 14
December 8
AMAT, 1
<sys/wait.h> 3
Beginning: 1
9.4: 1
202 1
Anita 1
7. 16
801, 1
B86], 1
ECIDE 1
APIs. 1
Era 2
8-bit 3
Covering 2
Accesses 2
Daggett, 1
A), 2
CA, 7
30 31
Colorado, 1
B 157
Andreas 2
62 2
30.1: 1
Allocator” 2
Correct 4
B? 1
Communications 20
Alternately, 2
Best 2
Caches 3
Deciding 1
AN 18
A2 1
Block 9
AT 1
22.11 1
Approach” 3
Bonwick 3
8KB 6
BSD 3
EMBRYO, 1
EXCLUSION 1
Evaluation 2
;add 1
C’s, 2
Approximate 10
Debugging 2
ARC 1
CISC. 1
30.2 1
Concepts 2
BSD) 1
Apple, 2
80 18
7.7 1
Apparently 1
Counters” 2
Bayer. 1
Berkeley. 1
Always 4
Bhandarkar 1
Cesati. 3
Different 5
ANGRY. 1
AFIPS 4
But 49
Ah, 2
220 1
Aside 1
Both 7
9, 6
BSTRACTION 20
About 5
Edsger 8
FLOW 1
ANDLE 1
Daley. 1
Behind 4
Dirty 2
ATA 21
CPUs), 1
Come, 1
Conceptually, 2
Basic 10
Ask” 2
;store 1
76–86, 1
Apple’s 1
D. 33
D.R. 1
Beyond 14
Anomaly 2
Blocked: 1
Chapter 1
Dijkstra; 1
Also 10
AME 1
CONCURRENCY 3
Aren’t 1
24. 1
Assumptions 3
Burroughs, 1
9-bit 2
Below 2
AccessMemory(PhysAddr) 6
EnvyFS” 1
Flow 6
AddressOfPTE 1
Discovering 1
Between 2
Distribution, 1
Abdel-Wahab. 1
30.8: 1
Compacted 3
Conway. 1
Batch 1
B-tree” 2
ANDOMNESS 1
ANY 1
Atlas”, 1
Compile 1
Donald 1
Boston, 3
Another 38
Building 5
Clear 1
EALLY 1
An 65
AND 6
CRITICAL 1
At 31
2501, 1
A’s). 1
CPU-bound 2
Adaptation 1
Buffer” 1
Allocator: 1
Exactly 1
GE, 1
Analysis 5
Dominion 1
Bus 1
EG 1
Advanced 1
3000 4
Corporation 1
Couleur 1
CISC 7
B97, 2
8.6 2
API. 5
Austin, 1
Copper 1
EAL 1
Bouron, 1
Architecture. 1
Avoiding 1
Clements, 3
ERMS 4
Atlas: 3
AVOID 7
Certainly 1
Atlas 10
26, 1
BETTER 1
Caching 1
Ajay 2
C++ 2
Also, 1
Exclusion 4
Heap: 1
April, 3
EFERENCE 1
Buttlar, 2
EMORY 36
Android), 1
400MB 1
Correcting 1
DeWitt. 1
CPU: 1
Baby 2
9.5 1
Accurate 1
Authors: 1
Core 3
EASY 38
Broken 3
Burroughs 5
BUCKETS 2
Condition 6
Edward 2
Atlas”; 1
Abstract” 1
Coherence” 1
B.W. 1
29.10: 2
Barton 3
Center, 1
Allocate 3
CCS 3
Atomically, 2
Failing 3
Heinrich. 3
Arrivals 1
Early 3
CPU-intensive 4
END), 1
Architectures 4
49).” 1
Craft 1
Detection 1
Carl 5
Baron, 1
< 24
Amazing! 1
Basically, 5
DMA). 1
EKKER 1
Butler 3
CISC, 1
Calculate 1
Counting 2
Emacs. 1
Award 2
Adam 1
Compared 2
Base/Bounds 1
2KB), 1
Base[Segment] 1
Chang, 1
Allocation” 3
CV 2
Available: 29
Fast, 2
Hershey 1
Bradford 2
Eligible 2
Cambridge, 2
EVEL 11
B-trees); 2
4MB 2
D, 2
EEDBACK 11
Charles 1
Classic 1
>> 11
Anderson. 1
Bertinoro, 1
Beyond” 1
Entry 3
CONTROL 2
Belady 3
Compilers 1
Dickey. 2
Gandhi, 1
A’s 7
Ahead 2
Concept” 1
Base/bounds 2
30.12 1
Better 4
Compaction 2
Arpaci-Dusseau. 3
Caching, 1
Average 1
Flag 2
Hits 2
BufferOverflow.pdf. 1
Elliott 1
Concurrency? 1
Example 18
Blumofe, 1
5. 27
DRAM, 1
EYOND 27
Bone: 2
Compiling 2
A; 2
Any 3
Declaring 1
Bovet 2
Ever 2
Cheap 1
Bits” 1
Computers, 3
ESTRICTED 1
HAPTERS 1
Björn 1
Concurrency 1
And 108
Boston 1
34KB 1
California. 3
Control, 1
Assign 1
Chunk 1
A’s, 1
Flash-based 1
Hopefully 2
Burnett 1
Errors 3
Corbato 4
Examples”. 1
Brinch 7
6KB 1
Don’t 17
Embedding 1
Brooks. 2
Computers 2
ANAGE 3
Approach: 5
Definition 1
Burchfiel, 2
FIFO. 4
Computers” 1
Bruce 1
Computer” 5
Electronics, 1
HREADS 1
Boyd-Wickizer, 3
Controlling 2
Atomicity 2
Avere 1
36K 1
Callers 2
Corbet. 2
August, 1
Cohen, 1
BFS 1
Frans 4
Hydra 1
COND 2
Evans 1
Dennis) 1
F.J. 1
Butter 2
7, 2
EALING 1
Examples 3
B’s. 1
Computing, 3
Alan 3
B+96, 2
ESOURCES 1
Bye 1
FIFO’s 1
Control 11
C. 24
Cocke, 1
Examine 9
Hash_Insert(hash_t 2
C, 12
Couleur, 2
Critical 2
B1 1
3764 4
Canada. 2
Certain 1
Begin 1
Complete 1
Base 3
FreeBSD” 1
IBM 9
CPUs) 1
Examination 1
Dialogue 3
February, 1
CPU-optimized, 1
7.2, 1
ECHNOLOGIES 1
FIFO; 2
Factor 2
Custer, 1
Although 16
BAD! 2
Emacs 1
C-callable 2
Factors 1
Cooperative 1
D.A. 1
Computing; 1
FOR 2
Hill. 1
COMPCON 1
Bottom 1
Crockford’s 2
Base-and-bounds 2
3980 3
3A 1
Change 4
Being 3
Concurrency. 1
Bonwick. 1
G62]. 1
IEEE 7
California, 6
FILENO 1
Dijkstra. 9
Further, 8
CPU. 31
CPUs; 2
C; 2
Fall 5
ERSION 166
DOO 1
And...? 1
BF 2
EvictPage() 1
C.A.R. 1
File-System 1
Contents 1
Dennis 6
Convention. 1
Fill 1
Hong-Tai 1
Calls 4
For 194
Forget 1
Before 21
Couleur. 1
Concept: 1
Bershad, 1
4 164
Conditions? 2
Bosch, 1
Germond. 3
IF) 1
Canada, 4
Follow-on 1
Dijkstra’s 5
Futex 2
8k 1
CS 1
Came 2
Finding 2
ESX 2
Decepticons1 1
B: 12
Benchmarking” 1
Fine-grained 1
CACM, 5
Flesh 2
Frequency 1
Directory, 1
C’s 1
DID 1
Days 1
Candy 1
Currency 1
FreeBSD, 1
Future, 1
Berkeley 7
Creating 2
DOS 1
Binary 1
4(%eax), 1
Cool, 1
Broken: 1
Hoc 2
IO 7
Chemistry, 1
Fortunately 2
EAD 1
Geometry 2
Glaser. 1
Check 8
Close 2
Finite 1
Electroanalytical 1
Dekker, 2
Bach. 1
Battle 1
C9 1
CPUbound 1
Contrast 2
Friedman, 1
ETH 1
Hydra” 1
Bouron 1
Denning. 2
Com-puting, 1
DVICE 1
G 12
CHEDULING 50
D) 3
Death 1
Boilen, 2
4.2 1
400 1
By 58
CFS” 1
Index 11
Child 1
Google 2
EE 1
Effectiveness 1
Handle 4
Child: 2
Commu-nications 1
Firefox, 1
Europe(!). 1
ECTION 1
Blasgen, 1
Fortunately, 9
C95]. 1
Clustering 1
Correspondingly, 1
Full? 1
Either 4
Experiment 1
Brother” 1
Denning’s 1
Compare-And-Swap 2
Disk 5
HOLD 1
CONDITION, 1
Daniel 3
Design, 1
CFS) 1
Design” 4
40000 2
How, 1
CODE 2
Instinct, 1
Coarse-grained 1
Growing 1
991 1
Embedded 1
Hardware?” 1
Christenson. 1
Computing 4
Gain 2
Evaluating 4
EPARATE 1
Emery 1
Fun 3
GB 7
GHz 2
Create: 1
GB) 2
I. 1
Find 4
CPUs: 1
Doing 23
Compare-and-swap 2
Does 29
Cache” 1
I/O 86
Definitely 1
Details 1
CMU 1
Detect 1
4088 1
I/Os 3
CPUs 37
International 3
Come 3
Having 4
<virtual 2
English 1
Helen 1
Circuitry 1
Conversely, 3
Garner 1
FIFO, 7
CFS, 3
Fair 6
CFS 40
Comparing 2
GUIDELINES 1
Decision 1
Getting 1
IBM” 1
Fred 1
Class? 2
Each 19
Ed2.pdf. 2
Facebook). 1
Chile. 1
ISSES 1
Dennis, 2
Done 1
CONCURRENCY: 15
Dissertation 1
4096-byte 1
4196 1
4:100,1:0. 1
J. 33
Conference, 7
Countermeasures” 2
AMAT 4
F.H. 4
History: 1
Completely 5
Corbato, 5
Gray, 1
FIRST)? 1
Fekete. 2
CRUX: 6
Compatible 1
Good 8
CPU 255
Depending 2
Gorman. 1
IRECT 15
Gray. 2
Code: 2
Computer 20
ERFORM 1
Formalizations” 2
Comment 2
Incrementalism, 1
ENERALITY 1
Druschel, 1
Capel 2
EASUREMENT 1
Cache-Affinity 1
Imagine 39
5.1 1
Job:C 1
Hoare. 1
Approximating 1
D 109
Fetch 5
Hive/HDFS, 1
Convoy 1
Cox, 1
Guerraoui, 2
FetchAndAdd(&lock->ticket); 2
G) 1
Concurrency), 1
Google, 2
CPU-bound; 1
Figure 335
Despite 1
Grows 2
Gray’s 2
Commodity 1
Corporation” 1
ESS 1
History” 1
Conference; 1
Invalid 2
Efficient 2
EARN 1
Cilk-5 1
In 387
EBOOT 1
Chou, 1
January 14
51. 4
Joe’s, 1
INVERSION 1
IT 3
DEKKER’S 1
Final 4
Forin, 1
Corporation. 1
Custer 1
HW 1
Call 8
Golding, 1
Considered 2
Header 2
CR3 1
First: 1
E) 1
Here’s 4
HY 5
Considering 1
Creation: 1
ETTING 1
IRTUAL 19
Counters 8
Jaswinder 1
Everyone 1
EDUCE 1
Cocke 1
Includes 2
ERFECT 1
Clark. 1
L. 10
7.5: 1
KPTI 1
Architecture 9
ITHOUT 2
DRAM 1
Hmm... 2
GNU 3
Corwin, 1
Deadline 2
Handles 1
Case 4
Here, 13
Counter 6
Hill 1
Candea, 1
Free 8
Elias 1
Hey, 1
Hawkins, 1
Creation 6
Daley 1
EVELOP 1
In-ternational, 1
Culler, 2
Journal, 2
FFICIENTLY 2
EMORY-M 1
Computations” 3
Indeed. 1
Earliest 1
Code 24
Lampson 6
7.8). 1
Keeps 2
Argument 2
Influenced 1
Dekker’s 6
Homework 28
Generalized 1
Digital 2
Determining 1
Hard 1
Cassandra, 1
Characteristics 1
D.H.J. 1
Home 1
Canyon 1
Freedom 1
Even 20
Historical 4
I/O: 4
Culler. 1
Dennis. 1
Engineering 1
Introduced 3
DO 1
Lauer. 2
Guide” 1
EMORY: 26
Concurrency: 2
Interposition 1
Far 1
Code00 2
MA, 2
7094 1
Knuth. 1
Arpaci-Dusseau, 10
Interestingly, 3
Destroy: 1
Goh, 1
However, 120
ELOCATION 2
Dharmendra 1
Heap01 2
Hits+M 1
Cores 1
Dave 3
Huge 2
Case, 1
Hank 2
Experimental 2
History 4
Inverted 1
Culler’s 1
Development, 1
Envision 1
Isolation” 1
Daily 1
Lauer’s 2
EPRESENT 1
HE 83
Context 3
Introduction), 1
FetchAndAdd(int 2
Computer, 6
Mac) 1
7355 1
LATER 1
Atlas. 2
Dr. 1
It 92
HINK 1
Hugh 4
EPLACEMENT 2
Discusses 2
Hussein 1
House, 1
Corporation, 1
Department, 1
CompareAndSwap(int 2
Harper 1
I 171
FAST 7
INITIALIZER. 2
Jacqueline 2
DVANCED 13
Douglas 1
Evans. 1
Italy. 1
Delete 1
Lectures 1
ERSISTENTLY 1
HYSICAL 27
DDRESS 25
Javascript 2
Forgetting 3
Control: 1
Manager” 1
8.4: 1
LISP 1
Berger, 2
EGAIN 2
Jose, 7
I! 1
IGHT 1
EY 4
EASON 1
Incorporating 1
I/O) 2
Critically, 1
DisableInterrupts(); 2
Contents: 1
Hybrid 2
I/O-intensive 2
Fast 4
Initialize 3
Josep 1
Database 1
EC-11:2, 1
Every 1
I’m 5
Detail 1
Linux). 5
Enough 1
Hall, 5
Default 1
Job:B 1
George 2
Cores” 2
McCall. 2
9.3: 1
Later 2
Beth 1
ETTER 1
Kaufmann, 5
ISTORY 1
ISBEHAVIOR 1
Easy, 2
END? 1
Intel’s), 1
INITIALIZER, 2
Detailed 1
Distribution 1
Cup 1
I/O; 3
FindFreePhysicalPage() 1
Intuitively, 1
IECES 154
KPTI) 1
Devang 2
ELADY 1
Flexible 3
KB); 1
Deterministic? 1
List_Insert(list_t 4
Example: 6
Hastings, 1
Dissertation, 1
KB64 1
Given 15
Cutler, 1
Mellor-Crummey 4
AS 10
Loading: 2
Bill 1
Earl 3
Knowing 3
Increase 1
Interesting 1
FIFO: 1
ESIGN 1
Interludes 1
IST 2
Dijkstra 12
EECS 1
DD 1
INTRODUCTION 15
Framework 1
Isolation 1
Implementing 2
Kanev, 1
Directory 5
Exception 1
Frame 1
LWN 2
Deuterium” 1
Locking 2
F 36
Facebook, 1
Dynamic 7
LATER? 1
Group, 1
DBMS), 1
E 195
AZY 1
Looping 1
Boles. 2
Earlier 2
L1 4
Initial 3
L 59
Graham. 2
Easton, 1
KB-32 2
ITS 1
Errors” 1
ETERSON 1
David 19
IP) 1
From: 1
Joy 2
Indeed 1
Kathryn 1
Efficiency 2
FAULTS 2
Generate 2
Like, 1
Do 18
Longer 1
He 3
Farm 1
LESS 1
HARING 2
Microprocessor 3
Dick 2
ERMINOLOGY 1
Abstraction: 3
MAX_HEAP_SIZE; 1
Buffer) 1
Evolution” 2
LL/SC 2
Intel. 1
LDE). 1
H&P 2
Edwards, 4
KNOW 1
Ideally, 2
FAULT 1
Eindhoven 2
Dead: 1
Instruction 4
Fujiki, 1
June 13
Internet 1
Kernel 14
Figures 2
Finnish 1
Hansen. 5
Logistics 1
E. 20
May 11
Hennessy 3
First-in→ 11
Languages 2
HINGS 1
NPUTS 1
Direct 8
Evolution 1
Addison-Wesley, 11
MB) 1
Excellent 1
Least-RecentlyUsed 1
C 212
Internals: 3
Leffler, 1
Heap 16
Epema. 1
Know 2
Its 4
Fault 4
Emacs7 1
Decay-Usage 1
Introduction 8
Gibson, 1
LOW 1
Issue 4
LRU. 3
G. 9
Fredkin, 2
Hansen’s 2
Lord 1
EnableInterrupts(); 2
McCarthy, 2
Hint: 2
Function 2
Lepers, 1
Handled) 1
OK 4
ECHANISMS 11
FASTER 17
Allocators 1
MIT. 1
Extra 1
Libraries 1
CONCURRENT 15
J 1
Levy, 5
I/O). 3
Epema’s 1
L3 1
Jain. 1
GBs 1
Engineers 1
Dijkstra, 4
KB), 1
Goodness, 1
LRU? 2
Joseph 1
LRU’s 3
Good, 1
G.L. 2
Implement 4
MAC 2
Execute 7
Membrane 1
HotOS 2
GAINST 1
Libraries: 1
Hazelwood, 1
ONSTANTS 1
EGMENTATION 12
Failed 2
Amazon’s 1
MIT’s 1
FIFO 37
MAC, 1
CPU; 11
Knowlton. 1
List_Lookup(list_t 4
MASK 3
French 2
LRU, 11
Jain’s 1
Gecsei, 1
February 16
Doesn’t 1
Labs 2
Guide 3
Law. 2
KASLR, 1
Labs” 1
Gouicem, 1
Generally, 1
It’s 4
Mac 12
Fagin. 1
NULL, 20
How? 1
Handbook 2
Linked 8
Human 1
OS-ignorant) 1
Evict 4
Farm” 1
MUTUAL 1
As 158
Fourth, 1
MALLER 15
Cilk 1
Knuth 6
IT! 1
Mayer. 2
Go 4
MIT), 1
James 1
Ginting, 1
Fetch-And-Add 2
ECHANISM 30
Length 1
HOW 6
Learn 1
KEY 1
Licklider. 3
Hill, 3
Grove, 3
Jacob, 1
Mail. 1
Manuals 1
Nobel-prize 1
ID 7
Harry 2
LoadLinked 2
IKE 1
OSes 2
Extract 1
Faster 2
Manual: 3
Atlas” 1
Francisco, 1
MMU. 2
Claypool 1
LaTeX, 1
Innocent 2
Media, 3
Goals 2
Mac. 1
Java. 1
Gollum, 1
File 3
Electronic 2
Loads/Stores 2
Hardware 18
Low 2
Key 1
Lipman 1
I, 1
Gupta. 2
Jeffrey 1
Gaming 2
Mars?” 2
Numbering 1
IMER 1
Henry 1
Low-level 1
IP 41
Fairness 2
Feedback 5
Memory” 1
PERATING 184
Austin 3
G.A. 1
Mac, 1
Concurrent 25
Larry 1
Interactive 1
Multiple 1
H. 20
Michael, 2
K+96]. 2
Guide. 1
Freeing 2
Exactly. 2
Lots 2
Harmful” 2
Mac! 1
L->head 8
Lipp, 1
I/O. 10
Hit/Miss? 4
Johnson, 1
Gets 2
Murphy, 2
OES 1
Ingo 1
Hershey. 1
Making 3
IRTUALIZE 5
Finally, 70
Festschrift 1
Minimally, 3
Park, 2
Base[SN] 1
HERE 1
Management 11
Current 3
Levin, 1
Joe 3
Multiprocessors. 2
Hash_Init(hash_t 2
Microsoft) 1
Kleinrock. 2
HICH 1
GB). 1
FFICIENT 1
Lucco, 1
Marco 2
How 141
L4) 1
M62, 1
INDETERMINATE, 1
Hoare 4
K 6
Goodman. 1
NBA 1
OFFSET 1
Investigator. 1
Hierarchies” 1
March, 1
ISN’T 1
Fox. 1
Golub, 1
Mozilla 1
Pesterev, 3
Blocked 4
HP, 1
Manual” 3
Denning 1
LoadLinked(int 2
Joy, 1
Multithreaded 3
Inc.. 1
NULL); 35
LWAYS 1
Has 1
Get 5
FIRST 1
MPLEMENT 1
Mattson, 1
Incorrectly 1
LOCK 2
MAX; 2
Indeed, 20
IGHER 1
Large 2
Goodman’s 1
NOT 1
OPTIMIZATION 1
Jones. 2
Hydra. 1
Metrics 1
Informatica, 1
Free-Space 1
HPUX 1
Mutual 4
Prentice 4
Boot 1
HREAD 12
Memory-mapped 1
Development 2
Lynch, 2
Jozef 2
NetBSD, 1
Interrupt) 1
NUTH 1
Law, 2
Hash_Lookup(hash_t 2
Gruss, 1
Facebook. 1
Managing 1
Maurice, 1
Innovator’s 1
Lawall, 1
MS-DOS. 1
Instructions 1
IMMEDIATE 2
Lauder. 1
Gray 6
Not 23
Offset 15
KB 18
I/O? 1
Mixed 1
Isn’t 2
FreeBSD 3
Handbook” 1
Netzer 2
R+89, 1
C-language 1
Muller, 1
Distributed 5
HREE 154
MANUAL, 1
June, 1
ORK 1
Job:A 1
Nethercote. 1
Leaks 1
I/O), 3
HARE 14
Failure 4
Microsoft, 1
Measure 5
Israel. 1
Laziness 2
MULATING 1
Kanev 1
IO). 1
Levels 1
Great 5
Novark 1
Overflows 1
Kenneth 2
IALOGUE 4
Modha. 1
J.S. 1
HEN 4
Happened 2
ODE 2
README, 1
CACM 1
Multi-Queue 1
EC-11, 1
Hash 8
MIT 5
Ken 2
OSTEP! 2
Jr., 1
Next 2
Learning 2
IA-32 4
HTTP 1
First 23
Minimize 2
Measurement, 1
Italian, 1
Lisa 1
Meehean. 1
Keith 1
IRTUALIZATION 5
Linus 1
HARES 1
O(1) 4
O’Reilly, 2
Kleiman, 2
INTERLUDE: 11
Moir 6
Jack 5
IFIPS 1
Heavyweight 1
OFTWARE 1
ROTECTED 1
CPU, 33
Multiprocessors” 5
END, 1
Here 30
MLFQ: 3
L2 1
Obviously 1
KB) 3
Nucleus 2
IMITED 15
Linux 107
Hear 1
Fleischmann 1
Modadugu, 1
Mesa, 1
Jackson-Edwards. 1
List_Lookup(&H->lists[key 2
Meehean’s 1
Krieger, 1
Manual”. 1
Humorously, 2
If 167
ODING 1
PDE. 1
LAW) 2
Ideas 2
Mountain, 1
K. 1
II) 1
Hit 29
Oregon. 1
Reliability 1
CREATE 1
NIX. 2
Ed2.pdf 1
His 3
MMU; 1
L60, 1
PACES 8
Lighting 1
Old 2
IRIX 1
Live 1
High 2
Frankenstein 1
Motivating 1
Microsystems 1
Jiaqi 2
Lock 12
Mistakes 1
LDE 1
March 14
I/O, 3
John 14
OINTER 1
PTE.PFN, 3
LRU→ 11
Imagine, 4
Nothing 4
KB, 1
IME 2
Holding 1
Out 2
Robin 3
Cache 18
Nethercote, 1
FIFO? 1
Hopefully, 4
MQMS, 1
Linux. 8
PDIndex 1
List: 2
Orr, 1
IS 1
Long 1
IDs 2
H 42
NECESSARILY 1
MongoDB, 1
Jobs 2
Locks.” 2
Multics 14
LOCK-BASED 15
Mark 14
Idea 2
Kawamoto, 1
OSSIBLE 2
PTIMAL 1
Lamport’s 1
Implementation 6
OMEWORKS 2
LEXIBLY 1
IZES 1
Holt. 1
PAGESIZE 1
SIGMETRICS 2
Coding 1
No 10
Facebook) 1
Hovav 1
Manchester 3
Linux’s 2
Palo 1
Liu, 1
PC, 7
Induced 1
MLFQ 32
IRE 5
HFE-1:1, 1
NT 4
Note, 2
Juan 1
Lower 1
NIX/C 1
Laszlo 1
Martin 1
Instrumentation” 1
Letters, 2
Object-Caching 1
Per 5
Leave 1
Information 6
OS), 2
LGORITHMS 1
If, 9
Horn. 3
PTBR 5
SIZESORT+, 1
Conditions: 1
Novark, 1
Fit 4
IBM, 1
Matteo 1
Long-Running 1
Patent 1
Locks: 2
POSIX, 2
Intel 10
Manuals” 3
ISCA 4
Hall/CRC 2
NCREMENTALISM 1
ONCURRENCY: 15
Julin, 1
MAP_ANON|MAP_PRIVATE, 1
NSA? 1
Led 1
Measuring 2
Intelligence 1
Linux” 1
Operation 1
Pick 3
Loops 1
Interlude: 4
Oh 5
Lacking 1
Jason 1
ITH 4
PTE.present 1
Spend 3
Create 3
Data: 2
Frigo, 1
INUX 1
Meltdown 2
Long-running 1
Patterson, 1
MIT, 1
Perl, 2
Is 14
Mogul, 1
Interaction 1
Hardware/Software 1
ND 10
ONTEXT 2
Karels, 1
MPORTANCE 1
NT” 2
Lock-based 2
Melvin 1
Jonathan 3
Lipman. 4
PAT, 1
Pren-tice 1
Lu, 4
Ion 2
Overview 3
Lauer 2
Jeff 3
Implementation” 1
PTHREAD_MUTEX_INITIALIZER; 7
Spin 7
O. 1
David, 2
Generally 1
Idea1 1
Moseley, 1
MLFQ. 2
PowerPC, 3
Massachusetts. 2
PhysAddr 8
Issues 6
MostFrequently-Used 1
Interrupts 2
I/Os. 1
Namely, 1
L4. 1
Malloc(sizeof(myret_t)); 2
OPT. 1
Look 1
Minneapolis, 1
Kaashoek, 4
Lists 5
PDP-10” 2
Protection 7
January, 2
PCD 1
Linux) 2
M 139
Job 11
Iyer, 1
OS 504
PTIMIZATION 1
Spin-waiting 2
OCK 16
Dealing 1
Greenfield. 1
International, 2
Network 1
MQMS 2
Provides 1
Meltdown, 1
Plot 1
It” 1
Moving 1
Jim 8
Included 1
Naval 1
Lanyue 4
Management, 2
OS? 4
MQMS). 1
Multiprocessor 4
LRU 33
Lu. 2
PD_SHIFT 1
Pthread_mutex_lock(&mutex); 8
Just 15
PPN) 1
MEMORY 1
Marvin 1
Journal 7
Kay 1
PT_MASK) 1
Success! 1
OLUTIONS 1
Developer’s 4
Hence 2
One 135
Johnstone, 2
New 9
Make 5
Pthread_join(p1, 5
Microsoft 4
Priority] 2
I’ll 3
Multi-Level 4
Joy. 1
Inserts 2
Neumann 2
Levy. 2
Mao, 3
OS” 1
Malloc(), 2
Next, 9
Least-Frequently-Used 1
MAX) 1
Performance” 1
Q6 1
L1) 1
PROT_READ|PROT_WRITE, 1
MIPS 14
Microprocessors 1
KB. 4
Keep 4
Ph.D. 3
Sullivan, 1
OMPARING 1
Diego, 4
Herlihy. 2
Only 10
Joint 5
Nickolai 4
Metric: 1
RAM, 1
Multiprocessing. 2
Process 35
KASLR” 1
Multi-level 7
Kernel” 1
Instead 20
No-eXecute), 1
Little 2
McCarthy. 2
Or 9
Many 21
No-Locality 2
MB 1
Let’s 90
Pioneers, 1
ROCESSES 1
L78]. 1
PTE. 3
Mach 1
Mr. 1
Limits) 1
Linear 2
Physics), 1
TORE 1
ON 12
ECESSARILY 1
Hochshule 2
Oops! 2
July 4
Nuclear 1
Microsystems, 1
REAT 3
NCE 1
Processor” 1
Knowlton 1
NIX! 1
Kuehner. 1
Intel, 2
OFFSET_MASK 7
Man-Month” 1
McCarthy’s 2
Overall, 3
Mechanism 1
No. 6
MMU 3
Lindberg, 1
Prediction 1
Rashid, 1
LLUSION 1
PageDirBase 1
Megiddo 1
Much 9
LRU-like 1
Memory 58
Policies 3
Tf 1
OOLS 1
ECURE 2
ICKETS 1
Orran 1
KB). 1
OMPILED 1
Nichols. 2
RaiseException(PAGE_FAULT) 1
NTERLUDES 1
Producer/Consumer 5
LOCKS 23
NOMALY 1
L4 3
Interscience, 1
OOT 1
Maybe 1
Menace 1
P1 6
NABLES 1
OMPLEXITY 1
McGee. 1
Lottery 6
Louisiana. 1
Refers 1
Lampson, 2
Part 6
Multics, 6
List_Pop() 1
Leonard 2
Multi-Threaded 2
Principles” 2
They 5
OS; 8
Earth 2
In, 2
Other 15
KB-64 1
P1) 1
Nope, 1
Randall. 1
NULL; 22
Purify 1
Linux, 15
OCKS 23
Las 1
I’d 1
OPT? 1
McVoy 1
Molnar 1
PT_SHIFT 1
NOWLEDGE 1
ONTENTS 1
Mechanism: 2
Problem 3
M.J. 6
Remzi 6
Lanigan, 4
Processes 8
NULL2 1
M. 35
Let 18
Multi-threaded 1
Program 20
Transforming 1
Tucker, 1
Edition)” 2
Inputs 1
Ousterhout 3
KPTI, 1
PFN_SHIFT) 1
November 10
Rate 4
National 1
Quantitative 2
Linux-based 3
OS. 26
Lavington. 3
I” 1
Open 2
Modeling” 1
Must 2
Paged 2
Ngram 1
OS) 2
Metha 2
Processes: 1
MBALANCE 1
River” 1
Late 1
Processing: 2
Nice. 1
MB, 1
Like 6
Multiprogrammed 5
Pthread_create(&c, 2
On 21
Two 11
Environment” 4
Issue: 3
P2 3
L->head; 8
PTEs. 1
ONTROL 8
Rudolf 1
Nemacolin 2
RAIDs, 1
List 7
OS’s 4
Leiserson, 1
Jing 1
PCs, 2
Montreal, 1
NIX: 1
Preemptive 1
OCALITY 1
PFN=55 1
Multics. 1
Q 12
MORE 2
Runs? 1
List_Init(list_t 4
Producers 1
Nucleus. 1
MIN). 1
MIPS, 2
Queue_Init(queue_t 2
NTRODUCTION 59
P=0 1
Warburg 1
Execution 8
Keeping 2
Kernighan, 1
LATER, 1
Parent 6
OO 1
SET 2
Note 34
ROP. 1
Locks 29
Ousterhout. 3
Levy 1
Joyce. 1
Paul 3
Morgan-Kaufmann, 2
Neely, 2
Present 1
OESN 1
PID. 1
NIX 55
Quicksort, 1
MS-DOS 1
S09]. 2
MALICIOUS 1
Project 3
Pthread_create(&p2, 5
MMU, 1
MM00]. 2
Queues 4
Nancy 2
PAGE 6
Win, 2
F. 8
PRIORITY 1
Kilburn, 4
LLOCATE 1
Pass(B) 1
P. 12
Schedulers: 1
OMPLETE 19
Ma. 2
RUX 33
Ousterhout’s 2
Life 1
KB; 2
Performance 11
Pollack, 1
Nimrod 1
Price. 1
OF 9
Paranoia 1
Neither 1
RANSFER 1
MUTEX 2
SHIFT) 8
Macintosh 2
Or, 7
Pthread_mutex_lock(pthread_mutex_t 2
McCarthy 2
Main 1
R/W 1
Narrow 1
PID 5
X/macOS 1
FILENO). 1
Padegs. 1
LW 1
Later, 2
Point 1
PEED 1
Set 6
OUR 2
Man 3
Recall, 1
Load 4
Lampson. 2
Multiprogramming 4
Positive? 2
Nir 2
P 280
Priority(B), 4
OK; 1
Pass(C) 1
Nelson 1
REATE 2
Mars 5
Secure 1
Maurice 2
P1, 2
RE 1
Miss? 1
Malcolm 1
Raging 1
Node_t 1
PM 4
X11 1
FOOLISH 1
Paging, 1
Language” 2
Lee. 1
Policy: 2
PETERSON’S 1
Sharing 12
Optimal 3
Management” 2
Record 1
Looping-Sequential 1
Lampson’s 1
Protocol 3
N 41
No, 2
P4, 1
Pthread_cond_signal(&fill); 2
Pn−1 1
Of 70
REEMPTIVE 1
May, 1
Semantics 3
McDougall. 3
PFN) 2
O 247
Rago. 4
Monitors 1
Manchester; 1
Redell 2
Non-Cooperative 1
Page 39
Yuanyuan 2
False) 10
Priority 4
Letters 3
List_Init(&H->lists[i]); 2
Presented 1
PT: 2
Signals; 1
Oracle 3
Markstein. 1
Responsibility” 1
M.I.T., 1
Limited 6
Queue_Dequeue(queue_t 2
NT, 1
Notes 4
PAGES 2
Pthread_mutex_lock(&m); 6
Precise 2
Organization 1
RISC 14
Memory: 3
September 13
McKusick, 1
Parallel 3
ORRECT 2
Regions 1
Mythical 1
Manifesto” 1
Redirection 1
O(log 1
OK? 2
[AC97]. 1
Farrell, 2
Professor? 1
M83]. 1
List_Insert(&H->lists[key 2
Programmer’s 2
Peterson. 2
Smotherman. 1
Our 25
Miss 29
Right! 1
MORTIZATION 1
Line 3
Queues: 2
NTERPOSITION 1
Number 8
PDPTA’97, 1
Q0 13
Privileged 3
P0), 1
ROP 3
Merritt, 2
Shedler 1
Measurement 2
Peanut 2
OSDI 10
Revolution 1
NGINEERS 1
Memory, 1
Reduce 1
Pal 1
OS). 2
[B+18], 1
Fellner, 1
Q1 15
MLFQs 1
Load-Linked 2
Protected 1
Peterson’s 6
Smotherman’s 1
PAGING 22
N. 7
S, 6
Microsystems. 1
Locks, 1
R 21
NUMPAGES. 1
OOK 1
PFN, 1
ROBLEM 4
Problem: 6
PERATIONS 2
RaiseException(TLB_MISS) 1
Michael 10
Star.” 1
Mesa 4
Power 1
One”. 1
Scalable 10
NIX, 2
MenuMeters 1
Reeves. 2
Pathfinder/Authoritative 2
[B89, 2
Randell 1
First, 58
OSTEP. 166
Maintenance 1
Load-linked 2
Pthread_mutex_unlock(&mutex); 8
Placing 1
Space 20
PF 3
Need 2
SCHEDULER 1
Mitchell. 1
Mangard. 1
RIORITY 1
O(n) 1
OPERATING 42
Pages 5
Random 21
Programs 4
PHit 1
Ratios” 1
Miller. 2
Steve 4
Mike 2
Pthread_join(p2, 5
OpenSolaris 1
Shared 2
NIX-based 6
Mesa” 1
Registers 1
Physical 13
[CP78] 1
Reese’s 1
Fleischmann, 1
Overlap 2
McGraw-Hill, 2
Locks”) 2
Quanta 1
Problems: 1
Thomas 3
Paging 6
OS: 1
SEFUL 2
Mudge. 1
Maxwell’s 2
RR. 2
OFFS 1
OSTS 1
OS, 31
Operating 38
Pthread_mutex_lock(&c->lock); 6
PREMATURE 1
Reducing 1
Milton 1
Surprisingly, 1
NUMCPUS; 4
Publishers, 1
P1’s 1
Sleeping 3
NULL 20
Modern 3
Navarro, 1
Processing 5
[D97]. 1
Professor: 37
Programming: 3
Pthread_cond_signal(&c); 4
Pthread_cond_wait(&cond, 6
Pthread_mutex_lock(&lock); 6
RISC, 2
RaiseException(SEGMENTATION_FAULT) 5
Reclaim 1
P.M. 1
Models” 1
MIN 1
Random) 1
Pthread_cond_signal(&cond); 6
Turner, 1
Patel 1
Occur 1
SEG 2
Multics” 1
McKinley, 1
Randal 1
Paging: 4
Recent 1
October 17
O’Hallaron. 2
Putting 1
PTE, 6
Relationships, 1
Mitoma, 1
Swap-Based 1
NX 1
RDLK 2
Pacific 3
Software-based 1
NeXTStep 1
Represent 1
Needed 1
[Free] 1
References 28
Form 1
Restoring 1
PACE 21
Most 9
Mauro 2
Recognized 1
Pthread_mutex_init(&c->lock, 2
UK, 2
Phenomenon” 1
Oddly 1
SPARCv9). 1
NDETERMINATE 1
Mechanisms 3
Rather, 4
Peterson 2
Required 1
Ousterhout, 2
O’Reilly. 2
Questions 26
Passing 2
Review” 2
More 24
T3 8
OK, 11
RR) 1
Pfaff, 1
Preemption-safe 2
Negative-Growth 1
Nelson, 1
Nevada, 1
[J91]. 1
SJF/STCF 1
From 23
Resulting 4
PDE 8
NDERSTAND 1
PIECES 38
Relocation: 2
R.P. 1
Unfortunately, 37
Play 1
Often 1
Scheduler 5
NUMPAGES 2
Morris, 4
Results 1
Policy 6
Running 24
Overhead 3
PLDI 3
RY 1
Quarterly, 1
Ritchie) 1
NE 1
TCB. 2
ORE 2
RUNNING, 1
Solution: 1
Prefetching 1
Rule 14
OSSpinLock 2
Non-Coalesced 1
[LL82] 4
San 12
Fusion 1
Richard 9
Microsoft’s 1
Page-Reference 1
NTERLUDE 35
S). 2
R10k 1
Unknown.. 1
Processes” 2
Organick. 1
Seg 1
Now, 26
Neat 1
SWITCH 6
Portland, 1
S. 22
PageTable[1] 1
PTE 17
Rachid 2
RUN 5
SGI. 1
NY, 1
Newell, 1
OSes, 1
Random, 5
Sorin, 1
Primer 1
SE 11
OK! 2
Once 41
[M07]. 1
Santiago, 1
Gates 1
SUPPORT 1
Morgan 6
Patt 1
Oh, 1
SDS 2
ROPORTIONALLY 1
Unlock 2
Pthread_create(&p1, 5
Over 6
Showing 1
OLICY 4
Non-compacted 1
SYNCHRONIZATION 1
Problem” 3
SECTION, 1
Patterson. 2
PTHREAD_COND_INITIALIZER; 3
Rafael 1
SJF. 2
Ready 58
TILIZATION 1
Now? 2
OUBT, 1
Readings 1
OW 34
Process0 12
SS+10]) 1
Obtaining 1
Ott. 1
[R97] 2
Similarly, 6
Glenn 4
Secker 2
Mysterious 1
Pieces 2
Orwell. 2
SER 1
Randomization” 1
Until 3
R.H. 1
PROGRAMMER 1
Soon 2
ONCURRENT 16
OK. 2
Schedulers 1
Process1 9
SN 3
Pons. 1
Page, 1
Relational 1
Sanzi, 1
Recheck 1
TIP: 9
OPT 4
Spin(), 1
Reprinted 1
Otherwise, 1
Professor, 1
SSD. 1
O’Hallaron 2
O’Reilly 3
[S+04] 1
Single 7
Going 1
NTERRUPT 1
See 43
Pillay. 1
Orwell’s 1
SHIFT, 1
Reboots 1
VAX-11/780 1
R4000 5
PTEs 3
Spaces 3
OOPERATION 1
OLICIES 16
Seward, 1
Protection) 1
Saavedra-Barrera. 1
Said 1
PageTable[39] 1
Resort, 2
Scalability 3
Riak. 1
TS 1
PC 16
Spin(1); 2
Research 3
P6 1
Programmers 4
SYSTEMS 42
ROCESS 30
PTE.PFN 1
[SHW11]. 1
Slab 1
Harcourt, 2
NULL) 6
Seems 1
Portable 1
P3 1
Shan 2
Review, 3
Va5 3
RINCIPLE 2
PTIndex 1
Streams 1
OR’d 1
ONCURRENCY 3
Sorry3 1
Python. 1
Previously, 1
Scaling 6
Pass(A) 1
Rules 5
Scheduled 1
Table? 1
Run 68
PINNING 2
Stephen 4
Running, 1
PID) 1
PAT 1
Security 2
PWT 1
[Y+18]), 1
So 30
Heart 2
RPACI 154
OBS 1
Shared-Memory 4
Press, 7
PCD, 1
Simple 29
S+03] 1
Virtually 5
Raiders, 2
Page” 2
System: 1
Orleans, 1
Speaking 1
Q1. 1
Priority, 1
Scientific 1
Perspective” 5
ORG 166
S.Sahni). 2
Science). 1
Third, 5
S_IRWXU); 2
POSIX 20
Support: 1
Russ 1
PPROPRIATE 1
PDE, 1
Self-Tuning, 1
Perfection, 1
__lock_t 8
Sometimes, 9
Instead, 7
Ranganathan, 1
ONDITION 1
Shared-memory 1
Process: 2
PTE: 1
Smaalders. 2
SHIFT 8
Wulf. 1
RaiseException(PROTECTION_FAULT) 9
Particularly 1
TOPLAS, 2
P0 4
Sploitfun. 1
RR, 1
Pthread_mutex_unlock(&c->lock); 6
Shacham, 1
Processing, 1
OSes. 1
SJF/STCF) 1
Setup 1
Turning 2
Section 1
PPLICATION 1
Switzerland 1
Say 2
Page-Fault 2
PageTableBaseRegister 1
Spending 1
Pioneered 1
abstraction 15
Sun, 2
Last 1
Ready: 1
ONG 1
Shavit. 2
Producer/Consumer: 3
Problems” 1
Spider-Man: 2
SN_SHIFT 1
[4] 1
Recollections 1
Plenty 1
Tc1). 1
Parts”.) 2
Sun.. 2
Randell. 1
Python, 2
Shortly, 1
Proportional 2
PDBR 2
Saying 1
Silicon 1
Typically, 2
Shedler. 1
PTE.ProtectBits) 3
Systems” 7
Schroeder. 1
Physical) 1
Patt, 1
Stack11 2
Probably 11
accessed? 1
T. 14
Library” 2
Relocation” 1
OPERATIONS 1
Shavit’s 4
Put 4
Processes, 1
Spurious 1
STCF. 1
[AC97] 1
Ritchie. 1
Pthread_cond_wait(&c, 3
That’s 6
Patterson 2
Sweden, 2
Relocation 1
Quarterman. 1
Sood, 2
Proportional-Share 3
PD_MASK) 1
Sharing” 1
Similar 3
UNSW-CSE-TR-0321, 1
Solomon. 2
PTEs). 1
TLBWR, 1
Scott 10
Processor-Memory 1
Persistence 1
Stodolsky, 1
Pthread_join(p, 4
accessible, 1
Linux); 1
Remember 5
OU 1
TLB 173
Solaris 18
ROCEDURE 1
Professor 5
Stallman. 2
Saint-Exupery 1
[B,C 2
SSD, 1
Queue_Enqueue(queue_t 2
Try 11
Perry. 1
Switch 3
Replacement 6
Quote 1
Special 1
Proportional-share 1
PTHREAD 4
Software 7
Simulation, 1
VPNs 5
Stack? 1
Pathfinder. 2
Thanks. 1
Segmentation” 1
Protection” 1
Prof. 1
SunOS 1
RACE 1
acquire/release 2
M.K. 1
Repeatedly 1
Replacement” 1
Response 3
Solution 5
ROPORTIONAL 13
Programming 15
Structuring 1
Scheduler” 2
[BH73] 2
Schedulability 1
RADE 1
ULTIPLE 2
Peter 5
Synchronization 8
STACK: 2
RAM. 1
Stanford 1
RANSLATIONS 15
Paperbacks, 1
Sorry, 1
Sitaram 1
Va0 3
Statement 1
Perhaps 15
There? 1
Specification, 1
Q5 1
Pthread_create(&p, 5
Systems 18
RANSLATION 15
acquired, 2
MRU 2
OWERFUL 1
TORAGE 1
Rings, 1
Soyeon 2
RTFM 2
Q2 9
Susan 1
Simply 3
[C03]. 1
Search 2
REE 19
URSE 1
Pons 1
Systems: 6
STCF 8
Pthread_cond_signal(&empty); 2
Starts 1
README 20
Pilot 5
Stalin 2
Standard 2
Virtual 12
Steven 1
Phoebe 1
Tickets 1
Stanford, 1
Rather 1
Q4 1
TD 2
ROGRAMS 1
actual 15
Machine” 1
Operations 3
Tb, 1
Round-Robin 1
Stretch 1
Relocation) 2
RISC-like 3
Switches 1
Smotherman 1
[CD85] 1
Server” 1
Read 38
User 14
Poor 1
T2, 4
Shah, 2
Q8 1
State 12
ROM 2
Prentice-Hall 1
Stride 4
Steinberg. 1
WORST)? 1
Storage 10
Pointed 2
Trap 2
Store-Conditional” 2
Redell. 1
Queue 8
THREAD 12
Race 2
advocates 1
Markowitz, 1
P4 1
Times 1
Run: 2
Subramanian, 3
Research, 2
RR? 1
Synthesis 1
Splitting 1
[D97] 1
Simple, 1
Read-Execute 1
Vol. 5
PowerPC 1
Tc2) 2
Sharedmemory 1
ROVIDE 1
Student: 36
Supervisor” 1
Pretty 8
TECHNICAL 1
TERMS 1
THREADS 1
Swapping, 1
Positive 1
U/S 1
Sun). 1
Redell’s 1
RAND 5
Resources 2
THREE 37
affinity 8
Massachusetts, 1
PDP 1
To? 1
SJCC, 1
Suli 1
Restartable 1
RUNNABLE, 1
TV 1
Staelin. 1
[G85] 1
Sometimes 9
Reduced 2
WITCH 1
Prints 1
TestAndSet(int 2
Short 1
Rago 1
Recovery” 1
Symbiosis” 1
Pthread 11
Strachey. 1
Waciuma 1
TLB) 3
TLBs 10
Proceedings 2
USA. 1
Surveys, 1
SPINNING 1
REMATURE 1
Running: 1
Takes 2
again: 2
Methods 1
Together 1
PFN 43
SJF, 4
Support 9
Restricted 1
Recommended 1
Thread2 6
Status: 1
[H93] 4
Spectre 3
Report 2
WORST 1
Probability” 1
Too 3
Single-Threaded 2
Raiders” 2
Remove 2
Systems.’ 1
Pthread_cond_wait(&empty, 2
Strachey’s 1
Weihl. 1
TLB-miss 1
Ta 3
Recall 9
VA 1
Swift 2
SSDs) 1
Red-Black 2
Scott. 4
Techni-cal 1
algorithms 26
Miscellaneous 1
Translations 2
PT 2
Save 2
TLB; 1
Roscoe. 1
Repair 1
Threads? 2
Stick 1
Structures: 1
Stack 14
SEG_SHIFT 1
Worst 2
Pthread_cond_wait(&fill, 2
Transparent 2
Smaller 1
Really 3
Return-into-libc 2
THE 9
Q7 1
Structure 3
Wood. 1
Technical 4
Tuning 1
Relocated 2
VAX-11/750. 1
System/370” 1
Same 2
Register 8
Segregated 1
Techniques” 2
annotate 2
There 42
Trevor 1
PTEAddr 6
Scan-resistant 1
TeX, 2
Routines 3
Replacements 1
Threads” 6
SJF 21
Superpages” 1
Stan 1
SIGNALING 1
YNCHRONIZATION 1
Pthread_mutex_unlock(&lock); 6
U.S.S.R; 1
Stored? 1
RetryInstruction() 4
Robert 9
TLBs, 6
REASON 1
Synchronization” 2
Y. 1
Than 1
Types 1
Valgrind 2
TestAndSet(flag, 4
W 17
Reuter. 2
Sequential 2
Morse. 1
anymore? 1
S 379
UIDELINES 1
Patel. 1
Should 4
Theodorus 2
S.J. 1
This 201
[J91] 1
Tim 2
SLEEPING, 1
THINK 1
Sun 5
STCF, 1
Yes. 1
Published 1
Undefined 1
Structure” 1
SOLATION 1
SIGINT 2
TM 2
RITICAL 1
System, 2
[AC97]; 1
Threads 5
Sanjay 1
ULL 1
WITCHES 1
U 89
Size 10
SIDE 40
Most-Recently-Used 1
SEG_MASK) 2
approach, 25
University 6
Pennsylvania, 2
Stoica, 1
TlbEntry) 4
SIZESORT-) 1
SPARC 9
[M07] 1
Tony 1
STDOUT 1
TLBP, 1
Tb 2
Short, 2
Zero” 1
Users 2
R. 33
Switching 4
Sadly, 2
SIGTSTP 1
Rajimwale, 1
T1, 12
[B94] 1
UTUAL 1
VMS), 1
URL: 1
Watch 4
VMM-level 1
State: 2
SOSP 9
NOW 1
Saavedra-Barrera 1
arose 5
Upon 3
Personal 2
Plus 1
Tolerance 1
Thompson 1
STCF) 2
[SHW11] 1
Sleep 40
Sequin. 1
TLB_Insert(VPN, 3
The 821
Threading 2
Shortest 6
[CG68, 1
VMware 1
RAID 1
TLB. 13
Scientists 1
SOMETHING 1
Report, 2
TOOLS 1
[BC05,G04]. 1
Scheduling 12
Va4 2
USE 3
Whether 4
WAIT 1
Strategies 2
SPARC, 3
NVERSION 1
Segment 10
array; 1
VAX/VMS. 1
Subsequent 1
Presumably 1
Uh 2
UPPORT 2
VERLAP 1
Small 2
Shacham. 2
Thread 95
TLBs) 1
Through 1
Tickets? 1
Signaling 2
[FP89] 1
Visualization 1
RAM 5
TLBs; 1
Served 1
Schwarz, 1
Resource 4
TRUCTURES 17
[BC91] 1
Science, 1
Was 1
Use 35
Why? 5
Wait 1
Supporting 1
Saltzer 1
Node_t; 1
Share 4
asleep 3
VAXen 1
Then 17
Problems 1
VAX’s 1
VPN=39 1
Va3 2
Study 8
Steinberg 1
Three 4
TR-95-22, 1
Timer 1
Trans. 2
Silas 3
[K68]. 1
Warm-start 1
Reese, 1
TLB’s 1
Servers” 1
Segmentation 3
Responsibilities 1
TeX 1
[C93] 1
Segments 2
Windows 10
User’s 4
Wikipedia 3
XCLUSION 1
Swaminathan 2
Scheduling” 1
South 1
Now 79
assume, 2
VMS, 1
Though 5
Pthread_mutex_unlock(&m); 6
[SN05]. 1
Value 1
Wanjohi: 1
Summer 1
Stoica 1
Time) 2
TRUCTURE 3
Underlying 3
Tricky 2
Simpler 2
[KL88] 1
We’ve 2
Ronald 1
TestAndSet() 6
Solaris, 7
Separating 1
Round 3
Tell 1
[CK+08]. 1
Shasha. 1
Woodlands 1
VirtualAddress 7
Workstations” 1
Zel-dovich 1
Swap 4
Server. 1
Spectrum 1
OAD 1
batches 1
VPN. 1
Time 29
Q3 1
a[3] 1
Vyssotsky. 2
Weaver 1
Swift, 1
Structures” 2
Transactions” 2
Technische 2
Unsafe” 2
Typical 1
Solaris” 1
[MB91]. 1
SPINNING: 1
Sound 2
She’s 1
Saving 1
When 122
Texas, 1
[CSG99] 1
Specific 1
Thus, 206
Write 11
Yale 1
Yield 2
Zonkey), 1
Swift. 2
Singh, 1
Student, 1
OK: 1
VPNs; 1
Today’s 1
been 100
Queues, 2
above? 3
Wilkes. 1
Weiwei 2
Techniques 2
Two-Phase 2
TO 26
Think 12
VPN=0 1
UCB/CSD-92-684, 1
Sounds 6
[N+02], 1
Scheduling: 6
Sundararaman, 4
Sizes 1
Second, 31
YSTEM 2
That 14
[CV65,DD68]) 1
Spin-based 1
Tom 2
WRONG 1
[3] 1
Zorn. 1
[B+79] 1
T2), 2
Slow 1
Such 16
ONSIDER 1
Vegas, 1
Torvalds 1
bit; 1
RR 14
access: 1
Wisconsin 1
Wilson. 1
Terminology 1
Two-phase 2
Tamil, 1
Traffic” 1
Working 2
Wrapper 2
[P81]. 2
Sleeping) 1
Swapping 1
USSEAU 154
Slutz, 1
Segmentation: 1
Yet 2
Tomlinson. 2
[D65] 2
Spinning 4
Tp, 1
Waiting: 2
[B89] 2
[B+13]. 1
[B94]. 1
TABLES 15
T3, 4
System 37
O_CREAT|O_WRONLY|O_TRUNC, 1
What’s 4
Trace 9
break), 1
RSS, 2
accomplished 9
Workshop 2
Wilson’s 1
Test-And-Set 2
Tc, 1
Volume 35
Transitions 1
Staelin, 1
YNAMIC 1
[RL81] 1
Sorry! 1
Tc2 7
Understanding 2
So, 1
Space-time 1
Zhou, 2
Tools 1
[G62] 1
Support) 1
Tree 1
Wakeup 2
[D+13] 2
[C95]. 1
[C93]. 1
TPDS 1
THER 1
O_WRONLY|O_CREAT|O_TRUNC, 1
T1 30
[A90] 1
Translation 5
Real 3
buffer 43
accuracy/performance 2
YOU 2
Wisconsin—Madison, 1
Test-and-set 4
Those 2
Voorhis. 1
ULTI 11
Why 28
YPES 2
[W02]. 1
Spinning: 2
To 152
V 31
Sriram 2
Stevens 6
[A79]) 1
Uman 3
[H61] 1
Systems. 1
Tricks 1
YBRIDS 1
[E95] 1
[E95], 1
[HJ92] 2
Tables 9
Texas. 2
Organization” 1
TAKE 1
[B94]; 1
Trials 1
Referring 1
bugs) 1
accurate); 2
Yes, 9
Worse: 2
These 24
Stallman 1
ULTIPROCESSOR 12
Will 6
[B+10]; 2
[WW94], 1
Thanks 5
Stanley 1
Trees 1
VICT 1
Start 5
Still 5
[BOH10] 3
VM. 1
[M+63]. 2
T2 38
UNIX-based 1
[BJ81] 1
[H74] 1
[H74], 1
[J16], 1
Then, 19
Time-Shared 1
Overflow 1
TOCS, 3
[BC05] 3
Undoubtedly 1
Region 1
building, 1
action. 1
[2] 2
Transactions 3
Support” 1
You 89
Unfairness 1
Wood-lands 1
[B+79], 1
a:100:100,b:100:50,c:100:50). 1
Trace: 4
Stockholm, 2
Tresponse 1
VMS 16
Store-Conditional 2
Summary: 2
[C63]. 1
VPN_SHIFT 1
[M11] 2
TR 1
VALID 3
[FLR98] 1
[HP06]), 1
[J09], 1
[K+61] 2
Therein, 1
Tracking 1
PD 2
Take 2
[BC91]; 1
VAX 5
Requirements 3
bx 2
addition 13
[B97] 2
Turing 5
T1). 4
[AD00] 1
VAX-11 4
X 3
[BS+09] 1
absolute 6
Trigonakis. 2
Sure! 1
Tron 1
W.C. 1
Store-conditional 2
Sumner. 4
[EF78] 1
Wei, 1
[MS96] 2
Technique 1
Thompson. 1
[FP89]. 1
[J09] 1
[M+70] 1
[LL82]; 1
Things. 1
USTERHOUT 1
PDEAddr 2
Tarrival 3
[BH00] 1
VM, 3
Rewritten 2
c->global; 2
addresses. 4
[BNS69] 1
UNESCO, 1
TLB: 2
[B+19]. 1
VLSI 1
Zelenka. 1
[C06] 2
accesses), 1
True) 9
TEST 2
VM 18
WAPPING 1
TABLE 2
Summary 30
[G+17] 1
Xiong, 2
[NM92]) 2
Values 2
Time-to-Completion 2
[HP06]). 1
[M06] 1
[M06], 1
[MM03] 1
Third 1
V.A. 1
PID). 1
Test-and-set, 2
[CK68]. 1
VPN; 2
Runtime 1
c->local[i] 2
advice 4
[C+04] 1
Uncontrolled 2
Thesis, 1
[D01] 1
Waldspurger. 2
[AD00]; 1
[C54,PV56] 1
actions. 1
Turn 1
TLBR, 1
VMMs 1
Weaver, 2
Table 18
Survey 3
[MM00] 2
Yes 1
[anon 1
Waldspurger 6
Tix:250 1
[K64] 1
[M15] 4
[MS98]. 2
[MS96]. 1
TimeSharing 1
Von 2
Phipps 1
Up 2
[JS94] 1
Vasileios 2
SQMS 7
calling 55
again, 31
[C69] 1
VARIABLES 18
Traiger. 1
[H87]. 1
Waldspurger’s 1
[BH70, 1
[CD85]), 1
actively-used 1
USA 1
TLB_Lookup(VPN) 4
WARY 4
Wikipedia? 2
Tc1 9
TLB, 21
[PS81]. 1
York, 6
about, 2
X-windows 1
Transformers 1
[KL88]. 1
[W95]. 1
[SS74]. 1
[O11], 1
Tp). 1
WAITING 1
Prentice-Hall, 7
VPN=42. 1
[M11]; 1
Wait: 1
STRUCTURES 16
capacity, 1
amazingly 3
[D68] 7
Variables 3
Turns 2
[K+96] 2
Wanjohi. 1
[BH73], 2
[L78]. 2
UT 1
actually 38
Tc2). 1
Wanted 2
Wiley, 1
Thrashing 1
TLBWI, 1
[S07] 2
[A91]. 1
acceptance 2
Yandong 3
Tturnaround 3
[L09] 4
a[2] 2
[W17] 2
[TTG95] 1
Traditional 2
Priority(A) 4
Van 4
[MS91] 2
Scotland, 2
We’ll 38
WWW. 166
card 1
another; 1
[DV66], 1
WHILE 2
USENIX 8
[S15], 1
When, 1
[BNS69]. 1
[P+95] 1
VAX/VMS), 1
[VERSION 42
Technique: 1
Work 1
Woke 1
Time-Sharing 8
Tcompletion 2
[W03] 1
[B72]. 1
accessed, 12
Yes? 1
ULE 2
[L81] 4
accounting 4
[W95]: 1
[W06] 1
UMMARY 3
Proc 14
Vancouver, 5
[O49]. 1
Whereas 3
Specifically, 52
Wahbe, 1
chan 1
anti-gaming 1
[G83] 1
Weihl 1
UST 1
[W95] 1
Wow! 1
[C03] 1
additions 1
VS 1
Times?” 2
Workload 11
Xerox 2
Tracing 8
Time” 1
[WL+93] 1
[BC05, 2
achieved. 3
You’ll 3
[LM+89] 1
Using 19
accuracy 1
__Node_t 2
[W15] 1
UPERUSER 1
Pthread_cond_wait(&c); 1
Virtualization 5
[SR05] 6
William 3
Spectre. 1
Waiting 8
chapters 14
appealing; 1
[GR92]. 2
WITH 1
While 31
] 2
[C+04]. 1
[CS97] 2
address-space 5
Va2 2
Tix:100 1
Yield, 4
Zeldovich. 2
Unlike 5
Timothy 1
a1 1
[D70]. 1
Zeedonk 1
adding 35
[Low 1
VERY 1
across 30
__node_t 10
__hash_t 2
Usually, 3
Read-Write 2
Visually, 1
[WG00], 1
XECUTION 15
Springer-Verlag, 1
Were 2
choosing 2
appears 1
[H91] 2
Wales 1
Winter 1
a[i]; 1
[D01]; 1
[DV66] 3
again? 2
Virtual-Storage 1
True 1
[B72] 1
[C69], 1
VLDB 2
Tudor 2
a[9] 1
[G04]. 1
[BB+72] 1
address! 1
[M62] 1
Variable 2
adjust 1
advantage 14
a4 1
Valley. 1
Reese 1
W. 18
[virtual 5
YOUR 1
Stan. 1
Which 12
chunks. 3
approaching 1
[I09] 4
Y 3
accommodate 4
We 166
[D68]. 2
[E06]; 1
ahead, 3
Wow, 2
UNUSED, 1
[CP78]) 1
[CM00]. 1
VPN_MASK) 7
UILD 3
[K68] 1
[BH00]. 2
admission 1
[P10]); 1
Version 4
accounting, 1
access 133
alloc 1
about: 1
Vyssotsky, 1
Ritchie, 1
Weihl, 2
a[i] 1
a 3927
Your 1
Structures 6
Within 4
clean). 1
appropriately 3
[K+61,L78]. 1
[CK+08] 1
accordingly. 3
Whew! 1
[D70]), 1
[LR80] 1
allegorical 1
Write-back 1
allow 22
[D70] 1
[H61, 1
Va1 2
University, 2
[MB91] 1
[BS+09, 1
advertise 1
[RL81]. 2
Very 2
accrued 1
accesses)? 1
alright 1
amortize 2
We’d 1
River, 1
Whichever 1
abbreviated) 1
about-to-be-run 4
You’re 2
Sun. 2
Yupu 2
clears 5
assembly, 3
[KE+62, 1
[D+13]. 2
acquires 8
Wilson 2
[G+95] 1
[M65]. 2
Unfortunately 1
[1] 2
always. 1
[E06] 1
[HP06] 2
Virtualizing 2
VPN: 1
[P81] 2
[CG68] 1
affecting 1
__list_t 2
Virtual” 1
accumulates 1
accesses?) 1
achieve 12
amt) 2
Where 7
Seward. 1
Single-Queue 1
abilities, 1
accesses). 1
[B+19] 1
Sun’s 1
[C69]) 1
code? 9
attempts: 2
[L60] 1
[E95]. 1
actions, 1
[G85], 1
[NM92] 2
With 82
VAX/VMS, 2
[A79] 1
and, 5
[G04] 1
[W+95]. 2
Waiting-Line 1
We’re 1
[P90] 1
[M65] 1
against 9
a[4] 1
Warburg, 1
acquisition. 4
added 12
acquisition, 2
analogy 1
Wish 2
While, 1
Some 25
above), 3
actively 4
[C06]. 2
Systems, 3
[CSG99], 1
System” 22
badly 1
[LR80], 1
[H74]. 2
address(es). 1
[H91]. 2
[O90]. 1
Word 1
VMWare’s 1
[B+13] 1
another. 6
[I11] 2
[WG00] 3
Warehouse-scale 1
Who 4
[RK68]. 1
[M83] 1
ain’t 2
Weighting 1
above 50
algorithm 34
address, 7
activities 3
answer; 3
Yang, 1
Wikipedia. 1
Sopena. 1
abused. 2
adapted. 1
[D70], 1
[D72]. 1
codes, 2
TENEX 3
behaves. 5
[MS04]. 8
[LR80]; 1
address). 1
[H93], 3
[S07], 1
Worried 1
VPN, 2
[BH70] 2
applied 5
Well, 27
__queue_t 2
Wilson, 2
[AD03]. 1
[S15] 1
[MS91]. 2
Wiggins. 1
active; 2
abstractions 7
access; 1
address-based 1
add, 3
approximate! 2
Yet) 1
States 1
address-translation 4
address; 3
[H87] 1
[L+13] 2
commonplace, 3
YSTEMS 203
This, 2
behaviors) 1
[S04]; 1
[M+63] 2
addresses? 1
[I09]. 2
[SN05] 1
Worse, 3
[BOH10]). 1
[MM03]. 1
appreciation 1
[AD03] 1
a[1], 1
Wouldn’t 1
[B+18] 1
[O45] 1
Wiggins’s 1
addr:20 2
all. 9
[V 166
accidentally 12
advance 1
addl 2
approximation 1
Zhiqiang 2
Stevens, 2
advanced, 2
addresses): 1
[L83] 2
[L78] 3
compares 1
[B+00] 2
Thus 24
bits: 1
[SS+10] 1
[R69] 1
alive, 1
[N+07] 1
a:0,b:1,c:1 1
XD 1
[C95] 1
[RK68] 1
arguments) 1
[G+17]. 1
abilities 1
XITS 1
[B+72] 2
[O72] 1
Windows; 1
advisors, 1
amazing 9
[W02] 2
account 6
affected 1
addresses). 1
architectural 2
[BJ81]. 1
Storage” 1
advantageous 1
administrator 2
[M28] 1
[M11], 1
completes. 4
[D65,D68] 2
Ticket 3
blocks. 2
a:30:200 1
[S+03] 1
allocation). 2
[P+95]). 1
access, 9
ZFS) 1
[CS94]. 1
[TTG95]. 1
[JM98] 1
array 46
about; 3
XXX 2
[C+62] 2
[O90] 1
X. 1
ago 1
amounts 7
[stack 1
activity 3
affinity; 1
after 54
array, 7
[CS94] 1
StoreConditional(int 2
advent 1
adopted 1
[M82] 2
[N+02] 1
completion 4
[D68]; 1
Tiny 1
book! 1
a[1] 1
[S+68]), 1
allowed), 1
[Page 2
action 15
[B+18]. 1
[J16] 1
[W06]. 1
[NS07] 1
ask 12
above) 6
Zeldovich 1
[DD68] 1
[S05] 2
ZOMBIE 1
agreed-upon 1
anti-hero 1
any? 1
alas, 3
algorithm. 2
alike, 1
array-based 2
[EF78]) 1
age), 2
affordable; 1
[S+04]), 1
[N+07]; 1
complexity, 1
[D72] 1
Torrellas, 1
books. 1
T 378
[S05]) 2
accesses 47
allowing 22
[QI15] 1
added, 1
[BB+72], 1
[KE+62]. 1
[W15]. 1
[S07]. 1
assembly? 2
accesses, 4
[B86] 1
[JM98]. 1
a[7] 2
Zwaenepoel, 1
allocated. 5
__counter_t 6
anymore, 1
allocator, 5
allocated, 2
allocation, 2
ask, 1
[FLR98]. 1
algorithm; 2
all) 1
allocators. 3
[WW94] 1
conceptualized 1
[G83]; 1
Tp 3
both? 2
T2. 4
[S59] 2
according 3
always, 5
[S+11] 2
additionally 1
[CV65] 2
[L+75]. 1
accomplish 9
[W03]. 1
attaining 1
addr:10 1
[CM00] 1
[JS94], 1
about), 1
[B+10] 3
anytime 1
a+b,b+c,c+d,c+e,c-. 1
applications 29
anyhow). 1
anon) 1
allows 37
assert(tmp 2
[High 1
afterwards. 1
[S+11]). 2
already 28
a2 1
concerns? 2
[KR88] 2
ULLER 1
bottom). 2
Tc1, 2
[S68] 1
amortized. 1
acquire 57
[SB92] 1
[GR92] 2
addresses 42
[L+93]. 2
achieves; 1
[WL+93]. 1
attempt 14
advanced 7
[CV65], 1
[K65] 1
abuse 1
[B66] 2
appearing 1
a:100:100,b:100:50,c:100:50) 1
appropriate 3
applicable 2
applications. 12
alternatives 4
atomic. 2
[K64]. 1
ahead. 1
[S04] 1
amazingly!), 1
affords. 1
condition3 1
[M+70]. 1
UNIX 7
bowels 1
Tel-Aviv, 1
[SN05]; 1
amt; 2
active. 1
[W09] 2
[K65]. 1
adoption 1
[M04] 2
acquiring 22
access. 8
away.” 1
allowed. 1
[K+61,L78], 1
[M28]? 1
accept 2
[B75] 1
approach) 1
a[8] 1
area. 1
approach? 3
aren’t 5
among 14
attacks 5
[KE+62] 2
alas 1
[V+65,BH70]. 1
amount. 2
ahead 8
conditions 9
[Y+18] 1
Unix 1
buffers? 1
Tix:50 1
above, 39
another, 12
actively) 1
a:30:200. 1
[L09, 2
advantages 5
[MS98] 2
ago, 5
address: 8
axes. 2
altering 1
[LL82]. 3
[O16] 1
accessed), 1
[D82] 1
accessing 36
actions 18
arena 1
args 8
arg; 7
and? 1
attempt, 2
[L+75] 1
algorithm: 2
[VPN 11
ancient 2
algorithm, 8
constructed, 1
accesses; 1
V. 3
business 1
U.C. 2
abundant, 1
approximates 1
adapt 1
a[1]. 1
[LM+89, 1
algorithm). 1
[O11] 1
akin 2
affected. 1
back-to-back 1
arcane, 1
[LM+89]; 1
[SR05], 3
approached 1
[D91] 2
accom-plish 1
activate 1
arises 21
array. 4
arises. 2
approaches, 1
backward, 1
[L+93] 2
allocator 26
a[6] 1
anticipate 1
algorithmic 1
consume 5
achieved, 1
VMS. 2
bye, 1
UEUE 11
achieved 1
argc 1
address); 1
a[3], 1
[M83], 1
alloc()/free() 1
[P10] 1
all... 1
back. 2
again 58
architectures 2
[MS04], 2
a[5] 1
arrives; 1
[G+95]. 1
address>, 1
ago: 1
art 1
array’s 1
around, 4
are: 2
basic) 1
[L83], 1
altered 1
accommodated. 1
anyhow, 2
allocate(100), 1
consumer. 2
ad 3
Whenever 2
check. 4
US, 1
additional 15
argument: 2
addresses, 3
a[6]) 2
[MS04] 2
allocating 19
[PV56] 1
analysis” 1
backward 1
alternate 5
arguments 23
[S59, 1
ability 11
articles 2
[L11] 1
administer 1
albeit 2
assuming 25
arrived 6
art. 1
arrays 5
become 32
[M82], 4
amortization 1
accordingly 1
anything 17
allocate. 1
contents, 1
addr:0 4
Why, 1
choices. 1
Unused 2
addresses; 4
asking 4
again!) 1
accesses. 5
[O16]. 1
answers; 2
[RT74] 1
answers 3
base); 1
alternatives. 2
astute 2
[W+95] 4
accessible 3
asking: 3
[LL82], 1
aforementioned 2
algorithms). 1
attr, 4
assertion), 1
aside, 2
beginning: 1
[PP03] 2
anything? 3
address) 2
application. 4
alternates 1
contrast, 10
address? 1
X, 1
chosen, 1
Useful 1
advantage. 1
aspiring 1
aims 1
at 576
accused 1
[O45], 1
appreciate 1
[SA96]. 1
anywhere 6
based 17
amazed. 1
attention 10
[X+10], 2
achieving 7
assembly). 1
[QI15]. 1
aggressive 3
along 10
attributes 4
assumption: 1
asks 4
behave 12
[R97]! 2
arises: 1
addressed 2
architectures, 1
alternatives! 1
control-c) 1
advances 1
Xerox. 1
chucking 2
VAX/VMS 11
age-old 1
association 1
answer: 2
attributes. 2
act 3
[O72], 1
appropriately-named 1
[SS74] 1
approach), 2
before, 7
analyses 1
award-winning 1
above; 7
acquired 15
assume) 1
[R+89] 1
allotment 2
alternately, 2
automatic 2
available, 11
assert 3
benchmark 3
[SA96] 1
assumes 14
admit 1
arguments, 5
amazing, 2
costs. 1
all, 17
Years 4
chunks 13
VPN 69
atomic 25
anyone 3
axis 4
addition, 4
[X+10] 2
approximations 2
a1). 1
all 247
approximating 1
bidding. 1
apparently 1
beguiling 1
abstraction. 1
again. 24
assured 1
[W09]. 2
almost 13
always 53
away; 1
bad 31
assumed 12
benefit. 1
a:100:100,b:100:50, 1
assumption. 2
adversely 1
arise. 3
count++; 1
all-too-trusting 1
Zhang, 4
cleaned 1
WWW.OSTEP.ORG 42
atomically. 2
approximate 20
bad. 7
addr:21 1
a; 4
arg); 8
a:100:100,b:100:100,c:100:100) 1
allocations 8
architecture 18
approaches: 1
beware 1
bit 93
accessibility 1
all), 1
attacks, 3
alone! 1
beautiful, 1
base, 1
another 105
assumptions, 6
bit, 10
a[9]) 2
atomic_increment 2
agent 1
arriving 2
counter: 1
allocate 31
[C54] 1
clearly 17
Well 1
attacks2 1
approximation? 1
bandwidth 3
advice, 1
accessible. 2
args->b); 4
a[0] 2
alternating 2
argument 22
arise, 4
beyond), 1
bits”. 1
address 561
accidental 1
am 16
avoided; 2
amplifying 1
big; 1
answer! 1
atoi(argv[1]); 1
block 22
attain 3
alas. 4
attackers 2
course) 1
allocate(10). 1
[C63] 1
clock 11
Werthman. 1
attempting 1
about 294
architects 4
base/bounds 5
alas). 1
basics 13
argument; 2
be. 11
amt>0) 2
arrive: 1
arrange 4
bit). 3
bombs, 1
affinity, 1
accumulated 1
answering 1
awake. 1
answer 29
bit. 5
answers. 2
attack: 1
attainable, 1
book 47
all!), 3
attention, 3
and 2770
credentials, 1
alternately 1
[DV66,V+65]. 1
close(fd); 1
awesome, 3
above. 20
arithmetic 2
be 785
active 13
below. 13
about. 6
arrays, 2
What 214
begin\n"); 5
answer) 1
assert(count 2
arrangement, 1
bodies 2
born. 1
algorithms, 3
accurate 2
anything, 5
best-case 1
anything. 1
arbitrarily, 1
attempts 4
both 87
author. 1
born: 1
allocator. 2
authors.. 4
ap-proaches 1
cycles). 2
animals 1
[HP06]. 3
cloud), 1
b; 4
arrives. 2
accessed 42
all? 8
actuality, 1
bits), 2
abusing 1
arrive), 1
Without 15
books). 1
answered 1
assigning 1
array[i] 1
both) 1
boundary; 1
allocation 24
accustomed 1
appeared, 1
bitwise 1
appropriate) 1
architecture. 4
average). 1
briefly 7
authors’ 1
bottleneck 1
available 31
base/bound 1
applications, 6
answered, 1
[PS81] 1
clustering, 1
back, 4
assert(p 1
accident 1
allocate(int 1
data 252
adds 24
boost 8
accessed. 4
ask? 2
XIST, 1
boost. 1
appear 4
avalanche 1
aside: 1
brutal, 1
break: 1
applications? 1
achieves 7
applies 1
block, 2
arbitrary 13
architectures; 2
away 12
approach 138
allocators; 1
avoid. 3
bounds 48
arise? 3
approach). 4
basic 94
[SB92], 1
cmpl 1
became 21
assists 1
accomplishes 1
allocates 11
datacenters, 1
adios, 1
boots 2
achievement 1
asks, 1
Zebra 1
bottom 10
are! 3
basics. 1
aspect 15
bus, 1
brk 1
apply 1
active, 2
approaches 31
architectures: 2
argument. 2
awesome! 1
broadly 1
archive, 1
alone 6
back-and-forth 1
brk, 1
arises, 4
arranges 1
batch 7
[V+65] 1
co-exist 1
began 4
atomically; 2
account. 1
alter 2
daunting 1
affairs 1
brand 2
acquisition 6
atomics. 2
Zuckerberg 1
bouncing 1
area 5
behaviors 2
assembly 13
bus-based 1
broader 1
book, 18
activity; 1
are. 4
arguments: 3
arguments; 1
backwards 1
broken, 2
assigned 7
barest 1
approaches? 1
array[1000]; 1
behalf 2
about) 1
co-workers 1
begin\n", 2
attained 1
also 213
activity. 2
amazingly, 1
decision, 4
affects 2
but 288
builder 1
attempts, 3
[B+96] 2
add 82
box, 1
array.c) 1
bits1 1
associated 18
butter 1
buggy! 2
bounds, 5
affinity. 4
arg, 2
argv 3
arrival 1
before? 2
buffers 6
basi-cally 1
arbitrarily 2
aspects 10
assume 80
below) 3
above). 7
code/stack/heap? 1
beginning, 1
avoided. 2
am! 1
addr 2
analyzed 2
defense 3
allotment, 1
byte). 1
baby 2
[B75]. 1
bytes 41
affect 10
buffer; 6
array: 1
breaking 1
awful! 1
c3 10
bugs. 11
but, 1
age; 1
arise2 1
array.c 2
avoiding 16
begins: 1
c:100:50 1
be: 2
args->a, 4
assumption 10
automate. 1
beneficial 1
accumulate 1
coherence 3
begun, 1
balanced 6
amount; 3
address), 1
apologize. 1
describing 4
although 15
c->value 4
baby!” 2
[CK68] 1
caches 16
again) 3
bytes. 3
asides 1
builds 1
background 15
call: 2
bx=100). 2
c4 6
algorithms. 5
c 177
aware 2
awesome 2
better, 14
caching 9
beautiful 9
assign 3
atomic_decrement 2
background. 2
blocked. 2
address> 1
collection 3
behavioral 1
bash, 1
addressed, 1
append 2
design 22
an- 1
cache). 1
backwards, 1
[D82]. 1
call-ing 1
al-though 1
c2 10
ask: 2
base-and-bound 3
came 12
c->global 4
call; 2
careful), 1
allowed 8
c4, 1
basics; 1
call1 1
big 44
an 545
before. 7
back 65
assignment, 3
atomicity 8
bases 2
book). 5
analysis 5
com- 1
benefit 1
beauty 2
admit, 1
desktop 4
answer, 8
candidates; 1
base/bounds) 2
[D91]. 2
care, 2
al.’s 2
caches. 1
attacks. 3
big. 3
case: 4
caller, 4
arose, 1
case; 3
cannot 21
behalf. 1
camp, 1
any 171
bits 70
anomalous 1
begs 2
beginning 15
assumptions? 1
author 2
best 31
both), 1
anyhow. 2
come–great 1
are 870
better-than-expected 1
behave? 4
again; 3
detector 1
approach. 8
cast 4
becomes 18
certainly 32
carefully 17
carved 1
allocated 46
auto-magically 1
bit! 1
cen-tral 1
calloc() 1
arrive] 2
certainly, 1
caused. 1
behavior 35
clean-page 2
appetite, 1
born! 1
answer? 3
beyond 20
behaviors. 2
automatically, 2
body 2
avoid 50
bounds). 1
architectures. 1
commands: 1
assertion 2
bind 1
behaves, 1
al. 5
devices). 1
argc/argv 1
[K+15] 1
behaves 11
choice 8
change! 2
caused 2
also: 1
automatically 6
bits. 2
chains 1
cause. 1
aside 4
chips 3
chain 2
below). 3
clever, 1
client. 1
bring 4
answers, 2
blame 3
big? 1
auxw 1
bounds”); 1
base-and-bounds 4
breed 1
are, 4
commonly-used 2
attack 9
bitmap 2
behavior: 1
also, 1
behind 31
arrives 4
[L11]. 1
behavior. 4
class), 2
changes. 1
centralized 1
always!). 3
ax 4
blocked, 3
challenges 2
changing 9
asleep, 1
choice, 2
challenge 5
benefits 5
applicable; 1
client’s 2
browser. 1
application; 1
boring 1
big” 1
awoken 3
branch 3
bash), 1
bytes; 2
argued, 1
completes 6
avoidance. 2
black 3
differentiate 2
altogether, 1
benefits: 1
assigned. 1
[O49] 1
behaviors; 1
classmates; 1
chances 4
chapter 37
analogous 1
ax=0,ax=1 2
book), 2
changed, 3
client 5
assumptions 14
chosen). 1
chapters) 1
bigger 19
approach: 5
cocoon, 1
bumping 1
approximately 1
bottom, 2
binary, 1
barons 1
buffer[fill_ptr] 1
be, 2
cache. 9
arguments. 4
concept 9
badly, 1
born, 1
difficult 10
anticipating 1
assistance. 1
between 79
[R69]; 1
benefits. 1
client, 2
chapter. 25
cheapskate. 1
anonymous 4
anymore. 1
boolean 2
class 12
coalesce 2
authors 8
cloud 2
cheating 1
bolts, 1
arg. 2
command. 2
bytesLeft 3
architecture, 4
bounded 8
bits? 1
begin 32
building 41
caches; 1
arranged 1
concurrent) 2
before 130
bugs, 2
dismantling 1
arising. 2
because 93
available; 1
blocks, 1
[S09] 2
best-fit 7
clustered 1
characterize 1
chunk. 4
ax=1,ax=0 2
argc, 23
break; 5
cleans 2
code); 2
auto-matically 1
cofounded 1
child? 2
boosted 3
array) 3
commands; 1
calculated 1
argument, 11
boxes 2
born 4
built. 1
being 54
calamity. 1
arrive; 1
confusing 2
before!” 1
byte) 2
documentation 3
associative 1
begins 13
avoided 2
book? 1
[W+95], 1
bible 2
command, 4
children, 3
chunks; 1
balances 1
around 42
built 19
close 11
colleagues’ 1
avoids 5
comes 14
chopped 5
broadcast(), 1
asked 2
compaction 3
arise; 1
bragging 2
break, 1
burden. 1
below, 2
cannot? 1
article 3
consider-ably 1
begin. 3
cache) 1
dominant 4
atomically, 2
below? 1
battle 1
bounds? 1
a3 1
big!”, 1
companies, 1
circular 1
clear 12
clock; 1
arrive 21
can 699
c->value--; 4
code; 3
color 1
balance 15
company 1
chunks). 1
browser, 1
assume: 1
compete 1
assert(rc 5
brilliant!” 1
bugs 6
buying 2
better? 1
careful 16
asleep... 1
consisted 1
belt, 1
calls. 5
dread: 1
attacker, 1
blocked); 2
behavior, 3
brutal 1
big, 3
able 59
compared 7
class? 2
bed. 2
associative. 1
child. 2
code, 73
cache, 11
combat 2
command 12
be? 9
compare-and-exchange 2
clean 9
attempted 2
compiled 6
atomically 16
build 118
broken 1
busy. 1
cache: 1
biggest 4
carefully; 1
assert(fd 1
consumer 26
better.” 1
candidate 3
drive 5
attr 2
blocks: 1
believe 5
bug, 1
bits, 7
address. 21
completes? 1
clear. 2
begins! 2
atomically: 2
chip’s 1
collector 2
call); 1
combining 7
commentary 1
begins. 1
competitive. 1
cloud-based 1
avoided, 1
con- 1
attacker 4
bunch 6
c2, 1
call), 1
calculate 5
billions) 1
challenges, 1
attention. 1
contain 6
binary. 1
carts 1
ease-of-use 1
average 16
bold). 1
bigger, 2
bus 3
blocks 9
administrators 2
books 21
code: 7
behave. 2
attachment 1
chocolate 2
commandline 1
campaign 1
communication 2
commonlyused 1
computers), 2
company, 2
better 88
bad! 1
conclude 2
available. 14
burst 3
calculates 1
called, 10
caller; 2
binary 14
chance 4
avenue 1
continuing. 2
boost, 1
cases. 3
eat 6
avoided? 1
bookstore 1
billions 1
bx=3 2
computers) 2
alike. 1
botte 1
common, 1
behind-thescenes 1
average. 1
chose 1
compact 3
can. 3
compiler; 2
companies 6
concurrency, 10
concern; 1
black) 1
before), 2
consumers. 1
award 4
buy 6
calculations? 2
catastrophic, 1
capacity 2
bookshelves 2
chapter; 1
balanced: 1
correct: 1
boots, 1
challenge: 9
ebx; 1
background; 1
bound 4
bounce 1
c;, 1
concepts, 1
all; 4
bucket 2
communicate 2
below 11
awake 1
coalesces 2
compare 6
case); 2
computing 16
compiled(!) 1
cond_t 5
book; 1
concurrent 80
biased 2
consumes 2
backing 1
bytes) 3
caller. 2
cause 24
careful, 3
break 5
chooses. 2
because, 1
costly. 3
break. 1
child/parent 1
edition. 1
breaks 2
base 66
brag 4
call. 17
concurrency 36
allocation. 7
buffer); 1
compact. 1
binaries, 1
base. 1
coined 2
comparison, 3
categories: 1
concurrently-running 1
complicated: 2
configurations, 1
bounds; 2
concurrently; 1
bit) 1
contention, 2
battles 2
caches) 1
caller’s 1
challenge. 4
can’t 30
brings 1
class, 3
becoming 2
costs 8
broadcast 1
chops 1
effective) 2
buddy 11
bet 2
build, 2
can’t) 1
condition); 1
allocators 9
bug 4
comparison: 1
block. 3
best; 1
commands 2
compiler, 2
cell 1
concurrently. 1
computation, 2
confused 1
broadcasts 1
connections 1
blank 1
control, 4
begin... 1
capability. 1
cares 2
chapters). 2
caused, 1
c6, 1
classic 26
begin” 6
counter, 15
btrees. 1
closest 1
efficacy 2
buffering 1
bits) 1
bx=1000,bx=1000 2
case. 3
construction 7
buggy 1
amount 37
completion; 5
book. 23
bet. 2
common) 1
complete. 6
centers, 1
consists 8
concepts 7
consider 26
bucks. 1
consist 2
bounded-buffer 1
convenience 2
behaved 1
careful. 1
cases? 2
checks 25
center 2
call) 1
clear; 1
behaving 1
coverage 2
buffer[MAX]; 1
called 111
emphasis 1
byte(s) 1
borrow 2
bytes), 3
causing 3
consumers, 2
build. 2
an-THREE 1
complications 1
both, 1
bits). 4
completed), 2
complex-instruction 1
chosen 5
controlled 8
concrete, 1
continuous 1
buffer, 11
constructing 3
brief 4
cool 17
behavior? 2
chance. 2
chaos 2
chores.” 1
choose 5
close, 1
borrowed 1
cycles) 1
coarse 1
bytes, 10
case) 1
enables 23
c5 5
both. 4
c->value++; 4
challenging. 1
contiguous; 1
bx=2,bx=2 2
analyze 3
comprises 1
bottleneck. 2
blocking 2
completing 1
concurrently? 2
circumvent 1
correctly? 3
cond; 2
core. 2
bytes? 1
contributed 1
broad 4
correct; 1
better) 1
child, 8
chosen. 1
community, 1
cleaning 1
cluster 2
bother 1
date. 1
cold-start 2
cache? 2
changes, 1
enterprising 2
cached 3
breathe 2
changed 18
correctness 9
bytes). 3
application 29
condition. 8
bounds. 5
cabinets 1
call 230
conception 2
clustering 3
corruptions. 1
condition 81
considerably 1
corollary 2
c->value; 4
convention 2
buffer. 6
creating 9
beyond. 1
chip, 2
citations 1
complicated, 1
clear: 6
cold 3
breath. 1
debugging 1
combine 7
caches, 5
cheat 2
entirely. 4
cat 3
entries 22
charge 7
costs? 1
c; 3
approaches. 2
conditionals. 2
bug; 2
calculation: 1
care! 2
conflict 2
cmp 1
curious, 1
confusing; 1
consumers 9
correctly 19
calls). 1
copies 12
bx=1 2
curr->stride; 1
bizarre 3
chunk). 1
classic, 1
concerned 5
clever 5
comfortably 3
browser 1
decreased, 1
coming 7
call). 5
choice: 1
broaden 2
century. 1
children! 1
exactly 39
cover, 2
can, 4
arg: 1
conditions; 2
c->local[cpu] 4
calls: 3
consideration 2
case 62
combina-tion 1
currently-running 9
conspired 1
consumption 1
correctness, 4
cases). 1
correctly, 3
call, 19
decisions, 2
brilliant. 1
coarse-grained, 1
clustering. 1
concurrently) 1
close(STDOUT_FILENO); 1
compiling 1
built-in 1
degree 3
completed 5
called. 4
chunk, 3
broadly. 1
changes? 2
chop 5
examines 3
casts 1
argue 1
confines 1
critical 140
c6 6
casting 1
consistency 3
caught 8
comparing 5
deal 16
const 3
costing 1
contains 32
cast; 1
could, 1
canonical 3
definitely 4
broken. 3
code), 4
codes 2
configurable 1
coalescing) 1
complete) 1
c->threshold) 2
depicts 1
completes1 1
caller 14
cite 2
brought 10
chopping 1
co-advisors 1
example. 31
chapter). 3
argv[1]; 1
considering 6
currency 4
changes 20
central 7
corn 1
chagrin 1
complementary 1
demand-zero 1
consumer; 1
counters, 6
creators 1
certain 26
carefully! 2
could 137
delaying 2
brutally 1
combines 1
column 5
consulted 1
columns 1
comprise 3
c5, 1
desired, 1
compulsory 5
carefully, 6
clearing 2
built; 2
chunks, 4
concurrency? 1
examples; 2
char 35
arise 12
contiguously 2
days: 2
channel 1
checkbook 1
corner-case 4
challenging 6
components: 3
descriptor). 1
cope 1
course. 4
crucial 2
chanced 1
count. 2
deploy 1
buffer), 1
case, 105
compacted 1
commonly 13
context, 2
combined 1
compromised 1
causes 5
detects 1
compute 12
caution 1
client/server 1
bx=0,bx=1 2
clarify. 1
constant 1
exclusion 21
arose: 1
check 46
convince 1
define 9
check; 1
children 1
chapter), 1
correct 42
concludes 1
determining 4
copy, 1
cover 11
ctxt 1
counterpart 1
change 55
deployment, 1
buffer[use_ptr]; 1
challenging, 1
complete). 1
commonplace 1
continue, 1
complete?) 2
computers 7
cheaper, 1
diagram). 1
computer. 1
chapter, 16
clues) 1
clean), 1
containing 4
executing. 1
arrangement 1
child: 1
cooked 1
deliver 8
choice. 1
citation. 2
characteristics 2
correctly; 1
concurrency), 1
developments 1
copying. 1
crash. 1
culprit 1
crazy. 2
chapter? 9
designs 1
by 705
cache; 2
chapter! 1
compromised. 1
communicating 3
control-c 1
complicate 1
computing, 4
differences. 2
child 59
concerned, 2
clear, 5
co-authors 5
coalescing 6
converted 1
execvp(myargs[0], 2
array), 1
circuitry 2
core, 5
descriptor, 2
cited 2
chunk 44
checking 6
count) 3
considered 10
died 1
cost. 1
cyclic-sequential 1
critical, 2
current 37
chapters, 9
desktops 1
c->threshold 2
calculation 1
chapters. 6
computers. 1
company). 1
correct? 3
computation. 2
computed 1
directly, 5
chip 1
concurrently), 2
close(), 1
community 3
coherence, 2
cooking 1
exit 13
clean; 2
crashes, 3
device; 1
closes 3
claims 2
co-authors). 1
covers 4
constituent 1
dirty-page 2
counting 7
day! 1
cyclic 2
cycles 11
clarity. 1
dest_buffer[100]; 1
caching. 1
call3 1
characteristics, 1
conclusions 1
compilers 1
counter++; 1
concurrency). 1
condition: 1
dirty 11
coalescing, 4
configure; 1
combination 11
company’s 1
as 1029
complete? 3
cores. 1
explained 2
commands, 1
cream.” 1
difference 18
compete, 1
code. 44
codes. 2
crazy) 1
context; 1
discusses 1
days. 1
creates 34
deadlock 5
data) 2
cleverness, 1
developing 7
calculation, 1
checking, 1
condition) 1
calls 88
complexity 10
counter1 1
configure 5
cons. 1
disappears 2
coarse-grained 2
connects 2
community. 1
compile-time 1
asked, 1
completed; 1
corre-sponding 1
extreme 4
completely 6
creation 20
compiled, 1
disk 54
collaboration 1
commercial 3
customer 2
continue; 2
display 2
delete, 2
customized 1
deciding 5
data[100] 1
collect 1
differentiates 1
call? 4
closer 2
connection 1
computation; 2
cases 29
course 20
confusion. 1
contention 4
disassemble 2
code) 3
constants 2
complain 2
complete, 7
assumptions. 2
completely: 1
costly, 6
failing 3
completion); 1
data; 1
complete 23
disrupt 1
complexity. 2
deallocated 4
common 61
control? 3
eax=51), 2
depiction 2
datacenter, 1
decodes 1
declares 2
deeper. 1
direction, 4
calls, 3
code.” 2
contiguous 13
computers, 1
challenge, 1
crash 2
context-switching 2
disassembler. 2
colleagues 3
consulted, 1
control 79
complete: 1
complicated 13
atop 1
completes, 9
coupling) 2
complex 22
concatenating 1
database 13
concurrency. 7
distinguish 2
constructed. 1
decrement(counter_t 4
competitive 1
control” 2
effectively 5
derive 1
debug 1
dedicated 2
combinations 3
deeply 1
disabling 5
can) 1
communicates 1
copyon-write 1
conceptual 4
closing 2
create(), 2
conventions, 1
disposal.” 1
come 9
convoys, 1
cooperative 5
complicated. 4
concatenate 2
attains 1
fast, 6
crazy! 1
comprehensive 2
condition). 1
deal? 2
construction. 1
contention; 2
demanded 2
compile 11
cooperative? 1
efficient) 1
descriptor 1
definitive 1
does 256
deleted 1
compare? 1
depends 5
disaster. 1
canceled, 1
completion. 2
correcting 1
concert 2
cold- 1
cycles. 4
couldn’t. 2
counting; 2
complex, 4
computing. 1
creation, 6
component 5
computation 2
conceptually 2
faulting 2
cross 1
configuration 2
congratulations! 1
debug. 1
convenience, 1
contents. 2
descriptors 5
completed, 2
correct. 2
element, 2
detail, 6
degenerates 2
doing: 1
demand. 1
competing 6
design) 1
do: 2
care 10
computing2 1
craft 2
confidence 2
collected 1
danger 2
doing; 1
crux 3
copy-on-write 5
concise 7
criteria. 2
concurrency: 2
attentive 1
concrete 1
file: 1
curious 3
confusing, 2
consumed 2
decreasing 1
convenient 1
context-switches 1
designers. 2
compulsory, 1
employ 4
did. 2
demanding 3
counter 116
domains 1
demise 1
completion, 2
designed 9
drives 2
case? 5
concern 5
crazier 1
confirm 6
collectively 2
data). 1
doubt. 1
curse 3
corresponding 10
cond 17
curr->next; 4
consider. 2
attribute 2
condition, 7
fills 3
date, 2
constant. 1
continuing 4
deeper 5
converge 1
copy! 1
destructive 1
concurrentlyrunning 1
end” 8
different-size 1
desk 1
create(); 1
easy-to-read 1
dependence, 1
complex. 2
development 13
dynamically-allocated 1
cases, 27
concurrently 9
creation; 1
constructed 4
columns. 1
days 4
driver 1
dark 3
counter1, 1
constraints, 1
currently-executing 2
constitutes 1
construct 5
confuse 1
day, 2
constraints 2
flag 73
convention; 1
defense; 1
cool, 1
cores 1
details, 4
confront 1
error, 3
do, 11
details! 1
create, 2
ebx, 1
dependent 1
components 1
devices 15
earlier) 1
catches 1
conditions. 5
creator 1
contents 28
compare-and-swap 10
decides 11
dummy 4
deallocations 2
context-switch 4
deallocates 1
course, 73
authors. 1
connected 4
context 70
deep, 1
consumer, 6
flash-based 2
convoy 2
depth 2
coolest 2
counts 4
developer, 1
constants, 1
etc., 1
document 1
developers. 2
curr); 1
discussed 24
desired). 1
comprised 3
different-sized 1
easy; 1
character. 1
consult 2
cycle 4
contrast 7
completion), 1
deeply. 2
ease. 1
decided 6
contexts, 1
decisions 7
covering 7
balance. 1
consuming 3
continue 10
demands. 1
contexts 2
forever! 2
copy-onwrite. 1
diagram 10
copying 4
crime, 1
die 1
contending 14
example... 1
doesn’t). 2
enabled 4
current->tickets; 1
doesn’t? 1
details1 1
computations 1
differs 1
edi; 1
citation 1
continuously, 1
declare 4
controversy 1
default, 2
computer 59
easy: 2
dedication. 1
convenience). 1
delight 1
crash, 1
basically 6
context. 2
converse 2
demonstrated 2
continues 7
forgets 1
correct, 2
directory 18
correctness. 3
critically, 1
directed. 1
continued 1
exec() 13
doing. 3
enact 1
deadlock) 2
done! 3
detecting 1
concept: 2
directory. 6
effect 4
closing, 2
control-z 1
delve 5
counter. 12
descrip-tion 1
concurrent, 2
eax. 5
demoted 1
counter); 6
deployable 1
current: 1
basing 1
continue. 7
correctly-working 1
desire. 1
correctly! 2
forth). 1
costly 7
dirty) 2
crux: 5
directives 1
cost 49
copy-on-write, 1
existed 1
doubt! 1
engineering 2
decisions? 1
double-ing! 1
difference, 4
concluding 1
distributed 7
efficient 19
couple 10
depend 3
counter_t; 6
devices. 4
constantly 3
effect” 1
depicted 2
created, 14
describe 14
days, 6
batch-like 1
code 391
contributions 1
correctly. 8
destroy 1
costs, 1
game 4
count--; 1
discipline1 1
curr 6
discussion. 1
costly; 2
copy. 1
expectations? 2
drivers 1
ensuring 14
deletion, 1
drops? 1
concurrency; 2
efficiency. 3
efficiently; 1
course). 1
depends.” 1
counter’s 2
different 196
dictates 1
contention. 2
elapsed. 1
depressing. 1
creativity 1
detail. 12
decimal. 1
below; 1
columns: 2
correct-ness; 1
correctness: 2
details); 2
coverage, 2
get: 4
curr->pass 1
discrepancy 1
datacenters. 2
disk-drive 1
court, 1
core 8
eyes 2
each. 4
equals 3
descriptors. 1
easier. 1
condition3, 1
end, 5
emptying 1
covered 2
description, 1
darned 1
differently; 1
did 22
control. 1
end), 1
destination 2
dangling 1
details; 3
defined. 1
better. 7
compare-and-swap, 2
cost: 4
cost, 5
diagnose 1
created 22
getpid(), 2
cycle. 1
discussed. 1
decision. 2
diverse 1
cpu.c 2
facets 2
failure. 1
earlier; 2
errors. 1
easily 17
condition? 1
environment. 4
desired 52
emulate 2
cpu 4
designers, 1
deadlock). 2
disciplines 2
dies, 2
creation: 1
energy-efficiency 1
deterministic. 2
decade. 2
deter- 1
deletion) 1
bit), 1
comparison 7
counters 14
countermeasures 1
differently. 3
curious. 1
globally-shared 1
dandy. 1
divide 6
decrease 2
do? 9
currency. 2
count 25
fashion. 3
eaters; 1
especially 13
editor 2
conference. 1
escalation 1
destruction, 1
entry; 2
current->next; 1
destination. 1
deallocate 1
disk, 14
different: 2
criterion 2
entirely 4
devices? 1
decimal), 1
determined 9
design-ers, 1
black). 1
compiler 26
counting, 2
create() 11
discuss, 1
debugging, 1
gracefully, 1
date 2
drop 4
defeats 1
done, 6
dairy 1
counter) 1
fetch, 2
economist. 1
configured 1
every 52
enable 24
esp; 1
deterministic, 2
essentially 11
currently 27
determines 17
decision 15
does, 6
digit 1
cycles, 3
equivalent. 2
directions. 3
default? 1
developer; 2
designer, 1
blocked 16
computational-overhead 1
counting-based 1
cruces 1
disk-access 1
decide: 1
granting 1
day 5
eagerly, 1
demands 2
downward, 1
darker 1
crashes 2
finish), 1
effective. 3
confined 1
example? 2
end\n"); 5
evidence 1
directly 8
everyone 1
currently-pointed 1
device 11
decreases? 1
domains, 1
dramatically 2
errant 3
est 1
disk). 3
defaults, 2
diagram, 6
details). 4
boot 11
computer, 3
crude 2
daemon1 1
disk? 2
defaults 3
grasshopper, 1
decide 23
easily. 3
desire 7
earlier. 2
data? 1
crazy 3
finished, 10
employed 4
confuses 1
examples, 3
endeavors 1
example). 3
disciplines) 1
examples. 3
dangerous 5
differ 2
depending 12
data), 1
dream. 1
dynamically 1
ele-ment 1
deployed. 1
direction 1
example 131
bounds) 1
determine 34
concerns 3
customer! 1
darn 1
disks, 1
dereference 1
grow; 1
deep 7
efficiency 8
destination: 1
defensive 1
easy 50
create()); 2
first-out) 1
endlessly, 2
continues. 6
excess 1
enough! 1
exchange 2
disk), 2
entire 46
data. 9
directory; 1
dequeue 5
decayed 1
doing 76
distinct 2
employs. 1
description 9
directory, 8
exceeding 1
byte 15
did, 1
confections 1
debug, 2
debate 2
eax, 3
designated 2
handle. 1
descriptor? 1
else, 7
detailed 8
demonstrates 3
ebp; 1
datacenter. 1
first. 10
establish 3
cooperatively 1
exercises 4
excluding 1
excuse 1
distribution 1
entirely; 2
databases 5
disappear). 1
desired. 9
decimal 2
dollars 2
does). 1
en-us/um/people/mbj/Mars 2
designers 9
diving 1
executed), 2
c->local[cpu]; 2
executing 26
confining 1
dedicate 1
debugger 6
element 14
designing 3
happening 1
descriptors, 2
enable. 2
device, 1
designs, 1
efficiently 10
de 1
fits 9
examples 21
counterbalance 1
existing 14
executed, 5
exhibit 3
does), 1
exist 11
decay-usage 2
discipline, 1
despite 6
decisions. 2
dominate 3
d’un 1
enabled, 4
destroy()) 2
do. 18
disk-like 1
c1 10
exists, 3
consults 1
deeply-nested 1
default 7
ends 4
hard-and-fast 1
developed 23
device. 1
ending 1
differ, 2
design” 1
egomaniac. 1
declaring 1
formula 2
excellent; 2
created. 3
exit() 6
exited 1
entry), 1
easy. 3
exits 3
decides). 1
disconnection 1
detail; 1
decreases 3
doubts 1
effectively, 1
developments. 1
done; 1
end 46
doing, 3
exits? 2
consume! 1
cache 86
destroyed 1
described 36
error 17
hardware, 15
dirty, 2
die, 1
entries; 2
differently 1
desirable. 1
elsewhere. 2
defeat 1
forward! 1
execute, 2
critical; 2
experts 1
expect: 4
eax=50 2
examine 36
expected; 3
deep... 1
discussion, 1
didn’t 11
defined 5
embarrassment. 1
deviously 1
dump”, 2
estimator? 1
downward). 1
expected: 2
control: 1
cake 4
detail 26
device), 1
etc. 5
hardware-based 5
each 340
differences 2
down 25
enum 2
direction; 1
detect 5
enough, 5
definition 6
fourteen. 1
explore 5
critique 2
extents 2
expensive, 6
effects 1
exist: 1
experiment, 1
definite 1
doing? 2
digest. 1
delay 2
enforcement, 1
event 3
exceptions 3
evaluate 6
each, 1
fact. 2
conundrum 1
centers 1
detour 1
difference: 4
exam? 1
heavy-handed, 1
eases 1
disassembler 2
download 2
environment 4
discussing 4
developers 12
delving 1
ensure 34
fraction 5
extremely 3
currency; 1
famous 21
explanation 1
efficiently. 1
explicitly 12
fancifully 1
demand? 1
directly. 3
deployment. 2
digested; 1
don’t 81
efficiency, 3
exec(), 6
executed 17
feature 5
early 68
copy 18
cesses. 1
developed; 1
different. 2
exception; 2
hide 1
eater 2
drink 2
discuss 53
events 5
do) 1
diagram); 1
demand 11
entity), 1
free(rvals); 2
factor 8
entry 55
features, 2
explored 2
enabling 15
fairly 9
fast” 1
demand” 1
dividing 6
descheduling 2
discipline 1
earlier, 3
executable 13
either 49
exit(1); 6
file, 9
effective, 2
correct) 1
change. 6
difficulty 4
disciplines. 1
execvp(). 1
hierarchy; 1
effective 12
dynamics 1
discussion: 1
eventually, 1
don’t, 2
digging 1
deschedules 3
future; 1
data, 18
fall 5
etc.)? 1
felt 3
ever 19
enacted, 1
fairness, 2
features. 2
descheduled. 1
do; 2
describe. 1
discredited 1
efficiency; 1
encounter. 1
execution. 17
exiting? 1
first-in 2
efficiencies 1
counter; 2
changes; 3
disabled; 3
does: 2
experimentation. 1
high: 1
efficiently? 5
eating 1
disks 4
evolved 1
downsides, 1
directing 1
die). 1
gcc) 1
declaration 5
fashion). 1
few) 1
external 10
everywhere, 1
engineers 2
far-reaching 1
fg 1
design. 2
double-click 1
desires 1
discussion 17
elsewhere, 1
enough; 1
expect. 2
explicit 22
free-page 1
elements 8
create()6 1
chooses 3
discussed, 1
done? 1
express 1
hit), 4
eight 1
fact, 28
documents, 1
draw. 1
exact 26
disappear 1
difficulties. 1
gdb) 1
defaults. 2
features 17
find!) 1
do 328
evicted. 2
entry. 10
far. 1
finish, 2
desire, 1
draw 2
details) 1
double) 1
evicted, 1
environment, 2
expectations 1
fair 19
fullness 1
else-where, 1
creature 1
classically 1
downfall. 2
hoc 2
electrical 1
encountering 1
fail. 2
doing.” 1
drawn 1
example) 10
displays 1
disk. 14
generalized, 1
defend 2
fetch), 2
failure; 2
flaws. 3
driving 1
executes, 3
examining 4
fascinating 9
first-level 2
desktop. 1
eax=50. 2
deterministically) 1
down, 1
evil 1
epic 1
expensive 3
fair-share 7
fully 8
empty. 1
credit 3
command-line 2
dramatic 2
element. 1
holds 38
families 1
enters 21
done\n", 2
dreams 1
executing) 1
double. 1
dissertation 6
gettid()); 4
defense, 1
files, 3
fashion; 1
flexible 9
editor, 1
expected 7
execution, 8
fewer. 1
flags 10
fill 11
endless 4
develop 12
driver8 1
excellent, 4
equation; 1
exploring? 1
family 5
far) 2
encouraged 1
datacenter 1
commonalities 1
dx) 4
elements; 1
honorable 1
fault. 7
entries). 2
don’t. 1
dx 2
exit; 1
downside, 1
divided 8
globally 4
defer 2
finding 15
feeble 2
flushed 1
encounter 7
faint 1
exhibits 2
destroying 1
fork; 1
finishes. 1
etc.); 1
devices, 2
dx=3,dx=3 4
exec(): 1
etc.). 1
fault; 2
further, 2
fetches 10
end-of-string 1
days... 1
complete; 5
enjoys 1
dynamic 20
few 102
favor, 1
entry? 1
doubt 2
easy-to-use 2
exited2 1
dream 1
does. 1
deletes 1
go 37
flag[2]; 2
fell 2
fly 1
endlessly 2
field. 1
exists 3
diagrams 1
formal, 1
first” 1
differ? 1
fair. 1
earlier 18
eviction 3
fellow. 1
futex 16
even 148
enemy? 2
de-queue 1
components. 1
enlisted 1
hope. 1
e 1
fd 1
figure 35
exec(); 1
downsides. 1
edx; 1
expect, 2
doivent 1
during 29
demonstrate 5
goals 15
flexibility: 2
fields, 1
following: 8
entered, 2
file-system 1
expand 1
differently, 1
fought 1
fix 3
direction. 3
family. 1
eaters 2
example), 10
few), 2
general. 1
evicts 3
enormously 1
deallocation, 1
concern, 3
enqueue 4
how, 1
easier, 1
fill; 2
existed; 2
fetch 29
due 19
encountered 1
explicitly. 2
downwards 1
dereference. 2
else 45
good”. 1
flexibly 1
field” 1
form). 1
entirety? 1
files” 1
expected. 4
difficult. 3
free(): 1
frequency; 1
directory: 1
famously 3
effectively. 3
exceeds 8
fields 2
generalpurpose 2
execl(), 1
equally 1
decrees 1
concurrently, 1
entity; 1
however: 1
end. 1
fine 7
exit). 2
ease 4
final 51
entering 9
exploration 1
drives, 1
derivatives 1
employs 3
habits; 1
folks 1
fine! 1
formed. 1
establishment 1
findings 2
exporting 1
discovered 4
flag=0 2
frequently-used 1
disk); 1
fancy? 1
elsewhere 3
exceptionally 2
figure), 1
generation 1
executable, 3
errors 9
deleted); 1
conditional 1
equal 19
http://www.sparc.org/standards/SPARCV9.pdf. 2
enjoy 3
fit? 1
expected? 2
easy, 1
finished 14
errorprone. 1
exports 1
dustbin 2
descheduled, 1
emulator 1
happen: 1
follow, 1
forest, 1
former 5
etc.) 11
fork 7
failed; 2
frame 40
flags: 9
funky 1
done) 1
few. 1
empty), 1
experiment 5
flexible, 1
get(); 5
execution: 1
evil.” 2
dense, 1
consumers), 1
era 7
hypervisors, 1
ensures 14
fits, 1
explain 1
eax 20
five 8
errors? 2
facility 3
dynamically-allocated, 1
design, 1
enacting 1
harder 4
first; 6
forward-growing 1
evenly 3
formally, 1
dive 4
familiar; 1
free) 5
gcc 10
draconian 1
field, 2
end”. 1
family? 2
frankly 3
global; 2
exists. 4
exception. 1
designs. 1
controls 5
exam- 1
iMac 4
entities 5
flag)? 1
extended 5
ecosphere 1
flavor 2
esi; 1
fact). 1
earliest 13
desk? 2
entity, 3
haul, 1
fit 27
free(), 2
execle(), 2
free()? 1
divides 6
faster; 1
free-list 1
gdb 5
eax=51. 4
filled 6
ensued 1
figures, 1
free), 2
globally-allocated 2
expires. 1
exchange1) 1
destroy() 2
converts 2
illegal 11
error; 1
flag[0] 2
failed, 1
efficiently, 1
flight, 1
estimate 2
failed\n"); 4
easier 19
despairing 1
entry). 1
example, 262
http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 1
flag) 5
free(tmp); 3
frequency 5
execute 29
do), 1
favorite 8
friends 3
globallyshared 1
either. 1
for 1176
fine. 2
envisager 1
files. 1
friends, 2
grand 1
exploited 2
excludes 2
develop, 2
cost; 4
essay 1
floor 1
imagine 41
fancy 7
foil 2
enter 32
exceptional 5
fairshare 1
efficient, 5
error-prone. 1
details 46
executing, 2
i.e., 29
flag[1] 2
full, 6
fork() 25
execution” 1
documented 1
fetch-and-add 8
from). 2
graduate 9
empty 14
forever. 1
fixed 13
equal, 2
friend” 1
grows: 1
extracts 3
find 86
execl, 1
differentiation 1
couldn’t 2
evermore 1
flush 5
create 49
fares 1
found. 2
entries); 1
exciting! 1
fanatics, 2
efforts 2
error? 2
developed. 1
execv(), 2
i=0 1
friend: 1
functional, 1
forth 3
expressed 2
fight. 1
doesn’t 51
func(). 1
group 12
eviction. 1
forewarned: 1
for) 1
era, 1
fully-operational 2
hallmark 1
fair, 1
finish 13
fast 19
difficulties 2
everything 12
implications. 1
forces 2
currency) 6
faster, 6
fragmentation; 1
entry, 8
execvp() 1
faulty 1
eip; 1
etc.? 2
developer 2
exercise 4
ignored. 1
function, 3
fundamentalist 1
frees. 1
far: 2
drive. 2
grow. 1
generate 28
file 95
exception 15
forget 8
free. 13
errantly-freed 1
functionality. 3
hand-over-hand 8
extension 1
for: 1
fetches, 2
digest; 1
evolution 3
inc 1
form. 2
daemon 8
first) 1
frequent 4
ever, 1
expects 3
fetch-ing 1
en.wikipedia.org/wiki/LoadLink/Store-Conditional. 2
eventually 15
did), 2
exiting 2
illegally). 1
getpid()); 9
gadgets 1
gave 3
faster. 6
driven 1
flexibility; 1
excessive 3
give 30
had 57
forms 3
funny 1
evicted 3
good. 6
handle 17
fail! 2
forget: 1
few, 2
direct 14
exec 2
increased, 1
forms; 1
dealing 2
flag). 2
frequently; 1
execlp(), 2
fail 13
figures 4
enabled. 1
evict. 3
disk; 4
expert 3
improvement 3
gettid() 2
gain 16
fetched 5
generally 28
else? 2
flushing 1
execvpe(). 2
glock; 2
hard-andfast 1
freely 2
guessed 1
hardware) 3
excellent 42
handler. 2
failure), 1
fork()ing 1
fewer), 1
discussion). 1
executed. 1
incremented, 1
formula, 1
declared 1
full). 2
expected, 4
following 55
fast. 5
file), 1
encapsulated 2
except 6
exploring 2
in? 2
done 72
gaming, 1
getting 33
files 10
goal 19
email 2
focus 21
exit), 1
google’s 1
hard-working 1
future, 5
handled 4
head->next; 1
exec(). 2
handlers; 1
falling 1
formal 2
fewest 2
dives 1
expensive. 2
indicating 8
degenerate 1
general, 18
fact 20
forgot 2
fault 12
fill. 1
encourage 3
free 187
execution), 3
exposed 1
incrementalism; 1
double-check 1
generalizing 1
graph 11
follow 2
hack, 1
embracing 1
follows: 21
expensive!). 1
grouping 4
hard. 1
general) 1
happy. 4
header. 1
exist). 1
havoc’ 1
fantastic 1
forms: 1
figure, 15
documents/R4400 1
exploit 1
inseparably 1
delivered 2
generalized 1
field: 1
fork(). 2
feel 8
fitting 3
engineering. 1
freedom 1
expect 15
extent 1
indexing 1
down-wards 1
downward 1
grows 16
for, 2
hand-over-hand). 2
emptied 1
form, 6
formally: 1
grow, 1
hardware? 1
generator 2
he 20
header_t; 1
existed. 2
expect; 1
expert, 1
four-level 1
file. 2
file.txt 2
failed 8
integer, 4
depressing 1
gettimeofday()). 1
filled. 1
forth. 10
fewest-possible 1
fix. 1
entitled 2
from. 5
eyes...) 1
fact: 3
infinite 6
generations 1
drive, 2
hash_t; 2
forced 2
hard-hitting 1
entries. 3
face 4
forthcoming 3
guesses, 1
grammar 1
have, 1
head; 2
held: 2
helgrind 16
farmer 1
explains 2
fprintf(stderr, 6
double 3
file’s 2
familiar 2
intensively 1
depths, 1
interact 15
fit; 1
fully-developed 1
files) 1
flag; 6
equivalent; 1
go, 2
failures. 2
fetch. 2
influential; 1
get? 1
duration 2
have. 3
forget, 1
have? 2
essential 3
fails 5
free(10), 1
harmless, 1
gruesome 1
held. 16
guess 8
help. 1
here) 4
fine; 2
fragmentation2 1
extra 18
earlier). 1
fine, 1
far, 13
glance 1
describes 6
interesting. 2
focusing 2
get() 7
fill_ptr 2
focused, 1
et 7
goals, 1
fairness. 6
finished. 2
initialization. 3
gigabytes 1
edit 2
free() 8
head 39
header: 2
exclusion. 6
fault3 1
freeing 6
heavily-used 1
heap. 10
hierarchy, 1
hand, 3
hides 1
higher 24
fire). 1
free(). 6
fastpath) 2
ecx; 1
focus. 1
faster 16
gnu 2
design: 1
intergalactic 2
fork(); 4
finegrained 1
for. 3
global 56
evicting 1
going. 1
fantastic, 1
first-fit 3
initialized 8
great, 1
editor? 1
freely, 1
heavily 2
headway 1
execvp(), 2
faults 3
from, 3
helgrind? 2
here, 22
homeworks, 3
hand-coded 1
hierarchy. 2
historically 2
flaws 1
free? 4
field 15
file.txt|wc 1
fragmentation? 1
fault) 1
good! 2
designate 1
forth; 1
fixed-sized 11
forefront 2
grande 1
exactly? 2
greater-than 1
fast; 1
flavor. 1
insight 1
greater), 1
effort 3
full 33
held), 7
heavilyused 1
exert 2
into 339
fully-associative, 1
finally 27
hidden 4
herein), 1
hot 1
handle; 1
history; 1
horrible 1
formed 3
freed; 1
effect. 1
finally), 1
framework 3
faulting”, 1
got 16
destruction 2
forwarded 1
flag[self] 4
fork.py, 1
graphics 2
exclusion? 2
happy 5
feasible. 1
flow 14
instead. 4
greatest 1
encounters 2
grow 18
help) 1
help: 1
exist; 2
introduces: 1
find. 1
further 31
high, 4
heuristic 2
highest 20
hardwaremanaged, 1
homeworks. 1
imperatives. 1
fragmentation. 6
frustration 1
eight-page 1
first-fit, 1
free, 5
feedback 5
greater 4
detail10 1
frames 5
followed 5
forward 4
green 1
exist, 1
harsh, 2
feature-filled 1
focuses 3
integers), 1
functions: 1
engineering; 1
guesses 3
helped 2
hence 20
existence 3
invention 1
fine-tuned 1
fusion, 1
https://gruss.cc/files/kaiser.pdf 1
https://quoteinvestigator.com/2015/07/23/great-power. 1
homework 9
head), 1
http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF. 1
implement, 1
fragmented 3
fundamen-tally 1
emails 1
foo 4
full; 2
filling 1
guarantee. 1
details. 34
general 41
free(ptr), 1
grows? 2
exit? 1
found 84
hate 1
fellow 1
forth), 1
intense 2
futex_wake 2
enough 32
handles 14
here. 11
here? 3
exit. 5
invocation 1
finish. 2
futex_wait 2
implement 30
hybrid. 1
hope 13
heap) 2
idea: 1
impossible 1
free; 5
gadget), 1
empty, 3
foreground) 1
getpid() 1
finishes, 1
handler, 3
deterministic 8
generates 10
frees 6
handlers 5
exits, 2
heap); 1
four 52
fine-grained 3
fourth 4
interrupted 14
gaming 2
entries, 5
here’s 1
heuristics 1
hard 51
exits; 2
job? 1
fit, 2
gains. 1
imply 2
improve. 1
helping 2
however, 49
identical 6
frequently. 1
glibc 3
ence 1
format; 2
gettimeofday(); 1
flexibility 2
happen. 2
deterministically. 1
gives 15
frequencies; 2
handling, 1
heart. 1
far 21
free()) 1
fingertips. 1
fragmented; 1
is: 9
gently 1
equation 1
hey, 1
historically, 1
historical 14
experience 9
jobs, 14
five-level 1
gates, 1
increases. 5
indefinitely, 1
herein, 1
http://www.multicians.org/history.html. 1
indefinitely) 2
friendly 5
great. 1
enough), 2
fortuitous 1
forever, 6
happens; 2
goes 27
developer. 2
goofs 1
frightening 1
havoc 2
highlyfragmented 1
few). 1
hybrid 10
flag.s. 2
friend 3
iterations/threads: 2
era. 1
gets 51
hardware/OS 2
historically-based 1
history 16
extend 2
jumping 2
flag), 2
generality, 1
inform 4
indexes 1
hierarchies 2
idiom: 1
inspires 2
from) 2
greater). 1
entry) 1
foundational 2
functions, 1
harddisk 1
grep 7
disable 3
granularity, 2
functionality, 2
free(void 4
hit, 28
identifiers, 1
fewer 13
focused 3
greater. 1
kernel), 1
example: 8
gettimeofday() 5
here; 4
lead 50
honor, 1
kill. 1
failure 21
force 2
initializing 1
inefficient, 2
important. 5
instant, 1
func() 4
hold 27
grew, 1
get 126
evict 9
friend, 2
garbage-collected 2
has. 1
groups. 2
discretion 1
graph, 6
furthest 5
generalization 5
honest 1
illusions 1
fine). 1
forcefully. 1
greatly 4
excited 2
giant 1
hostility: 1
hierarchy 2
line. 1
idea? 2
laid 4
fashion 4
fork(), 9
instruction) 9
inflation, 1
info 1
integers, 2
gaining 5
http://ftp.gnu.org/gnu/glibc. 2
hackers 1
graph. 1
exception, 3
generating 2
getrandom(0, 1
heap, 22
int 260
disk) 3
grows, 4
goals? 2
ghastly 1
hurts; 2
immediately. 2
finishes 6
formulae. 1
hand-assembled 1
gray 3
executes 23
huh?? 1
high-performance 1
list: 3
ideas, 3
lations 1
fault, 7
forth, 4
initiating 1
inserted. 1
interludes. 1
in 2103
humorously 1
hardware-interpreted 2
greedy 3
exhibit. 1
giving 15
government 3
guard; 2
hexadecimal), 1
intellectually 1
doesn’t, 3
halted, 1
done. 10
github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
ice 1
grab 11
improve 17
fortunately, 2
handle, 1
exhaustive 3
hurt 3
homeworks 5
great 79
load/store: 1
implementation, 2
learned? 1
faulting. 1
fragmentation 13
instructions). 1
input 20
general? 1
imag-ine 1
includes 13
hardware-specific 1
groups 3
interrupt 77
exist. 5
goals. 2
graphs 1
guide 1
hood 1
interface: 1
good, 2
hand-controlled 1
double-precision 1
fires 1
impacts 1
grabbing 2
inadvisable 1
fragmentation: 1
hands-on 1
exiting. 1
identifier 3
hopes 1
grossly 1
locks: 3
importance 8
len:10 6
fetching 4
free(16500) 1
input/output 3
generated. 1
impetus 1
interesting 46
incorrect. 1
haven’t 4
grows. 1
introduce 12
exits. 4
hair 4
hack. 1
hacker 2
handling 14
growth: 1
downward. 3
handler 24
it. 68
flag? 3
in-use 1
gray) 3
industry 2
fragmented, 2
head->size 1
front 10
importantly 1
fun 20
guard 14
lottery.py, 1
in; 2
libc 2
freed) 1
insert; 2
generic 4
implementations. 4
interrupts, 4
incurred; 1
highlighted 1
guaranteed 1
isolation; 3
expected) 4
handed 4
http://www.unix.org/version3/. 1
hands 4
happened 5
gruesome. 1
first 278
duty. 1
hang 1
itself); 1
flags, 1
in: 1
inefficiencies. 1
guarantee 21
exploits. 1
heap: 2
hours. 1
in, 6
functionality 2
increasing 10
future. 9
incrementing 12
lie 1
frequently 7
inspiration 1
goal: 1
important) 1
intro 3
initiate 3
http://linux.die.net/man/3/pthread 1
hacked 1
issued 7
extract 7
harder. 1
hundred 7
happens? 2
hardware). 3
guy 3
flag. 13
e.g., 8
have: 2
forever 6
it’s 33
inaccessible, 3
inherently 2
guessed, 5
figured 2
flag, 14
how-to-generate-a-random-number-from-within-a-range. 1
guess, 3
love 2
inconclusive 1
garbage 2
inefficient? 2
life: 1
from; 1
growing 5
instruction. 22
interesting; 2
kill 10
insidious 1
http://www.ostep.org/Citations/notes-solaris.pdf. 1
happened; 1
jobs? 3
fail? 1
hardly 3
idle, 1
hash 17
hacking 1
flag’s 2
emailing. 1
head, 1
forewarned, 2
kernel-owned 1
incurring 1
guide. 1
held; 2
heap 76
https://lwn.net/Articles/170003. 2
handling. 1
idea, 7
ideal 4
hardware 263
gone 5
innocently 1
instruction 130
listing 4
functioned 1
guarantees. 2
instructions; 2
interrupt: 4
killed). 1
insights. 2
hurting 2
header). 1
join(), 7
fails, 3
heavyweight 1
imbalance. 1
handler). 1
footnote: 1
enacted 1
forgetting 2
kicked 2
inducing 1
handled, 1
highlight 3
follows 6
hearing 3
lwarx/stwcx 2
has). 2
incremental 1
idle! 1
high. 3
inopportune 2
intend 2
locations. 1
good 99
fundamental 18
handlers, 3
interchangeably 1
invalid 8
knowledge, 3
have 487
install 1
imaginary 1
hear 1
kernel, 7
failures 1
here! 1
impact, 3
hates 1
forcing 1
enough. 2
frames; 1
kindly 1
init(), 2
happen 15
hits 13
hardware. 10
here: 10
machines. 6
heap), 1
indefinitely. 2
illegally 3
inputs 2
interrupt), 1
gum 1
generally, 7
lock() 38
happens. 3
interfaces, 1
involved 9
latter 5
headaches. 1
integer) 2
incur 1
hello, 8
key); 4
fairness 7
hex 4
important, 7
head->value; 1
how 441
foreman 1
entirety 2
frustrating 1
know, 5
inputs. 1
for? 2
homework, 9
hardware’s 1
him 1
main() 11
hierarchies, 1
index: 1
imbalanced? 1
insert. 2
interrupted, 3
halt 5
introduction 17
logic, 1
hard-to-find 1
invoked 2
isn’t. 3
layout. 1
heard 1
indexed 3
interested 11
know. 3
high 36
familiarity 2
high-level 6
incorporated 4
header, 4
hugely 3
fork()/exec() 1
has 348
functions 7
knowing. 1
inquiry 2
forget-ting 1
hopefully 6
history, 3
main-race) 2
hint 4
indivisible 2
independently, 2
instructions. 5
generated 12
hand. 3
intuition? 1
lookup 12
harmful. 1
it3 1
isses 1
life, 3
indicate 15
here 46
interposition 2
history. 3
fault? 1
highly 7
known 90
heap). 1
increase 20
hybrid, 1
entries: 1
found, 2
head->next 1
gcc, 1
interface 16
fragmented) 1
http://en.wikipedia.org/wiki/ 1
hogging; 1
main.c 6
hit. 5
inefficient. 4
large 93
instantaneously. 1
intensive. 1
goal, 1
handed-out 1
issuing 6
loop 41
items 9
it!) 2
lightweight, 1
ineffec1 1
heyday 1
involvement 1
hit; 1
faults, 2
highly-networked 1
la 3
help, 1
initial 5
idea; 1
excessively 1
gained 1
header_t 1
gdb, 2
interval, 1
free(50). 1
https://en.wikipedia.org/wiki/Buffer_overflow 1
holder 2
many! 1
hold, 1
its 295
information, 6
larger. 1
integrity 1
intricate 3
grabs 16
happens: 5
having 29
loved 1
iterations 4
it... 1
linking 3
infinitum. 1
high-end 4
irstrun 1
honor: 1
feasible 1
later), 1
hit 32
highest-order 1
initiates 4
illusions, 1
exchange1 1
good? 1
headers 2
general-purpose 8
free(x); 1
introduced 25
humans, 1
host 2
measured 2
humorously, 1
itself) 1
initialize 15
intelligent 2
left 21
intuition 3
grade, 1
hardware; 2
heap? 3
main-deadlock.c 2
itself; 3
load, 3
itself 32
infrastructure 1
is; 3
his 37
however 1
figuring 1
latest 8
holding 12
http://en.wikipedia.org/wiki/You 1
input: 1
immense 1
guest 1
helpful, 1
execution 48
generalizes 1
freed 3
is), 1
increments 7
hour 1
index 20
it’ll 1
jars 1
interface. 4
length) 1
investigate 1
ground 1
idea 92
header 15
heavy 5
memory! 2
kick 8
locations 11
insparable 1
job, 19
known: 1
hits, 2
http://ostep.org/Citations/inside-cfs.pdf. 1
file; 1
leave 13
hoping 6
http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html. 1
ins 1
implementation)” 2
guide: 1
helps 5
exit()) 1
isolate 1
function 41
given 80
hptr 1
memorymanagement 1
indirection 3
installation 1
join 12
interrupted) 1
levels 9
junctures 1
guarantees 6
imagining 1
heavy, 2
mention 1
held 25
last. 1
loops? 1
instant 3
issue. 3
lags 2
hopefully, 3
http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF. 5
finally, 8
lies 4
hypervisors). 1
humans) 1
installs 2
in-between 5
habit 2
higher-level 1
experiments 3
keyboard 2
game, 1
gods, 1
http://www-formal.stanford.edu/jmc/ 1
mind. 1
inheritance. 2
intent 5
killed; 1
interruption, 2
libcrypt-2.23.so 1
keeping 14
guts, 1
immensely 1
held, 6
mid 1
hogs, 1
leap 3
lowest. 4
instruction? 3
it: 4
lawyers 1
house 2
hung. 2
flag.s 2
limitations 1
ideas? 1
hybrids 1
instructions), 1
increased 3
happen, 2
hinted 3
expose 1
kmalloc. 1
generalize 1
happening? 1
https://birrell.org/andrew/papers/035-Threads.pdf 2
miss: 1
init(lock_t 4
interposing 1
laborious 1
investigator 1
libraries. 2
killer 1
hackers. 1
implemented? 1
missing 4
help 38
http://stackoverflow.com/questions/2509679/ 1
least) 1
machinery, 1
instructions, 10
jobs) 1
learned, 1
http://cag.csail.mit.edu/raw/documents/R4400 2
immediately, 4
flags. 2
limits; 1
idioms 1
icon, 1
interactive, 1
incremented 4
hardware-managed 9
history... 2
far; 1
large-memory 1
goodness); 1
heap; 2
i5 2
mistakes), 1
inkernel 1
intervals: 4
laptop 2
kernel?” 1
languages, 2
happen?4 1
local 56
implies 7
mmap(NULL, 1
herein. 5
humble 2
left). 2
main-race.c. 2
integers 4
juggling 1
lessons 5
http://history-computer.com/Library/AltoUsersHandbook.pdf. 1
implicitly 2
forcefully 2
locality, 8
implementations, 1
implement!) 1
investigating. 2
independent 4
hardware: 3
hit). 1
fashion, 1
laugh 1
harming 2
helgrind, 2
ideal? 1
modification 2
innovations 2
isolation 3
latency 9
kills 2
library. 10
locates 2
inaccessible. 1
mode), 1
home 3
happens 78
hundreds 5
legends 2
majors 1
intelligence. 1
jump; 1
lines, 1
http://www.ibm.com/developerworks/linux/library/l-solar/. 2
in) 2
found? 1
lock(&m) 1
in-kernel 5
important). 1
is. 7
inexpensive 1
harm 3
http://books.google.com/ngrams). 1
finds 10
learn? 1
head_lock, 2
here), 2
idle 5
modified), 1
inode) 2
it), 4
leaks 1
libtinfo, 1
long; 1
inactive 4
know 71
naming 1
http://cag.csail.mit.edu/raw/ 1
hence, 3
illusion. 2
length 16
make. 1
intensive, 1
kids, 1
location. 3
https://github.com/mit-pdos/xv6-public. 1
increment(counter_t 4
fragmentation, 6
lock(lock_t 14
in. 11
impressive. 1
isolating 1
init: 2
has, 1
http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD329.PDF 1
first, 20
libtinfo.so.5.9 1
held) 1
hog; 1
impact 5
modularity, 1
insisting 1
job). 1
learning 2
lives 7
ls, 1
independently 8
knowledge? 1
nary 1
huge 20
high-priority 2
imbalances. 1
line: 2
maliciously! 2
interactions. 2
languages 4
i; 16
locking 34
indicative 1
longer 17
locked; 2
inability 1
improves 4
it.” 1
inodes, 1
headers, 1
imbalance 3
floating 1
like, 3
higher-priority 2
https://events.static.linuxfound.org/sites/events/files/slides/elc 1
implements 6
monolithic 1
interacting 1
jobs); 1
letter 3
long-term. 1
m->guard 10
indicated. 1
left-shifted 2
next; 4
i 22
hits). 1
important? 1
lingo) 1
manual. 4
intervals) 2
large, 7
ideally 1
free-space 4
informed, 1
lowering 1
lookups 1
inaccessible 2
indeed, 11
item; 1
insert(queue, 1
hire 1
in-between. 3
follows. 4
list), 1
hints 4
human 4
importance, 1
most-recently 1
interested! 1
key) 16
library; 1
loop) 2
management. 3
installations. 1
like: 3
non-executable 1
illusion: 2
hy-brid 1
in-memory 2
listens 2
mapping 13
mask 1
laws 2
ignore 5
frequently, 3
init(); 2
lowest-order 1
loops 18
incentive 1
indeterminate, 2
kernel) 2
instruction, 19
hole 1
incorrectly. 1
forays 1
lives. 1
hit! 1
identical, 1
neat. 1
interesting, 4
kind, 1
important 63
knows 18
lying 2
mark 6
intelligence 1
limit 6
noted 3
illustrate 5
identifier, 2
lost 4
invalidate 1
master 4
including 51
left, 6
improvement. 1
fringe 1
innovator 1
manager, 3
lowest-priority 1
incredibly 8
insert 12
killing 2
integer 17
how: 1
increased. 5
i++) 18
long-lived 3
hits. 1
implement. 5
networking. 2
interlude, 2
live 12
in-terface 1
language. 3
machine. 9
matching 1
interactions 4
load” 1
nuance 1
implementing 8
lots 12
inversely 1
matter? 3
increases 6
in- 1
less 29
installed 1
future 21
marvel 1
ls. 1
increment 14
installing 1
landmark 3
interest 3
forever; 2
indicated). 1
illegal. 2
form 46
hold? 2
implementations 4
new, 1
interpretation 1
load-linked, 2
in/out 1
larger), 1
if 483
machines; 1
measuring 5
interval. 1
ls 1
observed 1
implying 1
main(), 1
inverted 4
iterations? 1
influenced 2
incarnation. 1
letting 6
int), 2
gather 1
m 1
incrementally. 1
instance 3
least-recently-used 4
introduction, 1
may 123
inner 1
longrunning 1
imbalance, 1
freed. 3
holds, 2
implication 1
new_head; 2
intervals 6
locale 2
informs 1
larger-scale 1
illusion 20
made, 5
meet 5
intervention. 1
macOS, 1
old; 4
improbable, 2
managed), 1
matters, 2
join() 9
inherent 5
include 18
lifeless 1
interaction 13
generated, 1
main.c). 2
indicated 4
lest2 1
inventory 1
mem.pdf 1
instructions 78
input, 1
lower-half 1
included 4
honor 1
important; 4
nonetheless. 1
it; 14
innocent 1
largest 2
immediate 2
mail 1
memory-like 1
long 68
invalid, 8
machinery? 1
once), 3
increase? 2
managing 9
mem- 1
k-stack(B) 2
inject 2
inefficient 4
link) 1
get(counter_t 6
malloc()); 1
interrupts 33
init() 6
from 443
iterations, 1
memory-related 1
insufficient. 2
likely 73
m;) 1
inside 30
increasingly 6
in-depth 1
ideas 36
jumps) 1
note 27
keeps 13
ld-2.23.so 1
immediately; 7
manipulates 2
misses). 1
lost. 2
invited 1
machines). 1
onelevel 1
increases, 2
memory) 5
memory-allocation 10
inputs: 2
infinite. 1
linked 18
grocery 2
managed 6
kernel 123
interval’ 1
initializes 5
fully-associative 1
interconnected 1
list. 21
machines) 1
instruction: 1
jobs 102
initialization 8
memory. 103
incorporates 2
illegal, 1
inserted 2
noticeable 2
large-file 1
importantly, 9
manually 1
learn 65
lot! 1
multiprocessor 19
involved, 6
main-one-cv-while.c. 1
operator. 3
incremented; 2
methods. 3
meta-level 1
instead), 1
inflation 2
list; 4
growth 1
manner, 11
keystroke 1
intriguing 1
innovation 2
function. 2
interesting) 1
list_t; 2
made: 3
intricacies. 2
l/stl 2
instances 2
millions 3
influence 1
imagine, 4
inspired 1
obliged 1
last); 1
init(counter_t 6
many. 5
len:9 1
luck! 1
near-term 1
it!), 1
main: 12
opposed 3
migrating 2
indeed 26
minimally 1
instruction; 3
informative 3
loader 4
habits 1
mappings. 3
lazily, 1
introduces 6
integer). 2
functions; 1
invalid. 2
list’s 1
main(); 1
inverse 1
leftmost 1
mind-blowing 1
instrument 1
implementation 7
installation, 1
instead 95
observe 6
last-in 1
initially 3
mechanisms; 1
limits 6
machine; 2
nearly 9
itself, 8
makes. 1
optimizations 1
minimize 11
indeterminate 2
minus 5
interactivity. 2
initializer 2
half 8
match 12
ldq 2
lock. 64
k-stack(A) 1
interval 8
fundamentally 3
involved. 2
located. 2
mainstream 1
involving 1
length, 1
minimal 7
interpose 1
improved 6
instructions) 2
interact. 1
off; 2
inode 3
older 13
memory-management 2
optimal 20
mainframe 2
necessitates 1
killall. 1
mappings 8
options. 3
misses. 7
individual 3
monopolize 6
internal 12
innovations, 1
hand 6
matter 13
length? 1
lock_t; 8
kernel” 1
intervention 1
gates 1
isolated 2
locks. 6
maintain 4
lesson: 2
misbehaves 1
interrupt, 4
incl 1
intact; 1
interest: 2
later 36
instructions: 2
literally 1
memory?”, 1
malfeasance 1
next, 1
kinds: 1
masks 2
ordering 9
modification, 2
informally, 1
ms, 5
interposed 1
happen? 8
interfaces 17
mem. 1
lengths, 1
our 230
lock’s 2
kicking 1
intrinsically 1
issue, 3
going 29
make, 2
life. 2
mitigates 1
interrupt-based 2
incorporate 7
isn’t 26
interleaving 4
interactive 20
latter, 2
interactivity 2
lock) 4
mentioned 7
malloc(sizeof(int)); 2
nice, 3
l/stq 2
meaning 3
originally 2
mem 10
informing 1
interpret 1
happening! 1
interfere 2
memories, 1
library, 10
over-written 1
low-level 16
kind: 1
multiple 95
invisible 1
heap-allocated 1
itself. 19
manifests 2
like) 2
much: 1
makes 57
index. 1
journaling 3
interrupt; 1
isolation, 2
lets 10
it! 14
locked 7
manipulate 2
non-practical 1
launches 2
motivating 1
otherwise 14
more, 6
interleavings. 2
most 130
invented 5
happens, 4
interrupted. 2
mesh 1
lifesaver 1
overheads), 1
lowly 2
know! 1
multiprocessors. 4
isn’t, 2
heart 2
joke, 1
manual, 2
link 6
list-like 1
malloc(strlen(src) 1
info: 1
kinds 5
is, 22
iss 6
little 103
level 23
looking? 1
materials. 1
none-too-subtle 1
movement). 1
overhead, 1
most-significant 1
let’s 73
internet 1
much?). 1
inversion 6
hardwaremanaged 1
issue; 1
microkernel-like 1
likely). 1
overseas. 1
made 23
mythread. 2
knowledge 14
it?) 1
held). 2
key, 2
masking 4
nanoseconds, 2
manuals 2
know: 2
jobs: 2
information 57
jacket, 1
it1! 1
load. 2
light 1
is 2736
low 10
mem.c 2
not: 3
multi.py 2
overwrites 1
multiples 1
like. 6
intervening 3
multilevel 2
is! 2
harmful, 1
job) 3
misbehaved), 1
links 3
paging 28
natively 1
large-scale 1
last, 1
lazy 5
lean 1
left), 1
legal; 1
levels), 1
life 22
lightweight 1
like; 2
limits. 1
load 35
lock). 10
lock_init(lock_t 4
logically 6
looping-race-nolock.s, 2
looping-sequential 3
low. 1
machinery 10
main-two-cvs-if.c. 1
malloc(sizeof(double)); 1
manner? 1
manufacturers 1
memory-constrained 1
memory-failing 2
message; 1
methods, 1
miss); 1
misses, 8
mode; 2
movie 1
ms 14
much-improved 1
multi-CPU 3
multiply 2
myarg 2
needed; 1
never 38
nothing) 4
noticed: 2
now, 18
now-extinct 1
once; 4
onto 17
open. 2
out-of-memory 1
overcome 3
overheads? 1
overwriting 2
own, 3
p1.c. 1
p3.c, 1
parameters, 5
part) 1
passed 18
paths 4
making 63
hello 5
kicks 2
math 4
numbering 1
maps 7
obvious 12
judiciousness 1
infrequently 1
join. 2
item 9
lock(&mutex); 2
likes 1
lower-case 3
issues 26
memory). 6
numer-ous 1
multiplexing 2
p3). 1
multiprocessing). 2
list). 2
invented, 1
munication, 1
has? 2
journalism 1
misbehaving 2
literature 1
paging-policy.py, 1
necessarily!) 2
it 1299
join()); 1
peach? 1
malloc(). 4
himself, 1
kidding; 1
much 135
known, 2
measure? 2
oddity: 2
known; 1
inherits 1
knows, 1
join(). 2
lock->flag 6
lives), 1
lowered 1
it? 11
men-tioned 1
old, 1
necessarily 8
page-replacement 6
mutex, 4
lists[BUCKETS]; 2
inversion, 4
notes: 2
headed 3
key; 6
pain. 1
locality 18
neighboring 1
item. 1
jump) 1
per-futex 2
malloc’d 3
honor. 1
mathematical 1
killed 2
name, 4
large. 3
message, 2
off, 3
lie. 1
injected 2
latency. 1
judicious 1
logic 7
locate 3
m->flag 6
itself), 3
merest 1
oldest 1
newly-freed 1
park(); 4
mutual-exclusion 2
llock[NUMCPUS]; 2
occurred, 4
issue 33
helgrind. 2
known). 1
paragraph 1
loss 2
nondeterminism 1
iteration. 1
jumped 1
malloc” 1
http://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1303.PDF. 1
performance. 35
maximum, 1
knew 5
napping 1
latency) 1
messy 2
limit) 1
innovations. 1
offset 42
layout 2
jumps 7
lost, 3
locations, 1
macro 1
it’d 1
merge 2
on. 9
nitty-gritty: 1
park, 2
myret_t; 2
odd, 1
loads 19
herein 3
language 8
parallel) 2
it, 68
lottery. 1
not; 1
notion), 1
manages; 1
http://www.intel.com/products/processor/manuals. 3
place; 1
keep 48
microcode), 1
least-significant 1
neatly 4
laughably 1
miss), 3
limited 17
instruction(s) 2
oops.x 2
learn, 1
kernel. 6
machinery. 3
lock->ticket 2
maintains. 1
it” 1
meters 1
one) 4
nodes) 2
participated 1
negative, 3
odd-sized 1
locking, 2
holes 1
later, 5
patient! 1
job. 8
low-priority 1
jne 3
machine, 8
mapped 14
hundreds). 1
players 1
languages. 2
migration 5
led 8
necessary 9
lay-out. 1
mode, 13
line 14
intervals. 1
into, 1
library) 5
kernel’s 4
market... 1
lock-free 3
malicious, 1
jobs. 7
metric, 2
one-word 2
nonsolution: 1
partition 1
of. 1
logarithmic 3
however; 2
law 2
periods 4
job’s 2
null.c 1
just-finished 1
next 101
magic 7
metrics 7
idea! 1
pointer? 1
learns 1
minicomputer. 1
lengths 5
next. 10
lays 1
model 8
optimization 6
list, 26
intricacy 1
limits, 1
kind) 1
matters. 3
looping 1
me 6
join, 2
modifies 1
other) 1
note, 5
perfectly, 1
offerings 2
longer, 1
http://portal.acm.org/citation.cfm?id=540365. 2
ldrex/strex 2
persistently 1
object), 1
key 28
observation 5
malloc(10 2
miss; 1
nice 34
immediately 23
poor 10
least, 7
minimum. 2
libcrypt, 1
notes); 1
most. 1
least 35
overflows 4
lock? 10
introducing 5
loading 6
laptops, 1
mature 1
low-cost 1
jokes 1
measure 21
modulo 1
output: 4
perform? 1
notice 34
one! 1
looking 13
if, 4
level, 3
perspective, 1
keyboard, 1
knowing, 1
obviously 5
manner 7
mmap(); 1
not. 14
implementation. 4
powerful, 2
legal 6
miss. 9
nuances 3
myret 4
length). 2
library 47
overwrite 4
intuitively 1
locks, 22
lock), 2
laughing 2
maybe 4
lower-priority 2
jump 22
memory-mapping 1
moment 5
outs 1
phone 1
now. 7
ones. 3
lottery 24
illusion, 2
likes, 1
pipeline 1
kill() 1
labeled 3
occurring 3
matters! 1
modifications. 2
of... 3
implemented 10
powers 1
legitimate 1
mistakes) 1
occurs?” 1
nearly-complete 1
lmbench 4
lively 1
owns 2
invocation, 1
long-running 15
looks 39
lengths: 1
memory), 5
kernel; 2
main(int 23
mentioning: 1
monopolized 1
owner 4
physics). 1
occasions 1
open() 6
malloc; 2
implicit 1
linear) 1
play 4
knowing 6
larger, 2
offset=04); 1
mean 6
move 31
inclusion 1
pre-specified 2
old 60
mocked). 1
ones!). 1
let 36
necessitating 1
local-to-global 2
p1.c), 1
it) 5
lock, 61
looked 8
lookup. 3
lifetime 1
memoryintensive 1
larger? 1
malloc 8
metric. 4
moving 13
ownership, 1
picks 5
omitted, 1
operates 4
message. 1
improving 4
load-linked 14
point, 30
laser-like 1
larger 23
operator 3
mechanism, 2
ms). 3
independently! 1
online: 1
more). 1
prints 41
oops, 1
levels: 1
needed, 7
pages). 3
location 39
it?!) 1
locking. 3
low, 3
loop. 8
list_t 2
merely 1
later); 1
mapping, 1
mighty 4
muck 1
p; 7
pipe, 2
organization. 1
metal 1
influential 4
lock; 24
pointier, 1
laziness 2
leak 2
optimality 1
megabytes 3
much... 1
indicates 3
operation. 5
moves 15
proactively. 1
proceeding 1
pause) 1
long-list 1
itself? 1
logs 1
lowered, 1
loops; 13
like 215
one 500
lists 13
microkernels 3
ldl 2
massive 4
milliseconds, 2
packages, 1
multi-level 30
please 3
ours: 1
millisecond 1
just 304
logically-different 1
possession 2
libraries 3
leads 13
options 3
memories 4
multiprocessor, 2
inefficiencies 1
opposite, 1
information. 9
opposite: 1
not 449
processes) 1
peaches. 1
lookup? 1
longer-running 1
lowest 9
lucky 3
linker 1
lives, 2
mirrors 1
len:30 1
master, 1
more? 1
nanoseconds), 1
page. 21
pmap, 1
outdated) 1
initially, 2
miss). 1
longlived 1
pressed 2
limiting 1
only 202
kind 54
leak, 1
others). 1
mental 2
myargs); 2
multiprocessorbased 1
optimal) 1
informed 3
or, 5
nothing”; 2
processor 28
loop? 1
machine) 2
m; 1
list) 5
per 57
locality. 4
miss-handling 2
libc-2.23.so 1
math. 1
newlyrunning 1
mov 33
pages; 9
pool 1
overall. 1
look 121
list 103
mlfq.py, 1
main(). 1
printed 6
lists. 1
oops! 1
late 4
legality. 1
output; 1
mentor, 2
natural 9
multiprocessors, 2
organize 1
init 4
orderings 2
objdump 8
programs5 1
loops, 4
madvise), 1
listed 1
machines 21
perform, 1
lock()), 2
mistake 3
measurements? 1
next-to-last 1
lot 35
pairs, 1
populated, 1
overhead), 2
initiated 1
loop; 2
load/store 3
mocked 1
main-signal-cv. 2
printf("%lld\n", 2
ll/sc 2
open()? 1
later. 9
liked 1
over-designed 1
metadata 1
newly-opened 1
method 8
output. 2
input); 1
otool 2
objectoriented 1
prompt> 37
once, 9
major 28
location, 6
main-deadlock.c. 2
performance), 1
mix 1
megabytes). 1
must-read 3
noble 1
luck 5
papers 8
power.” 1
p3 5
insertion 2
located 13
mode. 4
maintains 1
machine 34
printf("location 3
loathe 1
optimal, 5
lock->turn 8
linear. 1
p3) 1
mythread, 14
news: 2
millisecond. 1
overcome? 1
instead, 5
out-of-bounds; 1
magnitude 1
protocol. 4
ongoing 1
malloc(100e6)); 1
locks) 3
matter; 1
other 303
overflow. 1
performant) 2
memory-access 1
nanoseconds). 1
none 3
magic. 1
parameters). 1
pre-configured 1
p4.output 1
interleavings 4
lock_t 2
manipulations 2
main-signal-cv.c. 2
pro-cessor) 1
leaked 2
luck. 1
loaded 17
package 4
need. 2
notes. 1
milliseconds; 1
overzealous 1
instrumentation 1
p1, 5
protocols; 1
online, 2
managed, 2
macros 1
mechanisms 32
mode) 9
own. 2
pick 15
memory? 9
nearest 1
not? 2
main-signal.c. 2
park(), 2
predictable; 1
part, 2
intermediate 1
maximize 2
more 470
malloc(), 3
make 214
process). 2
locks 79
least- 1
maintain, 1
local[NUMCPUS]; 2
pair 21
needs; 1
nothing 5
mistakes 3
ownership 1
int) 2
pagereplacement 1
pthread_mutex_unlock(&lock); 2
matter, 3
operation 20
made. 2
memoryreference 1
move). 1
p2 7
pieces. 1
memory” 1
negatives, 2
note: 4
maintaining 1
pdflush), 1
preferred; 2
interrupt. 4
particular, 28
memory-bug 1
mutex 17
malloc(strlen(src)); 1
malloc(sizeof(node_t)); 8
processes? 3
long, 5
least-frequentlyused 1
makes, 2
passed, 1
negative). 1
notion 12
modified 15
page-directory 5
interleaving, 2
paging). 1
published 4
push 2
optimal; 2
magnificently; 2
microprocessor. 1
ms. 5
paging, 4
pleases: 1
mesmerizing. 1
nicely. 2
notice. 1
manner. 7
physical. 1
primitive! 2
is? 2
lock 370
peeking 1
memory-user.c. 1
myarg_t 8
mandated 1
processes” 5
lowers 1
leaving 3
patent 1
management 29
network 2
number. 2
park() 4
more. 14
invent 3
pairs. 1
measurements 4
queue; 5
optimize 4
many 252
mind 5
multiprogramming 8
miss, 10
pressure. 2
mess 1
nightmares 1
main 66
num 1
material 8
points. 1
primitives. 8
logical. 1
people.cs.clemson.edu/ 1
metric 5
naive 3
manual 13
needed. 11
magic; 1
job 144
level. 7
pattern. 2
material. 3
network-connected 1
object 10
patterns. 2
music 2
it). 3
parallel 6
random-access 1
order), 1
marking, 1
parameters. 2
mutex; 6
modify 3
primitive. 6
messages 1
new 140
matches 1
obvious) 2
meltdownattack.com 1
portion 20
process; 13
lower 13
period 8
microsecond. 1
produced 2
map 7
needless 2
main-two-cvs-while.c 1
known. 1
libc, 1
performance: 4
maximizing 1
occurred 3
percentages. 1
mutex. 1
judiciously 1
parameter, 4
ranges 1
orphaned 1
mathematician 2
parentheses 2
myarg_t; 4
money 1
primitives; 2
node, 1
microcosm, 1
non-ASLR 1
measurements, 1
off), 2
memories. 1
practice 4
protections 4
lowlevellock.h 2
phrase 2
min 3
professors 3
marks 4
negative 14
mainframe, 1
lack 4
libraries) 1
permanently-valid 1
memcheck 1
occurrence. 1
memory 568
perhaps, 1
kept 12
name 22
park(). 2
rdtsc 3
otherwise). 1
meant 1
perror("malloc"); 4
n 4
mostly 4
printf("Final 1
now-standard 1
migration. 1
noticeably 4
measures 2
memory-add 2
offending 10
precise 4
pthread_join(pthread_t 2
machinery) 1
physics 1
mini-computer; 1
profilers 2
marvelous 1
new) 4
malloc(3) 1
launch 2
lifted. 1
pesky 1
memory); 2
odd 6
mess! 1
pipe() 2
kind. 1
nearby 2
path 8
realistic 3
mechanism 18
persistently, 1
output 36
nearly-infinite 1
much; 1
printf("Initial 1
ocean, 1
million); 1
nuclear 1
method. 3
offset=000000, 1
pthread_mutex_unlock(&c->llock[cpu]); 2
predict 16
main); 1
popular 7
models 2
projects, 1
memory, 124
maximum 8
no?). 2
malloc(strlen(s) 1
lazy; 2
locally-allocated 2
practice! 1
memory-mapped 3
offender. 1
played 1
large) 1
negatively) 3
peach, 3
rebooted, 1
memory-reference 1
physically 2
p4.output. 1
nonconcurrent 1
multiprocessing 1
private, 3
olden 1
privilege 8
open 7
middle 11
operations. 8
pthread_mutex_unlock(pthread_mutex_t 2
predictors, 2
porting 2
mode” 1
proverbial 1
malloc() 32
memory-user 4
might 218
mem-access 1
now? 7
man 21
leaking 3
location.” 2
precision 2
milliseconds). 1
oh 2
pouvoir”, 1
newer 2
peanut 1
last 37
reg/PC 1
microseconds, 2
pipeline, 2
pageable 1
normally 2
naturally, 1
mobile 1
nuts 1
probabilistic 1
once”, 1
modified. 1
out-of-bounds 1
purpose, 1
pressing 1
preemption 2
modification. 2
pthread_mutex_trylock(pthread_mutex_t 2
message 10
manage 19
models), 2
mem? 1
numbers). 1
manages 9
learned 13
lock(), 8
preferably 2
minicomputers. 1
order; 1
predictors 1
non-blocking 2
performance; 5
leading 9
regions) 1
mid-instruction, 2
ponder: 1
part: 4
notice, 3
neat 8
modes 2
objects 5
properties: 1
one. 24
mother 2
outputs. 2
queue), 1
previously) 1
prior). 1
multiplex 1
minutes 1
ptr 16
management, 1
much, 1
metric: 1
obscure 1
manner; 1
life; 1
lookup, 2
preserve 1
loop, 10
ority 1
preferred 2
notice? 1
permissible. 1
left) 1
register; 2
minimal. 2
power-of-two-sized 1
patterns 4
now: 1
necessary; 1
modified). 1
occasion; 1
multi-processor 4
mythread() 2
mutex->flag 6
page), 2
races, 4
primitives? 2
pro2 1
myret_t 6
miss) 1
query 1
manager. 4
moment. 1
obvious, 2
multi-threaded 44
memory): 1
lifetime, 1
moglie 1
main-deadlock-global.c. 2
primitives 15
out? 1
presenting 1
overview 12
phones 3
library” 1
release? 2
line, 7
reliable 6
pauses 1
on-chip 4
need, 1
open-source 2
occur. 3
protection 22
myturn 2
randomness 6
printing 3
mutual 29
page-table 31
proceed! 1
needed? 6
missed 2
questioning 1
marking 2
mouse), 1
offset, 2
multiplied 3
micro-instructions 1
mother. 2
linear 34
problem; 2
malicious 14
obvious: 2
preserves 1
page: 1
phrase... 1
minimizes 2
powerful. 3
lived 1
repeats, 1
people, 1
networking 3
one, 26
operations, 3
other, 5
pthread_mutex_init(&L->lock, 4
name. 4
rate. 3
priority) 1
myturn) 2
pagedirectory 1
process); 1
nicely 1
read/write 1
mode 23
meeting 1
movl 28
once. 5
multiprogrammed 3
mines 1
multi-queue 4
lines 14
problematic: 1
malloc. 1
occasionally 3
prio_to_weight[40] 1
papers, 6
piena 1
misses! 1
prerequisite 1
location; 2
replaced 2
percent 6
non-contiguous 2
occurs; 3
original; 2
outcomes? 4
quoting 1
nasty 1
readied, 1
name). 1
privileged 24
paper: 1
non-performant. 1
processes, 31
reason. 3
microseconds 2
multiple-queue 1
one-quarter 1
nears 2
minicomputer 5
modern 90
multitude 1
list? 1
manifesto 1
processor, 13
offset: 1
parallelization, 1
problem. 26
pipes, 2
ms), 4
preventing 3
looping-race-nolock.s 8
repository 1
performance? 3
norm, 2
odds 1
other. 8
overcome. 2
r-x-rw--r-x-r-x-r-x-r-x-rw--- 1
nature 8
necessity! 2
reading 21
probes 1
non-zero, 1
producers, 1
receives 4
migrate 1
multiprocessors 5
performance 91
operate): 1
next: 9
minimum 2
n). 1
myargs[2] 2
lists, 7
mapping: 1
program-debug 1
one-to-one 1
parcel 1
player 1
must, 1
previously 3
lucky, 2
required? 2
performance” 1
occur, 2
one-third 1
others; 1
overhead 12
raises 8
needlessly 3
reality 7
needs 32
occurs), 1
problem: 25
professor 2
recollections 1
migration? 1
mutex_unlock 2
person; 1
opposite 5
node_t 24
named 8
mystery 1
miss 32
load; 1
masses: 1
program4 1
one? 1
pointer, 10
naturally-occurring 1
part 52
process 403
machine? 2
reserved 6
permit 1
particular 60
often, 7
open("./p4.output", 1
other’s 1
oversubscribed, 1
pass 54
network. 2
recommend 2
newly 3
odds: 1
programming 7
recover 1
miniscule 1
process, 51
new->key 4
piece, 1
opt 1
non-cooperative 2
news 2
mmap() 7
needed 44
locality: 2
max 1
logical 15
ones, 2
newlyfreed 1
possible, 14
processors, 9
machines, 5
producer/consumer 9
priority 61
persistence, 1
oops.y 2
opinions; 1
p 1
reac-quiring 1
parameters: 1
pausing 2
new. 3
recursion 1
newly-fetched 1
once? 2
progress. 3
regain 1
misses), 1
processing. 1
new_head->value; 2
pioneer 2
optimization, 3
non-preemptive 2
mode). 1
new; 8
prove 5
meaningful 5
lookaside 4
one” 1
notes, 3
power 8
resided 1
main-two-cvs-while-extra-unlock.c. 1
producer; 1
no 140
proceed 6
persistent 4
optimizations. 1
optimizing 2
p1–p3). 1
reasons, 6
park 6
perceived 3
newfile.txt 2
recycles 1
non-scalable 2
project, 2
operations 26
representing 2
mobility 1
producing 1
nptl 4
plots 3
out; 1
non-stop; 1
more) 1
newly-allocated 2
meanwhile, 1
lookups. 1
oops 2
provides 30
notices 2
precautions 2
responsibility 6
maliciously) 1
promise 1
none.” 2
processes”, 2
persistently; 1
order, 5
others), 3
packaged 2
received 3
paths. 2
perfect. 2
non-synchronized 2
register), 1
nor 1
ps 2
optimal. 1
requiring 11
molecules 1
number), 1
policies: 2
outlines 6
notably 5
multiprogramming. 1
programs 85
nothing. 2
measurement 3
loop.s 6
opposite. 1
pseudo-random. 1
now! 1
preemptive, 1
responsibility!” 1
malloc(20);. 1
prone; 2
not, 14
produced, 1
phase 3
ordering. 2
outcome. 6
refers 9
perfectly 2
person 3
non-zero 3
relaxing 1
o 2
re-referenced, 1
optimizes 4
resource. 2
monster! 1
politely 1
numerous 12
own? 1
occurs)! 2
myargs[1] 2
properly. 1
numbers) 1
messages. 2
pages 195
loops. 1
pushl 1
number, 4
present, 2
result! 2
many” 2
proportionality 1
obey. 1
professor? 1
physics. 1
origin 2
over. 1
relocation.py 1
phenomenon 1
performs 21
nondeterminism, 1
obey 1
releasing 16
reach 2
resources; 2
out, 27
motivate 1
pretend 5
of) 3
p2.c 1
omit 2
name; 1
provided. 2
object. 1
met 1
pals 1
or 469
lovely 1
put(int 2
obvious. 2
prevented 5
results. 6
marked 11
proves 1
obtain 10
professors, 1
place, 9
ory. 1
overload. 1
removing 8
placed. 1
p: 18
noticeably. 2
observing 1
reliability 2
ready. 1
respect 2
p4 7
moustache 1
problematic 2
on! 2
page-number 1
one). 1
naturally 4
pseudocode 7
pthread_mutex_init(&c->llock[i], 2
purify, 2
must 152
putting 17
patch 5
orderly 1
magic: 7
puts 19
marriage, 1
print 25
purify 1
obviates 1
means 31
platform, 1
ourselves 3
requesting 1
pipe 8
policies? 1
pmap 5
pages: 2
now-sleeping 2
occurs 19
remaining 13
restored. 1
receive 11
paging. 4
problems. 11
on-going 4
paging-multilevel-translate.py; 1
open("/tmp/file", 1
offers 1
n; 1
mild 1
quantum 5
performance-minded 2
need 152
organization, 1
malloc.py, 1
rate 27
printf("%s\n", 3
rage 3
randomization 3
occurs. 3
measurement. 1
poorly, 1
over, 1
resources, 4
return 169
practice, 1
previously, 1
painful; 2
objects. 1
onnv/onnv-gate/usr/src/lib/libc/port/threads/synch.c. 2
open(), 1
opinions 2
opposing 2
retains 1
recommended 1
paper, 3
processes; 7
open, 1
paradigm. 1
option 1
omniscient, 1
nanoseconds. 3
milliseconds 6
questions 13
randomization, 1
needed). 2
original, 1
manager 3
re-referencing 1
prompt 4
rates 1
popular. 1
memory; 19
packed 4
restricted. 1
process. 69
routinecalling 1
prevents 3
priority, 7
obviously, 1
parent 44
reporting 2
orders 2
retry 6
regions, 2
parallelism. 2
processes’ 1
operational 1
parent) 1
out! 1
networks, 1
minute?), 1
performed, 2
once 60
re-enable 2
no? 8
other? 1
manner: 1
reached 1
protection; 2
re-accessed 1
possibilities. 1
methods 4
pain 1
return-oriented 1
million 17
process’s 18
printf("(%d) 2
priority-based 1
oh! 1
resources? 1
parts 19
out). 1
on 719
running), 1
regs(A) 3
paralleliza-tion, 1
produce 9
others) 2
password 1
overcoming 2
no, 1
modes. 2
physically-indexed 1
online 6
read-only 1
none, 1
others, 4
match. 1
realize 5
pthread_mutex_lock(&q->tail_lock); 2
reader, 1
powerhouse 1
patches 2
runnable) 1
returning) 2
mind, 4
procedure. 1
properties 8
proceeding. 1
processor. 9
rolls. 1
pause, 1
outcomes 1
operation, 9
runs. 11
repair 3
parent: 2
producer. 2
out"); 1
penalties. 1
overlap 6
non-computer-types 1
modifying 2
pioneering 6
opens 4
read-write). 1
numbers 12
overall, 1
matter. 2
regardless 2
ptr, 3
realizes 3
printf("child\n"); 3
paying 3
running? 4
right) 1
misses 21
on; 1
pthread_mutex_t 22
programmed 1
says: 1
overheads. 4
pay 12
opportunity 1
processes 107
rw- 1
replacements 2
partially-ordered 1
program: 6
p. 1
people. 1
overly-large 1
per-process 12
module 1
opportunities 1
rearrangement 1
oblivious 1
memory-intensive 1
policy 50
remote 1
overheads 14
python 1
recall, 1
printf("hello 3
picture, 5
sage 1
routines. 1
month. 1
operator, 2
pthread_mutex_unlock(&q->head_lock); 4
proportionally 1
scales? 2
own; 3
peep 1
percentage, 1
producers 3
scale. 1
reset 3
past, 4
prone. 2
pages. 28
normal 11
overwhelm 1
perfect... 2
monitoring 3
option, 2
reboot 6
occur 9
mid-execution 1
possess 1
responsibility, 1
overlays, 1
rechecking, 2
quickly 21
pointing 2
says 2
runaway 1
more! 1
queue_init(m->q); 2
pthread_cond_signal(pthread_cond_t 3
problem 121
scheduler; 2
painful 7
order! 1
perl). 1
program? 6
scientist 1
resource; 1
performance2 1
protocol 3
paid 1
notes 5
pages) 3
mutex_t 5
ordered 4
perhaps 39
reduced-instruction 1
oddly 1
reduces 9
middle, 1
rest. 2
potential 12
overly 3
record 6
randomly-generated 3
preparing 1
of 3668
sbrk. 1
runs? 2
multicore 6
rage. 1
purpose 9
processes: 4
scope 2
passes 5
output, 2
peach. 6
programmer; 4
restricts 1
search 20
performed 11
providing 16
pattern 5
now), 1
papers. 4
my 6
out.” 1
persistence. 2
out 181
place. 16
relocation; 1
minds 1
returning. 1
precisely 2
p1 8
referenced, 1
re-check 3
offset. 6
pretty 26
scenario, 3
sane 2
names 1
raising 3
put(i); 5
professor. 2
scorned, 1
permanent 1
outside 4
perfection 1
programs, 16
retain 1
second: 1
personal 1
pthread_mutex_lock(&c->glock); 4
pause 2
null-pointer 2
parallel, 2
namely 5
overlap, 1
near 13
outrage! 1
ploticus 1
replacement; 1
minimizing 1
revenge 1
preempts 1
page(s) 1
regained 2
reacts 1
on-disk 5
process) 6
schedulers. 5
scenarios 2
networking, 1
ran, 1
q->head 4
programmer), 1
segmentation, 4
persons 1
overstate 1
periodic 1
project 4
pthread_mutex_lock(&c->llock[cpu]); 2
sections. 4
phases 2
quest 3
percentage 5
null. 2
path, 2
offset), 1
p5 5
nearly-endless 1
packet 3
pointed 15
represents 4
require. 1
right. 5
previously. 2
paged 1
region; 1
realization 1
ones 8
processed 2
schedules 4
sched 7
new->next 4
random, 1
queue) 1
programming. 5
sensitive 1
perspective 8
oversubscribed; 1
periodically. 1
revolutionized 1
pthread_mutex_lock(pthread_mutex_t 2
semaphores” 1
place? 1
question: 7
performance, 14
peaches 2
pages), 1
newfile.txt. 1
page; 5
often 69
pointers? 2
miss? 1
requirement: 2
rvals->y 2
number 198
printf(), 1
parameter 6
relaxed: 1
reason: 3
optimization. 1
professionals 3
screen 1
schedule: 2
newly-created 3
randomized 2
quote 7
property, 2
sent 3
pessimal, 1
p2; 5
philosophy 1
rightly 2
pthread_mutex_unlock(&L->lock); 12
semi-nal 1
planet 1
queues: 1
period; 1
performing 14
pagetable 4
node 12
once). 1
policies; 1
mjtsai.com/blog/2015/12/16/osspinlock 2
respectively, 1
say? 1
paper 85
objectives; 1
priority. 8
peach 4
remedied 2
recourse: 2
ordering; 1
programmer, 1
seeds, 2
scream, 2
nice), 1
range 7
races 4
ps. 1
sequential” 1
packing 2
point 39
pointer. 3
routine1, 1
questions, 3
separation 5
plus 11
rather, 11
placing 7
paradigm 1
pieces 19
not), 3
one: 3
poorly. 2
monitors 5
response-time 1
says, 1
parent. 4
observes 2
problem? 2
periodically 9
remind 1
organization 2
references 28
properties; 1
segments: 1
seconds!). 2
node. 1
rarely-used 1
re-acquire 1
ptr; 2
set. 2
pre-initialized 1
pop 1
run. 22
r-x 5
servers, 2
policies, 7
ratios 1
plans 1
parent; 1
placement 1
noticed 5
oops; 2
positive 4
moreover, 1
result, 12
scheduled; 1
past 6
occurs: 1
problems, 12
pigs. 1
repeating 1
relinquishing 2
original 19
proportion, 1
select 4
secure 3
node_t; 5
read() 1
reads” 1
quantify 3
sharing. 3
precious 2
popular, 1
runs; 3
page 635
re-referenced 2
similarly 3
poorly? 1
readers, 1
policy. 4
part. 1
player, 1
observed, 1
opinion 1
practical 8
moved 6
ret 1
screen, 1
penalize 1
off. 1
problem” 1
pipes 4
resort 1
remembers 2
others 14
silently, 2
semantics 8
node’s 4
reader: 2
pthread 57
referenced; 1
queue, 17
shouldn’t. 2
presented 8
popular-sized 1
rv; 2
painful. 1
read-only, 2
simple, 9
positivity 1
now 184
portions 7
peaches, 1
plural) 2
obtained 1
prepared 1
much. 6
reverts 1
person! 1
sense. 11
order 80
on, 11
producer, 2
ple 1
responsabilit 1
remove_min(queue); 1
our-selves 1
sequence. 2
simulator 16
recent, 1
references, 1
re-use 1
sidebar 2
prevention 2
rvals; 2
possible. 14
satisfy 9
passion 1
really. 1
size; 6
really) 2
prac-tice, 1
old_ptr 4
preserved. 2
peek 1
policy) 1
ocean 1
multipro-gramming 1
processors 16
right.” 1
perspective. 2
sequences 5
outcome 4
once); 1
pthread_mutex_init(&lock, 2
pleasure 1
responsiveness; 1
result 30
overall 9
short). 1
situation 9
reduction 2
register) 2
read), 1
signal/wakeup 1
printf("%p\n", 1
quite 114
priorities 5
sbrk() 1
pays 1
rearrange 2
slowly, 4
recently, 1
prefer 2
on). 1
printf("%d\n", 7
pending 1
pool? 1
on) 1
mutex_lock 2
production, 1
rip 1
pid; 1
q->tail->next 2
retry, 1
over 90
return? 2
overlays 1
shorter 6
sixteen 1
pointer 55
region) 1
set 146
rele-vant 1
receive. 1
operating 151
simultaneously, 1
pragmatists 1
quote: 2
programmer. 5
scheduler); 2
penalty 2
reassurance; 1
someone 3
reclaimed, 1
presumably 4
otherwise: 2
privacy 1
popularity 1
operation), 2
people 28
myargs[0] 2
productive. 1
rules 6
places 6
quickly. 5
overhead. 1
rewrite 8
returns, 7
owns. 1
signaled 1
skills. 2
positively) 3
registers), 2
set-top 1
possible 31
recommended. 1
p3.c), 1
sizes, 2
precisely? 1
page, 28
progressed, 2
school; 1
performance”, 1
reboot, 1
records 1
prevent 8
overflow 3
primary 9
printf() 1
prioritizes 1
own 72
opposites 1
sometimes 73
persistence 1
mythread(), 2
program; 3
rvals->x 2
platforms 2
radical 2
overheads; 1
right); 2
reveal 1
p4.c 2
similarity 1
slow; 2
relegated 2
relocated; 1
preemptive 2
recursion). 2
sharing 30
slumber 2
randomness. 1
preemption, 2
page-not-present 1
prohibitively 2
perspectives 1
section. 34
regions 11
redirect 2
problematic, 1
potentially-starving) 1
p); 1
problems 55
optimizations, 3
sooner 1
picking 6
nanoseconds 1
prohibitive. 3
satisfies 1
point. 7
rc; 4
page? 1
rogue 1
rid 1
page-frame 1
robust 9
software), 1
repeat, 1
remove 10
reducing 6
shouldn’t 5
small! 1
present 36
range; 1
prefetching 2
page-sized 4
projects 3
peterson.s, 2
sections; 4
relaxation 1
region. 1
problems: 2
pressure 5
p3.c 3
process-run.py, 1
optional 2
space-management 1
pieces, 5
nature, 2
protection, 2
pointer). 2
saw 12
readable 1
pages, 26
saves 9
simplicity 7
panacea, 1
rwrw- 1
some, 2
repeating. 1
replies: 1
register, 6
signal. 3
something, 2
printf("parent: 6
re-initialized. 1
prepare 1
read, 7
promoted 1
phase, 4
sentence. 2
reload 1
regular 2
process? 4
primarily 3
page). 1
primitive 9
ordering, 2
spaces). 1
piece” 1
necessary. 1
question; 1
points; 1
queue. 12
real, 2
paging-linear-translate.py, 1
say), 2
singlequeue 1
rw— 2
passing 12
spell 1
reproduced 1
responds 2
regs 3
signals; 1
priorityadjustment 1
pal, 2
primer 1
space. 45
printf("%s: 4
protected 4
photos 1
separa-tion 1
remainder 1
removed 6
request. 7
produced. 1
pages); 1
principles 5
parameters 9
pioneers 4
needs, 2
saying 4
queue_t; 2
place 46
parameter; 2
stack 79
scale: 1
physical 236
size, 12
safe 6
patience, 1
states, 1
required, 3
responsive 1
replete 1
simulator, 1
probability 2
parameterize 1
reap 1
sparse, 1
product. 1
pthread_mutex_lock(&q->head_lock); 2
server, 1
reason 32
requested 8
requests; 1
out. 11
researchers 8
peaches; 1
producer 26
non-concurrent 1
realized 8
queues; 1
scheduler, 20
placement, 1
paranoid. 1
stack”! 1
policies 35
scary 1
points 15
sizeof(int); 1
scalability. 1
placed, 1
stores 16
restricting 1
research 18
reset. 2
sleeps 4
processors. 3
parent? 1
spawn() 1
professor, 1
pthread_mutex_timedlock(pthread_mutex_t 2
protocol, 1
server-based 2
rechecks 2
researchers/engineers, 1
priority). 1
p6 5
resizing, 2
piece. 3
professor! 2
noticing 1
rearranging 1
re-reads 1
second-chance 1
poorly 3
park. 2
straightforward; 1
pollutes 1
particularly 27
preempt 2
sleep. 8
scheduled. 2
possibly 1
string) 2
return. 1
research.microsoft.com/ 2
resistance 1
product 1
patience 2
species. 1
program). 2
put() 4
pthread.h 2
serviced. 2
recorded 3
results 17
probabilistically 2
page) 4
restores 4
plain 2
null 2
reasonably 3
program, 58
reader 7
space 278
secretly 3
specified 8
stuck, 1
pragmatic 1
scenario. 4
partner 1
previous 19
sleeping/waking 2
potentially 7
subsequently, 1
rewrite, 2
resize; 2
resource) 2
scheduler 110
program) 1
perfect 7
spend 10
puzzle 2
programmers 13
queue_add(m->q, 4
sits 3
recourse 1
returned) 2
proc-struct(B) 1
page-fault 3
return-to-libc 1
pointers 5
obtaining 4
reclaims 1
proofing 1
realloc() 4
predate 1
see. 4
split 9
subset 3
predates 1
scheduler.py, 1
per-CPU 5
previously; 2
slice). 1
premature 2
substituted 1
scare 1
respectively. 2
results? 2
searched 1
progress, 1
segment, 14
pthread_cond_t 3
programming, 2
rare 2
sizeof(PDE)) 1
redoing 2
review 2
spin 79
process: 2
paper. 1
returned. 2
postulates 1
occur? 2
references. 2
pros 1
referenced 6
preserving 1
src); 3
substantial, 2
pri- 1
seen 31
school: 2
performs. 2
printf("hello, 6
sloppy 4
premise 1
successful 5
scorned 1
result. 11
resume 8
permission 1
protect 11
service. 3
pthread_create(pthread_t 2
proportions 1
re3 1
sketch/review 1
referencing 1
road, 1
spin-waiting 4
par-allel, 1
returnsfrom-trap, 1
programs. 25
region, 5
powerful 21
occurs, 14
pursue 1
register. 4
off 30
stack-allocated 2
surprising 7
primitives, 3
series 9
scientist, 1
permissions 1
priority; 1
small. 1
presence 11
surrounding 2
screen. 3
rosy 1
revolutionary. 1
persists, 1
personally 2
pushing 2
provably 1
sets 27
read. 6
sleeping, 3
regards 2
role 11
stand 1
partition, 1
room: 1
proliferation; 1
relates 3
pre-WWII 1
question, 1
pressure, 2
registers; 4
offered 1
starting 14
switches, 2
priorities. 1
set” 2
seamlessly 1
picture 5
printf("this 1
smart 13
problem, 24
space; 11
searches 3
ruins 2
pthread_mutex_lock(mutex); 2
running, 30
physical, 1
race): 2
question). 1
shape. 1
readability 1
slices 10
reliability. 2
snippet 9
store-conditional, 4
patterns), 1
routine1 1
promotes 2
relocation 6
preferring 1
queue? 1
pretends 1
relatively-slow 1
queues, 12
starve). 1
swtch(struct 1
proc-struct(A) 1
shooting 1
shells). 1
plenty 3
priori 3
survive, 1
processing 4
spawning 1
segment; 4
run-time 7
purely 1
segmentation 26
pipe; 1
readable. 1
ran. 1
showing 8
readily 5
roused 2
relocating 1
solidify 1
stream. 2
phone, 1
rules, 1
proofs 1
presents 7
replacement 30
primitive, 2
often? 1
released. 6
raised, 2
stems 1
symbol 3
process-run.py 1
simplest: 2
shipping 2
pmap. 1
proceeds 4
switch. 4
programmers. 2
speculation 2
safer 2
runtimei 1
purposes 2
sensed, 2
readonly 1
random. 1
placed 24
similar. 2
ready), 2
routine, 10
request? 1
solve: 1
structure) 1
rvals->x, 2
presumes 1
piece 36
priorities; 1
opened 1
requires 25
relocated 6
provide 65
strdup("wc"); 2
system1 1
stream 7
simplifying 3
shrinks 1
table. 26
professional 1
policy, 12
programming: 2
synchronized 10
stages 1
scalability 2
safe. 2
share; 1
reasonably. 1
ran 15
rarely 1
plays 2
size); 2
reasonable. 3
rule: 2
requests, 2
sometime 1
students 3
rw59 1
principle. 1
place! 2
operating-system 3
processes. 22
root, 1
renders 1
pthread_create(..., 4
processing; 1
structure; 2
sketched 1
real 53
put 41
tables; 1
progress 8
possible; 2
pronounced 1
stops. 1
system; 8
scanning 3
said, 10
short-circuiting 2
reboots 1
rarely-taken 2
poorly-programmed) 1
random 37
skill 2
recall). 1
runnable; 2
research; 1
space). 3
success! 4
saying, 1
privileged) 2
platforms. 1
origins 1
produces 7
rude 1
representation 1
talk 10
slight 2
recall1 1
similarly, 3
question! 1
thank 2
proportional-share, 1
possibly-failing 2
straightforward, 2
properly 15
t, 2
scheduled 11
shortcomings. 1
relatively-short 1
say 29
react 1
procedure 12
rc, 3
software4 1
recognized 1
rw45 1
reside, 1
spaceshared 1
sure; 1
scalable 15
proc 5
program 321
pleasant. 1
outcome? 5
property 10
run; 1
reside). 1
testand-set 1
slightly; 1
redirection, 1
simplicity; 2
questions. 3
thinking: 2
protection. 3
posterity) 2
strdup("p4.c"); 1
provided 20
tension 3
scoff 1
simulator. 2
relocation. 2
scaling, 1
processing, 3
reads 10
re-acquires 4
some_function(char 1
reduced. 2
same, 3
spear-headed 1
resource 14
swap? 1
second; 1
reference 57
projects. 1
policies. 7
p1.c) 1
prot 8
runtime, 2
themselves, 1
sneaky 2
referring 2
returns 61
read(), 1
thoughtful, 1
pthread_attr_t 2
thoughts 5
student 3
pthread_mutex_init(&q->head_lock, 2
test 7
scratched 2
replacement. 4
simultaneously 11
scenes, 2
properly, 1
re-energized 1
sometimes) 2
single 203
register-level 1
saved? 2
soon 25
restored 4
system), 3
proc_state 2
see: 2
proofs” 1
preempted 4
pains 1
principle 6
protective 1
rvals->y); 2
think. 2
software 17
rise 2
region 25
real-world 2
precisely, 1
pthread_mutex_init(&q->tail_lock, 2
threshold) 2
study. 2
pthread_mutex_lock(&lock); 2
themselves 4
segmenting 1
requested, 2
sincerely 1
schedule 14
proportional 3
scheduler. 10
sitting 4
remarkably 1
started, 1
sbrk 3
sorry 1
resulted 2
table2 1
process), 3
semaphores 1
proper 14
referred 27
passive 2
printf("%d 4
protocols 2
section; 2
tickets), 1
solution. 8
routed 3
register? 2
reboot. 1
prematurely-optimized 1
pthread_mutex_unlock(&c->glock); 4
tmp->next; 2
stuff? 1
pull 2
timer? 3
senses 1
resident 2
single, 1
reaching 1
proportional-share 6
scheduler’s 1
sketch 3
renewed 1
stash 1
requests. 6
schedulers 14
returns), 1
tables? 1
profit 1
server 11
proponents 1
relevant. 2
path. 3
relocate 5
pthread_cond_wait(pthread_cond_t 3
sees 4
remains 11
soon, 1
rvalue); 2
perform 70
remember 20
printf("main: 8
publishing 2
topmost 7
success. 3
queuingbased 1
timers, 2
serve, 1
rest 18
situation. 2
ready, 3
sizes 8
recent 16
secretary; 1
slab 5
source. 1
statement. 2
reside. 1
reused 1
scheduling, 15
tens 2
pthread_mutex_lock(&L->lock); 8
setaffinity() 1
provides, 1
printf("returned 4
pthread_create(&p, 2
time-slice 5
services, 1
sorry, 1
registers, 10
short 29
philosophical, 1
saved 11
problem”, 1
rapidly 1
repeatedly 15
tricky 10
surprisingly, 6
quick 4
tips 2
results, 4
service 11
provided, 2
sleeping). 1
refer- 1
seemingly 12
sleep) 1
storage. 1
slot 7
spaces 20
ridiculously 1
seasoned 1
test-and-set! 1
publicized) 1
privileged; 2
question 27
pthread_mutex_init(&c->glock, 2
tmp; 7
shared 67
space? 6
recognizes 1
regs(B) 3
single-threaded 4
pioneered 4
scenarios, 2
programmer 12
rate) 2
replaces 7
rc 13
typical 26
quickly; 3
tolerate 1
retries 4
settle 1
q->head; 2
slowed 1
regard, 2
segment: 10
rest, 1
string, 2
small) 1
spectrum, 1
rights). 1
secretary 2
test-and-set.s 2
quantum) 1
queue_t 2
pthread_mutex_unlock(&q->tail_lock); 2
to) 1
shells, 1
program. 46
spaces, 5
queue 55
relies 1
sit 6
pleasure: 1
scripting 1
proportion 5
suspect 1
reports 2
rc_wait, 2
required. 5
rarely. 2
too. 6
short-lived 2
queued 1
returning 27
small-scale 1
registers) 2
right 42
resuming 1
structures? 1
speeds; 1
round 2
security: 1
rabbit 1
them, 20
raise 10
too: 2
shuts 1
programs; 3
reduction, 1
space” 1
realizing 1
relinquish 5
sizeof(int)); 2
point1 1
so 197
security; 2
provisions 1
swath 1
unanswered: 1
re-checks 4
rears 1
resides 9
traditionally 1
sign 3
quick, 1
related 18
segmentation? 1
safe? 2
so, 37
return-tolibc 1
strung 1
splits 1
segment? 1
queues 6
reason, 8
tool. 1
single-CPU 2
refine 3
program’s 9
runs 83
stack), 2
red-black 4
request; 1
popl 1
they 149
solving 4
slice 36
seemed 1
pure 2
t(B) 1
reaction 2
table? 3
reclaim 3
transferred 4
qu’une 1
signals 13
response 31
segmentation” 1
relatively 16
scheduler? 5
somehow, 1
returning, 2
sudden 1
spread 9
segments, 5
rate, 3
recently. 2
tragically 2
skip 5
rent 1
sleeping 5
rv 4
starvation 3
redirects 1
requirements 1
posed 5
somebody 5
thing 38
slightly 19
purpose. 2
understanding 19
segment 56
tables, 8
recursively 1
ready 33
reference. 8
race. 4
retrospective 3
sets. 2
similar 45
schedulers, 1
release 23
right, 3
relevant 13
stack) 7
roughly 24
re-create 1
transistors 2
refer 27
promote 1
replacement) 1
so), 1
sat 2
statistics 4
reflect 4
researcher 2
possibility 5
somehow 6
something 132
timespec 2
small). 3
queue). 5
undo 4
semantics, 5
talents, 1
treat 4
target 6
refined 5
ravages 1
revisited 1
show, 1
similarly; 2
secondchance 1
susceptible 3
removes 1
stipulated 1
services. 1
run), 2
re-duces 1
transparency2 1
releases 14
pulled 1
research, 4
software, 4
saves/restores 1
stopped, 1
possible: 1
restore 17
sometimes, 2
space-usage 1
transforming 3
register 75
smaller 14
quote. 4
unimaginatively 1
sequence: 1
really, 4
treatment, 2
tcsh), 1
refuses 1
rc_wait 3
roam 1
simplify 1
simplest 13
see! 2
switch() 3
repeat 1
stopped 2
several 1
rvalue; 2
recommending 2
trap), 1
reliably 3
q->tail 4
restricted 7
software-based 1
saving 6
streams, 1
power. 1
resumes 5
stack, 18
sparse 7
transistors. 1
relaxed 2
snapshot 1
ran; 1
setassociativity; 1
replacing 3
updates 33
team 2
true 14
reject 4
re-place 1
size=100); 1
round-robin 11
sinister 1
swtch: 1
sense 26
represented 3
stored. 1
since 7
rx 4
recursive 1
traverse 1
resource, 4
question. 7
result: 2
solution: 1
scale 4
stride 17
private 18
reuse 1
states. 1
spatial 7
transparency 1
released 10
random; 1
so. 15
reproduce, 1
us. 4
share 36
ten 7
relate 1
truly 9
sizeof(), 1
run: 3
sizeof(PDE)). 1
table; 5
really 52
setting 15
reasons. 10
required 15
size). 2
second. 5
redirection 2
true, 3
restored, 1
queues. 2
returning; 1
solve. 1
schemes 5
struction 1
root 3
statistics). 1
probably 32
src.opensolaris.org/source/xref/ 2
remainder. 1
randomizes 1
solutions 11
request, 10
usability 1
she’ll 2
test-and-set. 4
remains. 1
turnaround. 1
snooping 1
slow, 8
teaching 1
running. 23
strategy, 2
shift 1
two 241
recency 1
resumed, 1
skip-ping 1
section), 2
reduce 15
unallocated 2
reused, 1
raised. 1
right; 1
sploitfun.wordpress.com/ 1
school 2
structure: 2
runtime 2
suffer 8
processor; 5
suggested 8
randomly-accessed. 1
spin-lock 2
requester), 1
start 58
simple) 1
use) 10
theory, 1
repeatedly. 2
typesetting 2
solved 2
snippet. 1
them), 2
streams 2
short-running 4
short. 3
shot 2
regains 3
remains: 2
sleep-ing. 1
seem 7
reference) 1
uncommon 2
routine. 2
randomly 4
sprawling 1
science. 2
store), 3
routines 41
safely 3
reside) 1
properties. 1
superpages, 1
stack: 3
residing 2
starving 1
simplicity, 16
usual, 3
read 91
thermodynamics 1
uint 1
require 10
soon. 1
soon-to-be-running 1
structure. 16
save 27
two-fold. 1
scaling. 1
signal 28
those 84
remember: 1
slogan. 1
send 13
understandable 2
rudimentary 4
ranging 1
registers 48
sptr. 1
scratch 3
strcpy(dest_buffer, 1
run-and-yield 2
sake 5
restart 5
proportions, 1
support. 9
standpoint, 1
rethink 1
states: 1
simulation. 1
v 2
reasonable 9
think) 1
undefined. 1
resides. 3
sorry. 1
sorted 1
structures; 2
retaining 3
ubiquitous 2
seconds 9
thought 17
sounded 1
reproduce 1
sense, 6
undertaken; 1
run? 8
request 35
started 11
second, 6
rather 29
strdup 1
simply 128
sad! 1
scheduled3 1
return-from-trap 17
pthread_t 14
surprise. 1
starve; 1
returned, 2
store-conditional 7
situations 3
valgrind? 1
reduced 5
third, 2
unfortunately 4
restoring 5
space! 2
style. 1
returns. 3
unexpectedly 1
source 23
seed. 1
tickets, 4
space-efficient, 1
serious 10
unfortunately, 14
represent 5
runs, 21
resources. 5
starvation, 1
sections 6
readers 1
strengths 2
slice. 1
say, 5
scourge, 2
return-to-libc. 1
pthreads 8
suspicion. 2
stored? 1
rewrites 1
stores. 1
sizeof(PTE)) 7
varies, 2
references: 1
threats, 1
unimaginably 1
resulting 24
spaces. 7
subdirectory 2
risen 2
unless 1
sparsely-used 2
seeds; 1
timeline, 1
speeds. 1
servers 1
uniform, 1
required). 1
satisfaction, 1
restrictions 1
stealing 1
seek 2
reading, 1
strongly 5
slices; 2
sense; 5
se, 2
road” 1
purchase 1
switching; 1
structures, 13
right). 2
successful. 1
slow. 3
wasted. 3
register). 1
three-instruction 3
unit 7
reusing 1
specialized 4
unlock. 4
run, 24
sentence: 1
speed 12
sure 56
spinning, 2
servicing 5
unlock 13
restarts 1
scale, 1
store-conditional) 1
returned 15
right”, 1
until 52
reality, 1
reasoning 1
smarter 1
solutions. 4
rough 3
sequence 24
t). 2
race 28
subject 4
successfully) 1
slowly) 1
weird; 1
relative 3
timeout 4
unpacking 2
richer 1
spends 1
unmapped 1
src) 1
system: 6
state1 1
setting, 1
restricted? 1
scenario 4
stride, 1
rw 6
update) 1
strut 2
recently 6
seconds), 3
run 374
sources: 1
routines, 5
setpark(). 2
tailor 1
range. 1
subsystems. 1
running 227
segment), 3
summary 5
should 274
small: 3
willing 3
relax 10
timing? 1
unused, 1
right? 8
spins 11
used) 1
stack; 3
table). 3
stop, 1
severe 3
return-fromtrap 3
scheduler), 1
scales. 1
scheduling. 9
upper 1
subsystems 1
refers? 1
security, 1
scenarios. 1
splitting 3
scalable. 5
sets: 2
technical 3
re-awaken 1
sufficient 2
rwx 4
sending 1
superuser 3
sparsely 1
woke 1
shown 35
wonderful 11
tip: 1
up; 2
splits. 1
useful, 11
user; 3
standard 22
taken, 5
strike 1
showed 4
revert 1
string 12
scientists 4
school, 2
urging 1
suggest 3
registers. 3
semaphore 1
schedule(curr); 1
stance 1
scan 5
shmget() 1
tend 7
reaches 2
summarizes 1
shorter! 2
said 43
survey 16
specify 10
relinquishes 1
shudder 1
workloads 14
tough 2
room 17
stack). 4
users. 1
v); 2
standards/SPARCV9.pdf. 1
talks 1
signal, 1
signaling. 1
rule 4
studying 9
scream. 1
searching 4
used; 2
supervisor 1
remaining, 1
services 1
scheme 6
strictly 2
scheduling? 1
short) 5
terms 10
react, 1
supports 5
shortest, 1
satisfying 2
swaps 3
speculation, 2
relocation, 5
signal() 4
translated), 2
rotational 1
stands 1
works 54
victim. 1
stated, 2
task, 5
structures. 22
uses 70
running). 2
super-linear 1
section? 4
see, 15
users: 1
surprising, 1
remedy 2
set-it-to-1 2
script 2
stringent 1
segmentation). 2
simple 196
simpler. 1
read? 2
sibling 1
switching 17
scaling 2
system) 1
spring 1
rely 5
significant 4
traversals 2
than 149
seconds. 3
starts, 3
world. 3
vmalloc, 1
stored 15
test? 2
thanked 1
that. 9
structure 73
that’s 8
surface. 1
sections, 2
segmentation; 2
valuable 3
surround 2
reply: 1
shell, 5
structures: 2
segmentation.py 5
six-level 1
section 55
simply, 4
reasons 6
similarly-named 2
tables), 1
scheduling; 4
system-call 5
step). 1
remain 8
sad 4
that: 3
tries 41
state, 13
vruntime 10
studied 5
utopian 1
sub-jobs, 1
the?? 1
— 131
surprise: 1
see). 1
seminal 1
virtually 9
suspend 2
shown), 1
responsible 6
stub 1
self; 2
semantics. 2
skimmed 1
sleep 30
reclaiming 1
simpler, 2
targeted 1
scheme, 1
task; 3
see 272
strategy 6
single-processor 5
replace 9
sanity 1
turning 9
step-by-step 2
sub-job 3
variable-sized. 1
succeeded, 2
want 50
ticket; 2
’94. 1
systems? 2
seeds 11
served 3
waiter 2
t. 2
threads 197
rich 2
suffers 5
simple: 39
sequence, 8
sensible 4
skips 1
redirected 2
simulated 1
tell? 2
scientific 1
small 61
thankfully, 1
strdup() 1
seems 12
site: 2
replacement, 3
scans 1
security 21
subjunctive 1
variable: 2
store 24
successfully, 1
way) 1
tlb.c, 1
’Precise’), 2
terminate. 3
segments. 3
shaded 1
web. 1
table: 3
tick 1
robin, 2
supports. 1
simulate 3
serve 2
sentence 1
slower. 3
reference, 2
slower, 1
textbook 1
second-level 3
that? 7
student, 3
sends 3
slices, 2
report 9
them 99
typing, 1
sense: 2
subsections 1
varying 2
streams. 1
switch? 2
wc 11
“Evaluation 1
terms, 3
topic 18
ship 1
simultaneous 1
worked 6
terminating 5
tick-by-tick 1
surfing 1
size) 5
switch, 8
shade 1
routine 60
separate 17
region). 1
slowly 12
solve? 1
snooping, 1
thesis 1
section, 24
succeeded. 1
sense? 1
smaller? 1
then? 2
requests 28
unpark(threadID) 2
serves 6
suc-cessfully 1
sub-microsecond 1
via 53
winning 7
“Man-Computer 1
them) 1
totaltickets); 1
shoppers 1
size. 7
system, 65
written? 2
terminology) 1
times) 1
topic, 4
slides 1
swpd 1
shared. 1
sad. 3
serviced 4
remain? 1
sockets. 2
sort 6
so). 1
thorough 2
segment. 8
success: 2
setup, 2
somewhere 4
thr 7
require? 1
updated 8
set, 3
supply 1
virtualization; 1
worked. 1
switch 62
“Program 1
“There 1
sizes; 2
table) 2
x[10]; 1
thread!) 2
to 4068
try 64
shows 94
two-level 7
slow? 1
taking 11
side 4
shortly 1
simulation 7
software? 1
spaces) 1
software. 2
thread-local 2
segments; 1
short-lived, 1
speeding 2
thr_join() 3
reserve 4
valid). 1
severe. 1
sure. 2
same 145
visualization. 1
synchroniza-tions 1
worker 6
themselves). 1
synchronization 26
sloth” 1
take, 3
yet: 2
threads). 2
together! 1
trade-offs 5
touch 4
single-queue 4
units, 2
small/random; 2
tcsh, 2
remains, 1
simplicity. 3
sleep, 13
sounds. 1
sparc/ 2
somewhere... 1
thread-safe, 2
segment’s 1
should. 1
splintering 1
thumb. 1
reside 11
values). 2
sharing, 3
surely) 1
saying; 1
void. 1
working-set 1
“Volume 4
there? 4
system.” 1
solid-state 1
technology-driven 1
yourself2! 1
throughput?) 1
such 274
tradeoff 1
translations! 1
six 3
snuck 1
used. 15
tends 5
remembering. 2
site 1
sleeping. 4
sparked 3
spin-waiting. 2
soon-to-be-faulted-in 1
serviced, 1
signal(). 1
spuriously 2
tight. 1
responsive. 1
thus, 54
variables. 13
shell 12
systems), 1
volatile 5
wrap 2
“Why 2
this? 5
systems: 5
solution, 10
zero, 3
thrown 1
scheduling 102
supposed 4
tell 28
transition 6
trap, 3
sleep; 4
sources 6
testing 2
specifically, 13
slice), 2
size: 16
spent 7
spin. 4
specifics 1
user 117
signals, 2
show 24
starve: 1
time? 9
running; 3
ticket, 2
vice 1
shrink) 1
tail_lock; 2
simple. 10
wreak 1
“looping 1
thread? 2
taken? 1
zeroing. 2
solve 20
scribble 2
symbiotic 1
times 40
tennis 1
treasure 1
trees 4
system. 57
repeatedly, 3
speeds 4
sizeof(node_t); 1
slow 15
spurious 2
stateful 2
think 66
spins, 2
utilizing 4
simulating 1
simplified; 1
state. 10
satisfactory 1
times, 10
time! 2
view, 1
vulnerabilities. 1
taken: 2
simulations 4
wrote) 1
“out 1
tasks, 1
’03. 1
threads, 38
someday). 1
se. 1
tn 2
text, 2
trickier. 1
software) 2
underly 1
systems; 9
replace? 3
speedup. 1
slabs 1
slowly; 1
storeconditional) 1
statements 1
those; 1
stale 1
vector, 1
sitting; 1
single-entry 2
steps 3
satisfied 1
together, 3
times. 7
wakeups 2
task: 1
slip 1
x-axis 1
“real-world” 2
tcsh 2
’Approximate’, 2
thread” 1
sound 5
seconds). 1
to? 2
trouble. 3
solution). 1
undertake 1
unexpected. 2
unrealistic 2
report? 4
stack. 17
slots 7
small, 7
streaming 2
thus: 1
static 21
starvation. 7
violations). 1
sizeof(x)); 2
situations. 1
virtual 253
stitch 1
scaling; 2
tolerate. 1
tirelessly 2
warmed 1
taught?! 2
slowly. 2
y-axis? 1
“steal” 1
technique, 2
“010101”, 1
specialize 1
tickets 30
security. 1
together 12
twenty 1
system’s 3
some 505
standpoint 1
space) 4
small-sized 1
strings 1
update 54
to; 1
step, 5
starved 1
virtualized, 1
slowdown 2
sizeof() 7
waitpid()); 1
storeconditional. 1
scenarios), 1
trace? 2
together. 5
weirdly 1
terminated 2
softwaremanaged 1
yourself! 3
“tried 1
technologies. 1
“Guide 2
splay 1
timeline 3
traces 3
type) 1
requests? 2
segments 22
taken 16
soon-to-be-exec’d 1
status 5
stacks, 3
sophisticated 13
stuck 16
usage. 4
too, 2
steal 3
tool 15
snippet: 3
slots, 3
still 59
wake? 1
strange; 1
translate 19
terribly 1
well, 15
solely 1
traces. 2
× 1
second 78
“Hoare” 1
sptr 2
times), 1
this: 49
translations 22
unasked 1
research. 1
selection 1
takes; 1
strcpy(dst, 4
smallest 5
starting) 1
soup.” 1
succeed. 3
val 2
virtue 2
store, 2
tracked 2
so; 2
that 1398
snatch 1
strategy), 2
weaknesses. 1
studies. 1
translations, 6
testand-set! 1
well-meaning 1
solution; 1
track; 1
’d’ 1
see? 6
“She’s 1
stacks 4
totals 2
thousand, 1
trapframe 1
uncaught, 1
resides, 1
sense?) 1
stronghold 1
task 16
sneaks 2
starve 2
software-managed 5
suite 1
vastly 1
vmstat 2
strict 1
tract 1
things); 1
so? 5
stuff 8
while. 2
solution 44
true. 3
subsequent 24
them? 3
when. 2
translations. 6
“Exterminator: 1
segmentation. 3
space, 50
“Survey 1
stood 1
transformation 2
three: 1
trust 14
under- 1
resources 6
setpark(); 2
tests 5
specific. 1
statement 3
soon-to-be-run 1
structures 59
vice-versa. 1
switches 14
waiters 4
stride. 1
translated, 1
thinks 7
space), 4
subtract 1
winter. 1
somewhere. 3
tuned. 2
subsystem 4
workings, 2
trapped 2
“Inside 3
segmented 4
things 46
species, 1
“hello”; 1
store-conditional; 2
translation-lookaside 1
ticket. 2
undergraduate 4
respond 1
sharing: 1
text. 1
type 73
spinning. 2
stolen 1
spans 1
subtleties 2
voo-doo 2
tail 5
waiting, 5
treating 2
threadID, 2
suddenly 2
special 22
study 52
wondering: 4
sounds! 1
type, 4
subtle 1
world\n", 1
tread 1
wrappers, 2
self)) 2
thread), 2
specifically 6
“second-system 1
straightforward. 2
transparently 3
tickets; 1
underlies 2
shells; 1
return; 10
theme 6
unmasks 2
stage 3
speculative 1
storage 12
swapoff. 1
vruntimei 2
talking 5
wake(address) 2
tree. 5
tickets: 1
sz; 1
specification 1
success 9
work-stealing 2
source, 1
typeset 2
succeeds 3
“Intel 4
yet. 4
tree 15
zero 10
threshold 11
specified, 1
“walk” 1
strategies. 1
unit”, 2
shrink). 1
trap 52
root). 1
there; 5
unpack 2
too 85
starvation: 1
states 15
straightforward: 6
symbol. 1
wait. 2
task). 2
way. 6
trees; 1
tmp 8
suggested. 1
starts 25
world? 1
space1 1
underneath 2
super 2
“Is 1
shifting 1
tricks 2
’14 1
through, 1
speed-of-light 1
strength: 1
unlock? 2
similar), 1
table 175
unblocked 2
routine), 4
thereby 1
unpark() 2
toolbars, 1
stated 2
stays 4
stringing 1
system? 4
waitpid() 2
technology. 1
well-regarded 2
trends. 1
which, 4
suitable 2
world” 1
specifying, 1
undoes 1
surprised. 2
state 73
“Segmented 1
short, 3
tricky: 1
’new’ 2
timer, 4
spending 3
strings? 1
user, 3
simplified 2
tempting 4
undesirable) 2
running: 1
thr_exit(); 1
unrealistic? 1
topics 5
unsafe 4
strlen(), 1
struct 49
wanted 3
termination 4
to. 4
systems, 49
under 18
whole 5
switching) 1
yet), 1
stack-smashing 1
uniform. 1
systems). 1
statement, 1
“With 1
shortest 2
type. 1
’peek 1
tip 2
splitting: 1
strong, 1
valid; 1
software; 1
terminal, 1
unique 7
runs...) 1
thread; 7
stopping 4
trade-off: 1
unused. 2
suffering, 1
stuck; 3
wary 7
then; 1
system” 1
unfairness 4
tools 16
wine, 1
tandem 5
yourself. 1
statically-initialized 1
units; 4
t; 2
stay 3
“owned” 1
shutdown 1
understanding: 2
’self’ 2
today, 4
sponse 1
subsystem: 1
value. 12
somewhere). 1
test-and-set.s. 2
unqualified 1
sampling 2
threadID. 2
savings 9
transaction, 2
upcoming 1
suggests 2
study, 3
water 1
upon 40
tables) 2
unrealistic; 1
too” 1
within, 1
zplot. 1
str); 1
techniques 24
upon, 1
terrible 3
storage, 2
→ 17
side). 2
unified, 1
“21” 2
too; 1
staring 1
subtle: 2
vi, 1
sorting 1
tests), 1
untimely 6
strange 8
ticket.s. 2
say. 2
translated 3
sum 3
studying. 1
therein; 2
widely), 1
use_ptr 2
take? 2
update(counter_t 2
transparent” 1
worst 7
“Electrochemically 1
strive 5
telling 1
uses. 3
storeconditional 1
test-and-set 15
signal?? 1
unknown 1
“Introduction 3
topic. 1
stateless 1
suffering 2
vmstat, 1
space: 2
thing. 2
valgrind 15
stride) 1
tidbits 2
sbrk) 1
transparent 4
surprising? 2
succeeded 4
think, 2
success, 5
won’t 21
useful. 10
update; 1
truth: 2
years; 2
“I 1
strong 2
variables), 1
strategy. 1
test-and-set.s? 2
signaling 17
unlock(&m) 1
“One 1
total) 2
work 150
summarize, 1
workload 14
specific 21
vs. 8
stronger 2
wait-for-me.s. 2
scales 6
warm 3
swapping, 1
then 227
though; 4
takes, 1
successfully 5
variables) 1
was 188
users, 1
way: 5
“Operating 2
typedef 33
virtualized; 1
structure, 24
studies 4
there! 1
simpler 6
unlock(lock_t 10
traffic. 1
“Priority 1
things; 3
world; 1
thinking, 2
spin, 2
time-shared 2
stronglytyped, 1
time-slicing. 1
told 2
too! 2
schedulers) 1
stdlib.h 1
top 32
toughest 1
there). 1
thoughtful 1
tech 1
threads? 4
three-queue 1
variants: 1
time; 16
val; 2
while2 1
“fault.” 1
unfair, 1
visible 2
style, 1
walling 1
simplicity), 1
unmodified, 1
sizes. 3
“Reese’s 1
worry 21
support, 16
thrashing 2
surface 3
stuff, 1
swapping 12
these 222
seconds, 2
stream, 2
target. 1
strings. 1
tracking 2
therein 1
suffice 3
tells 11
suit 1
vary 4
tool, 6
valid. 2
would 200
“operating 1
uniformly, 1
such. 1
submitted, 1
watermark 2
try. 1
unnecessary 1
unlikely 3
“catch” 1
yield(); 2
“crux 1
threat 1
spinning 27
threshold; 4
switches? 1
they? 2
seeing 1
warnings. 2
target’s 2
support; 4
transfer. 1
those, 1
yell) 1
temporal 7
surprisingly!) 1
virtualizes 3
trace; 1
values. 1
wreak1 1
“response”; 1
unlock(&mutex); 2
sum, 1
substrate 1
sun.com/solaris/articles/atomic 2
slice, 7
updated) 1
unsatisfying) 1
trap; 2
yield, 2
“other 1
subsequently 4
spot 2
subverted 1
swtch 1
segfault 1
things, 6
test-and-test-and-set.s. 2
survived 1
wastes 10
treats 1
yes. 3
terrific, 1
switches; 1
walks 1
though 29
transcript 1
threads); 2
unpark 2
well-known 4
summarize 5
surprised 2
slower 6
write 63
upon. 1
unusable. 1
turn) 2
yield-based 2
time-sharing 7
success; 1
stop 21
table! 1
segmentation.” 1
tables. 6
segregated 3
swapon 2
watch 5
triggers, 1
“A 15
there, 2
“B” 8
variety: 1
translation; 1
well. 30
unrealistic. 1
we’re 3
systems) 4
smaller, 1
wrote: 1
usage; 1
unusual 3
’a’, 1
time-space 2
turnaround 30
survive 2
timing 5
thing” 1
thanks, 1
tcsh). 1
sequential 8
support 110
switches. 1
twice). 1
therefore 2
whether 59
“Membrane: 1
switching), 1
vast 2
traps 5
what’s 2
up, 12
taken. 1
solutions, 3
yes: 3
used? 1
who 41
time 306
“Ad 2
turned 2
storing 1
tomes 1
swapped 12
this! 2
thing; 1
terminate 6
seriously, 3
surprise 2
swoop 1
units 1
therein), 2
why? 2
“OS” 1
synchronizations 1
waited 1
tricks: 1
while) 1
update. 1
task. 7
solves 7
you. 8
user/supervisor 1
widely 9
win 1
within; 2
use 317
“Dynamic 3
understand: 1
“Everything 2
top), 1
switching); 1
thousands 10
tested 1
tmp); 5
shown, 2
table), 1
tapes 1
that, 11
thing... 1
wikipedia 1
“RISC-I: 1
ways: 2
ultimately 1
work? 7
web 10
taste 2
something. 2
yourself2 1
systems 185
wonder? 1
valid 51
user. 7
strdup("p3.c"); 1
“Mesa” 1
users 27
tracing 6
t 10
thanks 4
threads. 19
track 27
then. 1
thirty 1
windows, 1
time-share 1
understand2 1
size 124
upper-level 2
workloads, 1
went 3
“The 40
soon-to-be-executing 4
system 363
unreasonably 1
© 21
x86)” 2
tackled 2
user’s 4
stream: 2
virtual-memory 1
system! 2
value), 3
tracks 8
them; 2
table, 26
values 75
trans- 1
threshold, 2
theory-types 2
worker(), 1
timer. 1
this, 32
unsurprisingly, 1
slicek 1
works, 15
when, 3
“a 1
sounds 6
up. 7
’04, 2
zero. 11
tail. 2
“Microreboot 1
take 97
virtuallyindexed 1
treasure-trove 1
variable, 8
therein: 2
tackle 4
vary. 2
systems. 64
transparency; 1
therein. 5
throughout 13
write, 3
to, 13
used 175
today. 6
slower? 1
written), 1
thread, 48
“batch” 1
work; 6
special; 1
updated, 2
’13, 5
’05. 1
“OSSpinLock 2
teach 1
void; 2
takes 50
trylock 4
think-ing 1
variable-sized 7
tasks. 1
vulnerable 2
t(A) 1
trusts 4
think? 1
times). 2
x? 1
upside 1
user-mode 3
today’s 2
solved. 1
“Analysis 1
three, 3
“cold” 2
workgroup. 1
spin-wait 10
uplifting! 1
“Efficient 2
’07, 2
“System 1
techniques, 7
waking, 1
techniques? 1
twice, 5
thr_join(); 1
vectors, 1
technique. 1
wall 1
targets, 1
tuning 1
thinking! 1
tip, 4
yield 21
usable. 2
v; 2
somewhere, 1
trace 24
“Towards 1
transforms 4
start. 1
state; 2
worse. 6
“He 1
“ARC: 1
“Alto 1
“Take 1
translation 46
wants 16
two. 3
thread.c 1
view). 1
terms) 1
way? 1
tasks 2
twins!” 1
three-level 1
tmp->value 2
you: 1
usual 2
variablesized, 1
sorts 9
time. 66
“Wait-free 2
upward 1
step 2
“OS”, 1
writes 21
text 9
“Control-c” 1
temporarily 5
“being 1
tree? 1
welcome! 1
uber-engineer 1
time-efficient 1
visualization 1
thus 486
ticket 27
ways, 1
two-thirds 1
technique 29
transactions 1
zero). 1
utilization. 1
variants) 1
utilized 4
specifies 5
times; 3
“have 1
useful? 1
store-conditional. 3
“Parallel 1
them). 2
yet, 10
“Evaluating 1
term 15
“commoncase 1
trees, 4
winner: 2
unsuspecting 1
time: 2
theoretical 1
time), 4
well-defined 1
there. 6
translations). 1
’95. 1
types 33
“free” 1
virtualization, 7
valid: 1
spectreattack.com 1
us 84
“modern” 1
took 16
utility? 2
sub-sequent 1
“best” 2
these, 4
zeroing 4
“E”, 2
terrific 4
“reliability”, 1
trials 2
wondering 2
timings. 1
thing: 4
weren’t 1
tiny 21
there’s 1
type). 1
’a’ 4
u 2
“glibc 2
varies 5
void 153
spinning), 2
use; 4
“parent: 1
tool? 1
vector 1
substitute 3
“emulation” 1
way 97
weighted 1
weighti 2
work. 24
workload. 6
works; 1
worry. 3
worse! 1
wrote 10
www.cs.tau.ac.il/˜shanir/concurrent-data-structures.pdf. 2
www.sparc.org/ 1
’19, 1
“Aspects 1
“Before 1
“H”, 2
“01” 1
“TENEX, 2
“A” 8
tweaks 2
workers 1
too). 2
threads) 1
wild 1
to! 1
thing, 6
understand! 2
“Earliest 1
unaffected 1
“lost” 1
weightB 1
vulnerabilities 2
stashes 1
utilization, 1
tools, 3
virtual, 1
translation. 10
there 250
thousands, 1
“Lottery 2
“same” 1
“havoc” 1
“Get 1
two-CPU 1
worthwhile 2
took, 1
throw 6
timely 3
timing, 3
tracing, 1
uninitialized 1
“Jack 1
unlocked 2
“the 1
which). 1
wait(), 6
state: 2
variants 4
succeed 2
virtualization. 4
translations; 1
threadID 2
“Mach: 1
“THE” 2
undoubtedly 2
trace: 1
woken, 2
written 18
tons 2
thinks), 1
traversal 3
this. 4
“MIPS 3
unpacks 1
“wreaked”? 1
winner). 1
warm-start 1
step? 1
versus 5
sufficient, 1
virtualized 6
trials. 1
tickets. 5
“lmbench: 1
“Test 1
unlock): 2
trading 1
wonders. 1
wrong 15
universal 1
trigger 2
total 26
“Memory 1
thread. 20
unrealistically 2
” 4
worse: 2
waste. 7
way! 1
virtualizing 14
support? 4
trick 3
tightly 1
“pinning 1
“hello, 1
“high 1
transitioning 4
worse 9
zero.” 1
waiting 94
two: 1
use, 15
towards 3
“Purify: 1
threads; 2
upper-case 1
writes, 4
straightforward 9
vruntime. 1
ways. 11
switching, 2
synchronize 2
we’ve 21
“yeah, 1
unmask 1
“reserved 2
treated 6
xv6, 1
˜mark/syscall.html. 1
years, 9
underpowered 1
unlucky) 1
transfers, 1
translation), 2
thread’s 14
x86); 2
usage 16
strangest 1
time-slicing 1
trouble 9
waits 36
system). 4
trying 15
“running” 2
trouble, 2
unlock() 14
website 2
yours. 2
unused 14
upper-half 1
upwards. 1
us, 2
you’ll 37
tried, 1
turn; 4
xchg 2
use?) 1
strategies 8
time-tested 1
unrealistic, 3
tables! 1
“starts” 2
wake 33
’15, 1
turn 32
unsigned 2
weightk 1
“Tolerating 1
’09, 1
“all 4
unbounded 1
yields 5
useful 69
uses), 1
stretching 1
timeline. 2
update, 1
tasked 1
“test 2
technology 7
terminal 4
want. 1
’w’ 1
usually 52
unused) 1
time). 3
’18, 2
“uninitialized 1
understand, 3
zeroing, 1
useful2. 1
were 76
variable-length 2
subproblem 1
top-to-bottom 1
when 480
user-managed 1
terminates 1
wasn’t 2
unifying 1
v9 1
“An 9
update: 2
too4 1
’81, 5
understanding. 1
’his/their 1
user-facing 1
when! 2
variant 3
succeeds, 2
woken. 2
transfer 10
utilizes 1
text). 2
wasted 4
way). 1
weight 1
valid? 3
values? 3
vanishes. 1
trade-off. 1
’flag’ 2
up? 3
“A”, 2
using. 2
vengeance’. 1
supporting 1
www.gnu.org/gnu/manifesto.html. 1
transformed 2
trap. 1
variables 33
uninteresting: 1
wherever 2
“B”. 2
upsides 1
variable) 1
this 1109
transac-tions 1
“Animal 1
useless 2
“CPU-bound” 1
utility 3
violation 2
suppose, 2
x86, 8
textbook, 1
trapping 3
traversing 2
truth. 1
unit) 1
whims 2
“Computer 6
versa. 1
used, 8
thr_exit() 3
transaction 4
“Performance 1
user-level 6
“Hmm... 1
variable. 8
surprisingly 7
xv6. 1
which 501
wait 53
winner 5
ubriaca. 1
unlock(), 2
widespread 1
“If 2
their 91
using). 2
virtualize 13
transfers. 1
“big 1
usermode 1
“brain 2
variable’s 1
vengeance’.” 1
vruntime: 1
vary). 1
want; 1
versions 8
unfair 2
unpark(queue_remove(m->q)); 2
word, 1
“John 1
them. 16
wait()) 1
tremendous 1
“easy 1
variety 3
years. 4
swap 34
wait(). 3
wisdom 1
watching 1
viewing 2
wishes 16
“OpenSolaris 2
“Perfection 1
value 233
thinking 23
three-quarters 1
timedlock 4
timer; 1
viewed 4
yes! 1
switched 2
weight, 1
yet 20
visually 1
unpleasant. 1
world 26
“TLB”. 1
variable). 1
up 156
two, 3
well 88
top) 1
within 89
wait(address, 2
virtualization? 1
thread 449
syscall 3
works? 3
young 3
’83, 1
“Informed 1
worst-case 5
“Time 1
wouldn’t 5
updating) 1
“too 3
useful2 1
transform 4
x; 4
yet! 1
visionary 1
you’ve 6
wakeup, 1
utilized? 1
what 280
value, 17
tables 49
“child”, 1
three 69
time) 4
various 27
waitFirst 2
wait-for-me.s 4
translations: 2
wakeup/waiting 2
visited, 1
worlds: 1
’75, 1
was. 1
“Nonblocking 2
using 140
terminated. 1
tired 1
wrapping 2
using? 2
wary: 1
weightA 1
without 70
tree, 4
walk 1
world”. 1
“1984” 1
wasteful. 2
waste 23
“Policy/mechanism 1
utilize 5
themselves; 2
to), 1
write(), 1
valgrind. 1
well), 2
won 3
way, 20
trend? 1
watches 2
www.stanford.edu/˜ouster/. 1
“A”), 1
weaknesses 1
“What 5
value) 13
ways 19
whenever 3
then, 16
written; 1
valid), 1
wide 1
world!”, 1
well) 1
tune 1
wc), 1
yielding 5
“Machine 1
“as 2
vantage 1
top-level 2
why, 1
theory 4
yeah! 1
variables, 5
works3 1
world, 6
which... 1
well-suited 2
while 170
zero), 1
turns 37
“Monitors: 1
“hello 1
trade-off 4
will, 2
therein, 2
yield() 2
variable 75
variable” 1
workshop, 1
work: 1
worth 20
well; 1
wishing 3
zsh 2
tweak 1
“Myths 2
“ready” 2
“what 1
window, 3
things. 7
’10, 4
vectors 1
vector-like 1
we’ll 112
workload: 1
wrappers 2
workers, 2
– 19
twice 5
“Premature 2
transfers 7
wished 2
thinking? 1
“Ah! 1
version? 2
worlds. 2
whatever) 1
version 31
worry: 1
x86. 1
write. 2
’93. 1
type: 1
“U 1
translation) 1
woken 13
“Aleph 1
third 18
viewpoint 1
wrangling 1
whereas 14
virtualization 20
y; 2
written, 1
’95, 2
very 60
updating 13
“at 1
trees), 1
work! 3
“Principled 1
though, 8
write(fd, 1
x86). 2
wonder 3
waste! 1
yelling 1
wrong, 4
’wreak 2
vruntime, 1
usable 2
“older” 1
tried 4
workloads. 3
“Profiling 1
threshold. 2
x86.py, 4
works. 22
won’t, 1
watch. 1
you). 1
yourself; 3
“Cloud 3
w/ 2
utilities 1
“works” 1
two-phase 6
“SDS 1
yes, 6
you, 11
worry! 2
words 2
whichever 4
work, 23
time, 75
ˆC 2
“Idleness 1
utilization 5
wait() 26
understand 112
younger 1
wreakers 1
while, 8
workload, 11
writing 21
timer-interrupt 1
’85, 1
“Making 2
“bounds” 1
was; 1
valid, 14
understandable, 1
zeroed 1
wily 2
x86-version 2
worst-fit 2
written). 1
tmp->next 4
’92. 1
“buddy” 1
“got 1
way), 1
value? 2
uniprocessor, 2
’02, 2
with) 2
yourself 7
x86) 1
x, 2
total). 1
’94, 2
“drum” 1
“hot” 2
wc, 3
values, 12
unlock, 2
’11, 2
write: 1
zombies 1
xv6 6
touches 2
“80-20” 1
“the”). 2
“privileged” 1
websites 1
virtualization). 1
unsurprisingly: 1
’68 1
x86” 2
· 4
trace, 3
“Advanced 4
years 19
“ticket-assignment 1
whatever 15
visible. 2
use”, 1
’e’. 1
yourself, 2
’current’ 1
your 201
“Our 1
traditional 11
yield.s, 2
whose 8
visualize 1
usual. 2
’mutex’ 2
zombies, 1
’c’ 3
“Shared-access 1
you’re 18
’63 3
why. 2
translation, 15
wait(NULL); 3
utilized. 1
“But 1
’c’, 1
“Cooperating 7
“Someone 2
’threshold’, 2
’b’, 2
worker, 2
trials, 1
warmup 1
“It’s 2
value; 22
“Load-Link, 2
“Improving 1
“Understanding 5
“History” 2
“...with 1
wreak, 1
trivial 2
“first-in” 2
vision 1
“One-Level 2
“Multics: 1
“goodbye”. 1
“Javascript: 2
“Change 1
www.ajwm.net/amayer/papers/B5000.html. 2
typically 1
“longword” 1
weight0 1
“One-level 2
“PThreads 2
the 8323
“perfect”. 1
“Mac 1
“Extending 1
x-axis, 2
typing 9
“prove” 2
whet 1
“Virtual 8
“cooperating 2
threaded 2
“Run-Time 1
“Hints 3
x. 2
unfortunate 5
while? 1
“bad 1
“direct 1
three) 1
“Structure 1
“Information 1
you 995
“condition 1
x86 23
use. 16
“double 1
“Valgrind: 1
“Just 2
why 58
yuck! 1
“discovered” 1
through 56
x86-64) 1
user-defined 2
“fault” 2
“correct” 4
“My 1
“limited” 1
zombie 2
usually, 2
timer 36
“private 1
“out-of-bounds” 1
“RTFM.” 1
“ten-items-or-less” 1
“100x” 1
varied 2
times? 2
“reasonable” 1
“Transaction 2
“CPU 1
view 14
tive) 1
“Using 2
“Experience 1
wakes 15
today 7
“bad” 3
“Hoard: 1
weights 2
touching 1
“jemalloc” 1
“Ils 1
“just 3
track, 1
weird 3
“Pthread 1
} 271
“smart” 1
translates 5
we’d 9
“Relocating 1
’Classic 1
true! 1
“Reminiscences 1
’pedantry’ 1
ugly 3
“Time-Sharing 1
“Bell 1
uncommon), 1
we 992
• 69
“core” 1
“Converting 1
winner) 2
where 166
underlying 9
“first 1
“Observations 2
whom 2
units. 3
“fun” 1
will 580
“Practical, 1
wired 2
urgent, 1
“lock” 2
window 3
“T”, 2
usage, 2
wish 26
“loop.s”. 2
wise 1
“daemon”, 1
using; 2
with? 1
“turn” 2
wondered 1
“interrupts” 1
value); 2
words, 5
worked, 2
“main: 14
worst-fit, 2
variable; 2
writes: 1
“process 1
worstcase 1
vector. 1
x 12
“test” 2
worthwhile. 3
violation, 2
yield.s 2
wrong. 3
virtual-to-physical 6
you; 1
www.takeourword.com/TOW146 1
virtualized. 1
zeroes 2
y-axis 2
voluminous 2
|| 2
wait(); 1
}; 8
wait, 4
’89, 1
waking 5
’98, 1
weakness 1
’b’ 1
“Algorithms 2
“Dahm 2
“They 2
← 2
{ 281
were. 1
with 638
’ 11
winner. 2
“2Q: 1
word 14
within. 1
“Atomic 2
workflows. 1
“Cold-start 1
worried 1
working 28
“It 2
worse, 8
wrapper 3
“KASLR 1
wrapper; 2
wreaked?” 1
“On 2
write() 5
www.nds.rub.de/lehre/seminar/SS06/Werthmann 1
“Solaris 3
you? 9
x) 1
“Solution 2
yours: 1
“Concurrent 2
“Symmetric 1
you’d 9
“H-Pucks”) 1
| 8
“You 2
“Multilevel 1
“Fact 1
“atomic 2
“Programming 7
“Think 1
“implements” 2
“foo” 1
“baby 1
“interactive” 1
“real” 3
“demon”, 1
“it 1
“ease 1
“on 1
“familial” 1
“page 1
“right 1
“right” 1
“yes.” 1
“setting” 2
− 7
