$0x03, 1
$0x03e8,%eax 1
(2134) 6
(32768) 1
(7030) 1
(And 1
(EEVDF) 1
(MMU); 1
(P=1), 1
(TestAndSet(&flag, 2
$0x1 2
&mutex); 8
(212 1
(5 1
(PowerPC), 2
(Run 1
(TCBs) 2
(at 12
(average: 1
(indeed, 4
(insert 1
(latter) 2
(many 4
(minimally) 1
(of 10
(original 2
(rc 8
F 8
%edx, 1
%esi, 1
&rvals); 2
(01) 1
(14th) 1
(28 1
(64 1
(A) 2
(ASID) 1
(CanAccess(TlbEntry.ProtectBits) 4
(P1) 3
(PCB), 2
(SN) 1
(a) 5
(broken) 1
(c2), 3
(causing 2
(kernel) 1
(milliseconds); 1
(new 7
(ns) 1
(pid:29267) 1
(pid:29384) 1
(potentially), 2
(repeat) 8
(roughly 2
(simple 2
(stuck 2
*cond); 2
*rvals 2
*src 3
-nw 1
0.4 1
0x068, 1
%eax). 1
(200 1
(CTSS), 1
(P=0), 1
(PID), 1
(PTE) 9
(R 1
(Tc2) 1
(a[0]) 2
(after 4
(among 3
(bytesLeft 1
(eventually) 2
(io.c) 1
(ldstub); 2
(m->flag 2
(namely, 1
(p6, 1
(rather, 1
(results 1
(studied 1
(too 1
(turned 1
(void 12
(when 3
*cond, 2
 32628
4 23
T 10
&stack); 1
(-T). 1
(/tmp/file) 1
(010101), 1
(224 1
(512 2
(8 1
(@PFN:100) 1
(KNUTH’S 1
(MMU) 1
(PTE.Present 2
(SJF), 1
(TD 1
(This 1
(Thread 2
(Volume 1
(alas). 2
(because 8
(created 1
(finally) 1
(first-in, 1
(hopefully 2
(mutex->flag 2
(out 3
(seconds) 6
(there 3
(this 4
(thread 6
*p 6
20 1
B 13
#1: 2
#define 2
(-P) 1
(256) 1
(PA), 1
(SSDs) 1
(TlbEntry.PFN 4
(VP 3
(address 2
(bash?) 1
(done 4
(just 5
(max 2
(my 1
(myturn). 2
(p2); 1
(physical) 1
!StoreConditional(&lock->flag, 2
"B"); 4
%d)\n", 4
((flag[1-self] 2
(0x1) 2
(9.2) 1
(B 3
(Figure 45
(OS 1
(PDE) 2
(TLB 16
(Thousands) 2
(above), 1
(conservatively); 1
(cpu.c) 1
(free 1
0x8049a1c 6
1-byte 1
100ns 2
101 4
110 2
13. 2
14KB 2
12 19
C 16
#2: 2
%dx. 2
%eax, 8
(-q) 1
(16 3
(Bad 1
(Blocks) 4
(Chapter 2
(LAUER’S 1
(MLFQ). 2
(MQMS) 1
(Offset 1
(P). 1
(PTE.Valid 4
(PWT, 1
16 9
"hello"; 3
&lock); 2
(11) 1
(B) 1
(K 1
(MRU). 1
(P2) 1
(PDE.PFN 2
(VPN). 1
(a3). 1
(b) 5
8 22
%ebx 1
(0, 3
(20%), 1
(3) 2
(G), 1
(LRU) 1
(Linux, 1
(LoadLinked(&lock->flag) 4
(PC) 4
(PSJF) 1
(PTIndex 3
(S) 3
(With 1
(dare 1
(fill_ptr 1
(four 1
(full) 1
(header_t 1
(often 2
(p2.c) 1
(p5). 1
-M 15
#include 62
(-i) 4
(0x200000), 1
(120−0)+(20−10)+(30−10) 1
(7.1) 1
(Advanced) 1
(CanAccess(PTE.ProtectBits) 4
(HW 1
(London), 1
(Process 1
(c3) 1
(ironically) 1
(mutex, 8
(next 1
(nice 1
(t1.c) 2
(that’s 3
(untimely?) 2
(user 3
(which, 2
*q, 4
*value 2
-1) 1
-l. 1
0). 2
00007f4e7d2d0000 1
07 1
0x300, 1
0xC0000000, 1
1-GB 1
(particularly 7
(read 1
(reduced 1
(si 1
(too!) 2
(we 2
%edi 3
&args); 4
&m); 3
(20-ms 1
(400)2 1
(4200) 1
(A’s 2
(C, 1
(Measurement) 3
(O 1
(RSS). 1
(SJF, 1
(T2) 2
(pid:29146) 4
"A"); 4
$0x1, 6
%d 5
(10 1
(1000 1
(4KB 1
(9.1) 1
(A 14
(Bounded 1
(Niceness) 1
(R/W) 1
(Ready, 1
(TM 1
(Timer 1
"A" 1
$0x0) 1
% 8
%ecx 1
(-p 2
(256 1
(AS) 1
(CompareAndSwap(&lock->flag, 2
(No 1
(PM 2
(Page 1
(Tc1), 1
(VAX/VMS) 1
(VPN) 2
(argc 2
(ignoring 1
(also 7
(an 2
(done) 2
(generated 1
(hence, 2
"hello 1
(15th, 1
(MIPS), 2
(Simulation) 16
(T1) 4
(VPN=1, 1
(assume 2
(c4). 1
(depending 2
(even 3
(forever), 1
(hardware 1
(main) 4
(normally 1
(slow) 1
(something 2
(start 2
(trustingly) 1
(who 2
*c) 18
*q; 2
--l0 1
2 25
!= 7
"wc" 1
%ax 4
(1e7) 2
(APIs) 2
(BFS)2 1
(P1), 1
(Q0), 1
(RDLK) 2
(THE), 2
(c1–c3). 1
(effectively 1
(Right) 3
(September 1
(TestAndSet(&lock->flag, 2
(VPNs 1
(Virtual 1
"fork 4
(1110) 1
(21) 1
(22.1) 1
(AMAT) 1
(C) 1
(L 2
(PCB). 1
(PDIndex 3
(PTE): 1
(Pmiss 1
(SJF) 1
(VM) 1
(VPN=06), 1
(a[3] 1
(again, 3
(c) 3
(c2). 2
(c4), 1
(clearly 1
(current) 1
(generally) 1
(highest 1
(minus 1
(regardless 2
(starting 3
(i.e., 96
(incredulous) 1
(interrupt) 1
(modified), 1
(note 4
(older 1
(our 4
(p1), 1
(p1– 1
(queue_empty(m->q)) 2
(rc_wait:29267) 1
(rc_wait:29384) 1
(requiring 1
(sometimes 10
(thank 1
(v 2
*H, 4
*old_ptr 2
*p); 1
*worker(void 1
-c. 1
./p1 2
./random 3
.globl 1
14 14
// 294
 26
$0x1,%eax 4
&& 2
(24113) 5
(Code) 8
(Logical) 1
(MMU), 1
(PFN 2
(TestAndSet(&m->guard, 4
(assert(hptr->magic 1
(atomic_add_zero 2
(include 2
(lock-holding) 2
(probably) 1
(pthread_create) 2
(thus 9
(“0101”th) 1
*ptr, 5
, 15
--b0 1
-S, 1
00, 1
00007f4e7cf06000 1
0th 2
0x800, 1
10+20+120 1
100+110+120 1
1074 2
12) 1
"usage: 2
%ecx, 1
(-s) 3
(34KB), 1
(ASLR). 1
(Again) 1
(COW 1
(Good 1
(P0) 1
(StoreConditional(&lock->flag, 2
(Tc2 1
(VPN), 2
(allocated 3
(a 21
(assumes 2
(available 1
(either 3
(fun!). 1
(hopefully) 3
(but 14
(c3), 1
(especially 2
10 21
"wc"... 1
%ebp, 1
( 6
(*start_routine)(void 2
(-s 2
(28KB) 1
(7.2) 1
(P0 1
(U/S) 1
(VA) 2
(again 3
(arbitrarily; 1
(c1, 1
(rc_wait:%d) 2
%edx 1
%esi 1
%eax,0x0(%ebx) 1
%ebp 1
(-1KB) 1
(-p). 1
(3764 1
(4 3
(4088 1
(As 1
(Gulps) 1
(KASLR). 1
(Left) 3
(P); 1
(PD 2
(PID). 1
(Proc 2
(Software) 1
S 28
$0x0,(%edi,%eax,4) 1
%bx 2
(-a) 2
(232 1
(ARM). 2
(Hardware) 1
(P2), 1
(PDE.Valid 1
(a.k.a. 6
(but, 2
(evicts) 1
(counter 17
(freeing 1
(get 1
(load 1
(myarg 2
(onto 2
(pthread_join) 2
(via 6
*arg); 4
(https://github.com/remzi-arpacidusseau/ostep-projects) 1
L 17
%eax), 1
(117). 1
(2012-01-30-1-g1c41342) 1
(BKL). 2
(BSD). 1
(B’s 2
(G) 2
(LFU) 1
(P 1
(PDE). 1
(VPN=08). 1
(Virtual) 1
(a[7] 1
(curr->key 4
(easily) 2
(erroneously) 1
(formerly 1
(its 2
(long 2
(modulo 1
(note: 2
(probabilistic) 1
(probably), 1
(switching 1
(target) 1
1024 10
-m 3
(assuming 5
(bytes 2
*child(void 3
*hptr 1
(with 21
22 1
#3: 1
%ebx, 1
(26 1
(4096), 1
(CPU 2
(D); 1
(Line 5
(S), 1
(Spring), 3
(Tc1 2
(a2), 1
(instead 1
(limit) 1
(line 3
(maliciousness) 1
(p2.c), 1
(still 1
(swapd) 1
(worst-case 1
(ready 4
*new 4
& 29
(1024). 1
(104) 1
(I/O). 1
(LDE) 1
(OS)3 1
(R, 1
(TLBs) 1
(char 8
(due 6
(lazily) 1
(p4.c) 1
(pause 3
(potentially) 1
(realistically, 2
(returning 2
(t0.c) 2
(taking 2
(think 5
(web 2
*curr 4
*kstack; 1
(spinning 2
1234567 7
16.7 1
18.5 2
19.4 1
1960’s. 1
1970; 1
1980’s, 2
(size: 1
(stride=40) 1
(unrealistically 1
(wait 1
**) 4
-5; 1
(c1), 1
(code, 7
(continuing) 1
(discussed 1
(word 3
3 1
(C 1
(DEC). 1
(Hardware-based) 1
(LW 1
(STDOUT 1
(VPN=06, 1
(a.k.a., 2
(flag) 2
(hence 1
(mentioned 2
(most 2
(stride=200) 1
(to 10
18 4
0. 11
(if 13
6 22
PAGING 21
&oops; 2
&x); 1
(-M 1
(-m 2
(./x86.py 4
128, 1
./x86.py 14
-P 19
(count 8
(during 1
(emacs 1
(for 24
); 1
*mem; 1
*next; 6
*q) 2
-i. 2
/bin/ls. 1
0(%eax) 2
0.001), 1
0000000000400000 1
04 2
0x000, 1
0x7ffe45522e94 1
10.5 1
100%. 1
100s 1
1030 1
00007f4e7d508000 1
(middle 2
(in 45
(making 1
(mutex); 6
(n) 1
(p2), 1
(part 2
(sorry!). 2
(whether 2
*), 2
**old, 1
*L) 4
*chan; 1
*tf; 1
(pid:29147) 2
(kernel 6
! 2
15, 7
(free) 21
(gadgets, 1
(int 6
(left 1
(nearly 2
(quantum 1
(quickly) 1
(including 10
*mutex) 12
(stop 1
+ 45
I 26
(-w) 1
0x8049a1c, 8
110, 1
*consumer(void 5
1; 42
-g 3
(usually) 2
(v1) 3
(1) 13
(100) 1
(Editors 2
(PA) 3
(Q2). 1
(ROP) 1
(always) 1
(bugs) 1
(flag 4
(imagine 2
(into 4
(non-restricted) 1
(releasing 1
(source) 1
(they 3
(way) 1
*L, 8
"common.h" 7
*) 23
-15 1
-F 3
-f 1
1024, 1
12(3), 2
120 9
12000 1
135: 1
14. 4
15.1. 1
15.3, 1
15KB 7
2.3 1
2003. 4
0+ebx 1
-Wall 7
(left). 1
*producer(void 5
(i 19
(implicitly) 2
(implying 2
(labeled 6
(ld.so) 1
(locked). 2
(pid:29266) 2
(pid:29383) 2
(remember: 2
(shaded 1
(thanks 1
(turn 2
(“Buzz 2
*(*start_routine)(void*), 2
*attr, 2
*c); 1
-> 10
0-9), 1
(A, 5
(FIFO) 2
(M 1
(PFN) 6
(RR) 2
(SQMS) 1
(Tp) 1
(VPN=07), 1
13.5 1
201 4
1) 52
-p 44
(lots 1
(managing 2
(non-paged) 1
(notably) 1
(note, 1
(one 6
16.1, 2
!zero, 2
(VPN 14
-I 6
(and 111
M 20
%eax,8049a1c 4
%esp, 1
%lld\n", 2
&rvalue); 2
(1 1
(100 4
(32-bit 1
(Another 1
(CFS), 1
(C’s 1
(MFU) 1
(NOT 1
(Tc1) 2
(a[8] 1
(another 1
(each 2
(global 3
(non-contiguous) 1
1-second 1
/dev/zero 1
/proc/meminfo 1
-R 13
(right) 2
(sched 1
(turning 2
(virtual 1
*parent; 1
*tail; 2
-20 2
-i 18
(approximate) 2
(atomically); 1
(do 5
(initial) 1
(let’s 4
(likely) 1
(lowest), 1
(more 3
(mutex 2
(myarg_t 4
(new) 1
*dst; 1
1KB. 1
0); 8
0.6 1
0x00000000, 1
0x03e8, 1
0xBFFFFFFF 1
1000s 1
112 2
10.1: 1
+= 9
0KB 13
0x0DC0. 1
0x7ffd3e55d2b4 1
0xC0000FFF 1
(only 5
(other 1
(sometimes, 1
(stride=100) 1
(upon 1
(use_ptr 1
*mythread(void 12
# 16
%eax 24
%edi, 1
(-n 1
(0xC0000000 1
(101) 2
(2) 4
(34K) 1
(Alpha), 2
(DMA) 1
(Lines 6
(NULL 1
(PFN). 1
(PTE.PFN 2
(R) 1
(T2), 2
(Third 2
(Tp). 1
(about 1
100) 3
./main-two-cvs-while 2
-r 5
(or 83
%d\n", 9
%dx 6
&; 1
(-L 2
(-c) 1
(-l 4
(117 1
(@PFN:101) 1
(FCFS). 1
(Linux) 2
(MLFQ) 1
(OS). 1
(PCB); 2
(PFN), 2
(STCF) 2
(Success 4
(all 6
(almost) 1
(bigger) 1
(c->local[cpu] 2
(given 1
(long) 1
(mem.c) 1
(p2). 1
(result: 1
(not 20
(quite) 1
(by 13
(double 1
(job 2
(literally) 2
(new_head 2
(p1.c) 1
(p4). 1
(preempting 2
(pretend) 1
(probably 1
(remember, 1
(size 1
(too) 1
(usually, 1
*x); 1
(using 9
(version 1
*d 1
*thread, 2
--tool=lackey 1
-10 1
(perhaps 7
*value) 2
2.2: 1
2.5). 1
(virtual) 3
(you’ll 1
*malloc(size_t 1
*mutex; 2
*new); 1
-k 2
-t). 1
.... 1
/proc/meminfo; 1
0,0,0,0,0,0,1? 1
0x200000. 1
10). 3
1000). 1
107 1
13.1), 1
16.5. 1
..., 2
* 17
**value_ptr); 2
*abs_timeout); 2
*old_ptr, 2
-1, 1
-= 1
1111 7
0; 116
0x30 1
0x700, 1
0x7ffe1033b8f4 1
100%), 1
1028 1
110000) 1
143012 1
16.6 3
17.5 1
18.4 2
19.3 1
1: 7
2.1: 1
2.4). 1
2000) 2
20000000) 2
22.9 1
26.5 4
16384, 1
"common_threads.h" 4
%esp 1
%p\n", 4
(24114) 5
(32 2
(August, 1
(CFS) 2
(Dynamic 2
(PTEs) 1
(Success, 4
(T1 2
(Tarrival 1
(atomic_bit_test_set 4
(binary 1
-A 6
-X) 1
--leak-check=yes 2
-C 6
23254, 1
25% 1
137, 1
22.10 1
22–23), 1
15. 1
(similar 3
(somewhat) 1
(that 5
(tmp 1
(v2) 1
(va.c) 1
(vruntime). 1
(wc). 1
(Without 1
-B 4
17.4. 1
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 1
*x 3
--tool=helgrind 2
-1); 1
-5 1
-D 154
... 84
128) 1
(myturn 2
1234567)) 1
(called 9
(cleared), 1
(continue 1
(curr) 4
(described 5
(dramatic 1
(hex 2
(highly 1
(holding 1
24KB 3
15.2. 1
16.1. 1
//acquire 4
./multi.py 4
./p2 1
0,0,0,0,0,0,1:0,0,0,0,0,0,1:0,0,0,0,0,0,1 1
0,0,0,1,0,0,0:0,0,0,1,0,0,0:0,0,0,1,0,0,0 1
00007f4e7d932000 1
*/ 16
(array-based) 2
-b 3
170 3
1959 1
1968 2
2017. 2
29.1. 2
3Like 1
3a); 1
4.6 1
44000 1
4KB). 2
13.2: 1
(pointed 1
(recall 1
(roughly) 2
(size=200) 1
(VirtualAddress 9
26.6 4
14.4 1
(say, 11
(like 5
(modern 1
(once 4
(threads.c) 1
08 2
0x00000000 1
0x1095afe50 1
0x400, 1
0xFFF. 1
1. 43
*c, 5
*old_ptr; 2
/ 1
0.10). 1
(it 12
(lock->turn 2
(no 4
(nods) 1
(non-toy) 2
0: 4
13 93
13.2 2
4MB), 1
137298 1
-a 41
*(*start_routine)(int), 2
-c 22
-pthread; 2
.EXE 1
27.5 2
28.4 2
29.3 2
29.9: 2
2: 3
30.10: 1
*arg) 26
*current 1
*rvals; 2
27.4 4
16K 1
1). 6
100. 6
12:6, 1
13.2; 1
13.3: 1
15.1: 1
15:3, 2
15KB, 1
1961. 1
-d 2
(on 11
(p.81).” 1
(p3.c) 1
14.1 1
5.5 1
13: 2
. 53
0.0 2
(such 25
(waiting 2
15.3 1
0 384
0.2 1
0x80000000 2
10.3. 1
100? 1
108). 1
11. 3
115–116, 2
13, 2
13.2, 1
132: 1
19.8 1
1? 1
1” 1
2.6: 1
20. 1
20.2. 1
2000. 9
21.3, 1
1963, 1
0-byte 1
0x200000 4
0x600, 1
1.0; 1
1.3.37 1
10) 2
1036 1
111). 1
14.7 1
15.6 2
16.5 1
17.4 1
18.3 1
26.1, 4
28.10: 2
16KB 24
17, 1
1928 1
1964 1
1:0,4:100. 1
2.4 1
16k 5
100). 2
(as 49
-1; 8
-1KB. 1
0.8 1
(where 12
(yet) 3
*cwd; 1
*input) 1
*myargs[3]; 2
*str 1
(page 49
(physical 1
(pointers) 1
(resulting 1
13:4, 2
*m) 6
10-ms 4
11916, 1
16KB)1 1
18.7 1
19.6 1
19 58
19.2 2
1960’s, 2
1990). 1
1999. 1
1KB, 1
21:10, 1
28.3 2
2004. 7
1962 2
100+(110−10)+(120−10) 1
103.33 1
105-117, 1
-L 18
-l 19
./main). 1
/* 16
-is-unsafe. 2
-u 6
22, 1
1970. 4
(scheduling) 1
--trace-mem=yes 1
1 461
15.6: 1
512 9
(see 12
17.1). 1
*ptr 9
(a[4] 1
(which 39
16 92
*mutex); 8
1] 4
109 1
30.13). 1
3 231
(pid:%d)\n", 9
1, 80
- 25
22.8 2
28.9: 2
2008–18, 5
1990s, 1
(e.g., 108
0.1 2
1124 2
0x00000FFF, 1
0) 40
-m, 1
./main 6
0011 1
0101 1
(shown 5
(simplified) 1
(specifically). 1
(stop) 1
55. 1
(that, 2
1792K 1
-S 24
(both 2
*H) 2
*argv[]) 23
*m); 1
*ptr; 6
12). 1
17.8, 1
19.4. 1
200,000, 1
21:1, 5
24(%eax) 1
25%. 1
28.11 2
(required 1
1.01] 203
--b1 1
256KB 1
29 25
2013. 4
(from 16
2 257
0? 3
128KB 1
1% 1
0x0(%ebx), 2
1.2.1) 1
10,000,000 2
1970’s 2
0110 2
-v 17
/proc 1
00000000019d5000 1
0111 1
03 1
0x1096008c0 1
19.1), 2
-s 21
(c3). 3
(c5), 1
(he 1
2-MB 1
*tmp 7
384KB 1
30.11 1
28.4. 2
(running 1
(said 2
01, 2
256m 1
29.2 4
2015, 1
(gasp) 2
2.2 2
0x1024 1
0x900. 1
1.0 1
-p) 1
22.2, 1
100,000, 1
100:100,100:100), 1
02 1
100 87
16.5: 1
(though 6
56KB 2
(unused) 6
1)) 2
10.4 1
104. 1
16(%eax), 1
16.2 2
17.1 1
17.7: 1
18.6: 1
19.5: 1
300 4
3121, 2
3412382, 1
4.1 1
4096 3
50. 1
6100, 1
202 1
(horribly) 1
200 24
2002. 1
10), 1
10. 7
1000. 2
11–12), 1
2- 1
108 11
0x7fff691aea64 1
0x80000000)) 2
10-byte 1
10.3 1
100%, 1
(value 2
1960. 1
................ 1
1101 2
1110 2
(hint: 6
(i); 1
(known 1
(or, 5
(real) 1
(reduction 1
(running, 2
(runtimei 1
0] 4
26.4 4
29.8: 2
64GB 1
22.11 1
(int) 10
(large) 2
(log2 1
(marked 1
(now 6
(privileged) 1
(sadly). 1
(some 1
(what 4
(without 1
(write) 1
*head 1
6.4 2
11 110
(yes, 4
1960’s 5
./p3 1
-t 20
./p4 1
2.4: 1
-n 19
0x37) 1
0xC0000000 2
1.0, 1
10.2: 1
10:1,10:100). 1
(say 17
(store 1
(tiny) 2
(total) 1
(use 1
220 1
24. 1
2501, 1
26, 1
29.10: 2
2KB), 1
12, 2
12-bit 2
15) 4
16KB; 1
17:10, 1
(usually 7
(v9 1
(we’ll 2
). 3
*args 4
1KB 13
00 4
12 89
0.03 2
20, 3
39 11
1969. 3
1978. 5
1987. 1
(the 61
128 13
0x0(%ebx) 1
27.3 4
38 8
6= 2
*dst 2
+19 1
-H 1
-pthread 5
./process-run.py 2
28.8 4
29.7 2
30.1. 1
30.14: 1
32K 3
32k 6
19.7 1
2.5: 1
2010, 2
1100 3
15.4: 1
*head; 4
1m 6
0000 14
12(%eax), 1
0.5. 1
0001 1
0010 1
01 2
0100 1
0xFFFFFFFF) 1
(through 1
15), 1
10, 14
100,000 1
4). 7
7.4: 1
7.7). 1
70, 1
7282 1
7354 1
8.3: 1
9.2: 1
20.5: 1
11). 1
12. 2
17.4: 1
34920. 1
*lock) 20
7.3 2
20KB 2
21, 4
21-bit 1
--l1 1
-5), 1
0x8049a1c. 2
13.1 2
20-bit 3
4.3). 1
3KB: 1
10,000 8
1996. 4
10 165
(xchg). 2
16(%eax) 1
1780K 1
179–180, 1
1980’s; 1
1998 2
2011. 7
100% 5
./fork.py 4
./thread 3
0% 5
<stdio.h> 15
<sys/types.h> 1
11:1, 1
14, 2
17.7). 1
36.4% 1
+1 1
7.9: 1
(you 5
*malloc(size 1
21.2, 1
2, 38
0x03, 1
0x3000, 1
15.5: 1
200-MHz 1
48 9
4MB) 1
100, 6
10th 3
11:5, 2
1277, 1
28 33
1000, 5
47 2
4:1, 1
2) 7
2013, 1
23.1. 1
24-bit 1
29.9 2
0th) 1
0x3C00). 1
<sys/wait.h> 3
135 2
14-bit 4
16KB] 5
18705, 1
-O 1
16.3: 1
8 109
*new_head 2
-l, 1
...; 1
1.0001 1
12(%eax) 1
14949, 1
2000, 1
28.6 2
5). 6
655, 1
10.2 1
) 46
*mutex, 2
*ofile[NOFILE]; 1
10ms, 1
11168, 1
1174 1
14KB; 1
18.6 2
19.5 2
1970’s. 1
1We 1
2.3: 1
0x3F80, 1
1); 4
10.1), 1
100); 2
3:50,3:50 2
1970 1
-o 9
./array 1
8(%eax), 1
28.7 4
2-bit 1
20.4: 1
10-entry 1
152K 1
16.4: 2
4.8 1
5% 3
1KB) 1
7), 3
1000 10
100000 2
11–19 1
120. 1
15.3: 1
15:5, 2
16.2: 1
17.1: 1
18.3). 1
30.12 1
32KB 5
2015). 1
2008–20, 49
A2 1
17.5. 1
1996 3
2.9 2
3] 1
1992.. 1
17.2: 1
17: 1
17:4, 1
18.1: 1
1964. 2
200, 3
10.1 2
10.2? 1
17.3: 1
29.5 6
5.7 1
50), 1
75 3
13.1: 1
28(%eax), 1
*ptr) 7
13); 2
60% 4
20.1: 1
105 6
128; 1
19). 2
34KB 1
34K 3
3” 1
40%) 2
AFIPS 4
18.3: 1
1024. 3
104 1
1110101 1
2.1 2
./mem 5
0+5+10 1
29.6 2
./cpu 5
0), 1
0.9. 1
05 1
0x100, 1
10); 1
10.6 1
100-bytes 2
100byte 1
117, 1
13.3 2
28.2 2
0+1+2 1
14.5 1
64-Byte 1
218 1
24113 1
254 3
28.12 2
36K 1
22.3: 1
26.7 4
40. 2
AME 1
19.2: 1
2009. 5
4.4: 1
113 4
2001. 1
8.2 2
0, 55
2Fortunately 1
2] 2
2015/02/10/understanding-glibc-malloc/. 1
160 2
101. 2
17.6). 1
2github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
1Note 2
5:100,5:100. 1
7.5 2
70%. 1
78-101, 1
28.8: 2
09 1
148K 1
64-byte 7
74 1
132 2
14:7 1
28.5. 2
3764 4
23.2: 1
27.6 2
28.5 2
AND 6
19345221) 2
22.9. 1
40, 2
128: 2
13–14). 1
9.1 1
00007f4e7d731000 1
1973. 2
30, 3
20th 1
17.3. 1
19.3, 1
18.2: 1
184–199. 1
19.1: 1
1956. 1
15). 1
14 71
8.4 2
29.1 2
0x500, 1
15.4 1
0.1). 1
83 1
Accounting 1
Actually, 1
29.11 2
3980 3
3A 1
4200, 1
29.4 4
2; 5
30.11: 1
30.14). 1
30.3) 1
2003, 2
140 2
18, 2
18-bit 1
1982. 7
30-bit 1
21.3: 1
12:7, 1
2.7 3
20), 1
2007. 3
2016. 1
1965. 6
16.1). 1
14.2 1
88761, 1
9.3 2
0x8049a1c). 2
16-byte 4
16.3 2
1945. 1
150 10
17.2. 1
1957 1
1966 1
46273, 1
4 164
4(%eax), 1
4.2 1
400 1
4000, 1
31) 4
2010. 7
9” 4
010000; 1
18.2, 3
1991. 9
30.13: 1
22.2: 1
23.1: 1
30.12: 1
2), 3
8(%eax) 1
2018, 1
1974. 3
19221041) 2
1950’s 1
1ms, 1
20-29): 1
20.3: 1
20.6). 1
2000; 2
21.2: 1
21: 1
22.1: 1
28.16 2
2.6 3
20(%eax) 1
AVOID 7
1957. 1
28.10 4
40000 2
4b: 1
3: 3
23, 2
23-bit 1
0x0(%ebx),%eax 1
2.5 1
1Each 1
30.5) 1
20 95
20(%eax), 1
20.2 1
20% 7
2014 1
21.6 1
22.5 2
2212 1
29.7: 2
90%, 1
110). 1
06 1
17 66
17.2 1
Aha! 1
4:10, 1
23:2, 1
2:70, 1
5(2): 1
2006. 6
2015. 1
1966. 3
1970s 1
4088 1
5.3: 1
4.1: 1
<< 9
28.9 4
1.00] 5
2005. 9
3000, 1
15.2: 1
24:2, 1
30.4) 1
2000 15
8(9):569, 2
93 1
1983. 4
143,012. 1
25 33
29267 1
1224 1
0x200, 1
: 289
1954. 1
17.8: 1
Andrea 7
7); 2
256 6
2KB 8
50-ms 2
Abstract” 1
Adam 1
Ahead 2
1975. 2
4096-byte 1
57.1% 1
448KB 1
<pthread.h> 8
29.8 2
10+20+30 1
2007, 2
39016, 1
1586, 1
256-byte 1
3; 3
21.1 1
22.6: 1
ALLS 2
ASPLOS-IX, 1
15.1 2
16.6: 1
17.5: 1
18.4: 1
18–21); 1
19.3: 1
1949. 1
1980s 1
1985. 2
1994. 1
20.1); 1
2m 1
51, 3
204 3
28.3. 2
1993. 6
And 108
4196 1
6.2: 1
49 1
AIN 1
29154, 1
10.3: 1
3B: 3
2008–19, 138
203 1
28(%eax) 1
3A: 2
21.1), 1
26.2: 2
1992. 4
Again, 3
Amazingly 1
29384 1
14.6 1
1), 5
== 91
1963. 2
18.1 2
18.7: 1
1800s, 1
1979. 2
20.5 3
2”. 2
3, 25
27.1. 2
324 1
20.4 2
Atomicity 2
4:100,1:0. 1
7.1: 1
4:3, 1
ATC 2
30. 2
1000; 1
4.3: 1
16.1: 1
22.12 1
28.1), 2
3KB. 2
214 1
27.1: 2
20.3 2
26.1 2
Apparently, 2
2This 1
15.5 2
16.4 1
17.3 1
1965, 1
Approximation 2
7.6 1
7620, 1
1988. 2
2016.. 1
6.4: 1
30.4: 1
2KB). 1
32868. 2
21.3 3
215, 1
5.1 1
51. 4
4KB, 3
ATTACK 1
30.15: 1
30.2. 1
32, 1
16KB, 1
25. 1
28.15 2
4-KB 3
4.2: 1
4.3BSD 1
4: 2
5.1: 1
50) 1
3). 5
10% 5
10.7 1
100), 1
1972. 5
Attacks 1
28.14 2
8.5 2
1997. 5
21.4 1
6000, 1
300, 2
4096, 2
4k 1
5121024 1
54.5%. 1
5→0 2
7.5: 1
5.3). 1
AW 5
100K 1
4146 1
32-bit 16
1793, 1
254: 1
3.33). 1
250 5
30.1 1
21 45
26.7: 2
272, 1
68 1
30.9 1
ALGORITHMS 1
18 54
1032 1
1981. 7
B) 3
28.9, 2
87, 1
1:1, 3
22.3 1
7.3: 1
3): 2
40050 1
Avere 1
22 38
9). 1
6) 5
7.8). 1
6). 1
Amazingly, 4
10; 2
4a: 1
36291, 1
18). 1
26.3, 2
27.2, 2
27.2. 2
30.7: 1
21.2 2
B-Trees: 1
28.5: 2
7). 2
37 8
API 62
18.2 1
19.1 2
1990. 2
B-tree, 2
2K 6
2k 1
30.2: 1
22.9: 1
7.6). 1
4.4 2
48KB 4
49, 2
22.2 1
ANAGEMENT 17
6.2) 1
7094 1
64-bits); 1
April 10
128-Byte 1
5.1; 1
3752 1
19.1). 1
19.3), 1
28K 3
28KB 2
320KB 2
22.1 2
BUCKETS; 2
29.4: 2
7232 1
4-GB 1
Abstraction 2
13.4 1
192KB 1
20.1 1
Beginning: 1
9.4 2
1e7; 2
4) 2
23 37
73-96, 1
4b 4
5.3 1
5.6 1
22.8: 1
AccessMemory(PDEAddr) 1
64-bit) 1
7355 1
76 1
8), 1
128-byte 2
5.2: 1
4.5: 1
30.3: 1
1962. 7
29.11: 2
29, 3
4. 27
22.7: 1
Bovet, 1
29147 2
8.1). 1
86 2
Affinity 1
14.3 1
19384 1
2008). 1
Block 9
; 25
20,000,000. 2
4904, 1
23.2 2
7353 1
B1 1
56483, 1
512-byte 1
23.1 1
Accessing 2
8:10, 1
8.4: 1
Are 6
80% 7
13:2, 1
5: 2
40-ms 1
30.8), 1
1963.” 1
30.10): 1
3); 1
4.2. 1
250, 1
Brian 2
30.6 1
4.1). 1
8KB) 1
9), 1
90% 1
1989. 5
22.5: 1
But 49
;load 1
21.7 1
4GB 1
26.5: 2
8.2: 1
Base-and-bounds 2
5–7), 1
59–73, 1
26.4: 2
Almost 1
9.8 1
9.3: 1
ArpaciDusseau. 1
85 1
14). 2
6.1: 1
40KB 2
3000; 1
1971. 1
36, 1
30.15 1
4088. 1
26.3: 2
C) 3
32896; 1
5), 5
Algorithms 4
15 96
AM 2
1998. 2
26.1: 2
CONCURRENCY 3
>= 5
22.6 2
7.8 1
27.4: 2
9.1: 1
Before 21
6.5 1
6 116
27.3: 2
Alto 2
? 9
AS 10
Artificial 1
Baby: 2
16), 3
7332 1
4page 1
32KB, 1
1980. 1
3764-byte 3
4.5 2
44:1/2. 1
4b, 1
5KB 1
7.1, 1
8-page 1
Assume, 3
BOUT 1
AMPSON 1
2). 7
26KB, 1
CRITICAL 1
A: 13
26 32
8.7 1
28.2; 2
99 7
Berkeley 7
7.4 1
6+5 1
27KB. 2
Answer 1
A2, 1
AZY 1
<sys/time.h> 1
Because 50
16500 1
82% 1
5.4: 1
3906, 1
1991, 1
3One 1
5.4 2
27.2: 2
CHEDULER 1
335, 1
55 1
846 1
15.2 3
BUCKETS], 4
AUSE 1
2016 1
29146; 1
Certainly 1
ABOUT 1
26.2 4
9.6 1
28.3: 2
<stdlib.h> 9
CHEDULING 50
8-byte 1
6.2 1
28.2: 2
B. 18
ACM. 2
Abstraction: 3
A, 16
Borg. 1
1K 1
9.1). 1
50, 5
3:50,3:50. 1
1MB 1
4-byte 3
56, 1
28.1: 2
CLOCK 2
34 12
64 17
9) 1
<assert.h> 4
AIX 1
ARC, 1
Anyhow, 1
Anything 1
Coherence” 1
APIs. 1
27.1 2
940 1
29.2: 2
A1 3
CONDITION, 1
8.3 2
64, 1
29.1: 2
BUILD 1
APPING 1
Addison-Wesley, 11
Allocators 1
Amazon’s 1
1k 9
96 2
5000, 1
3K 3
2. 29
4.3 1
6.3 1
28KB, 1
CPU(s) 1
372K 1
9.5. 1
16.1 2
Background: 1
Ability 2
22.7 2
3. 32
Appavoo, 1
Compared 2
About 5
28.6: 2
30.4 1
AMD 1
Cache” 1
8049a1c,%eax 4
= 415
64-bit 10
30-byte 1
Bigger 1
ARGE 1
APIs 10
Buddy 1
2.3) 1
As 158
A. 29
5th 1
4(%esp), 2
20.6: 1
40100 1
64KB 9
29.10) 2
CVs 2
43 8
A) 2
16384 1
Birrell. 2
Boneh. 1
26.3 2
30.6: 1
Architecture” 3
Concept” 1
AccessMemory(PhysAddr) 6
28KB1 1
32 33
ASLR 1
Chile. 1
ACM, 19
9 119
7.1 1
30.3 1
Brooks 1
Actually 4
ASID, 1
C), 5
20.2: 1
Atlas” 1
ADDRSORT, 1
6.3: 1
4.3) 1
200. 3
2018), 1
7 127
7.2 1
7.8: 1
7.4. 1
ACHING 1
16492 1
Achieving 2
Buffer 9
27 32
300. 3
Concurrency 1
B 157
Allocator: 1
29.5: 2
41 10
Access 9
Comment 2
AMAT: 1
9.2 2
7.7: 1
30.9: 1
Bryant 4
Address-space 1
Chapman 2
20.5). 1
ASY 154
Austin 3
AMAT, 1
7.2: 1
5) 3
45, 1
22.4: 1
29.3). 2
Caching” 1
8.1 1
70 2
Accesses 2
16708 2
Aleksey 3
CHEDULE 2
27.2 2
3:0,5:100,5:100,5:100 1
Controlling 2
BSD) 1
Also, 1
3), 3
30.7 1
300), 1
Conference; 1
AT&T/Bell 1
ALICIOUS 1
8.6: 1
31 21
Build 4
And, 2
Clearly, 9
21.1: 1
AUER 1
Base[SN] 1
AN 18
75% 1
7.9 1
4a 4
28.17 2
2Q 3
Chunks 2
8.7: 1
9. 9
Approximate 10
17.6: 1
Antoine 1
Approach 1
28.1 2
4KB 16
Couleur, 2
Critical 2
Atomically, 2
Available: 29
Average 1
35 12
Counters 8
Culler, 2
DO 1
Daily 1
Delete 1
Buy 1
Annual 1
Coalescing 2
Cobham. 1
Above 3
Blocked 4
ANGRY. 1
Also 10
9.7 1
2N 2
30 31
5 169
Clock 2
80-20 4
<fcntl.h> 2
Behind 4
170. 1
172, 1
18.5: 1
19.4: 1
1959. 1
Basic 10
Crockford’s 2
Currency 1
DVICE 1
A’s, 1
4(%eax) 1
ATOMIC 2
APIs, 4
9.5: 1
32-bits 1
Detail 1
B’s 8
Anomaly. 1
22.3). 1
Cobham’s 1
Abstractions 1
Al 8
Anita 1
An 65
99, 1
2’s 1
30.2 1
5.2 2
Coherence 1
85.7% 1
<string.h> 2
Between 2
CONDITIONS 1
Assume 33
28.7: 2
4m 1
1968. 11
1986. 1
423, 1
After 21
Disk 5
BFS 1
44 6
Annals 1
Acta 1
A), 2
40 28
Deterministic? 1
CA, 7
Array 4
24114 1
Complex 1
Boot 1
8.1: 1
Approach” 3
Atlas: 3
99.9% 1
30.5: 1
30.8: 1
500 4
Costs 1
99% 2
<unistd.h> 6
Bus 1
CPUs? 3
B, 22
BEST 1
Balakrishnan 1
Baumann, 1
1995. 6
1:0,4:100 2
Allows 1
Does 29
Base 3
4400 1
Anoop 2
Algorithms” 1
ARC 1
4000 3
Deuterium” 1
CISC. 1
Attempt 3
255 2
Conference 1
C-language 1
9:2, 1
Bonwick 3
Atlas”; 1
> 5
3KB 3
3000 4
52. 2
DEC 3
ARPACI-DUSSEAU 38
<value>\n"); 1
Buttlar, 2
Calling 8
29.6: 2
5, 6
Batch 1
Best 2
Bhandarkar 1
20); 1
Alpha, 2
ERFORM 1
Bonwick. 1
4K) 2
Architecture: 4
All 21
ATA 21
50? 1
Do 18
CPUs), 1
B-tree 2
28.13 2
Corbato. 1
CACM 1
ACHE 1
Both 7
Award 2
ABCABCABCABCABC 1
4, 5
400MB 1
6.1 2
Daggett, 1
Anticipatory 2
Adding 7
CPU-intensive 4
Clayton 1
3-GHz 1
50,000 2
CISC 7
50 46
Blocked: 1
20.6 1
Alternatives 1
ESS 1
Bosch, 1
62 2
Atomic 2
Assignment 1
Abdel-Wahab. 1
549–557, 1
E. 20
Come, 1
BASED 17
28.6. 2
Corbato’s 1
CPU, 33
ACM 11
Burroughs, 1
A’s 7
ACKGROUND 1
4-bit 3
49).” 1
64k 1
Debugging 2
Arpaci-Dusseau 3
Afraid 2
Cambridge, 2
Coffman 1
30.8 1
50th 1
CPU: 1
512KB 2
Building 5
21.5 1
Amazon, 1
ETTING 1
Broken: 1
80 18
Award. 1
Attempt: 4
Advanced 1
6. 20
EnableInterrupts(); 2
Compacted 3
Before, 2
3) 2
Cox. 1
CREATE 1
AKE 1
CPU-bound 2
Björn 1
ASPLOS, 1
7) 3
4MB 2
7.6: 1
Dirty 2
Basu, 1
Algorithm 5
Concurrency? 1
Completion 4
36 11
64). 1
Carl 5
512m 7
Butler 3
22.4 2
Animal 1
EVELOP 1
By 58
;store 1
B; 1
August 5
Android), 1
7KB 3
Execute 7
Corporation 1
Belady. 1
30.1: 1
Cybertron 1
Cache 18
ALWAYS 1
Caching 1
Boyd-Wickizer, 3
Account.html. 2
@ 8
5. 27
7.9). 1
Distribution, 1
Berger 2
Applications 4
Corbato 4
Conditions 1
4), 2
8) 3
Charles 1
6.3. 1
CISC, 1
23.3 1
Apple 3
Engineering 1
CFS” 1
ANDOMNESS 1
Babaoglu 1
Bairavasundaram, 1
Architectures 4
8, 1
Fagin. 1
Correcting 1
Belady’s 2
7.7 1
76–86, 1
Coding 1
Along 2
Center, 1
C, 12
Allocating 1
A1’s 1
6KB 1
70–76, 1
EG 1
Bit-precision” 1
Art 3
Dennis) 1
Cups” 1
40% 5
<string>\n"); 1
Classic 1
7. 16
Calculate 1
24 37
24(%eax), 1
26.6: 2
CODE 2
ANY 1
Automatically 1
Became 1
B-trees); 2
8-bit 3
Gaming 2
Craft 1
Bell 2
Dilemma” 1
8.6 2
Conditions: 1
Alternately, 2
Chang, 1
COMPCON 1
Analysis: 1
ARM 2
7, 2
71755, 1
7356 1
Bobrow, 2
Assuming 10
Dialogue 3
DATA 16
4088), 1
Compiling 2
801, 1
Compilers 1
Aq 1
Envision 1
28.4: 2
A 728
CPUs 37
API. 5
B). 2
Belady, 1
Blumofe, 1
;add 1
Gets 2
D, 2
Berkeley, 2
DiskRead(PTE.DiskAddr, 1
9.5 1
Create 3
Always 4
Compaction 2
Calls 4
Andreas 2
ASIDE: 4
7.2, 1
EMORY 36
8.5: 1
But, 7
B5000 4
Dijkstra. 9
Dahm 4
45 6
Computers 2
8KB 6
Computers, 3
Better, 1
Evans. 1
29.3: 2
A2’s 1
Cache-Affinity 1
Accurate 1
B86], 1
Black 1
Brinch 7
ANDLE 1
Goodman. 1
DRAM, 1
Bit 3
Doctoral 1
< 24
Data: 2
Anomaly 2
Control, 1
Candy 1
Apple, 2
ASIDs, 1
8k 1
END), 1
9.4: 1
AT 1
BE 1
Dijkstra’s 5
Darago, 1
526, 1
Computing, 3
9, 6
Computer” 5
Big 2
Every 1
33 12
ASID 9
Chou, 1
Amazing! 1
BSD 3
C: 2
Butter 2
AddressOfPTE 1
Goodman’s 1
Don’t 17
Bounds[Segment]) 1
Donkey. 1
>> 11
David, 2
Another 38
Corbet. 2
Com-puting, 1
Ask” 2
AccessMemory(PTEAddr) 4
991 1
EVEL 11
Certainly, 2
Ah, 2
BFS, 2
EAD 1
Data 13
63 3
Custer, 1
9-bit 2
Contents 1
Bits 1
Flexible 3
42 7
Allocator 1
Clark. 1
Anderson. 1
BSTRACTION 20
CPU), 6
CPU-optimized, 1
Analysis 5
Gray 6
EALING 1
CHEDULERS 1
Download 4
A; 2
Dealing 1
Architecture. 1
Couleur. 1
Compare-And-Swap 2
B-tree” 2
Again 2
<virtual 2
Example 18
Comes 1
Aren’t 1
BIQUITY 1
EE 1
Descheduled 1
64bit 1
DOO 1
Adaptation 1
Contrast 2
Buddy-managed 1
Frame 1
4200 4
Andrew 4
Code 24
Any 3
Below 2
CPUintensive 1
CPU. 31
April, 3
Great 5
ECHNOLOGIES 1
CPU). 1
D′ 2
ERSION 166
Developer’s 4
Avoiding 1
Creating 2
Compare-and-swap 2
B97, 2
Allocation: 2
AMAT 4
Examples”. 1
Consider 2
Could 1
BSD. 1
Effectiveness 1
Design 3
90 1
Decepticons1 1
Ajay 2
Correspondingly, 1
CPUs). 4
Generate 2
51 18
Available 8
Code00 2
Approach: 5
Buffer” 1
Compute 4
CPUs; 2
Arrivals 1
HARES 1
Colorado, 1
ANAGE 3
E.W. 2
ESX 2
Diego, 4
BUCKETS 2
D) 3
Computer 20
Baby 2
Allocator” 2
Approximating 1
F.J. 1
At 31
D.B.G. 4
Bad 3
Embedded 1
EAKED 1
ACE 1
Dekker, 2
Allocate 3
Create: 1
Can 40
Hansen. 5
60 13
B1’s 1
Computer, 6
B+96, 2
C++ 2
Copy-on-write 1
CS 1
Bradford 2
Humorously, 2
Concepts 2
Alan 3
Equipment 2
Electroanalytical 1
ECESSARILY 1
Belady 3
Daniel 3
Corporation” 1
Baron, 1
Apparently 1
Architecture 9
February, 1
Atlas 10
Davis 8
Be 5
English 1
EC2 1
ADD 1
ECTION 1
Allocation” 3
Decision 1
Consistency 1
Hansen’s 2
7.10 1
B5000: 2
Control: 1
BAD! 2
CCS 3
Covering 2
Came 2
BufferOverflow.pdf. 1
I/O, 3
Conceptually, 2
Although 16
Era 2
Europe(!). 1
ECURE 2
Bits” 1
Definitely 1
Creation: 1
Bone: 2
Apple’s 1
Argument 2
Further, 8
B.W. 1
December 8
Boost 2
F.H. 4
ECIDE 1
ALLOCATED 2
EPARATE 1
Arpaci-Dusseau. 3
Depending 2
Correct 4
Implement 4
8. 12
B? 1
Cores” 2
BF 2
CV 2
C’s, 2
Close 2
Burnett 1
Idea 2
Conway. 1
And...? 1
Evaluation 2
Evaluating 4
Earth 2
Bruce 1
Dennis, 2
Daley 1
Brooks. 2
Atlas”, 1
Arpaci-Dusseau, 10
Futex 2
Base/Bounds 1
Deciding 1
B’s). 1
Fetch 5
EMBRYO, 1
Ah 1
Emery 1
Assign 1
Despite 1
Counters” 2
It’s 4
820, 1
Bayer. 1
Cutler, 1
Benchmarking” 1
Caching, 1
Daley. 1
Commu-nications 1
COND 2
Instrumentation” 1
Couleur 1
B: 12
FLOW 1
FIFO, 7
Edition)” 2
C. 24
ENERALITY 1
Dennis. 1
B’s. 1
Austin, 1
Atlas. 2
Geometry 2
Base/bounds 2
Different 5
C.H. 1
Final 4
EXCLUSION 1
Allocated 9
Fair 6
August, 1
E) 1
D. 33
Jacob, 1
9548, 1
Berkeley. 1
DBMS), 1
Blasgen, 1
Chunk 1
Discovering 1
Computing 4
CPUs) 1
Intelligence 1
DeWitt. 1
Bach. 1
Flow 6
FIRST)? 1
Environment” 4
Cocke, 1
Efficient 2
Development, 1
C; 2
Authors: 1
Berger, 2
Glaser. 1
Boston 1
Dijkstra; 1
CONDITION 19
Forin, 1
Edsger 8
BFS. 1
Fekete. 2
Begin 1
Elias 1
D.R. 1
Jeffrey 1
Figure 335
Beyond 14
Dick 2
CFS, 3
Cohen, 1
Dominion 1
Conversely, 3
California, 6
Jonathan 3
Detection 1
Battle 1
GE, 1
FetchAndAdd(&lock->ticket); 2
Execution 8
Computing; 1
Everyone 1
Douglas 1
Check 8
Basically, 5
Beth 1
Handle 4
Bottom 1
EALLY 1
CPU? 11
GNU 3
EnvyFS” 1
Babaoglu, 1
Being 3
Even 20
Donald 1
API, 1
Johnson, 1
First: 1
Boston, 3
Direct 8
Complete 1
EFERENCE 1
Corbato, 5
CPU 255
Canada, 4
Kaashoek, 4
EEDBACK 11
C9 1
Heap: 1
G) 1
F. 8
Convention. 1
FFICIENTLY 2
EC-11:2, 1
Child: 2
Bertinoro, 1
Bill 1
Hardware?” 1
Bouron 1
ERMS 4
CPUs, 14
Generalized 1
Exactly 1
Bart 2
Bershad, 1
Experimental 2
EAL 1
ARDWARE 2
K 6
Free 8
Bouron, 1
ECHANISMS 11
Concurrency. 1
Early 3
Cox, 1
CPU-bound; 1
Chemistry, 1
LRU 33
EYOND 27
C95]. 1
Heinrich. 3
Golding, 1
FILENO). 1
C’s 1
Guide” 1
ELADY 1
Christenson. 1
Beyond” 1
Boles. 2
Helen 1
Brother” 1
Edward 2
Caches 3
Goh, 1
Exclusion 4
Butenhof. 2
Binary 1
FAST 7
EASY 38
Act. 1
Large 2
Freedom 1
Broken 3
EGMENTATION 12
Conditions? 2
Eligible 2
Custer 1
CR3 1
Child 1
Least-Frequently-Used 1
Embedding 1
CFS 40
CRUX: 6
Call 8
Case 4
Cassandra, 1
Characteristics 1
HE 83
Circuitry 1
Bovet 2
Buffer) 1
History: 1
Hive/HDFS, 1
Emacs. 1
Gandhi, 1
HINK 1
Failing 3
Fast, 2
Flag 2
Fast 4
FindFreePhysicalPage() 1
Address 25
Lauder. 1
Hank 2
Burroughs 5
Evict 4
Cool, 1
Elliott 1
Deadline 2
Candea, 1
Coarse-grained 1
Come 3
Let’s 90
Lindberg, 1
Lottery 6
Louisiana. 1
DID 1
Exception 1
Cores 1
HYSICAL 27
Completely 5
Burchfiel, 2
CPUs: 1
C 212
Hmm... 2
Cesati. 3
HAPTERS 1
I! 1
C.J. 1
Boilen, 2
Flash-based 1
EKKER 1
Framework 1
Algorithm” 1
Levels 1
Harper 1
CONTROL 2
Extract 1
Design” 4
Errors 3
Determining 1
Canyon 1
Examples 3
Conference, 7
Hershey 1
Here, 13
FOOLISH 1
M.J. 6
Days 1
FAULTS 2
Corporation, 1
Hall, 5
Convoy 1
Bye 1
Class? 2
CONCURRENT 15
Homework 28
Chapter 1
HREADS 1
ISTORY 1
CCESSES 1
CFS) 1
Frans 4
Entry 3
From: 1
Allocated] 2
Linus 1
Hybrid 2
Cheap 1
Fairness 2
Detect 1
Evans 1
Dharmendra 1
Case, 1
FIFO; 2
Countermeasures” 2
Hits 2
Hits+M 1
False) 10
MBALANCE 1
Denning. 2
Finnish 1
Fredkin, 2
Hastings, 1
Corporation. 1
C-callable 2
Code: 2
CPU; 11
Clear 1
However, 120
Hash_Insert(hash_t 2
Increase 1
COW 3
CMU 1
FreeBSD” 1
Ever 2
Fujiki, 1
Allocation 3
Manual”. 1
I/O; 3
Computers” 1
Finally, 70
Dissertation 1
Examination 1
Discusses 2
CompareAndSwap(int 2
Factor 2
Hopefully 2
D 109
House, 1
Farrell, 2
MORE 2
Denning’s 1
Critically, 1
G.L. 2
He 3
Corwin, 1
C.A.R. 1
Commodity 1
Cilk 1
Clements, 3
Hugh 4
Hill. 1
Initial 3
CPUs. 7
CONCURRENCY: 15
G62]. 1
FIFO. 4
Gibson, 1
Anderson, 2
March 14
INTRODUCTION 15
Control 11
Fox. 1
EASUREMENT 1
FILENO 1
EASON 1
Contents: 1
Fall 5
Hydra 1
DEKKER’S 1
I/O) 2
Fellner, 1
MS-DOS 1
Doing 23
Detailed 1
Generally, 1
Hennessy 3
Digital 2
CACM, 5
Considering 1
Claypool 1
Condition 6
IGHT 1
Hong-Tai 1
Intel. 1
Casting 1
Capel 2
Germond. 3
FIFO’s 1
Goodness, 1
Applications” 1
Mark 14
IP) 1
Cooperative 1
Free-Space 1
EBOOT 1
Follow-on 1
END? 1
Cup 1
Finding 2
IBM 9
DRAM 1
INITIALIZER, 2
First, 58
MUTEX 2
Each 19
Dijkstra 12
Grove, 3
Hint: 2
ELOCATION 2
CPUbound 1
Clustering 1
Concurrent 25
Counting 2
ISBEHAVIOR 1
Hydra” 1
Internals: 3
Chevalley, 1
Cilk-5 1
Hoc 2
Factors 1
Guide 3
Approaches 1
Martin 1
Instruction 4
D.A. 1
FreeBSD 3
ERFECT 1
Fortunately 2
ESIGN 1
DD 1
Finite 1
IEEE 7
Dekker’s 6
IST 2
Fleischmann, 1
Mars 5
Ed2.pdf. 2
Errors” 1
Gupta. 2
HotOS 2
EPLACEMENT 2
Creation 6
Comparing 2
Current 3
Denning 1
Interesting 1
I. 1
J 1
Common 3
Cocke 1
How, 1
File-System 1
HOW 6
Aside 1
Measuring 2
Introduction 8
Dennis 6
HEN 4
Earliest 1
Google 2
Growing 1
David 19
Firefox, 1
IF) 1
Destroy: 1
ITS 1
Form 1
May, 1
Facebook). 1
FAULT 1
Hit/Miss? 4
How? 1
EY 4
Culler. 1
Compatible 1
Dickey. 2
Development 2
L 59
IBM” 1
Knowlton. 1
Communications 20
Computations” 3
I/Os 3
Flesh 2
Hardware 18
Assumptions 3
Melvin 1
KB), 1
Directory, 1
IFIPS 1
II) 1
Easton, 1
Having 4
Dead: 1
Gain 2
IO 7
Dr. 1
Ideally, 2
From 23
Memory: 3
Formalizations” 2
Fault 4
Hoare 4
ID 7
Easy, 2
Culler’s 1
Concurrency), 1
ESTRICTED 1
Distributed 5
LDE). 1
IRECT 15
Knuth 6
Compile 1
Concurrency: 2
Imagine 39
Frequency 1
Harmful” 2
A’s). 1
BETTER 1
Labs 2
ETH 1
Far 1
IME 2
IZES 1
Hoare. 1
Decay-Usage 1
Dijkstra, 4
Index 11
EGAIN 2
Its 4
Fusion 1
Merritt, 2
History” 1
GBs 1
IGHER 1
IMER 1
FIFO: 1
DVANCED 13
Considered 2
Electronics, 1
EC-11, 1
Leffler, 1
LaTeX, 1
Copper 1
Context 3
January 14
DDRESS 25
Minneapolis, 1
Barton 3
How 141
In 387
Length 1
Either 4
FetchAndAdd(int 2
Edwards, 4
If, 9
INVERSION 1
Garner 1
Gray, 1
Instinct, 1
ETTER 1
Jain. 1
Gates 1
Michael 10
IRTUAL 19
Gecsei, 1
IMMEDIATE 2
Ingo 1
Graham. 2
Database 1
Counter 6
Examine 9
END, 1
Levy, 5
Larry 1
Core 3
Friedman, 1
L. 10
Default 1
Multiprocessor 4
Base[Segment] 1
Incorrectly 1
Includes 2
Loads/Stores 2
Experiment 1
Forgetting 3
Epema. 1
Jason 1
IT 3
Doesn’t 1
Guerraoui, 2
International 3
Earl 3
J. 33
Glenn 4
Miller. 2
In-ternational, 1
Ginting, 1
IO). 1
Investigator. 1
H&P 2
Devang 2
D.H.J. 1
FOR 2
Ed2.pdf 1
List_Lookup(list_t 4
Levin, 1
DMA). 1
Full? 1
Lampson 6
Dissertation, 1
Next, 9
Better 4
Innovator’s 1
Indeed. 1
Lots 2
Find 4
George 2
Epema’s 1
Jeff 3
ITHOUT 2
ECHANISM 30
HW 1
Jain’s 1
Earlier 2
Job:C 1
Going 1
Milton 1
Introduced 3
Gollum, 1
IRTUALIZATION 5
Jones. 2
Heap 16
Directory 5
Dave 3
Fill 1
FIFO? 1
MASK 3
LoadLinked(int 2
Declaring 1
GB) 2
MA, 2
Dynamic 7
No-Locality 2
California. 3
Callers 2
Interposition 1
Lucco, 1
Fred 1
E 195
French 2
Job 11
Influenced 1
Electronic 2
Handles 1
James 1
Evolution” 2
Joe’s, 1
Harcourt, 2
Mitoma, 1
Isolation” 1
Guide. 1
KB 18
I/O). 3
If 167
Efficiency 2
Department, 1
Facebook) 1
Mayer. 2
Lynch, 2
Definition 1
For 194
Getting 1
Mac) 1
No. 6
OMPLEXITY 1
ONTENTS 1
Introduction), 1
MPLEMENT 1
Given 15
Gray. 2
ERMINOLOGY 1
Go 4
Journal 7
Interestingly, 3
Exactly. 2
Hard 1
Java. 1
Excellent 1
KPTI 1
Heart 2
More 24
Italy. 1
HICH 1
Kenneth 2
IT! 1
John 14
Figures 2
DisableInterrupts(); 2
Fit 4
Media, 3
MANUAL, 1
ESOURCES 1
Forget 1
Gorman. 1
Manager” 1
Israel. 1
Canada. 2
OS) 2
Javascript 2
Managing 1
Group, 1
Gray’s 2
Evolution 1
Goals 2
KB. 4
FFICIENT 1
It 92
Heap01 2
K+96]. 2
Extra 1
Keeps 2
Instead, 7
NE 1
I’m 5
Has 1
Kleiman, 2
Innocent 2
Kawamoto, 1
G. 9
Distribution 1
Frigo, 1
Multiple 1
MIT 5
Emacs 1
FreeBSD, 1
Grows 2
McCall. 2
Italian, 1
Certain 1
PFN=55 1
Job:B 1
Microsoft, 1
HARING 2
HY 5
FASTER 17
H. 20
Limits) 1
FIRST 1
Jose, 7
Hussein 1
Kleinrock. 2
FIFO 37
Knuth. 1
Last 1
NY, 1
KB); 1
Hash_Lookup(hash_t 2
LAW) 2
Interactive 1
Letters, 2
Linux” 1
EECS 1
Generally 1
Multiprocessors. 2
MLFQ: 3
EvictPage() 1
Future, 1
Here’s 4
Mellor-Crummey 4
Jackson-Edwards. 1
Change 4
PID. 1
KB64 1
Minimize 2
HINGS 1
Handled) 1
Hazelwood, 1
Human 1
Hash_Init(hash_t 2
Linear 2
Facebook. 1
Kaufmann, 5
Incorporating 1
LWAYS 1
Fourth, 1
LATER 1
Library” 2
Newell, 1
LWN 2
I/O), 3
LRU→ 11
Joe 3
Good, 1
Lipman. 4
ETERSON 1
Greenfield. 1
Multithreaded 3
MMU; 1
Fine-grained 1
G 12
Hey, 1
Microprocessor 3
Jiaqi 2
Concept: 1
Paranoia 1
LATER? 1
Modadugu, 1
Hawkins, 1
Failed 2
IKE 1
Inc.. 1
List_Pop() 1
Failure 4
M. 35
Intel’s), 1
Law, 2
Francisco, 1
LISP 1
Linux); 1
Now? 2
Like, 1
IA-32 4
Lamport’s 1
Joy, 1
Gouicem, 1
Lists 5
Eindhoven 2
Hence 2
NetBSD, 1
MQMS, 1
Fortunately, 9
HOLD 1
Historical 4
NPUTS 1
Jobs 2
DOS 1
Death 1
LESS 1
Motivating 1
I/O: 4
Farm” 1
IP 41
Interrupt) 1
Knowing 3
First 23
MB, 1
Interludes 1
Leaks 1
G.A. 1
Later 2
M.K. 1
OPT 4
Logistics 1
IMITED 15
Leave 1
Jozef 2
Hill, 3
Lu. 2
Emacs7 1
Herlihy. 2
ORK 1
Manchester 3
Fun 3
History 4
I/O 86
OK 4
Juan 1
Pass(C) 1
Design, 1
Languages 2
NECESSARILY 1
Inverted 1
Faster 2
IRTUALIZE 5
Job:A 1
L1 4
Fleischmann 1
MIN). 1
KB-32 2
Learning 2
HERE 1
Loading: 2
MRU 2
PC 16
Lord 1
IRIX 1
Loops 1
June, 1
I, 1
MAX) 1
Engineers 1
Hochshule 2
OSTEP! 2
Matteo 1
GB 7
INITIALIZER. 2
ISSES 1
ONSTANTS 1
Julin, 1
Karels, 1
Details 1
Lepers, 1
NT 4
Jacqueline 2
Feedback 5
ISN’T 1
Jr., 1
LL/SC 2
Frankenstein 1
MMU, 1
KNOW 1
HP, 1
Linux 107
Looping 1
Machine” 1
PINNING 2
MAC 2
IS 1
Lu, 4
Ken 2
L2 1
MB 1
February 16
ICKETS 1
Obviously 1
Meltdown 2
GHz 2
Initialize 3
Incrementalism, 1
OS-ignorant) 1
OSes 2
L4. 1
Done 1
Libraries: 1
Note, 2
Josep 1
Festschrift 1
Informatica, 1
KB) 3
Least-RecentlyUsed 1
H 42
McCarthy 2
Know 2
HREAD 12
Live 1
MAX_HEAP_SIZE; 1
Markowitz, 1
POSIX 20
Mac 12
Induced 1
I/O. 10
L60, 1
MMU 3
Fetch-And-Add 2
M 139
In, 2
PACES 8
Moseley, 1
GUIDELINES 1
Intuitively, 1
Invalid 2
Jaswinder 1
Lanyue 4
Druschel, 1
Linked 8
PERATING 184
ONCURRENCY: 15
KPTI) 1
Golub, 1
Isn’t 2
Lighting 1
Libraries 1
HFE-1:1, 1
Miss? 1
L3 1
Long 1
MB) 1
HREE 154
Massachusetts, 1
Methods 1
Mail. 1
Intel 10
INDETERMINATE, 1
Linux. 8
McGee. 1
File 3
Marvin 1
Inputs 1
PDIndex 1
Network 1
Good 8
Isolation 1
Pn−1 1
Journal, 2
Levy. 2
EARN 1
LoadLinked 2
Park, 2
ONTEXT 2
Kanev, 1
HPUX 1
J.S. 1
List: 2
MAC, 1
Hall/CRC 2
Monitors 1
LRU, 11
MLFQ 32
MIT. 1
Hash 8
PPLICATION 1
Miscellaneous 1
Manuals 1
Is 14
Indeed, 20
Linux’s 2
Mechanism: 2
Freeing 2
Microprocessors 1
Issue: 3
Palo 1
New 9
Google, 2
Joy 2
Precise 2
Lauer. 2
Little 2
EDUCE 1
Low-level 1
Pesterev, 3
Kathryn 1
Handbook” 1
Jack 5
Liu, 1
MALLER 15
Hardware/Software 1
Mythical 1
MIT), 1
Mac. 1
MIT’s 1
OS 504
Here 30
PTE.ProtectBits) 3
Morse. 1
Mars?” 2
Issues 6
Instructions 1
Long-Running 1
Metha 2
GB). 1
Mr. 1
Keeping 2
Patent 1
Nickolai 4
Header 2
June 13
Privileged 3
Lauer’s 2
Man-Month” 1
EMORY-M 1
Making 3
Prentice 4
Kernel 14
Happened 2
K. 1
Locks: 2
MMU. 2
I/Os. 1
NGINEERS 1
Manuals” 3
Michael, 2
MUTUAL 1
His 3
PTEs). 1
One 135
Most-Recently-Used 1
Murphy, 2
It” 1
Kanev 1
Long-running 1
Multics. 1
Get 5
Much 9
Kernighan, 1
Patterson, 1
Nuclear 1
Hill 1
LOW 1
Problem: 6
Lectures 1
Maybe 1
EMORY: 26
March, 1
R+89, 1
LRU. 3
Heavyweight 1
KB, 1
MIT, 1
Mac, 1
Included 1
NIX, 2
Mogul, 1
Microsoft) 1
Manual: 3
Hopefully, 4
Pathfinder. 2
Only 10
NOW 1
NBA 1
I’ll 3
Keith 1
MLFQ. 2
NIX 55
Gruss, 1
HARE 14
Kilburn, 4
LW 1
OMPILED 1
Home 1
LRU? 2
Programs 4
Linux). 5
McVoy 1
EPRESENT 1
Metrics 1
README, 1
LRU’s 3
Hit 29
LEXIBLY 1
Massachusetts. 2
Management 11
Inserts 2
NIX-based 6
MostFrequently-Used 1
NULL); 35
Memory” 1
Hovav 1
Perhaps 15
Oops! 2
NVERSION 1
NOT 1
KASLR” 1
Krieger, 1
MQMS 2
Neither 1
Multics, 6
HTTP 1
PowerPC, 3
Language” 2
P1) 1
Huge 2
Law. 2
Learn 1
List_Insert(list_t 4
Modeling” 1
ERSISTENTLY 1
Mixed 1
ROTECTED 1
Labs” 1
Holding 1
LGORITHMS 1
Meltdown, 1
Manual” 3
Instead 20
NULL 20
Moving 1
NUTH 1
Minimally, 3
IBM, 1
Phoebe 1
Orran 1
Node_t; 1
Not 23
Knowlton 1
LDE 1
Make 5
Nelson 1
NULL2 1
Hear 1
Provides 1
Letters 3
PFN_SHIFT) 1
Pthread_mutex_lock(&c->lock); 6
Low 2
Locking 2
Montreal, 1
I 171
Enough 1
Modha. 1
Reliability 1
Licklider. 3
Holt. 1
Lacking 1
Microsoft 4
Memory-mapped 1
Intel, 2
NeXTStep 1
Multi-Level 4
Nethercote. 1
Mozilla 1
INUX 1
Pointed 2
Other 15
Novark 1
Now 79
LOCKS 23
LOCK-BASED 15
Metric: 1
Nice. 1
High 2
Pthread_join(p1, 5
M83]. 1
O 247
PTEs. 1
Putting 1
Mac! 1
Longer 1
Morgan-Kaufmann, 2
I/O-intensive 2
Example: 6
Moir 6
Robin 3
Lipman 1
Horn. 3
Lauer 2
Multiprocessing. 2
Muller, 1
Interscience, 1
Negative-Growth 1
Multi-level 7
Next 2
Mutual 4
Idea1 1
Positive 1
Ousterhout 3
O(1) 4
OAD 1
Linux, 15
Laszlo 1
Led 1
Nucleus. 1
IDs 2
RAM, 1
MLFQs 1
ORRECT 2
Parent 6
Questions 26
Marco 2
May 11
Multiprogramming 4
F 36
N 41
NT, 1
SIGMETRICS 2
Lipp, 1
ITH 4
Linux) 2
NCE 1
Multi-Queue 1
I’d 1
Nelson, 1
NIX! 1
Nucleus 2
Netzer 2
International, 2
Proceedings 2
P2 3
ODING 1
OK: 1
Linux-based 3
Microsystems, 1
Lock-based 2
Or, 7
IRE 5
REAT 3
Maintenance 1
OSDI 10
Pass(B) 1
RY 1
Mattson, 1
McCarthy, 2
Mountain, 1
Facebook, 1
Farm 1
IECES 154
NTERPOSITION 1
NUMPAGES. 1
M62, 1
Implementation” 1
MEMORY 1
NTERLUDES 1
Multiprocessors” 5
I” 1
Nevada, 1
NOMALY 1
Old 2
ODE 2
Johnstone, 2
Recall 9
PRIORITY 1
OINTER 1
ONSIDER 1
List 7
Nichols. 2
Look 1
P1, 2
ISCA 4
RaiseException(PAGE_FAULT) 1
McGraw-Hill, 2
One”. 1
Point 1
Rachid 2
Maurice, 1
Membrane 1
Nothing 4
NULL, 20
Implementing 2
SIZESORT+, 1
O(n) 1
MAX; 2
Iyer, 1
MIPS 14
NULL; 22
NIX. 2
Jing 1
Non-Coalesced 1
OCKS 23
Orr, 1
OFTWARE 1
Joint 5
Relocated 2
Padegs. 1
OSSIBLE 2
O_CREAT|O_WRONLY|O_TRUNC, 1
Locks 29
Nope, 1
MQMS). 1
PFN) 2
Interaction 1
Randall. 1
Models” 1
OpenSolaris 1
Policy: 2
Rafael 1
Measure 5
First-in→ 11
OMEWORKS 2
Nobel-prize 1
Indeed 1
Spend 3
OFFS 1
MS-DOS. 1
Kay 1
Mach 1
National 1
Nethercote, 1
Joyce. 1
OK! 2
OS. 26
PC, 7
Oregon. 1
July 4
Paging, 1
Object-Caching 1
O_WRONLY|O_CREAT|O_TRUNC, 1
Ma. 2
November 10
Malloc(), 2
Parallel 3
Interrupts 2
Rate 4
S 379
Most 9
P1’s 1
Presented 1
Relational 1
Measurement, 1
Function 2
OS), 2
Numbering 1
Internet 1
Spin 7
MULATING 1
OS, 31
Keep 4
Megiddo 1
Nemacolin 2
No 10
KB; 2
Obtaining 1
OS’s 4
POSIX, 2
Out 2
KB). 1
Priority 4
Professor? 1
Organization” 1
Man 3
ONTROL 8
Many 21
Peanut 2
Jim 8
Rudolf 1
SEG_MASK) 2
NDERSTAND 1
Pacific 3
NTERLUDE 35
Oh, 1
Mesa, 1
GAINST 1
Oh 5
OES 1
Issue 4
Spin-waiting 2
Meehean. 1
Meehean’s 1
LRU-like 1
Memory 58
Novark, 1
Note 34
Lampson. 2
O’Hallaron 2
Ousterhout. 3
Perl, 2
PAGESIZE 1
KB-64 1
Operation 1
Q1 15
Overflow 1
Management” 2
OO 1
Mechanism 1
Power 1
Joy. 1
SET 2
Saavedra-Barrera 1
Programmer’s 2
Pfaff, 1
Resort, 2
Orwell. 2
Microsystems 1
Handbook 2
Overview 3
OFFSET 1
Joseph 1
Success! 1
October 17
Mistakes 1
Leonard 2
Multi-Threaded 2
O. 1
OMPLETE 19
Lampson’s 1
O’Reilly 3
Ousterhout’s 2
PhysAddr 8
PTBR 5
KPTI, 1
PAT, 1
Randell 1
PD 2
Markstein. 1
P. 12
NABLES 1
Pthread_join(p2, 5
Kernel” 1
Schedulers: 1
Segment 10
Protected 1
Preemption-safe 2
Rules 5
Orwell’s 1
MongoDB, 1
Harry 2
PCD 1
OPTIMIZATION 1
KASLR, 1
Sullivan, 1
Ousterhout, 2
Multics 14
Let 18
Multi-threaded 1
OCK 16
OUR 2
Limited 6
PTE.PFN 1
Plot 1
PTE.present 1
L->head; 8
PDP-10” 2
Reese’s 1
PDEAddr 2
P 280
Miss 29
PEED 1
NOWLEDGE 1
Publishers, 1
Kuehner. 1
Set 6
Share 4
Pthread_mutex_unlock(&mutex); 8
Prefetching 1
S.Sahni). 2
P3 1
NCREMENTALISM 1
Henry 1
PPN) 1
Offset 15
KEY 1
TORE 1
Overhead 3
NIX/C 1
Like 6
Multiprogrammed 5
OLUTIONS 1
Optimal 3
Line 3
PWT 1
Priority] 2
PTHREAD_MUTEX_INITIALIZER; 7
LATER, 1
PD_SHIFT 1
References 28
PID). 1
P4, 1
N. 7
PETERSON’S 1
Ngram 1
RDLK 2
L4 3
Sharing 12
South 1
Quanta 1
Primer 1
SJF/STCF) 1
PCD, 1
ND 10
Hershey. 1
PROT_READ|PROT_WRITE, 1
Overflows 1
Key 1
Tf 1
PageTable[1] 1
NSA? 1
MIPS, 2
OMPARING 1
NTRODUCTION 59
Oracle 3
Locks, 1
Perfection, 1
Process 35
PTIMIZATION 1
LLOCATE 1
Performance” 1
SJF/STCF 1
Phipps 1
PAGES 2
Need 2
PT: 2
OCALITY 1
RR) 1
Las 1
Signals; 1
Spectrum 1
Random) 1
Process0 12
Saying 1
PTE: 1
Namely, 1
Hierarchies” 1
PTE. 3
O’Reilly, 2
L->head 8
They 5
Patterson. 2
NT” 2
MM00]. 2
ON 12
Nancy 2
Our 25
Mangard. 1
Pioneered 1
Processor” 1
PT_MASK) 1
Later, 2
Pioneers, 1
San 12
Prentice-Hall, 7
PDPTA’97, 1
OS: 1
Peterson. 2
OESN 1
RUNNING, 1
Lavington. 3
Smotherman. 1
Student, 1
Recognized 1
Professor, 1
Sharing” 1
Problems” 1
Naval 1
Hydra. 1
PageDirBase 1
PDE. 1
L4) 1
Transforming 1
Pons. 1
OPT. 1
Main 1
OOLS 1
Narrow 1
PAGING 22
Maxwell’s 2
Probably 11
Producer/Consumer 5
Ph.D. 3
Lee. 1
Prediction 1
Santiago, 1
Priority(A) 4
PFN, 1
Occur 1
Peterson’s 6
OF 9
Random, 5
Leiserson, 1
Levy 1
Such 16
Relocation: 2
Programmers 4
Software 7
Processes, 1
Neumann 2
I/O? 1
Part 6
PTE.PFN, 3
LOCK 2
Tucker, 1
Previously, 1
OS? 4
Malcolm 1
OS; 8
Node_t 1
PF 3
McKinley, 1
Pthread_join(p, 4
Purify 1
Physics), 1
List_Init(&H->lists[i]); 2
Problem 3
Similarly, 6
Proc 14
Pages 5
Oddly 1
Placing 1
OK; 1
Readings 1
Smotherman’s 1
Life 1
T3, 4
S). 2
ROCESS 30
Sorry, 1
Professor 5
No-eXecute), 1
IALOGUE 4
Processes 8
PTIMAL 1
Lawall, 1
Two 11
Priority, 1
OS” 1
Manchester; 1
On 21
Non-Cooperative 1
Paging 6
Mechanisms 3
RACE 1
Quantitative 2
Policies 3
List_Insert(&H->lists[key 2
Processes: 1
Single 7
Pthread_cond_wait(&c); 1
Paging: 4
Often 1
Problems: 1
Reprinted 1
Of 70
Space 20
Load 4
THER 1
SDS 2
SER 1
Programming 15
RPACI 154
OFFSET_MASK 7
INTERLUDE: 11
Processing: 2
Per 5
Laziness 2
Warburg 1
Pthread_mutex_unlock(&c->lock); 6
Or 9
Manifesto” 1
P=0 1
O(log 1
Patel 1
Morris, 4
RANSLATION 15
RAIDs, 1
Principles” 2
Load-Linked 2
Q 12
Slab 1
Read-Write 2
So 30
Organick. 1
Pthread_cond_signal(&cond); 6
Research 3
Organization 1
Thomas 3
Looping-Sequential 1
Texas. 2
Stalin 2
SHIFT, 1
Q2 9
Ranganathan, 1
OOT 1
Ideas 2
Producers 1
Pick 3
Lisa 1
Win, 2
Python, 2
Quarterman. 1
Memory, 1
PAGE 6
OK? 2
Phenomenon” 1
Neat 1
ROGRAMS 1
ROP. 1
Program 20
Load-linked 2
Quicksort, 1
Peterson 2
Reese 1
Sometimes, 9
Over 6
Pthread_mutex_init(&c->lock, 2
Running, 1
P0), 1
Turner, 1
M.I.T., 1
Time-Shared 1
Tracking 1
Shan 2
RISC-like 3
Ready: 1
OPT? 1
Imagine, 4
Project 3
Pren-tice 1
List_Lookup(&H->lists[key 2
X/macOS 1
Overall, 3
Quote 1
MenuMeters 1
PID 5
OS). 2
Play 1
Non-compacted 1
Race 2
RUX 33
Pthread_create(&c, 2
Locks”) 2
RANSFER 1
Policy 6
Ritchie, 1
Sun, 2
PROGRAMMER 1
R.P. 1
Russ 1
PERATIONS 2
UK, 2
MORTIZATION 1
Stride 4
USTERHOUT 1
Simple 29
RR? 1
Relocation” 1
Open 2
Implementation 6
Pthread_create(&p2, 5
Protection 7
Lock 12
X11 1
P1 6
RAM. 1
Mesa” 1
PM 4
Processes” 2
OK. 2
Resources 2
OSTEP. 166
Recall, 1
Queue_Init(queue_t 2
MIN 1
REATE 2
Portland, 1
River, 1
T. 14
PTEs 3
R10k 1
Say 2
PHit 1
Unfortunately, 37
Microsystems. 1
TECHNICAL 1
V.A. 1
Smaalders. 2
RUNNABLE, 1
Remember 5
PCs, 2
Information 6
Pthread_mutex_lock(pthread_mutex_t 2
Pthread_mutex_lock(&mutex); 8
Locks.” 2
Yuanyuan 2
PT_SHIFT 1
RANSLATIONS 15
Modern 3
Page 39
Pthread_create(&p1, 5
OLICIES 16
Running: 1
Overlap 2
Record 1
Queues 4
Mauro 2
REEMPTIVE 1
Problem” 3
Seward. 1
PTIndex 1
ROPORTIONALLY 1
Schroeder. 1
TLB 173
PREMATURE 1
Unknown.. 1
Mitchell. 1
TERMS 1
Von 2
Spider-Man: 2
Recommended 1
Repeatedly 1
Paul 3
Interlude: 4
RE 1
Q6 1
Lower 1
[AC97]. 1
Paged 2
README 20
Navarro, 1
Pal 1
R.H. 1
ONCURRENCY 3
Scott. 4
P.M. 1
Responsibility” 1
R/W 1
Microsoft’s 1
RISC 14
Process1 9
Single-Queue 1
Page” 2
Randomization” 1
Scott 10
TORAGE 1
PTE, 6
Unlock 2
Mudge. 1
THREADS 1
WAITING 1
Spurious 1
Repair 1
Replacement” 1
Performance 11
Ion 2
Rago. 4
ROCESSES 1
MAP_ANON|MAP_PRIVATE, 1
[B+18], 1
Preemptive 1
ROM 2
Needed 1
Pathfinder/Authoritative 2
R4000 5
Segregated 1
PACE 21
Right! 1
ORG 166
Raging 1
Morgan 6
ROP 3
Protection) 1
Some 25
Sopena. 1
Reboots 1
Segmentation” 1
Tb, 1
Times 1
Until 3
Multics” 1
NDETERMINATE 1
Stallman. 2
Structuring 1
Response 3
WWW. 166
Pollack, 1
January, 2
Regions 1
Rashid, 1
MPORTANCE 1
[B89, 2
Present 1
Recovery” 1
OSSpinLock 2
Physical 13
RINCIPLE 2
Sequential 2
PDE 8
S, 6
OSes. 1
Redell 2
Mysterious 1
RaiseException(TLB_MISS) 1
Python. 1
Particularly 1
States 1
Review, 3
Specification, 1
Passing 2
To? 1
VAX-11/780 1
TLB) 3
NUMPAGES 2
Replacements 1
Susan 1
Rings, 1
Wahbe, 1
Positive? 2
Just 15
Revolution 1
Refers 1
Malloc(sizeof(myret_t)); 2
[CP78] 1
[D97]. 1
Remove 2
Once 41
Processing 5
Raiders, 2
Size 10
PIECES 38
SCHEDULER 1
PDBR 2
Redirection 1
NTERRUPT 1
Ratios” 1
Q1. 1
Plenty 1
Stevens, 2
S+03] 1
Stanford, 1
Quarterly, 1
Together 1
Va5 3
TLB-miss 1
Now, 26
SJF 21
Switches 1
Round-Robin 1
Waiting 8
Protocol 3
L1) 1
Scalable 10
Remzi 6
Management, 2
Price. 1
[Free] 1
Return-into-libc 2
Ott. 1
Professor: 37
RaiseException(PROTECTION_FAULT) 9
State: 2
Page-Reference 1
SEFUL 2
PD_MASK) 1
Reduce 1
NULL) 6
Reducing 1
RR, 1
Pthread_cond_wait(&c, 3
Storage” 1
SHIFT 8
Store-Conditional” 2
RUN 5
Translations 2
Ready 58
Technical 4
OLICY 4
SLEEPING, 1
Synthesis 1
Run: 2
Were 2
Queue_Dequeue(queue_t 2
L78]. 1
Shared 2
River” 1
Mao, 3
Priority(B), 4
[J91]. 1
Robert 9
PAT 1
Programming: 3
Recollections 1
Strategies 2
Patt 1
SEG 2
PTHREAD 4
Reeves. 2
OBS 1
Relationships, 1
Randell. 1
Queue_Enqueue(queue_t 2
StoreConditional(int 2
SN_SHIFT 1
Sun). 1
Virtually 5
Trevor 1
Recheck 1
Than 1
ONCURRENT 16
STDOUT 1
TV 1
SJCC, 1
Which 12
Queues: 2
LLUSION 1
Sleeping 3
Runs? 1
McCarthy. 2
Pthread_cond_signal(&fill); 2
[LL82] 4
SIGINT 2
PDE, 1
Pthread_cond_signal(&c); 4
Ritchie. 1
Supporting 1
Pieces 2
SPARCv9). 1
Paperbacks, 1
Registers 1
ONDITION 1
Review” 2
Relocation 1
RADE 1
STCF. 1
Surveys, 1
Wulf. 1
UIDELINES 1
Riak. 1
Threads 5
T 378
OOPERATION 1
Sequin. 1
Thread2 6
SJF, 4
Within 4
R 21
Lampson, 2
Software-based 1
S09]. 2
McCarthy’s 2
Pthread_mutex_lock(&m); 6
[M07]. 1
SIGTSTP 1
SOMETHING 1
Pthread_cond_wait(&cond, 6
SSD, 1
Swaminathan 2
Pillay. 1
Scheduler 5
Pilot 5
Represent 1
ONG 1
Ritchie) 1
Replacement 6
REE 19
Saint-Exupery 1
Swift 2
[4] 1
University 6
Run 68
UTUAL 1
T2. 4
OR’d 1
Shacham. 2
Threads? 2
Save 2
Yupu 2
RIORITY 1
Lanigan, 4
Solution: 1
SHIFT) 8
Menace 1
Q0 13
[R97] 2
PageTableBaseRegister 1
Schwarz, 1
Pthread_mutex_lock(&lock); 6
Schedulability 1
Swap 4
Portable 1
Seg 1
Prentice-Hall 1
Rule 14
OPERATIONS 1
SGI. 1
STACK: 2
Read 38
Scheduler” 2
System/370” 1
[AC97] 1
Upon 3
S_IRWXU); 2
VMS), 1
Tc1, 2
Orleans, 1
Steinberg 1
Threads” 6
Scan-resistant 1
[C69]) 1
RR. 2
Late 1
Sorin, 1
Secure 1
Molnar 1
ROBLEM 4
[S+04] 1
Patt, 1
Segmentation 3
RISC, 2
Search 2
Swift. 2
Press, 7
Showing 1
Pretty 8
SE 11
OU 1
SJF. 2
STCF 8
Read-Execute 1
Simply 3
TestAndSet(flag, 4
[B,C 2
VAX/VMS. 1
Section 1
Va4 2
Tel-Aviv, 1
P0 4
Stoica 1
Tim 2
Should 4
[CSG99], 1
Randal 1
List_Init(list_t 4
Spin(), 1
Semantics 3
Must 2
Random 21
[SHW11]. 1
Persistence 1
Separating 1
RaiseException(SEGMENTATION_FAULT) 5
Server” 1
T2), 2
Process: 2
Soon 2
Pthread 11
SS+10]) 1
OWERFUL 1
Sanzi, 1
Shah, 2
Reduced 2
Smotherman 1
ULL 1
[BH73] 2
VAXen 1
Shedler. 1
Was 1
Tix:50 1
Parts”.) 2
Structures” 2
Tony 1
Stoica, 1
[D72]. 1
Rather, 4
MALICIOUS 1
Spin(1); 2
September 13
NIX: 1
Recent 1
[Y+18]), 1
Prof. 1
She’s 1
Reclaim 1
Restoring 1
TABLES 15
Producer/Consumer: 3
Spaces 3
Pthread_cond_wait(&empty, 2
SSD. 1
Operations 3
SYSTEMS 42
Sharedmemory 1
Report 2
Splitting 1
URL: 1
[C03]. 1
VMS, 1
Solomon. 2
Windows 10
U.C. 2
Patterson 2
TO 26
UPPORT 2
Subsequent 1
[L+13] 2
Results 1
Macintosh 2
Stephen 4
Shedler 1
Neely, 2
Required 1
__lock_t 8
Running 24
Sizes 1
Simple, 1
Resulting 4
TPDS 1
Put 4
Streams 1
Q7 1
Scalability 3
P4 1
Security 2
Short 1
SEG_SHIFT 1
Staelin. 1
USE 3
[CD85] 1
VPN. 1
Stack? 1
Woodlands 1
UEUE 11
Perry. 1
Tamil, 1
VERLAP 1
Then 17
[L78] 3
SWITCH 6
Maurice 2
Support: 1
Star.” 1
Nimrod 1
Pthread_create(&p, 5
abstraction 15
S. 22
Slutz, 1
Sometimes 9
Richard 9
Tables 9
ROCEDURE 1
System: 1
REASON 1
Scheduled 1
PDP 1
Self-Tuning, 1
PFN 43
SIGNALING 1
Status: 1
Use 35
[D97] 1
VPNs; 1
Statement 1
Write 11
US, 1
Peter 5
Tc, 1
Va3 2
Though 5
[M11], 1
SYNCHRONIZATION 1
McDougall. 3
Switzerland 1
Steve 4
Nir 2
Q4 1
accessed? 1
SECTION, 1
So, 1
Spectre 3
SUPPORT 1
Then, 19
ROPORTIONAL 13
TOPLAS, 2
RITICAL 1
Science). 1
Single-Threaded 2
Spending 1
Stack11 2
Stodolsky, 1
SunOS 1
Systems 18
TD 2
THREAD 12
THREE 37
Stick 1
User’s 4
[G85] 1
Vegas, 1
Steven 1
Yale 1
Unused 2
Pons 1
Those 2
Wanjohi: 1
[N+02] 1
Time 29
Schedulers 1
McKusick, 1
Systems” 7
Surprisingly, 1
No, 2
Queue 8
accessible, 1
SN 3
Sriram 2
Stack 14
Secker 2
Therein, 1
RTFM 2
Tc1). 1
Rajimwale, 1
Report, 2
Smaller 1
PT 2
STCF, 1
Takes 2
Structures: 1
VirtualAddress 7
[H93] 4
What’s 4
Storage 10
[3] 1
Useful 1
Poor 1
Weaver 1
[N+07]; 1
To 152
Trees 1
Tresponse 1
Seward, 1
Measurement 2
TLBWR, 1
Swap-Based 1
Notes 4
RAND 5
acquire/release 2
Saavedra-Barrera. 1
Start 5
Stan 1
See 43
Things. 1
Relocation) 2
That’s 6
Setup 1
Resource 4
Stored? 1
PTEAddr 6
Short, 2
Techni-cal 1
Superpages” 1
WRONG 1
[J91] 1
[A90] 1
Swapping, 1
[B89] 2
VAX/VMS 11
PowerPC 1
Weiwei 2
[WW94] 1
Today’s 1
Tron 1
Sorry3 1
VM 18
Thanks. 1
T3 8
Number 8
REMATURE 1
acquired, 2
Said 1
Store-Conditional 2
Sun 5
Seems 1
Third 1
Research, 2
Try 11
Silicon 1
Responsibilities 1
Structure” 1
Patel. 1
Shortest 6
Techniques” 2
THINK 1
Waiting: 2
[M07] 1
[B94]; 1
TLBs 10
[D+13] 2
Prints 1
VPN 69
Wilson. 1
a2 1
Torvalds 1
Mesa 4
Speaking 1
VMMs 1
There? 1
TCB. 2
OOK 1
Red-Black 2
actual 15
Scaling 6
Store-conditional 2
Tb 2
Shared-Memory 4
TimeSharing 1
Restartable 1
ULTIPLE 2
Similar 3
Round 3
Switching 4
Pennsylvania, 2
Signaling 2
TLBP, 1
There 42
Wakeup 2
[SHW11] 1
[BC05] 3
Ta 3
[E95] 1
This 201
Wilson’s 1
WWW.OSTEP.ORG 42
affords. 1
Trace 9
Mike 2
Sploitfun. 1
WARY 4
Tickets 1
TILIZATION 1
OPERATING 42
Register 8
advocates 1
Scientific 1
Summary 30
Threading 2
Shared-memory 1
Tp). 1
Restricted 1
URSE 1
Simulation, 1
Saving 1
TLB. 13
Personal 2
Silas 3
TLB_Insert(VPN, 3
YBRIDS 1
[SN05]. 1
[BC91]; 1
[BH00] 1
[CK68]. 1
[H74] 1
Thompson 1
Wisconsin—Madison, 1
Well 1
ahead 8
Translation 5
NUMCPUS; 4
Sun.. 2
Wanted 2
Trap 2
TIP: 9
OSTS 1
Reuter. 2
Operating 38
Shacham, 1
Survey 3
Tickets? 1
Shavit. 2
Traditional 2
Roscoe. 1
User 14
Sitaram 1
Second, 31
TLBs; 1
Plus 1
Simpler 2
TLBs) 1
[BJ81] 1
a[3] 1
Tuning 1
Probability” 1
[JS94] 1
[HP06]), 1
Worse: 2
Werthman. 1
Thread 95
algorithm, 8
Trials 1
NX 1
Sweden, 2
Work 1
U/S 1
TS 1
affinity 8
O’Hallaron. 2
SIDE 40
Shortly, 1
TLB, 21
Trans. 2
Shavit’s 4
UMMARY 3
Routines 3
Vol. 5
Standard 2
Segmentation: 1
TLB’s 1
Presumably 1
Solaris” 1
TR-95-22, 1
[FLR98] 1
above? 3
Types 1
Pthread_cond_wait(&fill, 2
[M11]; 1
[J09] 1
[2] 2
Three 4
algorithmic 1
Undoubtedly 1
OK, 11
Switch 3
Workload 11
USA. 1
Table? 1
again: 2
What 214
O’Reilly. 2
SOSP 9
Sood, 2
TLBWI, 1
Tricky 2
Solaris 18
UPERUSER 1
S.J. 1
WITCH 1
Steinberg. 1
Space-time 1
TestAndSet() 6
Problems 1
Sounds 6
TRUCTURE 3
[FP89]. 1
access: 1
Pthread_mutex_unlock(&lock); 6
U 89
[MS91] 2
[M06] 1
[B97] 2
Time) 2
allocate(100), 1
VAX 5
ORE 2
Synchronization 8
Yield, 4
VA 1
Third, 5
algorithms 26
Without 15
PLDI 3
SPARC, 3
Special 1
Tcompletion 2
Typical 1
Solution 5
Usually, 3
SIZESORT-) 1
WORST 1
Strachey. 1
Stevens 6
Pthread_mutex_unlock(&m); 6
Staelin, 1
Technische 2
[HP06]). 1
accomplished 9
Published 1
VMM-level 1
[O49]. 1
[M15] 4
Thus, 206
[BNS69] 1
Transactions” 2
allocate. 1
VM, 3
OSes, 1
Systems: 6
[B72] 1
VAX-11/750. 1
Turning 2
Typically, 2
UNSW-CSE-TR-0321, 1
PTE 17
Saltzer 1
Stanford 1
Time” 1
UCB/CSD-92-684, 1
Soyeon 2
Valley. 1
SPARC 9
Worst 2
Strachey’s 1
Still 5
Q3 1
Stallman 1
Think 12
[K64] 1
accuracy/performance 2
WAIT 1
R. 33
[SR05] 6
[W95]. 1
Tom 2
[C+04] 1
Two-Phase 2
alternates 1
VPN; 2
OUBT, 1
T2, 4
Tc2) 2
Valgrind 2
annotate 2
XIST, 1
VPNs 5
PTHREAD_COND_INITIALIZER; 3
Scheduling” 1
Starts 1
Timothy 1
Stretch 1
Vyssotsky, 1
USSEAU 154
STCF) 2
YNCHRONIZATION 1
Structure 3
Summary: 2
Queues, 2
Support” 1
Traffic” 1
[KL88]. 1
accurate); 2
Wait 1
RAID 1
[WG00], 1
a[2] 2
Tp, 1
[C69] 1
Two-phase 2
alternatives! 1
Vasileios 2
[CP78]) 1
OW 34
TestAndSet(int 2
W 17
anymore? 1
Zebra 1
Va0 3
Page, 1
Server. 1
State 12
Tudor 2
Student: 36
We’d 1
Understanding 2
Sleep 40
V 31
Synchronization” 2
Sumner. 4
RR 14
T1). 4
Transitions 1
[L09] 4
action. 1
XCLUSION 1
RAM 5
[virtual 5
accounting 4
Tree 1
[D68] 7
Volume 35
amazing, 2
Wait: 1
[D70] 1
Otherwise, 1
Too 3
WITCHES 1
approach, 25
Zuckerberg 1
Virtual 12
PageTable[39] 1
Singh, 1
Subramanian, 3
UILD 3
Supervisor” 1
Where 7
Yes. 1
Small 2
VICT 1
System, 2
TABLE 2
RSS, 2
TLB: 2
ULTI 11
[L81] 4
addition 13
Zel-dovich 1
Reese, 1
a[i] 1
accuracy 1
Tricks 1
[DV66], 1
Voorhis. 1
We’ll 38
[E06] 1
P6 1
Transparent 2
Watch 4
arose 5
[B+96] 2
WORST)? 1
Pass(A) 1
Slow 1
Suli 1
University, 2
Symbiosis” 1
Wish 2
Zero” 1
Study 8
VMS 16
T1, 12
Table 18
Real 3
Thesis, 1
ULTIPROCESSOR 12
[LM+89] 1
addresses. 4
Zonkey), 1
Ronald 1
abbreviated) 1
across 30
UNIX-based 1
[G83] 1
[GR92]. 2
Whereas 3
[G04] 1
PID) 1
U.S.S.R; 1
Whether 4
array; 1
[B75]. 1
Waciuma 1
Perspective” 5
System 37
Support 9
VPN: 1
Systems.’ 1
Yang, 1
[CG68, 1
Summer 1
W.C. 1
TOOLS 1
Tc1 9
Referring 1
Traiger. 1
Unfairness 1
[Low 1
advice 4
[B+79] 1
SPINNING: 1
abilities, 1
adjust 1
VALID 3
Why 28
[H91] 2
William 3
[I11] 2
PPROPRIATE 1
Undefined 1
Why? 5
asleep 3
[CK68] 1
Weihl. 1
Processing, 1
TLB; 1
T1 30
We’re 1
THE 9
Yet) 1
[FP89] 1
Swift, 1
WAPPING 1
TRUCTURES 17
Thrashing 1
Region 1
Turns 2
VAX-11 4
VLSI 1
Waldspurger. 2
Waldspurger’s 1
Scheduling: 6
and 2770
above), 3
advantage 14
Values 2
Will 6
[I09] 4
[K+61,L78]. 1
[MM03]. 1
Page-Fault 2
Users 2
Wikipedia 3
assume, 2
[D82]. 1
Wood. 1
Proportional 2
TeX, 2
TAKE 1
Who 4
TLBs, 6
Zhiqiang 2
[K68]. 1
Techniques 2
Weaver, 2
TeX 1
Time-Sharing 8
Requirements 3
USENIX 8
[M62] 1
[B94]. 1
again, 31
Wanjohi. 1
Sleeping) 1
ap-proaches 1
abused. 2
alloc 1
Waldspurger 6
Wood-lands 1
XECUTION 15
[KE+62, 1
[RK68] 1
Physical) 1
VMware 1
Workstations” 1
batches 1
[D91]. 2
Y. 1
Proportional-Share 3
Theodorus 2
TOCS, 3
[AD03]. 1
TM 2
[BJ81]. 1
[KL88] 1
Terminology 1
Wikipedia? 2
Tell 1
Tracing 8
Rewritten 2
UST 1
[P10]); 1
[C93]. 1
amazingly 3
When, 1
Sorry! 1
applications, 6
address-translation 4
alright 1
X-windows 1
X 3
YOUR 1
[L60] 1
[TTG95]. 1
Processor-Memory 1
Visualization 1
Yield 2
[K+15] 1
[AC97]; 1
Proportional-share 1
TlbEntry) 4
been 100
Take 2
[B+18] 1
[CS94] 1
[MB91]. 1
Test-And-Set 2
Wiley, 1
Texas, 1
Unlike 5
That 14
WITH 1
[RL81]. 2
[HJ92] 2
another; 1
Wow! 1
Spinning: 2
arise? 3
advanced, 2
amortize 2
Yandong 3
Zelenka. 1
Your 1
[LR80], 1
[W06]. 1
Protection” 1
The 821
Warm-start 1
Zorn. 1
[L11]. 1
[B94] 1
Pthread_cond_signal(&empty); 2
Tolerance 1
bit; 1
Tarrival 3
[B+72] 2
[EF78]) 1
[N+02], 1
Test-and-set 4
Woke 1
These 24
VLDB 2
Tomlinson. 2
Wales 1
__list_t 2
[J16], 1
anti-gaming 1
[C03] 1
Stanley 1
arises, 4
advantageous 1
amt) 2
Yes? 1
[AD00]; 1
You’re 2
[MS04]. 8
[W15]. 1
Q5 1
Through 1
We’ve 2
[B+13]. 1
[O49] 1
[BC05,G04]. 1
Q8 1
Uh 2
break), 1
Test-and-set, 2
buffer 43
[FLR98]. 1
[P81]. 2
Runtime 1
Xerox 2
Transactions 3
VPN_MASK) 7
Tools 1
a[4] 1
[K+61] 2
appealing; 1
[CS97] 2
We 166
Stockholm, 2
arranges 1
advent 1
analogy 1
You’ll 3
[BH70, 1
[B+19] 1
[S04]; 1
accomplish 9
Rather 1
Timer 1
[C95]. 1
[R69]; 1
When 122
[BC91] 1
ROVIDE 1
VAX’s 1
[C+62] 2
Up 2
bugs) 1
[High 1
[RL81] 1
SQMS 7
Zeldovich. 2
Turing 5
Va1 2
Uman 3
above 50
[LL82]; 1
appears 1
[DV66] 3
Whew! 1
Sure! 1
array[1000]; 1
age), 2
answer; 3
Zeedonk 1
[BH73], 2
[C06]. 2
[SS+10] 1
achieves; 1
Redell. 1
Underlying 3
[E95], 1
[S09] 2
YSTEM 2
[C93] 1
Rago 1
VPN=39 1
[DD68] 1
VPN=42. 1
building, 1
[K64]. 1
[W02]. 1
STRUCTURES 16
[C69], 1
UNESCO, 1
Virtualizing 2
Waiting-Line 1
abstractions 7
[MM03] 1
approaching 1
[E06]; 1
Wilson 2
TEST 2
aspects 10
algorithm; 2
approximate! 2
[BB+72] 1
[BNS69]. 1
[D70], 1
a:30:200 1
acquiring 22
Redell’s 1
Unsafe” 2
[H74], 1
[W+95], 1
Yet 2
[CK+08]. 1
Raiders” 2
Value 1
[JM98]. 1
Van 4
bx 2
[KE+62] 2
[WW94], 1
Scotland, 2
[CM00]. 1
Uncontrolled 2
VM. 1
Warehouse-scale 1
access; 1
[MS96]. 1
appropriately 3
[LR80] 1
TLBR, 1
assumption 10
With 82
all) 1
approximation 1
[BH00]. 2
[C+04]. 1
[H87] 1
a[1] 1
ago, 5
SPINNING 1
VPN=0 1
[J09], 1
a3 1
Zhou, 2
[CSG99] 1
Really 3
Vyssotsky. 2
[JS94], 1
Vancouver, 5
c->global; 2
[L+75] 1
a:100:100,b:100:50,c:100:50). 1
absolute 6
Specifically, 52
VPN_SHIFT 1
VARIABLES 18
Wilson, 2
accidentally 12
[O11], 1
assembly, 3
[M65]. 2
TLB_Lookup(VPN) 4
atomic_decrement 2
Word 1
allocators. 3
architectural 2
[BS+09, 1
[D01]; 1
[L83] 2
akin 2
SSDs) 1
accesses 47
Working 2
[M+70] 1
[A79]) 1
able 59
[CV65,DD68]) 1
RetryInstruction() 4
Wilkes. 1
[K65] 1
Virtualization 5
c->local[i] 2
[L+93] 2
[L83], 1
accesses), 1
Spectre. 1
Wei, 1
Variables 3
Wouldn’t 1
account 6
[TTG95] 1
attempts: 2
[NM92] 2
Tc2). 1
atomicity 8
Worried 1
already 28
array, 7
[CG68] 1
[D68]. 2
[M28] 1
all... 1
Same 2
according 3
Wrapper 2
[M06], 1
acquire 57
[D65] 2
address. 21
SOLATION 1
Wisconsin 1
[M28]? 1
Visually, 1
[H61, 1
W. 18
[M82], 4
actions. 1
Springer-Verlag, 1
Xiong, 2
WHILE 2
XITS 1
activity 3
[W06] 1
badly 1
[O90]. 1
Technique: 1
author 2
Worse, 3
amazingly!), 1
array-based 2
[M65] 1
[D70]), 1
[M82] 2
analysis” 1
Sanjay 1
YNAMIC 1
[BOH10] 3
[MS98]. 2
active. 1
[G62] 1
administrators 2
Sadly, 2
Workshop 2
YOU 2
[HP06] 2
calling 55
Weihl, 2
[PP03] 2
actively-used 1
Stan. 1
Yes 1
Weihl 1
XXX 2
alas, 3
[W15] 1
behaves. 5
[S07], 1
Times?” 2
XD 1
amount. 2
avoid 50
ask, 1
[M83] 1
[G+95] 1
[S+04]), 1
answers 3
Scheduling 12
YPES 2
[C63]. 1
[SS74]. 1
actively) 1
[H61] 1
alike. 1
Scientists 1
[O16] 1
Yes, 9
[W+95]. 2
capacity, 1
Whichever 1
[R97]! 2
You 89
actually 38
York, 6
While 31
Zeldovich 1
allocator, 5
__hash_t 2
behaviors) 1
[SN05] 1
Tix:100 1
ZFS) 1
ancient 2
base-and-bounds 4
assert(tmp 2
[MS91]. 2
[G85], 1
[S+11]). 2
anywhere 6
Science, 1
[B+10]; 2
[EF78] 1
[W17] 2
adapt 1
[M+63]. 2
all; 4
Served 1
[SR05], 3
[WG00] 3
card 1
While, 1
Structures 6
[SA96] 1
[AD00] 1
additions 1
[A91]. 1
Winter 1
[B86] 1
anyhow). 1
a4 1
bits: 1
a:0,b:1,c:1 1
True 1
[B+18]. 1
anticipate 1
bash), 1
atomic. 2
[O45] 1
[H91]. 2
[S04] 1
approach), 2
Segments 2
[B+79], 1
[G+17] 1
[W95]: 1
address); 1
[M11] 2
[MS96] 2
Servers” 1
a[5] 1
__queue_t 2
chan 1
Wikipedia. 1
Sun. 2
a:100:100,b:100:50, 1
[B+19]. 1
address-space 5
[B72]. 1
Y 3
[CM00] 1
applicable 2
about: 1
blocks. 2
access, 9
UNUSED, 1
[BB+72], 1
anyhow, 2
be, 2
attacks 5
[O72] 1
[H93], 3
[V+65,BH70]. 1
approximating 1
Shasha. 1
architecture 18
[MM00] 2
__Node_t 2
addresses, 3
allocation. 7
[NM92]) 2
Solaris, 7
ability 11
a[1], 1
chapters 14
Sun’s 1
a[9]) 2
[D01] 1
again? 2
[BC05, 2
[CK+08] 1
YSTEMS 203
[CV65], 1
approach? 3
achieve 12
book! 1
action 15
Unfortunately 1
[CV65] 2
anything 17
attempt, 2
[O90] 1
[I09]. 2
before 130
[VPN 11
[BS+09] 1
Specific 1
argument 22
[PS81]. 1
__node_t 10
again!) 1
allocators 9
[anon 1
Sound 2
accessible 3
abilities 1
choosing 2
Systems, 3
[H87]. 1
ahead, 3
[D70]. 1
[D+13]. 2
[B+00] 2
[K+61,L78], 1
args 8
about 294
acquisition, 2
books. 1
added, 1
VAX/VMS, 2
[GR92] 2
application. 4
backward, 1
[S05] 2
[N+07] 1
before!” 1
a[6] 1
[C06] 2
Spin-based 1
arrive: 1
[S07] 2
accounting, 1
aims 1
about, 2
amount 37
Sundararaman, 4
achieving 7
about; 3
chunks. 3
System” 22
[K+96] 2
allegorical 1
[G04]. 1
[E95]. 1
[D65,D68] 2
[LL82]. 3
array. 4
above. 20
activities 3
both? 2
additionally 1
VMWare’s 1
[K65]. 1
architectures, 1
basic) 1
a[7] 2
[P+95]). 1
become 32
accommodated. 1
[C54,PV56] 1
Spinning 4
assert(count 2
[W03] 1
accrued 1
answer: 2
acceptance 2
an-THREE 1
Swapping 1
acquired 15
above) 6
clean). 1
TENEX 3
[S15], 1
allow 22
[K68] 1
[H74]. 2
[D68]; 1
[LM+89]; 1
array’s 1
add, 3
accessed 42
bottom). 2
VPN, 2
[L09, 2
addresses 42
arguments, 5
about), 1
begin. 3
[Page 2
beginning: 1
accordingly 1
[CD85]), 1
Support) 1
assigning 1
[WL+93] 1
accumulates 1
anyone 3
accessed, 12
analyze 3
Tc2 7
again. 24
accesses, 4
clears 5
This, 2
[W95] 1
always. 1
[MB91] 1
[LR80]; 1
[D72] 1
[MS04], 2
arrived 6
addl 2
accident 1
bowels 1
Well, 27
[LM+89, 1
adoption 1
arise. 3
abuse 1
belt, 1
[QI15] 1
behave 12
address) 2
[L78]. 2
[P+95] 1
avalanche 1
a1 1
acquisition. 4
approximate 20
achieved. 3
application 29
Thanks 5
all), 1
addr:10 1
code? 9
Thus 24
] 2
and, 5
[P81] 2
[M+63] 2
[G83]; 1
[S59, 1
assertion), 1
addresses). 1
accomplishes 1
buffers? 1
[AD03] 1
[M83], 1
advantages 5
arriving 2
accept 2
better.” 1
[S+11] 2
benchmark 3
addressed 2
Systems. 1
basics. 1
a[9] 1
[VERSION 42
active; 2
approximation? 1
approaches. 2
adding 35
Trace: 4
am 16
advanced 7
codes, 2
Ticket 3
a[i]; 1
another. 6
[P90] 1
[R69] 1
[KR88] 2
[W+95] 4
assumption: 1
affinity; 1
account. 1
business 1
[G+17]. 1
[MS04] 2
algorithm). 1
attackers 2
accessed), 1
binary. 1
[SB92] 1
benefit. 1
admit 1
behaviors 2
T2 38
addr:20 2
architects 4
arg: 1
access 133
address! 1
Trigonakis. 2
answering 1
allowed. 1
commonplace, 3
Tiny 1
accommodate 4
applied 5
[RK68]. 1
[S+03] 1
[M+70]. 1
[X+10], 2
available, 11
algorithm. 2
activity. 2
bye, 1
[JM98] 1
[O16]. 1
alloc()/free() 1
attention, 3
boost, 1
accessing 36
[W09] 2
bit, 10
adversely 1
bits1 1
TR 1
advisors, 1
arithmetic 2
argue 1
accesses)? 1
admission 1
True) 9
anything, 5
altering 1
compares 1
Torrellas, 1
accordingly. 3
appreciation 1
[S15] 1
[S+68]), 1
[Y+18] 1
above; 7
away; 1
allocated, 2
addr 2
check. 4
[NS07] 1
[O45], 1
allocating 19
authors.. 4
boots, 1
accom-plish 1
a:30:200. 1
agent 1
block 22
breaking 1
Technique 1
ago 1
arrives. 2
argv[1]; 1
accesses?) 1
advertise 1
Turn 1
appeared, 1
arcane, 1
completes. 4
Tp 3
acquires 8
arguments) 1
[S05]) 2
accesses; 1
abstraction. 1
beautiful, 1
anon) 1
[V 166
address), 1
choices. 1
[S07]. 1
[O72], 1
answers; 2
base/bound 1
break. 1
address>, 1
a[1]. 1
alas. 4
builds 1
book 47
Thompson. 1
agreed-upon 1
assert(p 1
arise 12
added 12
affecting 1
USA 1
applies 1
architectures 2
completion 4
ULLER 1
actions, 1
[S59] 2
array 46
achieved, 1
accessibility 1
big; 1
applications. 12
[W02] 2
addressed, 1
chosen, 1
[W03]. 1
[X+10] 2
appreciate 1
broadcast 1
administer 1
a[3], 1
all!), 3
basic 94
born: 1
Time-to-Completion 2
allocated. 5
assists 1
arose: 1
c 177
address, 7
against 9
UT 1
arguments 23
complexity, 1
UNIX 7
address(es). 1
approach 138
[S68] 1
ask 12
ad 3
accidental 1
bit. 5
aren’t 5
[stack 1
admit, 1
chucking 2
[WL+93]. 1
a; 4
appropriately-named 1
btrees. 1
aforementioned 2
a[6]) 2
allocator. 2
batch 7
bottleneck 1
Tix:250 1
anytime 1
atomically; 2
arrangement 1
c4, 1
address-based 1
ain’t 2
VAX/VMS), 1
astute 2
conceptualized 1
Unix 1
address). 1
archive, 1
[SN05]; 1
assembly? 2
addr:0 4
accumulated 1
arg; 7
__counter_t 6
again; 3
both 87
chunks 13
access. 8
accessible. 2
a 3927
buffer[MAX]; 1
aggressive 3
accesses. 5
allocators; 1
behalf 2
Transformers 1
bounds 48
appearing 1
attained 1
array), 1
cannot 21
advance 1
VS 1
algorithm 34
attention 10
concerns? 2
V. 3
addresses? 1
alive, 1
attaining 1
above, 39
address? 1
accurate 2
arises. 2
a+b,b+c,c+d,c+e,c-. 1
al. 5
briefly 7
cleaned 1
address: 8
clearly 17
active 13
about-to-be-run 4
bytes, 10
allotment 2
accused 1
alone 6
below) 3
Tturnaround 3
brk, 1
approach) 1
avoided. 2
also 213
affected 1
Va2 2
all. 9
award-winning 1
condition3 1
VMS. 2
assigned 7
allocation). 2
attempt 14
abundant, 1
advances 1
accustomed 1
around, 4
a:100:100,b:100:50,c:100:50) 1
also, 1
broadly 1
approximations 2
affected. 1
clock 11
actuality, 1
accesses). 1
cache? 2
almost 13
act 3
beneficial 1
ULE 2
approached 1
caused. 1
as 1029
balanced 6
am! 1
Virtual-Storage 1
amazing 9
beguiling 1
after 54
conditions 9
Whenever 2
but 288
allowed), 1
away.” 1
assume 80
achieved 1
all, 17
achieves 7
art. 1
a[8] 1
altogether, 1
broken, 2
arg); 8
close(fd); 1
again 58
adds 24
actively 4
caches, 5
alone! 1
addition, 4
blocked. 2
Using 19
arrives; 1
chain 2
asked, 1
at 576
amount; 3
Wow, 2
amounts 7
beware 1
alike, 1
constructed, 1
Why, 1
byte). 1
allowing 22
axes. 2
automate. 1
additional 15
all-too-trusting 1
active, 2
actions 18
anticipating 1
buffers 6
args->b); 4
cloud), 1
alternate 5
adios, 1
adapted. 1
call). 5
amplifying 1
addr:21 1
answer 29
VERY 1
articles 2
challenge 5
bash, 1
assumptions. 2
attributes. 2
Write-back 1
anti-hero 1
beyond), 1
allocation, 2
consume 5
X, 1
c->value 4
always, 5
back-to-back 1
background. 2
addresses; 4
activity; 1
allocate 31
activate 1
arising. 2
c:100:50 1
argument; 2
an 545
clustering, 1
alternatives. 2
affairs 1
address; 3
called. 4
book). 5
advice, 1
anything. 1
Variable 2
asking: 3
chapters) 1
beauty 2
atop 1
axis 4
[1] 2
any? 1
bit). 3
allows 37
consumer. 2
Xerox. 1
cache). 1
amortized. 1
back. 2
bases 2
advantage. 1
affinity. 4
allocate(10). 1
ago: 1
associative 1
caching 9
arrays, 2
anomalous 1
cmpl 1
amazed. 1
affects 2
addresses): 1
caller 14
both), 1
alas). 1
appropriate) 1
Version 4
assembly). 1
cheating 1
behave? 4
attains 1
bad. 7
[A79] 1
anymore, 1
bodies 2
alternatives 4
contents, 1
Years 4
candidates; 1
amt; 2
backward 1
age-old 1
best 31
age; 1
alternately 1
albeit 2
atomically, 2
call1 1
arrive), 1
answer? 3
co-exist 1
analyses 1
allotment, 1
administrator 2
carefully, 6
bounds). 1
all? 8
arbitrary 13
Very 2
assume) 1
child? 2
behaves, 1
attentive 1
bandwidth 3
[B+13] 1
[BH70] 2
both) 1
among 14
contrast, 10
Zhang, 4
cast 4
another, 12
base); 1
body 2
algorithms. 5
animals 1
algorithms). 1
attacker, 1
camp, 1
all 247
ask? 2
answers, 2
co-workers 1
apparently 1
although 15
adopted 1
caution 1
breed 1
allocate(int 1
architectures: 2
Virtual” 1
assured 1
chopped 5
behavior: 1
attribute 2
base/bounds 5
applications 29
[BOH10]). 1
brutal, 1
and? 1
control-c) 1
[C54] 1
approximates 1
certainly 32
based 17
bounds”); 1
allowed 8
answered, 1
along 10
attr 2
clean-page 2
allocations 8
asks, 1
application; 1
code/stack/heap? 1
approaches: 1
an- 1
affordable; 1
chapter, 16
bytes; 2
allocates 11
arguments: 3
Warburg, 1
attacks, 3
chunks). 1
authors. 1
behind 31
basics 13
appropriate 3
[C95] 1
bus, 1
approaches, 1
costs. 1
[C63] 1
argc 1
choice 8
before, 7
branch 3
approach). 4
alternately, 2
average 16
clever, 1
alternating 2
any 171
atomics. 2
approximately 1
coherence 3
arise, 4
answer, 8
afterwards. 1
clear, 5
cache. 9
alter 2
argv 3
Weighting 1
avoided; 2
clean 9
balance. 1
benefits: 1
be. 11
area. 1
[CS94]. 1
bus-based 1
are: 2
count++; 1
[DV66,V+65]. 1
argument: 2
class), 2
bidding. 1
buffer[fill_ptr] 1
approaches? 1
avoided? 1
always 53
client. 1
amt>0) 2
appetite, 1
attempts, 3
architecture, 4
collection 3
arrange 4
approach. 8
ahead. 1
close(), 1
caches; 1
amazingly, 1
array.c 2
Wiggins. 1
awake. 1
cloud-based 1
basically 6
begin\n"); 5
arena 1
between 79
blocks, 1
butter 1
arrays 5
counter: 1
[HP06]. 3
asking 4
classmates; 1
arbitrarily 2
background; 1
building 41
bit 93
base 66
answer) 1
another 105
applicable; 1
baby 2
argument, 11
com- 1
arrangement, 1
argc/argv 1
alas 1
combination 11
calamity. 1
analyzed 2
aware 2
Wiggins’s 1
best-case 1
company, 2
basing 1
books). 1
arises 21
[J16] 1
book? 1
c3 10
aside, 2
course) 1
[PS81] 1
aspiring 1
client, 2
args->a, 4
built. 1
client’s 2
bits”. 1
bet 2
answered 1
answer! 1
approach: 5
baby!” 2
arise; 1
come–great 1
array[i] 1
arrives 4
algorithm: 2
community. 1
cannot? 1
apologize. 1
careful 16
Windows; 1
bitwise 1
concern; 1
batch-like 1
boost. 1
art 1
[KE+62]. 1
bounds? 1
call: 2
asks 4
credentials, 1
[SB92], 1
association 1
clustered 1
assign 3
burden. 1
cocoon, 1
bombs, 1
bits) 1
appear 4
answers. 2
arg. 2
backwards, 1
assert(rc 5
commands: 1
aside: 1
assigned. 1
complain 2
allocator 26
basics; 1
append 2
carefully; 1
X. 1
block, 2
below; 1
bottom 10
assuming 25
[L+75]. 1
concurrent 80
brutal 1
came 12
assert 3
cycles). 2
[V+65] 1
atomic 25
command, 4
assignment, 3
buying 2
command. 2
born. 1
data 252
are! 3
arbitrarily, 1
array) 3
base/bounds) 2
atomically 16
commonly-used 2
aspect 15
assistance. 1
complete: 1
altered 1
behalf. 1
challenges, 1
ZOMBIE 1
book, 18
better. 7
bouncing 1
attr, 4
[L+93]. 2
concurrently; 1
bug, 1
case: 4
assumed 12
about) 1
atomically. 2
companies, 1
assumptions? 1
cache: 1
commands; 1
borrow 2
boundary; 1
datacenters, 1
area 5
architecture. 4
asked 2
becomes 18
attacker 4
completes 6
are 870
assembly 13
available; 1
complicated. 4
amortization 1
chance 4
behavior 35
Zwaenepoel, 1
bounds, 5
bit), 1
box, 1
attributes 4
[M04] 2
connections 1
bus 3
cen-tral 1
assumptions, 6
above). 7
attacks2 1
compared 7
automatically, 2
calculate 5
compaction 3
both. 4
break: 1
daunting 1
array.c) 1
architectures; 2
assume: 1
behaves 11
available. 14
concept 9
assertion 2
associated 18
avoided 2
component 5
anything? 3
chapter; 1
below). 3
[B+10] 3
but, 1
black). 1
buffer; 6
bytes. 3
[MS98] 2
consist 2
bx=3 2
chains 1
atoi(argv[1]); 1
accumulate 1
attempting 1
completes? 1
auxw 1
caller; 2
compete 1
breathe 2
brk 1
decision, 4
array: 1
argument. 2
attempted 2
behavior. 4
award 4
concurrent) 2
attack 9
awful! 1
battle 1
computation 2
arises: 1
chooses. 2
benefits 5
[B66] 2
c4 6
blocked 16
automatic 2
c2 10
[O11] 1
constructing 3
c;, 1
challenges 2
attack: 1
address> 1
awesome, 3
computers) 2
awoken 3
capacity 2
compiled 6
broaden 2
broader 1
defense 3
asides 1
arguments; 1
avoided, 1
behaviors; 1
backing 1
confusing 2
avoidance. 2
background 15
behavior, 3
conceptually 2
assumes 14
class, 3
bigger 19
[B75] 1
call; 2
boot 11
bad 31
caches. 1
[P10] 1
contributed 1
call. 17
changed, 3
attempts 4
analysis 5
b; 4
concepts, 1
barons 1
careful, 3
con- 1
broadly. 1
buggy! 2
describing 4
ask: 2
arrival 1
bad! 1
benefits. 1
battles 2
consider-ably 1
badly, 1
base-and-bound 3
believe 5
concrete 1
assumption. 2
bolts, 1
classic 26
[D82] 1
careful), 1
bounds) 1
base, 1
carved 1
[PV56] 1
convention 2
can’t) 1
class 12
average). 1
anyhow. 2
back, 4
concurrency 36
cares 2
begin 32
conclude 2
brought 10
bugs. 11
design 22
attacks. 3
avoiding 16
before), 2
best-fit 7
begin... 1
consisted 1
big. 3
bigger, 2
because 93
condition, 7
atomic_increment 2
boosted 3
clear; 1
[D91] 2
case; 3
byte 15
caused 2
[RT74] 1
copies 12
case. 3
cleans 2
away 12
architectures. 1
became 21
condition); 1
cases? 2
consumers. 1
being 54
built; 2
bx=100). 2
desktop 4
auto-magically 1
awesome 2
biased 2
bible 2
behaved 1
consumer 26
bit! 1
be 785
billions 1
begins 13
confuse 1
attain 3
broadcast(), 1
close, 1
[G+95]. 1
certainly, 1
c->local[cpu]; 2
centralized 1
[SA96]. 1
correctly, 3
causing 3
close 11
awesome! 1
are, 4
began 4
construction 7
chaos 2
consumes 2
below, 2
bx=0,bx=1 2
c->global 4
detector 1
automatically 6
bit) 1
back 65
big!”, 1
behavior? 2
contain 6
bits. 2
below. 13
bounce 1
below? 1
connected 4
attainable, 1
browser, 1
cluster 2
[L11] 1
chips 3
c1 10
chances 4
[SS74] 1
could, 1
cache 86
code; 3
backwards 1
argued, 1
begin\n", 2
consumers, 2
chosen. 1
contention, 2
better? 1
caller, 4
devices). 1
ax 4
blank 1
beginning 15
big, 3
better) 1
continuing. 2
blocked, 3
bits), 2
brag 4
blocked); 2
consuming 3
author. 1
cold 3
[LL82], 1
choice, 2
chapter. 25
a1). 1
build 118
challenging. 1
creators 1
cake 4
combat 2
before? 2
by 705
arguments. 4
beginning, 1
contiguous; 1
citations 1
control, 4
biggest 4
calloc() 1
differentiate 2
ax=0,ax=1 2
bounded-buffer 1
behaviors. 2
bits, 7
beyond. 1
correct: 1
book), 2
boost 8
build, 2
blocks: 1
context. 2
authors’ 1
comfortably 3
[QI15]. 1
chosen). 1
characterize 1
a:100:100,b:100:100,c:100:100) 1
a[0] 2
changed 18
crucial 2
centers 1
combining 7
begins: 1
c->threshold 2
arranged 1
begun, 1
correctness 9
classic, 1
convenience 2
billions) 1
cause. 1
difficult 10
ax=1,ax=0 2
brief 4
big? 1
blocks 9
bizarre 3
costly. 3
boolean 2
boots 2
bx=1000,bx=1000 2
bold). 1
continue. 7
available 31
compiling 1
[R+89] 1
cloud 2
children, 3
bunch 6
about. 6
charge 7
ctxt 1
cesses. 1
communication 2
better, 14
caching. 1
arrive; 1
behavioral 1
costs? 1
clustering. 1
cool 17
binary 14
changing 9
dismantling 1
balances 1
broad 4
big” 1
books 21
brilliant. 1
costs 8
break; 5
brand 2
bytes), 3
bookstore 1
contributions 1
avoid. 3
complete) 1
[W09]. 2
cofounded 1
circular 1
burst 3
abusing 1
children! 1
culprit 1
change. 6
compiler; 2
calculation, 1
computing 16
article 3
benefit 1
cover, 2
codes 2
correct; 1
bookshelves 2
client 5
documentation 3
bed. 2
buffer. 6
binary, 1
botte 1
broken. 3
counter, 15
built 19
builder 1
c->value++; 4
bound 4
correct-ness; 1
back-and-forth 1
comprise 3
comes 14
class? 2
buy 6
accessed. 4
chop 5
changes; 3
current 37
big 44
call? 4
concurrently-running 1
asleep... 1
better-than-expected 1
column 5
creating 9
break 5
coalesce 2
critical 140
dominant 4
begins! 2
address 561
bx=1 2
bits? 1
bucket 2
brutally 1
coverage 2
c->value--; 4
breaks 2
bytes 41
cost: 4
caches 16
compromised 1
company 1
clear. 2
bytes) 3
achievement 1
co-advisors 1
chooses 3
cycles 11
calls, 3
call 230
concurrently. 1
bits 70
assert(fd 1
attention. 1
commonly 13
curr->stride; 1
brings 1
code); 2
currency 4
dread: 1
behave. 2
affinity, 1
call, 19
born 4
buffer); 1
buffer), 1
cycles) 1
cache, 11
call); 1
barest 1
counters 14
call-ing 1
computers 7
compare-and-exchange 2
code: 7
caches) 1
acquisition 6
concurrency? 1
classically 1
data) 2
can) 1
care! 2
consists 8
born! 1
bind 1
avenue 1
commonplace 1
decisions, 2
c6, 1
colleagues’ 1
days: 2
drive 5
behind-thescenes 1
algorithms, 3
canonical 3
break, 1
bug 4
buffer[use_ptr]; 1
date. 1
buddy 11
campaign 1
basi-cally 1
counting, 2
care, 2
computing, 4
competitive. 1
common, 1
capability. 1
constant 1
command-line 2
add 82
data[100] 1
canceled, 1
controlled 8
bring 4
bitmap 2
case 62
balanced: 1
communicating 3
definitely 4
call) 1
color 1
define 9
ease-of-use 1
below 11
carefully! 2
allocation 24
bugs 6
buggy 1
cache; 2
debugging 1
buffering 1
can. 3
be: 2
counting-based 1
concurrency). 1
carefully 17
computers), 2
communicate 2
careful. 1
containing 4
commonalities 1
affect 10
declares 2
care 10
correctly? 3
browser. 1
black 3
caught 8
because, 1
company). 1
delaying 2
command 12
deliver 8
eat 6
binaries, 1
called 111
applications? 1
busy. 1
build. 2
bx=2,bx=2 2
calculation 1
decreased, 1
byte(s) 1
case); 2
beautiful 9
crude 2
configure 5
change! 2
concurrency, 10
compact. 1
chance. 2
converted 1
complete; 5
again) 3
deeper. 1
deeply 1
corruptions. 1
bumping 1
born, 1
chagrin 1
becoming 2
compilers 1
deploy 1
commentary 1
descriptor, 2
ebx; 1
block. 3
case) 1
apply 1
call), 1
case, 105
bytes). 3
call3 1
degree 3
c5 5
categories: 1
before. 7
customer! 1
confusion. 1
changes. 1
cond_t 5
comparison: 1
child, 8
cooking 1
components. 1
al-though 1
case? 5
depends 5
curious, 1
bytesLeft 3
bugs, 2
challenging 6
begin” 6
complexity 10
deployment, 1
commonlyused 1
device; 1
edition. 1
changes, 1
book. 23
approaches 31
called, 10
challenging, 1
c; 3
depicts 1
cached 3
cell 1
begs 2
beyond 20
context-switching 2
calls 88
configurations, 1
chapter 37
completion; 5
chip, 2
cores. 1
concern, 3
al.’s 2
cases, 27
design) 1
currently-running 9
calculated 1
byte) 2
chapter), 1
behaving 1
computation; 2
designs 1
companies 6
difference 18
effective) 2
cheat 2
both, 1
are. 4
catastrophic, 1
chapter! 1
cause 24
desired, 1
cat 3
centers, 1
debug, 2
blame 3
conventions, 1
confused 1
cheapskate. 1
cases 29
complications 1
chunk). 1
corre-sponding 1
concurrently, 1
catches 1
can 699
designed 9
deal 16
cache) 1
characteristics 2
borrowed 1
computers, 1
desktops 1
compiled(!) 1
efficacy 2
disk 54
choice: 1
bottleneck. 2
arg, 2
can, 4
chapters. 6
challenge. 4
detects 1
century. 1
chosen 5
dedicate 1
boring 1
couldn’t. 2
consider 26
chunk. 4
challenge, 1
comprises 1
coarse-grained, 1
costly, 6
conditional 1
allocated 46
character. 1
child. 2
development 13
demand-zero 1
calls. 5
checking 6
bother 1
conceptual 4
dest_buffer[100]; 1
complicated: 2
emphasis 1
disrupt 1
chunk, 3
bounds. 5
arise2 1
casts 1
characteristics, 1
chapters). 2
diagram). 1
changes? 2
circumvent 1
deeply-nested 1
bottom, 2
counting; 2
continuous 1
chunks; 1
closing 2
condition. 8
code), 4
coupling) 2
consumers), 1
also: 1
citation 1
chip’s 1
devices 15
descriptor). 1
candidate 3
co-authors). 1
breath. 1
concert 2
developing 7
computation, 2
enables 23
distinguish 2
cite 2
bug; 2
arose, 1
chapter). 3
checking, 1
differences. 2
checks 25
chopping 1
clustering 3
destroyed 1
bounded 8
detail 26
core. 2
clear 12
cold- 1
conditionals. 2
combines 1
crazy! 1
controls 5
always!). 3
closing, 2
chocolate 2
different-sized 1
determining 4
carts 1
codes. 2
browser 1
confidence 2
differentiates 1
concepts 7
enterprising 2
clearing 2
c->local[cpu] 4
arrive] 2
closer 2
directly, 5
char 35
chores.” 1
code 391
cmp 1
crux 3
check 46
detour 1
corollary 2
clock; 1
does 256
collected 1
conditions; 2
code, 73
cross 1
converts 2
analogous 1
chose 1
differs 1
developments 1
cases. 3
commercial 3
challenge: 9
confirm 6
direction, 4
concrete, 1
entirely. 4
client/server 1
c6 6
aside 4
changes 20
dirty 11
chunks, 4
community, 1
columns: 2
combina-tion 1
boxes 2
curse 3
child: 1
developed; 1
correctly 19
doing: 1
collectively 2
compacted 1
confines 1
collector 2
curious 3
cost; 4
anonymous 4
coalesces 2
directory. 6
died 1
built-in 1
complexity. 2
child/parent 1
constructed 4
disabling 5
cond; 2
clues) 1
entries 22
code.” 2
asleep, 1
channel 1
disappears 2
clarify. 1
complicated, 1
compare-and-swap, 2
comparing 5
bragging 2
dark 3
circuitry 2
difficulty 4
correctness, 4
domains 1
columns. 1
complete). 1
considering 6
commandline 1
date, 2
couldn’t 2
anymore. 1
coined 2
distributed 7
dirty-page 2
c->threshold) 2
constructed. 1
chops 1
disaster. 1
contents 28
considerably 1
co-authors 5
communicates 1
exactly 39
assumptions 14
check; 1
disassemble 2
clean), 1
concerned 5
comparison 7
complementary 1
brilliant!” 1
deallocations 2
clean; 2
disabled; 3
costing 1
easy-to-read 1
compare-and-swap 10
compromised. 1
contiguously 2
compact 3
day, 2
argc, 23
commands 2
efficiency. 3
create 49
discusses 1
c5, 1
contention; 2
closest 1
do: 2
contrast 7
consumers 9
community 3
completion. 2
examines 3
authors 8
choice. 1
disassembler. 2
coalescing 6
concurrently) 1
compiler 26
components: 3
broken 1
decided 6
commands, 1
discussed, 1
ebx, 1
completion), 1
computers. 1
convince 1
compare 6
deep, 1
common) 1
around 42
could 137
end, 5
currency) 6
display 2
causes 5
contents. 2
coarse 1
drives 2
controversy 1
consumption 1
company’s 1
computing2 1
example. 31
auto-matically 1
disposal.” 1
chunk 44
coherence, 2
configurable 1
computational-overhead 1
concludes 1
c2, 1
dedication. 1
completely 6
enabled 4
conclusions 1
cooked 1
comparison, 3
computer 59
demands. 1
completed), 2
arrive 21
count. 2
environment. 4
daemon 8
eax=51), 2
cheaper, 1
context-switches 1
do 328
cold-start 2
dynamically-allocated 1
counter. 12
contains 32
compile-time 1
concern 5
examples; 2
avoids 5
doing; 1
claims 2
complete? 3
consulted 1
computer, 3
concurrency), 1
calculates 1
demoted 1
completion); 1
enact 1
condition) 1
core, 5
compiler, 2
concurrent, 2
demonstrated 2
completing 1
associative. 1
counterpart 1
escalation 1
dealing 2
effectively 5
copy! 1
driving 1
child 59
combine 7
earlier) 1
counter_t; 6
counters, 6
complete, 7
concurrently 9
exclusion 21
balance 15
doubt. 1
compete, 1
completed; 1
context, 2
concerns 3
considered 10
calculations? 2
depicted 2
concatenating 1
engineering 2
connection 1
crashes, 3
complete. 6
constantly 3
desire. 1
conception 2
atomically: 2
crazy. 2
esp; 1
declared 1
efficient) 1
cores 1
editor, 1
chip 1
coming 7
easy; 1
counter’s 2
course. 4
conditions. 5
cover 11
executing. 1
be? 9
driver 1
compiled, 1
completely: 1
continue, 1
confections 1
constituent 1
caller. 2
depressing. 1
condition). 1
ensuring 14
contiguous 13
cream.” 1
complex-instruction 1
contention. 2
destroy 1
conflict 2
attachment 1
critical, 2
evidence 1
degenerate 1
element, 2
counts 4
encounter 7
coalescing, 4
completed 5
edi; 1
darned 1
complicated 13
consult 2
crash. 1
execvp(myargs[0], 2
begins. 1
dummy 4
completes, 9
complete 23
control-c 1
confining 1
context; 1
caller’s 1
destination 2
congratulations! 1
equals 3
copyon-write 1
creation 20
concurrently? 2
control. 1
details); 2
consideration 2
average. 1
cyclic 2
example). 3
delivered 2
employ 4
crime, 1
endlessly 2
coarse-grained 2
completes1 1
effect 4
deadlock). 2
efficient 19
continuously, 1
cyclic-sequential 1
exit 13
ease. 1
complex 22
concurrency. 7
better 88
correct? 3
consults 1
continue; 2
deterministic. 2
can’t 30
consumed 2
errors. 1
correcting 1
especially 13
creation: 1
diagnose 1
consistency 3
condition 81
awake 1
deadlock 5
exchange 2
depressing 1
end” 8
critically, 1
entered, 2
code) 3
compulsory 5
concatenate 2
deallocate 1
efficiently; 1
control-z 1
day! 1
explained 2
easy: 2
comprehensive 2
construction. 1
black) 1
counter++; 1
consume! 1
control? 3
devices? 1
caused, 1
continuing 4
data; 1
craft 2
database 13
differently. 3
every 52
corn 1
confusing; 1
base. 1
deciding 5
excluding 1
depths, 1
error, 3
crux: 5
entirety? 1
colleagues 3
compute 12
concurrency: 2
emptying 1
decision 15
couple 10
days. 1
extreme 4
eax. 5
effect” 1
convenience, 1
book; 1
counter1 1
control: 1
course 20
directions. 3
center 2
convention; 1
criterion 2
crazier 1
deal? 2
discuss, 1
example? 2
examples, 3
conspired 1
best; 1
decodes 1
executed, 5
describes 6
etc., 1
curr 6
establishment 1
come 9
computer. 1
consider. 2
emulate 2
decreases? 1
course). 1
delete, 2
failing 3
configuration 2
elapsed. 1
convenient 1
bounds; 2
control” 2
conundrum 1
crash 2
disk). 3
choose 5
convoy 2
cycles, 3
creation; 1
debug. 1
disk-access 1
corner-case 4
excess 1
const 3
bet. 2
dedicated 2
exited 1
design: 1
example... 1
datacenters. 2
etc.) 11
complex, 4
concerned, 2
constitutes 1
entry; 2
depending 12
covered 2
depiction 2
fast, 6
confusing, 2
end), 1
converge 1
broadcasts 1
cooperative? 1
copy 18
create(), 2
distinct 2
cleaning 1
copy-onwrite. 1
data), 1
creator 1
decreasing 1
disk? 2
exercises 4
correct 42
consumer; 1
bits). 4
deleted 1
expect: 4
designate 1
exec() 13
decision. 2
evenly 3
computing. 1
concurrently), 2
construct 5
essentially 11
dequeue 5
cpu 4
derive 1
faulting 2
constant. 1
energy-efficiency 1
cool, 1
bucks. 1
correct. 2
correct) 1
cycles. 4
does). 1
clear: 6
correct, 2
decayed 1
cycle 4
deeper 5
disks, 1
correctly; 1
existing 14
cope 1
blocking 2
demand. 1
expensive, 6
destruction 2
existed 1
decrease 2
execle(), 2
concise 7
configure; 1
everyone 1
desired. 9
context 70
current->next; 1
descriptor 1
file: 1
constraints 2
entirely 4
coolest 2
buffer, 11
counter; 2
danger 2
d’un 1
clever 5
counter 116
costly 7
decimal 2
declare 4
defense; 1
eax, 3
count) 3
exit() 6
copy, 1
cabinets 1
demise 1
explanation 1
detail10 1
expectations? 2
defeats 1
execute 29
cond 17
connects 2
examples. 3
despite 6
continue 10
detail, 6
currently 27
fills 3
consumer, 6
equivalent. 2
copying 4
bytes? 1
create()6 1
data). 1
effectively, 1
close(STDOUT_FILENO); 1
coalescing) 1
count--; 1
decisions. 2
delve 5
depth 2
element 14
covers 4
experts 1
copying. 1
calculation: 1
dependence, 1
explored 2
eyes 2
details. 34
demands 2
execution” 1
constraints, 1
constants 2
excuse 1
detail; 1
converse 2
didn’t 11
currently-pointed 1
contexts 2
errant 3
correctness. 3
flag 73
c->value; 4
creature 1
days 4
embarrassment. 1
create(); 1
columns 1
curr->pass 1
decreases 3
depend 3
diagram 10
ends 4
directory 18
extents 2
cost. 1
calls: 3
dependent 1
external 10
facets 2
deterministic 8
desire 7
expressed 2
context-switch 4
consulted, 1
exhibit 3
did. 2
correctly-working 1
digest. 1
dangerous 5
continues 7
data. 9
flash-based 2
calls). 1
credit 3
cost 49
decides 11
enforcement, 1
create, 2
combined 1
cycle. 1
defined 5
depends.” 1
crazy) 1
dirty) 2
error 17
famous 21
counting 7
casting 1
desired). 1
failure; 2
failure. 1
deterministically. 1
destination: 1
far: 2
contexts, 1
convoys, 1
exist 11
different-size 1
correctly. 8
directly. 3
est 1
correctly! 2
databases 5
forever! 2
cases). 1
datacenter 1
costly; 2
deeply. 2
event 3
curr); 1
complete?) 2
dandy. 1
delay 2
description, 1
customer 2
discipline1 1
etc. 5
features, 2
central 7
creates 34
details1 1
fashion; 1
fashion. 3
developer. 2
detailed 8
faster. 6
convenience). 1
copy-on-write 5
exits 3
do, 11
correctness: 2
dividing 6
costs, 1
decay-usage 2
forgets 1
cast; 1
days... 1
example 131
court, 1
default, 2
exceptions 3
current->tickets; 1
complicate 1
date 2
deployment. 2
designers, 1
deallocated 4
discrepancy 1
exam? 1
felt 3
checkbook 1
customized 1
detecting 1
feeble 2
fetch, 2
disable 3
device, 1
fetched 5
counter); 6
corresponding 10
created, 14
document 1
cost, 5
do; 2
coverage, 2
decides). 1
forth). 1
certain 26
de-queue 1
exceeding 1
cpu.c 2
descrip-tion 1
exec(), 6
deadlock) 2
computation. 2
day 5
descheduling 2
destination. 1
decrement(counter_t 4
discussed. 1
exception; 2
few) 1
children 1
datacenter, 1
difference, 4
fell 2
finish), 1
discretion 1
differ, 2
files 10
expected; 3
counter1, 1
creativity 1
doesn’t). 2
countermeasures 1
double-click 1
create() 11
created 22
game 4
chanced 1
deallocation, 1
executed), 2
currency. 2
devices. 4
executable 13
decisions? 1
execution. 17
describe. 1
decide 23
determines 17
demanded 2
divide 6
execvp(). 1
find!) 1
citation. 2
debug 1
fields, 1
finished, 10
disk) 3
differently 1
direction; 1
experiment, 1
dangling 1
doing. 3
course, 73
deep... 1
draw 2
cruces 1
curious. 1
get: 4
different 196
decrees 1
change 55
dairy 1
executing 26
dictates 1
computed 1
deletion, 1
desires 1
explicit 22
deep 7
device 11
descriptors 5
drop 4
experimentation. 1
flaws. 3
cited 2
definitive 1
field” 1
first-out) 1
doesn’t, 3
follow 2
discussing 4
fancifully 1
decade. 2
doubt! 1
covering 7
definite 1
eax=50. 2
daemon1 1
debugging, 1
getpid(), 2
differently; 1
deleted); 1
chapter? 9
darker 1
exists, 3
condition: 1
did 22
descriptors. 1
details) 1
descriptor? 1
fair 19
differ 2
designers. 2
eagerly, 1
express 1
flexible 9
closes 3
degenerates 2
fine! 1
first. 10
done. 10
for, 2
do) 1
fast” 1
decimal), 1
drivers 1
crash, 1
demand? 1
endless 4
darn 1
decide: 1
globally-shared 1
disciplines 2
dense, 1
chapters, 9
data? 1
exits? 2
cons. 1
dies, 2
deterministically) 1
descriptors, 2
fair-share 7
desired 52
directory; 1
destructive 1
easily. 3
flushed 1
fact, 28
demanding 3
code. 44
first; 6
fits 9
double-precision 1
forced 2
don’t, 2
features. 2
default? 1
each. 4
current: 1
demand” 1
etc.); 1
debate 2
defaults 3
gracefully, 1
disk, 14
designs. 1
clarity. 1
defensive 1
expected: 2
contention 4
different: 2
develop 12
device. 1
family 5
destruction, 1
disappear). 1
control 79
efficiency 8
fly 1
fail. 2
desk 1
collaboration 1
formula 2
fit 27
downward. 3
forget, 1
downsides, 1
fg 1
defaults, 2
earlier; 2
days, 6
descheduled. 1
debugger 6
dereference 1
granting 1
does, 6
destroy() 2
cleverness, 1
even 148
demonstrates 3
fact. 2
digit 1
devices, 2
die, 1
far) 2
deterministic, 2
details, 4
discipline, 1
cooperative 5
else, 7
following: 8
families 1
details! 1
forward! 1
flag) 5
duty. 1
free() 8
common 61
draw. 1
finish, 2
deployed. 1
eaters; 1
decimal. 1
design. 2
desire, 1
desktop. 1
grasshopper, 1
domains, 1
develop, 2
collect 1
evicts 3
designs, 1
feature 5
differ? 1
differences 2
fetches 10
doing 76
directly 8
developer, 1
disconnection 1
creation, 6
enable. 2
form). 1
fault. 7
developers. 2
fourteen. 1
flag[1] 2
e.g., 8
freely, 1
fork() 25
drawn 1
first-level 2
description 9
economist. 1
defined. 1
default 7
designated 2
destroying 1
grow; 1
dramatically 2
differentiation 1
combinations 3
execl(), 1
design” 1
file, 9
direction. 3
disassembler 2
dollars 2
disciplines) 1
die 1
discussion, 1
few 102
criteria. 2
ending 1
formed. 1
favor, 1
discussed 24
fraction 5
emailing. 1
competitive 1
forth 3
full 33
dreams 1
flags 10
designers 9
effective. 3
deletion) 1
designing 3
described 36
diagrams 1
handle. 1
dream. 1
difficulties 2
compare? 1
executable, 3
desirable. 1
first-in 2
directory: 1
dominate 3
disk), 2
discuss 53
directed. 1
doing? 2
curr->next; 4
figure 35
entries; 2
former 5
fd 1
doesn’t? 1
free(rvals); 2
enacted 1
frees. 1
compile 11
functions: 1
dx 2
fork; 1
destroy()) 2
employed 4
design-ers, 1
developed 23
device), 1
differently, 1
happening 1
dynamically 1
digest; 1
competing 6
execution: 1
detect 5
free-page 1
disk); 1
doubts 1
distribution 1
discussion: 1
directives 1
currently-executing 2
fill; 2
enum 2
don’t 81
frame 40
fetch 29
done! 3
future; 1
enough. 2
gave 3
completed, 2
futex_wake 2
easy-to-use 2
formal, 1
developments. 1
endlessly, 2
designer, 1
dirty, 2
difference: 4
difficult. 3
hard-and-fast 1
ele-ment 1
direct 14
completion, 2
exists. 4
developers 12
fullness 1
done) 1
does), 1
disks 4
discussion. 1
deallocates 1
fine 7
environment 4
earlier, 3
free) 5
double-ing! 1
gcc) 1
final 51
entirety 2
each 340
generally 28
compulsory, 1
gaming 2
edx; 1
fought 1
deviously 1
establish 3
details). 4
down 25
different. 2
discovered 4
hardware, 15
employs. 1
discussion). 1
complex. 2
expires. 1
diagram); 1
fully 8
draconian 1
easy. 3
documents, 1
disk-drive 1
decisions 7
fit? 1
events 5
efficiency; 1
free-list 1
drops? 1
gdb) 1
finished 14
entries: 1
eases 1
goal 19
concurrentlyrunning 1
gently 1
encountered 1
free(): 1
digested; 1
examples 21
download 2
determine 34
disciplines. 1
dive 4
hardware-based 5
en-us/um/people/mbj/Mars 2
dives 1
components 1
exploited 2
digging 1
further, 2
eax=51. 4
eax=50 2
doing.” 1
diverse 1
delight 1
fits, 1
eventually, 1
elsewhere, 1
friends 3
easier. 1
generalized, 1
five 8
excessively 1
eater 2
hack, 1
confront 1
entering 9
frequency; 1
gets 51
discipline 1
excellent; 2
drink 2
did, 1
does: 2
divides 6
heavy-handed, 1
enabled, 4
documents/R4400 1
comprised 3
end 46
directing 1
either. 1
futex 16
effects 1
done\n", 2
do? 9
deployable 1
flag)? 1
evolved 1
evicted, 1
from). 2
easily 17
gettid()); 4
flavor 2
exchange1 1
effective 12
hand-over-hand). 2
constants, 1
errorprone. 1
frequently-used 1
gettimeofday() 5
discredited 1
execute, 2
dynamics 1
disk-like 1
done? 1
do), 1
hide 1
double 3
extracts 3
computations 1
estimator? 1
disappear 1
empty 14
general. 1
efficiently. 1
don’t. 1
enabling 15
describe 14
flag[0] 2
exact 26
evil 1
func(). 1
editor 2
globally 4
flight, 1
efficiently? 5
hard-hitting 1
execution 48
contending 14
errors? 2
funky 1
giant 1
discussion 17
explore 5
eating 1
doing, 3
downfall. 2
documented 1
hierarchy; 1
earlier). 1
fair, 1
concept: 2
evaluate 6
eviction. 1
executed 17
exception 15
done, 6
doubt 2
enacted, 1
detail. 12
floor 1
example) 10
excellent, 4
generate 28
enable 24
foil 2
go 37
eight 1
have? 2
exit()) 1
continued 1
esi; 1
gcc 10
gray 3
double) 1
extremely 3
electrical 1
downward). 1
dramatic 2
high: 1
ecx; 1
doesn’t 51
fast 19
concluding 1
disk. 14
generalpurpose 2
exit(1); 6
excessive 3
downward, 1
downsides. 1
engineers 2
details; 3
flush 5
executing) 1
exec(): 1
end\n"); 5
endeavors 1
found. 2
goals 15
encountering 1
header: 2
experiments 3
copy-on-write, 1
estimate 2
gdb 5
down, 1
factor 8
element. 1
great 79
each, 1
dx) 4
hit), 4
effect. 1
drive. 2
fetches, 2
concurrency; 2
dissertation 6
generation 1
exiting? 1
execvpe(). 2
earlier. 2
due 19
entry. 10
deter- 1
forces 2
exit; 1
fair. 1
give 30
enough! 1
fragmentation; 1
good”. 1
enters 21
headway 1
expose 1
copy. 1
exceptional 5
globallyshared 1
driver8 1
fall 5
elements; 1
grossly 1
hoc 2
dynamic 20
eight-page 1
early 68
driven 1
few, 2
condition3, 1
divided 8
get(); 5
expect. 2
exit), 1
ease 4
easy 50
examining 4
determined 9
form. 2
exited2 1
family. 1
glock; 2
frequent 4
entire 46
habits; 1
entries). 2
heavilyused 1
help: 1
core 8
exciting! 1
graduate 9
dx=3,dx=3 4
fashion). 1
enjoys 1
guard 14
e 1
holds 38
emails 1
effective, 2
else? 2
fewer), 1
condition? 1
does. 1
global; 2
expectations 1
expensive!). 1
easy, 1
ebp; 1
execution, 8
developer; 2
forms; 1
expect, 2
famously 3
google’s 1
frequently; 1
entirely; 2
happen: 1
entry? 1
far; 1
hence 20
count 25
execvp() 1
group 12
earlier 18
features 17
enlisted 1
guess, 3
easier, 1
honorable 1
empty, 3
efficiencies 1
email 2
fewest 2
conference. 1
doivent 1
globally-allocated 2
expensive 3
face 4
eax 20
efficiently 10
exhibits 2
diagram, 6
formula, 1
explicitly. 2
fancy? 1
grouping 4
full). 2
entry), 1
harder 4
exec(); 1
fashion, 1
here? 3
counter) 1
expects 3
grow. 1
eaters 2
fetch), 2
enqueue 4
handling. 1
end. 1
hope. 1
ence 1
elements 8
embracing 1
figure, 15
configured 1
downwards 1
grand 1
exploring? 1
fails 5
ecosphere 1
egomaniac. 1
exists 3
direction 1
exploration 1
few. 1
grow, 1
general, 18
haul, 1
examine 36
existed; 2
free 187
finds 10
heuristics 1
crashes 2
fail 13
effectively. 3
files, 3
had 57
entity; 1
has). 2
enjoy 3
how, 1
ensures 14
else-where, 1
emptied 1
file. 2
confined 1
drives, 1
grows: 1
fault; 2
fault3 1
efficiently, 1
elsewhere. 2
expand 1
directory, 8
exports 1
field, 2
guesses, 1
generalized 1
http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 1
exist: 1
exit). 2
freedom 1
first, 20
historically, 1
crazy 3
fast. 5
elsewhere 3
finding 15
hard-andfast 1
equal 19
heap), 1
enough), 2
however: 1
entities 5
empty. 1
entries. 3
file.txt 2
confuses 1
dustbin 2
hallmark 1
fellow. 1
faults 3
enough, 5
enter 32
expected. 4
diving 1
facility 3
filled 6
harmless, 1
gettimeofday()). 1
i.e., 29
explicitly 12
expected? 2
from. 5
floating 1
historically-based 1
create()); 2
fault 12
empty), 1
flag[2]; 2
hard-working 1
era 7
hierarchies, 1
entry) 1
http://www.sparc.org/standards/SPARCV9.pdf. 2
error; 1
encouraged 1
essential 3
file’s 2
continues. 6
dynamically-allocated, 1
hand-over-hand 8
few), 2
finally 27
entries); 1
ensure 34
exporting 1
do. 18
fact). 1
fine. 2
held. 16
glance 1
i=0 1
fairly 9
explain 1
go, 2
follows. 4
hostility: 1
datacenter. 1
feel 8
end”. 1
flexibility: 2
hard. 1
exam- 1
hint 4
evict 9
hypervisors, 1
essay 1
end-of-string 1
exclusion. 6
fine, 1
cooperatively 1
earliest 13
handle 17
fields 2
find. 1
entry, 8
entity), 1
failed; 2
done; 1
failed\n"); 4
fixed 13
hierarchy, 1
gnu 2
ignored. 1
fairness, 2
extended 5
goals, 1
forays 1
huh?? 1
de 1
fewest-possible 1
ensued 1
flexibly 1
hardware? 1
hit. 5
he 20
iMac 4
evermore 1
enemy? 2
execvp(), 2
focus. 1
counterbalance 1
easier 19
handler. 2
figure), 1
example, 262
fine-tuned 1
ever, 1
familiar; 1
dump”, 2
entry 55
fairshare 1
for) 1
homeworks, 3
good! 2
illegally). 1
far-reaching 1
failed, 1
going. 1
forever; 2
hurt 3
declaring 1
files) 1
envisager 1
folks 1
exception, 3
hold, 1
head; 2
illegal 11
everything 12
enormously 1
imagine 41
fragmentation? 1
created. 3
efficient, 5
handlers; 1
flexible, 1
executing, 2
finish. 2
execlp(), 2
faster; 1
efficiency, 3
etc.)? 1
fanatics, 2
ever 19
hot 1
got 16
improvement 3
far. 1
fancy 7
greater-than 1
identifier 3
defeat 1
form 46
fill_ptr 2
equal, 2
follow, 1
exhibit. 1
humorously, 1
helgrind 16
evolution 3
exert 2
equally 1
implications. 1
framework 3
critical; 2
efforts 2
havoc’ 1
frankly 3
execv(), 2
fit, 2
expected, 4
favorite 8
either 49
free. 13
faulty 1
everywhere, 1
https://gruss.cc/files/kaiser.pdf 1
greater 4
in? 2
fascinating 9
fares 1
happy 5
importantly 1
definition 6
freed. 3
finegrained 1
era, 1
forest, 1
exist. 5
here) 4
exec 2
exist; 2
errors 9
idea 92
inc 1
free, 5
critique 2
eip; 1
heap. 10
free), 2
exercise 4
five-level 1
fact 20
fetch-and-add 8
encounter. 1
funny 1
fetch-ing 1
evicted. 2
guarantee. 1
implement 30
incrementalism; 1
fewer. 1
faster, 6
harsh, 2
in, 6
delving 1
fixed-sized 11
errantly-freed 1
forward-growing 1
exits. 4
hides 1
executed. 1
existence 3
evil.” 2
imagining 1
increased, 1
full; 2
currency; 1
en.wikipedia.org/wiki/LoadLink/Store-Conditional. 2
helgrind? 2
friends, 2
exiting 2
flag), 2
field: 1
fight. 1
enough; 1
guessed 1
from 443
figures 4
executes, 3
handler, 3
imply 2
indexing 1
fill 11
first) 1
hate 1
increasing 10
demand 11
flag[self] 4
evicted 3
free(), 2
expected) 4
hierarchy. 2
expensive. 2
exit. 5
exception. 1
immensely 1
incremented, 1
getpid() 1
data, 18
enabled. 1
hidden 4
friend” 1
expert 3
force 2
filled. 1
environment, 2
handled 4
fully-associative 1
function. 2
file), 1
expected 7
happen. 2
increases. 5
infinite 6
finishes. 1
flag). 2
heap); 1
incrementing 12
deschedules 3
followed 5
free(tmp); 3
excellent 42
extract 7
history; 1
exploit 1
exits; 2
exchange1) 1
implemented? 1
indicating 8
gettimeofday(); 1
declaration 5
encapsulated 2
high, 4
fully-operational 2
exploring 2
fork(), 9
fit; 1
epic 1
happy. 4
file 95
functions; 1
fill. 1
faint 1
happens; 2
inform 4
influential; 1
first” 1
heart. 1
inefficient? 2
following 55
die). 1
full, 6
exec(). 2
fail? 1
homeworks. 1
found 84
failed 8
experience 9
excludes 2
implies 7
inseparably 1
goes 27
defaults. 2
encourage 3
functionality. 3
highest 20
exposed 1
forth, 4
focusing 2
equation; 1
have, 1
flexibility; 1
fundamentally 3
fitting 3
field. 1
harddisk 1
initializing 1
initialization. 3
fix 3
highlyfragmented 1
innocently 1
forgot 2
difficulties. 1
functional, 1
exist). 1
fails, 3
http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF. 1
familiar 2
extend 2
four 52
execl, 1
inaccessible. 1
integer, 4
grep 7
defend 2
engineering. 1
good. 6
homework 9
extent 1
fragmentation 13
fork(); 4
etc.). 1
heavily-used 1
flushing 1
gates 1
fix. 1
file-system 1
has. 1
instruction) 9
initialized 8
flag=0 2
hybrid 10
inopportune 2
fork(). 2
displays 1
fundamentalist 1
existed. 2
failures 1
idea: 1
far, 13
failure 21
free()) 1
extension 1
inactive 4
intensively 1
groups. 2
defense, 1
entitled 2
hardware) 3
hope 13
fact: 3
free(16500) 1
forth; 1
eviction 3
here, 22
focus 21
flag; 6
follows: 21
files” 1
heap, 22
insight 1
flags: 9
identifiers, 1
inputs 2
forth. 10
double. 1
gadgets 1
expect; 1
fairness 7
identical 6
int 260
fashion 4
faster 16
free(void 4
fail! 2
independently 8
indicated. 1
guard; 2
defer 2
equivalent; 1
head->next; 1
fetch. 2
freed) 1
however, 49
forwarded 1
example), 10
herein), 1
going 29
focused, 1
form, 6
findings 2
hexadecimal), 1
instead. 4
illusions 1
insert. 2
fully-developed 1
downside, 1
expert, 1
gain 16
familiarity 2
indefinitely) 2
intellectually 1
fault, 7
fault) 1
generalization 5
failure), 1
interact 15
installations. 1
guide 1
deletes 1
et 7
header. 1
finished. 2
frequently 7
for 1176
frames 5
exceeds 8
heuristic 2
heap-allocated 1
for. 3
formally: 1
fork 7
hood 1
integers), 1
immediately. 2
instructions. 5
get() 7
dream 1
explains 2
gaming, 1
fault? 1
inspires 2
interface: 1
faulting. 1
faulting”, 1
ghastly 1
falling 1
interesting. 2
intelligence 1
hacker 2
demonstrate 5
evicting 1
header_t; 1
first-fit 3
http://www.multicians.org/history.html. 1
from; 1
forever. 1
exceptionally 2
general 41
https://quoteinvestigator.com/2015/07/23/great-power. 1
heart 2
forefront 2
forthcoming 3
formally, 1
http://www.unix.org/version3/. 1
intense 2
improve 17
intensive. 1
global 56
during 29
generalizing 1
extra 18
faults, 2
instant, 1
fetching 4
feedback 5
github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
it. 68
fantastic 1
intergalactic 2
interactions 4
hands 4
dereference. 2
exactly? 2
held: 2
flavor. 1
idiom: 1
functioned 1
forewarned: 1
experiment 5
generates 10
hybrid. 1
held). 2
fork.py, 1
free(10), 1
free()? 1
hundred 7
interrupted 14
inadvisable 1
intricate 3
grande 1
generations 1
else 45
fastpath) 2
feasible 1
integers, 2
filling 1
grab 11
itself); 1
farmer 1
interval. 1
happens? 2
derivatives 1
exclusion? 2
first 278
help. 1
flow 14
important. 5
forget 8
fundamental 18
family? 2
gives 15
improve. 1
hello 5
forward 4
freeing 6
into 339
frequency 5
idle, 1
is: 9
industry 2
intuition 3
graphics 2
get? 1
employs 3
field 15
figuring 1
interludes. 1
finishes, 1
grabbing 2
fine; 2
it’s 33
intervention. 1
descheduled, 1
exist, 1
flag. 13
higher 24
focuses 3
info 1
forms 3
generally, 7
figures, 1
goofs 1
indefinitely, 1
hardware 263
himself, 1
free(ptr), 1
from, 3
introduces: 1
friend: 1
imbalance. 1
iterations/threads: 2
inefficiencies. 1
investigate 1
green 1
gigabytes 1
emulator 1
file.txt|wc 1
file; 1
flexibility 2
gray) 3
fire). 1
interrupt 77
kernel-owned 1
invalid, 8
design, 1
exit? 1
flag’s 2
historically 2
forth), 1
inserted. 1
freely 2
generated 12
files. 1
granularity, 2
indexes 1
high. 3
honor. 1
frees 6
fully-associative, 1
invention 1
function, 3
impact, 3
kernel), 1
inherently 2
junctures 1
grows? 2
great, 1
enacting 1
finally), 1
finally, 8
forever, 6
flaws 1
guarantee 21
introduce 12
kicked 2
invited 1
desk? 2
exits, 2
footnote: 1
horrible 1
fourth 4
instructions). 1
future, 5
goal, 1
graph, 6
inefficient, 2
find 86
http://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1303.PDF. 1
frequencies; 2
invocation 1
getpid()); 9
further 31
important, 7
keeping 14
handlers 5
greater), 1
lead 50
entity, 3
first-fit, 1
flag.s 2
functions, 1
instruction 130
formed 3
guessed, 5
isolation; 3
kindly 1
involved, 6
despairing 1
how 441
forcing 1
imperatives. 1
far 21
fragmented; 1
general) 1
interesting 46
grabs 16
grows, 4
inflation, 1
finish 13
http://www.intel.com/products/processor/manuals. 3
frightening 1
job? 1
gettid() 2
fusion, 1
incorporated 4
killer 1
handling, 1
greatest 1
line. 1
entry). 1
foo 4
flags. 2
garbage-collected 2
intend 2
fragmentation. 6
guide. 1
issued 7
know, 5
it!), 1
hugely 3
foreman 1
details 46
implement, 1
few). 1
friend 3
generator 2
interrupts, 4
grade, 1
halted, 1
initiating 1
for: 1
hundreds). 1
functionality, 2
jobs, 14
futex_wait 2
getting 33
languages, 2
increase 20
havoc 2
grow 18
list: 3
error-prone. 1
foreground) 1
forcefully 2
getrandom(0, 1
interrupt), 1
fragmented 3
handled, 1
jobs? 3
happen 15
itself, 8
hybrid, 1
fork()/exec() 1
developed. 1
impossible 1
greater. 1
fewer 13
grammar 1
intro 3
ground 1
hand-controlled 1
input 20
forget: 1
idea! 1
furthest 5
jumping 2
gains. 1
graph 11
library. 10
initial 5
guesses 3
hit, 28
load/store: 1
error? 2
format; 2
found? 1
government 3
interrupted, 3
free; 5
knowing. 1
join(), 7
kernel, 7
killall. 1
idea; 1
found, 2
developer 2
greatly 4
fine). 1
gruesome 1
kill 10
guarantees 6
handler 24
input/output 3
fork()ing 1
goals? 2
immediately 23
kill. 1
gates, 1
grows 16
libtinfo, 1
initiates 4
handles 14
honest 1
locks: 3
etc.? 2
fortuitous 1
fragmentation, 6
graphs 1
introduction 17
frequently. 1
hardware. 10
key); 4
kinds: 1
large 93
illusions, 1
gained 1
did), 2
hand-assembled 1
finishes 6
guess 8
killed). 1
guts, 1
hang 1
insert; 2
formal 2
good, 2
implementation. 4
laid 4
generality, 1
hash_t; 2
lives 7
input: 1
hurts; 2
lottery.py, 1
hard 51
foundational 2
eventually 15
free-space 4
hack. 1
intuition? 1
friendly 5
hardware’s 1
know. 3
l/stq 2
larger. 1
immense 1
good? 1
disk; 4
handle, 1
fires 1
hand, 3
knowledge, 3
hackers. 1
have: 2
inspiration 1
forms: 1
growth: 1
implemented 10
lations 1
have. 3
get 126
long-term. 1
ins 1
ice 1
love 2
hardware/OS 2
friend, 2
evict. 3
frequently, 3
handling 14
issuing 6
from) 2
launches 2
left 21
implementation)” 2
known 90
guest 1
hands-on 1
flag? 3
in 2103
hand-coded 1
includes 13
latter 5
happen?4 1
head, 1
four-level 1
instruction. 22
gruesome. 1
inclusion 1
learned? 1
graph. 1
loop) 2
head 39
has 348
installs 2
impacts 1
lwarx/stwcx 2
here; 4
generating 2
except 6
fringe 1
happened 5
items 9
func() 4
length) 1
in-between 5
la 3
guide: 1
let’s 73
head->size 1
flags, 1
done 72
forever 6
incorrect. 1
layout. 1
fprintf(stderr, 6
instructions; 2
happens 78
guy 3
independently! 1
len:10 6
heap 76
greedy 3
lying 2
heavily 2
machine. 9
instructions), 1
in-use 1
machines. 6
hierarchy 2
giving 15
execution), 3
future 21
expect 15
iterations 4
gaining 5
levels 9
increased 3
later), 1
habit 2
like. 6
heap: 2
handle; 1
double-check 1
forewarned, 2
incurred; 1
life, 3
fragmentation2 1
interchangeably 1
hence, 3
hacking 1
indicates 3
libc 2
hearing 3
groups 3
head->next 1
held), 7
machines; 1
interactive, 1
in: 1
main() 11
high-performance 1
goals. 2
hardware). 3
gather 1
eyes...) 1
itself; 3
general? 1
libcrypt-2.23.so 1
incremented 4
latest 8
happen, 2
list). 2
held; 2
hardwaremanaged, 1
down-wards 1
forgetting 2
initiate 3
lightweight, 1
free(). 6
interfaces, 1
high-priority 2
handler). 1
inefficiencies 1
lie 1
information. 9
grows. 1
header_t 1
help) 1
made, 5
investigating. 2
inaccessible, 3
main-race) 2
homeworks 5
hair 4
heavyweight 1
generated, 1
failures. 2
kick 8
generated. 1
libraries. 2
independent 4
leave 13
hardware-managed 9
lists[BUCKETS]; 2
highlight 3
head), 1
downward 1
frames; 1
insidious 1
linking 3
free? 4
invoked 2
hits). 1
hates 1
here: 10
life: 1
informed 3
guaranteed 1
headers 2
helped 2
mail 1
is. 7
incurring 1
main.c 6
hopes 1
handed 4
here! 1
get(counter_t 6
fairness. 6
last. 1
generic 4
inexpensive 1
lies 4
hardware: 3
local 56
llock[NUMCPUS]; 2
hits 13
heap) 2
drive, 2
frustrating 1
insights. 2
load, 3
freed; 1
it3 1
hy-brid 1
head->value; 1
him 1
listing 4
init 4
hacked 1
helpful, 1
here. 11
manipulates 2
isolating 1
inducing 1
many! 1
hours. 1
harder. 1
hex 4
grocery 2
fantastic, 1
leap 3
goal: 1
init: 2
limitations 1
harm 3
locates 2
loads 19
homework, 9
helping 2
duration 2
functions 7
install 1
locations 11
frustration 1
identifier, 2
header, 4
history, 3
locations. 1
input); 1
happened; 1
helps 5
here’s 1
manually 1
it.” 1
init(), 2
measured 2
how-to-generate-a-random-number-from-within-a-range. 1
hardly 3
high-level 6
growth 1
fast; 1
its 295
least) 1
growing 5
inodes, 1
limits; 1
has, 1
long; 1
locking, 2
hopefully 6
herein, 1
edit 2
gcc, 1
integer) 2
loops? 1
fundamen-tally 1
heap). 1
hogging; 1
instead, 5
lock() 38
header). 1
higher-level 1
hey, 1
many. 5
item; 1
inputs. 1
memorymanagement 1
https://lwn.net/Articles/170003. 2
hash 17
highly 7
habits 1
feasible. 1
itself) 1
left). 2
guarantees. 2
insert(queue, 1
locality, 8
headers, 1
ls, 1
logarithmic 3
http://en.wikipedia.org/wiki/ 1
if 483
hierarchies 2
editor? 1
gdb, 2
interested 11
lowest. 4
gadget), 1
help, 1
holder 2
instrumentation 1
logic, 1
hear 1
hinted 3
historical 14
mechanisms; 1
history 16
inquiry 2
mind. 1
idea, 7
highly-networked 1
half 8
feature-filled 1
it’ll 1
legends 2
handlers, 3
lock(&m) 1
instruction, 19
hire 1
integer 17
longer, 1
https://en.wikipedia.org/wiki/Buffer_overflow 1
illusion 20
effort 3
general-purpose 8
hold 27
interposition 2
machinery, 1
glibc 3
highest-order 1
host 2
int) 2
lookup 12
hello, 8
history... 2
kernel) 2
memory-management 2
honor, 1
have 487
miss: 1
interface 16
ideal 4
hand 6
hit 32
fellow 1
jars 1
length 16
happens. 3
lock(lock_t 14
m->guard 10
hole 1
interest 3
looking 13
humans, 1
immediate 2
encounters 2
generalizes 1
http://ftp.gnu.org/gnu/glibc. 2
involvement 1
main-race.c. 2
great. 1
http://en.wikipedia.org/wiki/You 1
hour 1
interleaving, 2
hit). 1
loop 41
high 36
killing 2
memory?”, 1
idea? 2
headaches. 1
mistakes), 1
interval, 1
idle! 1
happen? 8
holding 12
fine-grained 3
join 12
line: 2
hard-to-find 1
locked; 2
management. 3
how: 1
introduction, 1
lottery 24
increments 7
immediately; 7
engineering; 1
humorously 1
irstrun 1
majors 1
given 80
greater). 1
http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html. 1
hptr 1
invent 3
http://books.google.com/ngrams). 1
loved 1
history. 3
landmark 3
mentioned 7
ideas, 3
heard 1
modification 2
illegally 3
introduced 25
here 46
hoping 6
fingertips. 1
killed; 1
lingo) 1
harmful. 1
lookups 1
mark 6
having 29
inventory 1
malloc; 2
index 20
importantly, 9
imag-ine 1
enough 32
is; 3
make. 1
gods, 1
grew, 1
humans) 1
http://www-formal.stanford.edu/jmc/ 1
it). 3
http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD329.PDF 1
main-deadlock.c 2
hit; 1
least-recently-used 4
implementation, 2
modified), 1
imbalanced? 1
happening! 1
is), 1
heyday 1
hypervisors). 1
flag.s. 2
laborious 1
listens 2
most 130
i++) 18
matching 1
loops 18
heap? 3
iterations, 1
message. 1
indirection 3
init(counter_t 6
impetus 1
entries, 5
issue. 3
maliciously! 2
happening? 1
hackers 1
hybrids 1
https://birrell.org/andrew/papers/035-Threads.pdf 2
judiciously 1
imbalance 3
memory! 2
honor: 1
lest2 1
importance 8
modularity, 1
independently, 2
happens, 4
isolate 1
high-end 4
ideas? 1
focused 3
laptop 2
lost 4
much?). 1
illegal. 2
measuring 5
lowest-priority 1
heavy 5
metal 1
inheritance. 2
initially 3
implementations. 4
equation 1
it: 4
manual. 4
jobs 102
heap; 2
hardware-interpreted 2
icon, 1
i5 2
kept 12
in-between. 3
mention 1
however 1
in; 2
monolithic 1
instantaneously. 1
likely 73
hardwaremanaged 1
keyboard 2
idioms 1
forcefully. 1
his 37
latency 9
lots 12
multilevel 2
imbalance, 1
meet 5
ls. 1
held 25
millisecond 1
init(lock_t 4
inode 3
important) 1
era. 1
jobs) 1
mapping 13
l/stl 2
helgrind, 2
hardware-specific 1
implement!) 1
ideal? 1
kind. 1
incorrectly. 1
mid 1
http://ostep.org/Citations/inside-cfs.pdf. 1
inconclusive 1
most-recently 1
integrity 1
harmful, 1
list. 21
kmalloc. 1
implementations, 1
formulae. 1
hits, 2
leaks 1
main(), 1
munication, 1
included 4
memory-like 1
m 1
hogs, 1
miss). 1
inkernel 1
instructions: 2
interesting; 2
example: 8
juggling 1
mask 1
leftmost 1
here), 2
haven’t 4
important). 1
idle 5
large) 1
increased. 5
missing 4
http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF. 5
incremental 1
neat. 1
intelligent 2
has? 2
list_t; 2
large-memory 1
in-kernel 5
fortunately, 2
hopefully, 3
learning 2
managed), 1
notes: 2
increasingly 6
misses). 1
main.c). 2
http://stackoverflow.com/questions/2509679/ 1
mlfq.py, 1
innovations 2
interactivity 2
interrupt: 4
excited 2
jump; 1
master 4
length, 1
hog; 1
highlighted 1
impressive. 1
impact 5
indicated). 1
mmap(NULL, 1
last 37
hung. 2
indefinitely. 2
networking. 2
interface. 4
headed 3
list’s 1
laugh 1
in. 11
fragmentation: 1
house 2
letter 3
managing 9
occurred, 4
initialization 8
multiprocessor 19
malloc()); 1
humble 2
mocked 1
inode) 2
iss 6
invalid 8
executes 23
kids, 1
matter? 3
lesson: 2
https://events.static.linuxfound.org/sites/events/files/slides/elc 1
http://linux.die.net/man/3/pthread 1
improves 4
implements 6
inner 1
mode), 1
leading 9
immediately, 4
index: 1
new, 1
interrupted) 1
helgrind. 2
located. 2
learn? 1
inability 1
fragmented, 2
http://cag.csail.mit.edu/raw/documents/R4400 2
library; 1
memory) 5
odd, 1
instances 2
near-term 1
managed 6
hundreds 5
mode. 4
insisting 1
it1! 1
involved 9
exhaustive 3
languages 4
matters, 2
life. 2
human 4
http://www.ostep.org/Citations/notes-solaris.pdf. 1
indeed, 11
importance, 1
input, 1
naming 1
left) 1
implicitly 2
indivisible 2
new_head; 2
interruption, 2
herein 3
locks. 6
libtinfo.so.5.9 1
inaccessible 2
front 10
http://history-computer.com/Library/AltoUsersHandbook.pdf. 1
live 12
methods. 3
odd-sized 1
nearly 9
manner, 11
illusion. 2
interacting 1
instead 95
item 9
isn’t. 3
exiting. 1
large, 7
mem- 1
like) 2
memory-allocation 10
hurting 2
indeterminate, 2
nary 1
insert 12
inside 30
in) 2
important 63
inefficient. 4
nonetheless. 1
investigator 1
holes 1
make, 2
like, 3
incentive 1
fun 20
http://www.ibm.com/developerworks/linux/library/l-solar/. 2
load-linked, 2
migrating 2
of. 1
necessitates 1
mappings. 3
imbalances. 1
interested! 1
interact. 1
join(). 2
more 470
isses 1
exploits. 1
laws 2
identical, 1
link 6
meta-level 1
imaginary 1
library” 1
next; 4
installing 1
instruction: 1
increment(counter_t 4
in-terface 1
information, 6
kernel?” 1
however; 2
note 27
manifests 2
list), 1
incredibly 8
functionality 2
https://github.com/mit-pdos/xv6-public. 1
locale 2
minimize 11
offerings 2
next, 1
match 12
important? 1
interesting, 4
interest: 2
judicious 1
it!) 2
mutex 17
figured 2
left, 6
flag, 14
list-like 1
minimally 1
incur 1
line, 7
non-executable 1
instance 3
intricacies. 2
indicative 1
in/out 1
kills 2
initialize 15
http://portal.acm.org/citation.cfm?id=540365. 2
noticeable 2
manual, 2
lives. 1
increment 14
future. 9
i; 16
misses. 7
one! 1
nice, 3
long 68
matter 13
in-memory 2
interlude, 2
interleaving 4
jumps 7
it... 1
myarg_t 8
implement. 5
follows 6
less 29
minus 5
indexed 3
lived 1
noted 3
inverse 1
little 103
informed, 1
informs 1
installation 1
instructions 78
if, 4
obliged 1
know 71
observe 6
long-lived 3
incrementally. 1
garbage 2
ideally 1
modification, 2
ones. 3
non-practical 1
lost. 2
mem. 1
interpretation 1
interrupt; 1
kernel. 6
including 51
naive 3
itself 32
implementations 4
for? 2
letting 6
monopolize 6
indicate 15
location; 2
nuance 1
looping-race-nolock.s 8
load. 2
init(); 2
innocent 1
intent 5
insufficient. 2
illusion, 2
masking 4
knowledge? 1
off; 2
longrunning 1
indicated 4
gone 5
ignore 5
motivating 1
open() 6
none-too-subtle 1
lot! 1
memories, 1
intervals 6
good 99
it; 14
increases 6
needed. 11
job, 19
implication 1
forget-ting 1
lifeless 1
ms, 5
ineffec1 1
involving 1
observed 1
lucky, 2
lock(&mutex); 2
innovator 1
inserted 2
interposing 1
interconnected 1
implicit 1
math 4
left-shifted 2
lower-half 1
older 13
init() 6
improvement. 1
movement). 1
operates 4
not: 3
luck! 1
mesh 1
kernel’s 4
is, 22
gum 1
jumps) 1
influenced 2
needless 2
known: 1
negative 14
fragmented) 1
link) 1
infinitum. 1
old; 4
machine? 2
lock->flag 6
installed 1
inspired 1
multiple 95
intervals: 4
interesting) 1
improving 4
mathematical 1
like: 3
m;) 1
initializes 5
optimal 20
in- 1
multi.py 2
organization. 1
numer-ous 1
old, 1
oldest 1
on. 9
one) 4
one-word 2
other) 1
output: 4
outs 1
owner 4
ownership, 1
p; 7
packages, 1
page. 21
pages; 9
pairs, 1
our 230
microkernel-like 1
kind) 1
jobs: 2
halt 5
inherent 5
keeps 13
important; 4
lags 2
new) 4
free(50). 1
infrastructure 1
linked 18
once), 3
machines, 5
logic 7
int), 2
installation, 1
multiprocessors. 4
isolation 3
invalid. 2
influential 4
maximum, 1
limit 6
machines) 1
innovation 2
incarnation. 1
multiplexing 2
ours: 1
papers 8
machine; 2
over-written 1
misbehaved), 1
laptops, 1
judiciousness 1
hand. 3
inject 2
large-file 1
in-depth 1
lawyers 1
no?). 2
free(x); 1
insparable 1
list; 4
onelevel 1
main-two-cvs-while-extra-unlock.c. 1
lost, 3
interaction 13
instructions) 2
mythread. 2
it), 4
involved. 2
initially, 2
microcode), 1
load” 1
made: 3
integer). 2
include 18
necessarily 8
outdated) 1
parameters). 1
mainframe 2
overheads), 1
misbehaving 2
laughing 2
known; 1
handed-out 1
inputs: 2
last); 1
incorporates 2
learned, 1
much 135
freed 3
instant 3
loader 4
operator. 3
maliciously) 1
machinery. 3
intact; 1
interrupts 33
interactive 20
job). 1
isolated 2
initiated 1
migration 5
ls 1
main(); 1
interval 8
inefficient 4
newly-freed 1
overall. 1
park(), 2
malfeasance 1
overseas. 1
lengths: 1
lie. 1
happens: 5
instead), 1
last-in 1
influence 1
lessons 5
now? 7
name, 4
instruction? 3
function 41
opposed 3
malloc(20);. 1
market... 1
natively 1
interval’ 1
lock. 64
isolation, 2
lock_t; 8
issue, 3
insertion 2
minicomputer. 1
macOS, 1
mainstream 1
intervention 1
infinite. 1
nitty-gritty: 1
overhead), 2
pdflush), 1
malloc(sizeof(int)); 2
lifetime 1
paging 28
limit) 1
hardware; 2
instruction; 3
instrument 1
lines, 1
later 36
numbers). 1
napping 1
instructions, 10
game, 1
optimizations 1
many” 2
matters. 3
necessarily!) 2
intriguing 1
jobs); 1
it! 14
lock’s 2
itself. 19
interleavings 4
minimum. 2
machinery? 1
maintain 4
intrinsically 1
invisible 1
nodes) 2
p3 5
is 2736
physical. 1
manipulate 2
list_t 2
paging-policy.py, 1
lists 13
header 15
interactivity. 2
interpose 1
location. 3
latter, 2
obscure 1
neatly 4
integers 4
generalize 1
options. 3
mature 1
marked 11
neighboring 1
introduces 6
key) 16
jacket, 1
joke, 1
low-level 16
intermediate 1
miss. 9
machines). 1
inflation 2
isn’t, 2
nonsolution: 1
p4.output 1
makes 57
points. 1
materials. 1
issues 26
limited 17
pain. 1
lives, 2
heavy, 2
internal 12
interrupt, 4
lets 10
obvious, 2
locking 34
necessary 9
intelligence. 1
goodness); 1
ordering 9
maybe 4
marriage, 1
nondeterminism 1
k-stack(A) 1
kind, 1
join. 2
key, 2
lowly 2
interrupt. 4
mistakes) 1
main-one-cv-while.c. 1
informative 3
it?) 1
note, 5
part, 2
malloc(strlen(src) 1
portion 20
mem.c 2
it? 11
line 14
paragraph 1
locality. 4
held, 6
interposed 1
interrupt-based 2
level 23
offset, 2
longer 17
next. 10
intensive, 1
harming 2
originally 2
memory), 5
not; 1
kernel” 1
means 31
knows, 1
knows 18
kicks 2
is? 2
mocked). 1
made 23
main: 12
initializer 2
join()); 1
notice 34
particular, 28
manuals 2
practice 4
memory). 6
itself), 3
parallel) 2
list, 26
lock()), 2
interpret 1
help 38
light 1
isn’t 26
once. 5
lowering 1
notes); 1
interactions. 2
head_lock, 2
memoryintensive 1
otherwise 14
notion), 1
kicking 1
measurement. 1
latency. 1
language. 3
kidding; 1
more). 1
makes. 1
moves 15
jump) 1
now. 7
peeking 1
making 63
maps 7
job 144
precise 4
men-tioned 1
it’d 1
patient! 1
lock? 10
invented 5
locks, 22
herein. 5
likes 1
journaling 3
one-quarter 1
lowest-order 1
nuances 3
intervals) 2
held) 1
merely 1
overhead, 1
null.c 1
kind: 1
memory; 19
layout 2
larger), 1
killed 2
innovations, 1
mappings 8
multiprocessorbased 1
jumped 1
occasions 1
people.cs.clemson.edu/ 1
malloc(). 4
measure? 2
known. 1
predict 16
merest 1
it” 1
periods 4
lot 35
inversion 6
home 3
looks 39
lives), 1
kinds 5
operate): 1
manager, 3
occurs?” 1
invalidate 1
higher-priority 2
microkernels 3
overwrites 1
object), 1
know! 1
methods 4
learn, 1
larger-scale 1
library) 5
masks 2
interfaces 17
multiprocessors, 2
omitted, 1
keep 48
period 8
malloc’d 3
message, 2
lack 4
predictors, 2
merge 2
jobs. 7
persistently 1
luck 5
is! 2
http://cag.csail.mit.edu/raw/ 1
lookup. 3
locate 3
know: 2
opposite 5
marvel 1
ones!). 1
inversely 1
hints 4
mirrors 1
p3). 1
observation 5
knowledge 14
may 123
knew 5
largest 2
limits, 1
meaning 3
interfere 2
mythread, 14
languages. 2
phrase 2
malloc” 1
messy 2
launch 2
pressing 1
meters 1
join, 2
perspective, 1
magic. 1
loop. 8
huge 20
locations, 1
known, 2
opt 1
oops, 1
inverted 4
hit! 1
miss-handling 2
page-replacement 6
obviously 5
large-scale 1
million 17
mem.pdf 1
least-significant 1
ld-2.23.so 1
loading 6
mem 10
interrupted. 2
one 500
need. 2
needs; 1
physics 1
manages; 1
miss), 3
lazy; 2
leaking 3
metric, 2
jokes 1
pipeline 1
main-signal.c. 2
loops; 13
lucky 3
i 22
large. 3
optimization, 3
opposite: 1
iterations? 1
hits. 1
mistake 3
park(); 4
occurring 3
last, 1
mind, 4
lazy 5
led 8
lock), 2
more, 6
issue; 1
long-running 15
learn 65
negative). 1
popular 7
mapped 14
mode, 13
metrics 7
model 8
modifies 1
play 4
jump 22
maintaining 1
only 202
lock->ticket 2
m; 1
illusion: 2
latency) 1
illustrate 5
or, 5
join() 9
hold? 2
mix 1
mode) 9
offset=04); 1
memory-related 1
lean 1
misses 21
lengths 5
most-significant 1
learns 1
job) 3
looked 8
len:9 1
it 1299
network 2
porting 2
previously) 1
learned 13
miss; 1
most. 1
modulo 1
kernel; 2
point, 30
manner. 7
oops! 1
lock-free 3
machines 21
out; 1
laughably 1
implementing 8
orderings 2
k-stack(B) 2
holds, 2
park, 2
move). 1
operator 3
left), 1
month. 1
libcrypt, 1
multiples 1
memory. 103
least, 7
journalism 1
low, 3
limits 6
item. 1
network-connected 1
preemption 2
primitives? 2
life; 1
mmap(); 1
myret 4
moment 5
larger? 1
pointier, 1
material 8
open()? 1
looping 1
main-deadlock.c. 2
outlines 6
lay-out. 1
implying 1
otool 2
honor 1
participated 1
ms. 5
optimality 1
multiprogramming 8
more! 1
kernel 123
multiprocessing). 2
millions 3
legal 6
library 47
key; 6
lowered, 1
literally 1
iteration. 1
prior). 1
printing 3
lifetime, 1
modifications. 2
nearly-complete 1
monopolized 1
later); 1
move 31
meltdownattack.com 1
optimal, 5
low-cost 1
new 140
matter; 1
own? 1
lays 1
improbable, 2
out-of-bounds; 1
partition 1
ideas 36
legal; 1
options 3
mutex; 6
multicore 6
keystroke 1
mutex, 4
mind-blowing 1
legitimate 1
lively 1
known). 1
lowest 9
lock) 4
jne 3
pro2 1
priority) 1
linear 34
necessitating 1
possession 2
moving 13
ldl 2
ms). 3
memories. 1
lower-priority 2
non-ASLR 1
mechanisms 32
p2.c 1
increase? 2
least 35
p1, 5
perfectly, 1
illegal, 1
levels), 1
others). 1
myarg_t; 4
names 1
lazily, 1
mutual-exclusion 2
minimal 7
language 8
other 303
let 36
machine) 2
lock, 61
locked 7
just-finished 1
proceed! 1
privileged 24
lines 14
needed, 7
pressed 2
muck 1
len:30 1
much... 1
multiprocessor, 2
main(int 23
noticeably 4
memoryreference 1
page-number 1
increases, 2
length). 2
pagereplacement 1
perform? 1
imagine, 4
output; 1
n 4
life 22
networking, 1
ldq 2
myret_t; 2
misbehaves 1
later, 5
overflow. 1
levels: 1
madvise), 1
locking. 3
looking? 1
keyboard, 1
process); 1
probes 1
list? 1
printed 6
libc-2.23.so 1
multi-level 30
memory-add 2
myargs); 2
malloc 8
nuclear 1
microprocessor. 1
paging-multilevel-translate.py; 1
incremented; 2
lmbench 4
paging). 1
phone 1
implementation 7
over-designed 1
nearly-infinite 1
lightweight 1
new->next 4
length? 1
negative, 3
mitigates 1
law 2
own. 2
magnitude 1
logs 1
low 10
kill() 1
problem: 25
lists, 7
not 449
processes, 31
process, 51
nanoseconds), 1
method. 3
like 215
natural 9
mapping, 1
nuts 1
mind 5
list 103
paradigm. 1
local-to-global 2
indeed 26
pairs. 1
physics). 1
improved 6
p3) 1
nonconcurrent 1
like; 2
newly-created 3
lengths, 1
much: 1
ldrex/strex 2
p2 7
next 101
longer-running 1
lower-case 3
knowing 6
load; 1
nothing”; 2
printf("%lld\n", 2
producers, 1
processing. 1
look 121
middle 11
linker 1
newly-opened 1
make 214
massive 4
malloc(sizeof(node_t)); 8
miss, 10
load/store 3
parent) 1
indeterminate 2
location 39
parallel 6
picks 5
incl 1
package 4
normally 2
limits. 1
nice), 1
library, 10
nanoseconds, 2
level, 3
paging, 4
nice 34
lowered 1
locality: 2
larger 23
objdump 8
printf("location 3
professor 2
newlyrunning 1
producing 1
loop; 2
modified. 1
list) 5
news: 2
objects 5
machine 34
mandated 1
modify 3
password 1
located 13
individual 3
long-list 1
parameter, 4
pipe, 2
incorporate 7
notice, 3
pair 21
node. 1
lifesaver 1
numbering 1
load 35
likes, 1
parameters. 2
not. 14
m->flag 6
logical 15
leak 2
objectoriented 1
pro-cessor) 1
programming 7
next-to-last 1
noble 1
listed 1
notes. 1
master, 1
occasion; 1
main-signal-cv.c. 2
programs 85
manual 13
money 1
penalties. 1
lock_t 2
informally, 1
lookup? 1
park(). 2
please 3
index. 1
now: 1
locks 79
node_t; 5
likely). 1
obvious 12
lock). 10
linear) 1
parentheses 2
of... 3
macro 1
lookaside 4
libraries 3
once, 9
old 60
progress. 3
mother 2
none 3
location, 6
nothing 5
math. 1
occur. 3
malloc(), 3
properly. 1
map 7
mostly 4
people. 1
informing 1
loop? 1
path 8
pmap, 1
info: 1
passed, 1
on-chip 4
long, 5
node’s 4
links 3
oddity: 2
lock_init(lock_t 4
perror("malloc"); 4
load-linked 14
maintains. 1
lookups. 1
limiting 1
process). 2
ongoing 1
online: 1
project, 2
mythread() 2
not? 2
locks) 3
notion 12
measurements? 1
occurs; 3
malloc(strlen(src)); 1
provided. 2
marks 4
pseudocode 7
interleavings. 2
per-process 12
loops, 4
peach, 3
pool 1
patent 1
pattern. 2
information 57
infrequently 1
literature 1
off, 3
logically 6
locality 18
malicious, 1
lock; 24
offset 42
lists. 1
processes? 3
online, 2
operation. 5
ps 2
myturn 2
note: 4
macros 1
number. 2
megabytes). 1
odds 1
now 184
much; 1
marvelous 1
pthread_mutex_init(&c->llock[i], 2
internet 1
perfect... 2
peanut 1
populated, 1
major 28
lowers 1
perhaps 39
one, 26
inherits 1
looping-race-nolock.s, 2
loss 2
me 6
loop.s 6
logically-different 1
many 252
persistently, 1
oops.x 2
ll/sc 2
processes” 5
opposite, 1
operation 20
re-referenced, 1
name. 4
notice. 1
made. 2
object 10
memory-access 1
one-third 1
old_ptr 4
multiprocessing 1
maximum 8
purify, 2
intervening 3
performance; 5
power.” 1
malloc(100e6)); 1
performance: 4
magic; 1
persistence. 2
other, 5
injected 2
looping-sequential 3
lottery. 1
loops. 1
measure 21
longlived 1
marking, 1
physically 2
optimization 6
loathe 1
produced 2
optimal) 1
optimal; 2
reach 2
nasty 1
num 1
magnificently; 2
occurred 3
memory? 9
open("./p4.output", 1
on). 1
naturally, 1
mem-access 1
neat 8
putting 17
permissible. 1
pre-configured 1
managed, 2
permanently-valid 1
main-two-cvs-while.c 1
place. 16
outcomes? 4
innovations. 1
low. 1
low-priority 1
lovely 1
memory-mapping 1
main(). 1
mathematician 2
pipeline, 2
overflows 4
lock->turn 8
professors 3
organize 1
optimize 4
ready. 1
nature 8
obvious) 2
occurrence. 1
memory” 1
opinions; 1
otherwise: 2
main 66
invented, 1
mem? 1
necessary; 1
quantum 5
phones 3
predictable; 1
matter, 3
pesky 1
mainframe, 1
ploticus 1
overcome. 2
instruction(s) 2
machinery 10
machine, 8
magic: 7
mentioning: 1
main-signal-cv. 2
meant 1
ponder: 1
overwrite 4
luck. 1
profilers 2
output. 2
order), 1
receive 11
off), 2
odd 6
offender. 1
mesmerizing. 1
optimizing 2
overflow 3
matches 1
inversion, 4
metric: 1
need, 1
questions 13
phrase... 1
preferred; 2
measurements 4
practice! 1
malloc(3) 1
pointed 15
overhead 12
intervals. 1
main-two-cvs-if.c. 1
magic 7
malloc.py, 1
metric. 4
maintains 1
power-of-two-sized 1
mechanism 18
owns 2
maintain, 1
projects, 1
overcome? 1
orphaned 1
recommended 1
regions, 2
offending 10
oh 2
mess 1
others), 3
measurements, 1
moment. 1
networking 3
own 72
randomization, 1
issue 33
piena 1
primitive! 2
precision 2
primitives. 8
pointers? 2
oversubscribed, 1
into, 1
malloc(sizeof(double)); 1
malloc(10 2
manager 3
mighty 4
manipulations 2
powerful. 3
memory-reference 1
p1.c), 1
makes, 2
proverbial 1
overzealous 1
otherwise). 1
needs 32
regs(A) 3
offset=000000, 1
order; 1
messages 1
outcome. 6
measures 2
mouse), 1
non-contiguous 2
p); 1
movl 28
pipes, 2
preferably 2
malloc(strlen(s) 1
it, 68
policies; 1
process; 13
parameters: 1
intricacy 1
manner? 1
memory 568
mess! 1
manner: 1
milliseconds, 2
maximize 2
prerequisite 1
microseconds, 2
pages). 3
pthread_mutex_trylock(pthread_mutex_t 2
management 29
ownership 1
newly 3
repair 3
output 36
once”, 1
ority 1
microcosm, 1
one. 24
norm, 2
re-enable 2
p3.c 3
multiple-queue 1
player 1
preserve 1
job. 8
poorly. 2
man 21
protections 4
manages 9
memory, 124
introducing 5
manufacturers 1
manner 7
match. 1
more? 1
memory-bug 1
preventing 3
mid-instruction, 2
pause) 1
ptr 16
material. 3
page-directory 5
newly-fetched 1
replacements 2
p4.output. 1
out? 1
over. 1
might 218
migration. 1
open-source 2
occur, 2
read-only 1
page). 1
multiprocessors 5
pointer, 10
job’s 2
primitives 15
problem; 2
pthread_join(pthread_t 2
park 6
manner; 1
memory-user 4
intuitively 1
memory-constrained 1
matters! 1
matter. 2
memory-user.c. 1
previously 3
mov 33
minimal. 2
peaches. 1
query 1
maximizing 1
park() 4
non-scalable 2
reset 3
pageable 1
overview 12
overload. 1
models), 2
million); 1
operations, 3
often, 7
read-write). 1
pages); 1
mutex_unlock 2
possible, 14
positive 4
key 28
problematic: 1
pthread_mutex_unlock(&c->llock[cpu]); 2
processor, 13
memory): 1
message 10
invocation, 1
memory-failing 2
mean 6
memory-intensive 1
metric 5
must-read 3
minimizes 2
questioning 1
memcheck 1
priority 61
per 57
patterns. 2
nor 1
resource; 1
part: 4
page: 1
p: 18
much, 1
mobile 1
original; 2
oops.y 2
rearrangement 1
parameters 9
new->key 4
power 8
practical 8
knowing, 1
paths. 2
pthread_mutex_unlock(pthread_mutex_t 2
program-debug 1
micro-instructions 1
minutes 1
it) 5
message; 1
mechanism, 2
mid-execution 1
microsecond. 1
nanoseconds). 1
misses! 1
read/write 1
memory); 2
proceed 6
perform, 1
percentages. 1
o 2
restricts 1
patterns 4
papers, 6
pages: 2
modes 2
multi-threaded 44
other. 8
optimizations. 1
reboot 6
peaches; 1
new_head->value; 2
precautions 2
prepared 1
labeled 3
perfectly 2
purpose, 1
program4 1
mines 1
miss) 1
it?!) 1
methods, 1
megabytes 3
middle, 1
min 3
nearest 1
ms), 4
reason. 3
memory-mapped 3
processes”, 2
performance), 1
perhaps, 1
obey 1
retain 1
pauses 1
parallelization, 1
painful; 2
modified). 1
multiplied 3
others; 1
order, 5
reduced-instruction 1
piece. 3
nptl 4
preemptive, 1
processors 16
larger, 2
queue), 1
performs 21
prove 5
minicomputer 5
missed 2
itself? 1
miss); 1
memories 4
minds 1
mini-computer; 1
negatives, 2
must, 1
receives 4
milliseconds). 1
produced, 1
performant) 2
pipe() 2
observing 1
revolutionized 1
people, 1
parcel 1
multi-processor 4
multiprogrammed 3
parent 44
part 52
ordering. 2
reduces 9
plain 2
number), 1
present, 2
production, 1
laser-like 1
races, 4
pipe 8
minimum 2
provides 30
mode 23
misses, 8
mental 2
minimizing 1
models 2
nicely. 2
naturally-occurring 1
recollections 1
minicomputers. 1
professor? 1
pick 15
played 1
rightly 2
occurs 19
just 304
percent 6
mutex->flag 6
nears 2
other’s 1
parts 19
origin 2
relocation; 1
pointers 5
particular 60
numerous 12
prevented 5
productive. 1
laziness 2
randomness 6
pmap 5
pseudo-random. 1
miss 32
mode; 2
mentor, 2
miss? 1
mode” 1
nightmares 1
modern 90
newlyfreed 1
recover 1
moglie 1
professors, 1
pieces. 1
pouvoir”, 1
routine1, 1
onnv/onnv-gate/usr/src/lib/libc/port/threads/synch.c. 2
performance? 3
kind 54
next: 9
mutual 29
p 1
pause, 1
ory. 1
replacement; 1
postulates 1
of) 3
program; 3
prohibitive. 3
print 25
leads 13
rate. 3
previously, 1
pushl 1
mmap() 7
movie 1
metadata 1
mjtsai.com/blog/2015/12/16/osspinlock 2
modification. 2
node, 1
n). 1
notes, 3
regain 1
mother. 2
prompt 4
pleases: 1
predictors 1
open(), 1
run. 22
performance” 1
late 4
myturn) 2
node_t 24
p1–p3). 1
pay 12
ourselves 3
represents 4
on! 2
powerful 21
pass 54
protection, 2
printf("%s\n", 3
leak, 1
readied, 1
priority, 7
put(int 2
mode). 1
ms 14
method 8
monitors 5
multiplex 1
now-standard 1
named 8
notices 2
representing 2
multi-queue 4
protection; 2
pressure. 2
preferred 2
opinions 2
runs; 3
permit 1
later. 9
name). 1
non-cooperative 2
packaged 2
peep 1
over, 1
require. 1
on-going 4
pre-WWII 1
pausing 2
question; 1
legality. 1
priority-based 1
reading 21
process. 69
pages 195
puts 19
much-improved 1
millisecond. 1
moreover, 1
myret_t 6
ocean, 1
now! 1
requiring 11
needed 44
multitude 1
pthread_mutex_lock(&q->tail_lock); 2
primitive. 6
presenting 1
opposing 2
rv; 2
persistence, 1
leaked 2
necessity! 2
non-preemptive 2
percentage, 1
packed 4
requirement: 2
open, 1
preferring 1
perceived 3
queue. 12
liked 1
proceeding. 1
reality 7
more) 1
pals 1
process’s 18
multi-CPU 3
rate 27
milliseconds; 1
moved 6
needed? 6
olden 1
number, 4
resource. 2
new; 8
myargs[2] 2
ptr, 3
primitives; 2
preserves 1
orders 2
rvals; 2
persistent 4
least- 1
needlessly 3
non-stop; 1
perl). 1
pain 1
respectively, 1
operational 1
presents 7
perfect. 2
queue_t; 2
linear. 1
processor. 9
recommend 2
multiprogramming. 1
patch 5
properties 8
multiply 2
re-referencing 1
mistakes 3
much. 6
nicely 1
open 7
obvious. 2
resources; 2
newly-allocated 2
mystery 1
python 1
printf("Final 1
prio_to_weight[40] 1
out). 1
satisfy 9
problem. 26
least-frequentlyused 1
network. 2
notably 5
permanent 1
patches 2
response-time 1
others) 2
presumes 1
person 3
queues; 1
programmed 1
loaded 17
recursion 1
myargs[1] 2
performance-minded 2
myarg 2
pthread_mutex_t 22
reached 1
modified 15
multipro-gramming 1
non-performant. 1
operations. 8
respect 2
nothing. 2
news 2
printf("Initial 1
quickly 21
outcomes 1
persistently; 1
sbrk() 1
leaving 3
new. 3
level. 7
persons 1
paying 3
result, 12
out"); 1
principle. 1
phenomenon 1
re-reads 1
proportionally 1
local[NUMCPUS]; 2
recycles 1
name; 1
performed, 2
needed; 1
pthread_mutex_unlock(&q->head_lock); 4
realize 5
more. 14
mutex_lock 2
non-zero, 1
out-of-bounds 1
restored. 1
process 403
numbers) 1
private, 3
randomly-generated 3
overheads. 4
phase 3
scheduler); 2
occurs)! 2
newfile.txt 2
no 140
libc, 1
perspective 8
picture, 5
ret 1
p. 1
privileged) 2
placed. 1
reader 7
pthread_cond_signal(pthread_cond_t 3
register), 1
purpose 9
physically-indexed 1
queue_init(m->q); 2
regardless 2
music 2
never 38
myargs[0] 2
mythread(), 2
outputs. 2
retains 1
processors, 9
object. 1
privilege 8
re-check 3
own; 3
physics. 1
painful 7
omit 2
non-synchronized 2
none.” 2
non-zero 3
pessimal, 1
pointing 2
lock 370
reverts 1
proc 5
policies? 1
pages. 28
realloc() 4
naturally 4
relaxing 1
put(i); 5
pioneering 6
rage. 1
remote 1
mutex. 1
nothing) 4
occurs), 1
nanoseconds 1
page), 2
retry 6
producer/consumer 9
page-table 31
probabilistic 1
reacts 1
school; 1
place, 9
passes 5
one). 1
libraries) 1
not, 14
nondeterminism, 1
preparing 1
logical. 1
point 39
lower 13
proc_state 2
practice, 1
paid 1
referenced 6
releasing 16
q->head 4
raising 3
responsibility, 1
policy 50
name 22
noticed: 2
odds: 1
need 152
nature, 2
running), 1
offers 1
producer; 1
pagedirectory 1
properties: 1
realization 1
platform, 1
section. 34
peach. 6
open("/tmp/file", 1
lifted. 1
obey. 1
noticeably. 2
pretty 26
right.” 1
pre-initialized 1
lowlevellock.h 2
process), 3
prevents 3
pattern 5
register. 4
reliability 2
queue) 1
ran, 1
rest. 2
possess 1
nearby 2
once? 2
now, 18
needed). 2
necessary. 1
runs. 11
omniscient, 1
promise 1
paper: 1
reason: 3
poorly, 1
protection 22
sections; 4
once 60
option 1
performance 91
obtain 10
now-sleeping 2
process) 6
rip 1
precious 2
machinery) 1
profit 1
printf("(%d) 2
pause 2
registers; 4
remaining 13
reporting 2
random, 1
returning. 1
potential 12
negatively) 3
now-extinct 1
operations 26
no? 8
needs, 2
rw- 1
prone; 2
recourse: 2
popular. 1
pthread_mutex_init(&L->lock, 4
perfection 1
sentence. 2
online 6
locally-allocated 2
out! 1
person; 1
obviates 1
objects. 1
processed 2
rules 6
presented 8
main); 1
pthread_mutex_lock(&L->lock); 8
procedure. 1
percentage 5
relatively-slow 1
quote 7
resources? 1
randomized 2
revenge 1
precisely 2
newer 2
once; 4
optimal. 1
none, 1
processes 107
scale. 1
proportionality 1
possibilities. 1
references 28
quoting 1
periodic 1
separa-tion 1
opens 4
location.” 2
overcoming 2
piece, 1
occurs. 3
obviously, 1
professionals 3
rvals->x 2
prevention 2
publicized) 1
malloc() 32
performance, 14
released. 6
races 4
relocated 6
range 7
right. 5
preempts 1
non-blocking 2
optimizes 4
onto 17
non-concurrent 1
numbers 12
producers 3
scientist 1
proves 1
powerhouse 1
relinquishing 2
r-x-rw--r-x-r-x-r-x-r-x-rw--- 1
periodically. 1
server, 1
opportunities 1
lock(), 8
overlap 6
pioneer 2
oh! 1
programmer, 1
satisfies 1
printf("%p\n", 1
of 3668
quantum) 1
period; 1
manage 19
rolls. 1
re-acquire 1
renders 1
rarely-used 1
rvals->y 2
previously. 2
notice? 1
open. 2
out, 27
noticing 1
p4 7
program? 6
search 20
purify 1
printf("child\n"); 3
remembers 2
raises 8
philosophy 1
server-based 2
option, 2
lookup, 2
overly-large 1
plots 3
on; 1
properties; 1
saw 12
priorities 5
offset. 6
rabbit 1
on-disk 5
management, 1
says: 1
reads” 1
representation 1
read() 1
say? 1
printf(), 1
obvious: 2
out-of-memory 1
oblivious 1
null 2
paging. 4
on 719
programmer; 4
second: 1
rage 3
printf("hello 3
remove_min(queue); 1
reac-quiring 1
pointer. 3
serviced. 2
ordered 4
loop, 10
overwhelm 1
policies: 2
operator, 2
proportion, 1
saying 4
programmer. 5
progressed, 2
raise 10
ones 8
manager. 4
scales? 2
referenced; 1
reside). 1
reader: 2
says, 1
priority. 8
occasionally 3
overcome 3
occur 9
obtaining 4
paper, 3
operation, 9
programs, 16
sections. 4
project 4
responsiveness; 1
reasons, 6
pop 1
sits 3
out.” 1
main-deadlock-global.c. 2
pages) 3
politely 1
placing 7
scheduler, 20
pthread 57
prohibitively 2
problem 121
reason, 8
optimization. 1
marking 2
scheduler; 2
references, 1
recent, 1
scheduled; 1
problem? 2
offset: 1
overheads? 1
returns 61
oddly 1
occur? 2
parallelism. 2
occurs, 14
randomization 3
semaphores” 1
off 30
pthread_mutex_lock(&c->llock[cpu]); 2
retry, 1
received 3
popular, 1
sizeof(PDE)) 1
overlap, 1
malicious 14
papers. 4
pretend 5
plans 1
second-chance 1
projects 3
processes: 4
recently. 2
ordering; 1
meeting 1
refer 27
quite 114
register) 2
reduction 2
screen, 1
problems, 12
one-to-one 1
overwriting 2
rise 2
offset), 1
opportunity 1
paralleliza-tion, 1
rates 1
out 181
semi-nal 1
offered 1
separation 5
rewrite 8
refers 9
popular-sized 1
sketch/review 1
p5 5
malloc. 1
parallel, 2
problematic 2
policy. 4
secretly 3
promoted 1
professor. 2
organization 2
scope 2
microseconds 2
releases 14
quote: 2
rele-vant 1
region) 1
sense. 11
problem” 1
one? 1
own, 3
routed 3
order! 1
parent: 2
re-accessed 1
outrage! 1
often 69
pthread_mutex_lock(pthread_mutex_t 2
often? 1
servers, 2
right); 2
relocation.py 1
possible. 14
sleeping, 3
pages), 1
manifesto 1
path, 2
problems. 11
portions 7
see. 4
protected 4
programmer), 1
original 19
scorned, 1
migrate 1
reliably 3
randomness. 1
relocated; 1
registers), 2
sequences 5
producer, 2
ones, 2
p1.c. 1
rvalue); 2
output, 2
partially-ordered 1
reader, 1
packet 3
once). 1
opened 1
pthread_mutex_unlock(&L->lock); 12
similarly 3
rogue 1
removing 8
pragmatists 1
slices 10
pagetable 4
mapping: 1
peaches 2
processes; 7
performing 14
pthread_mutex_lock(&q->head_lock); 2
programming. 5
seen 31
others 14
segmentation, 4
migration? 1
resource, 4
range; 1
remove 10
relegated 2
pthread_mutex_init(&lock, 2
one” 1
p3.c, 1
saved 11
outside 4
past, 4
realizes 3
page; 5
set 146
one: 3
operating-system 3
questions, 3
simple, 9
saves 9
requesting 1
precisely? 1
snippet 9
paradigm 1
masses: 1
preserved. 2
processes’ 1
pthread_mutex_timedlock(pthread_mutex_t 2
pieces 19
property, 2
series 9
our-selves 1
sensitive 1
miniscule 1
restored, 1
re-initialized. 1
replies: 1
repeat, 1
q->tail->next 2
oops 2
parameters, 5
scenarios, 2
overstate 1
performance2 1
recall, 1
set-top 1
oops; 2
origins 1
r-x 5
paper 85
size; 6
say), 2
resources, 4
preemption, 2
solidify 1
parent; 1
max 1
printf("%d\n", 7
produce 9
put() 4
placement 1
ps. 1
set” 2
overall 9
sent 3
misses), 1
reused, 1
read, 7
responds 2
repeating. 1
quickly. 5
opposite. 1
part) 1
scripting 1
oversubscribed; 1
performed 11
rechecking, 2
opinion 1
sharing 30
outcome? 5
re-referenced 2
parent. 4
slowly, 4
past 6
restricted. 1
prefetching 2
solve: 1
part. 1
meaningful 5
privacy 1
producer. 2
puzzle 2
player, 1
ptr; 2
shooting 1
overlays 1
sequential” 1
mobility 1
routine. 2
reap 1
responsive 1
reproduced 1
radical 2
passed 18
security; 2
p2; 5
personal 1
record 6
shouldn’t 5
p1.c) 1
read-only, 2
scale: 1
someone 3
order 80
penalize 1
return-oriented 1
prepare 1
sometime 1
peaches, 1
meanwhile, 1
problematic, 1
program: 6
queue_add(m->q, 4
plural) 2
quantify 3
simplest: 2
owns. 1
set. 2
molecules 1
or 469
rudimentary 4
restricting 1
reason 32
required, 3
rc; 4
paths 4
seemed 1
packing 2
phases 2
referenced, 1
signal. 3
pains 1
really. 1
scary 1
outcome 4
person! 1
returning) 2
primer 1
sometimes 73
space). 3
peek 1
measurement 3
problems: 2
prone. 2
rare 2
policy) 1
queue, 17
simplifying 3
p4.c 2
sharing. 3
monster! 1
orderly 1
run? 8
return. 1
rechecks 2
readable 1
runs, 21
peach? 1
place? 1
regained 2
signals; 1
passive 2
segment 56
rearrange 2
scenario. 4
perspective. 2
right) 1
printf("%s: 4
sooner 1
spaceshared 1
pending 1
messages. 2
process? 4
protocol 3
re3 1
providing 16
pool? 1
re-use 1
sketched 1
page-frame 1
shouldn’t. 2
motivate 1
organization, 1
rewrite, 2
recorded 3
research 18
real, 2
satisfaction, 1
per-futex 2
planet 1
region; 1
simulator, 1
path. 3
semantics, 5
reassurance; 1
scheduler.py, 1
pid; 1
routines. 1
product. 1
space-management 1
spear-headed 1
met 1
page 635
people 28
protocol, 1
over 90
read. 6
pthread_mutex_lock(&c->glock); 4
popularity 1
read), 1
slight 2
panacea, 1
sidebar 2
passing 12
original, 1
scare 1
recourse 1
research.microsoft.com/ 2
realized 8
scale, 1
plus 11
relaxed: 1
performance. 35
sleeps 4
sequence: 1
reboot, 1
school: 2
perform 70
places 6
runaway 1
professor, 1
spaces). 1
started, 1
mild 1
painful. 1
persistence 1
pthread.h 2
picking 6
readability 1
quest 3
potentially-starving) 1
receive. 1
slightly; 1
moustache 1
signal/wakeup 1
patience, 1
other? 1
scorned 1
redoing 2
resize; 2
rearranging 1
scenario 4
policies, 7
remedied 2
place; 1
setassociativity; 1
regions 11
scientist, 1
philosophical, 1
platforms 2
runs? 2
program). 2
stash 1
programmers 13
passion 1
stack 79
overhead. 1
pthread_cond_t 3
pieces, 5
readily 5
question: 7
pressure 5
recommended. 1
sneaky 2
space 278
simultaneously, 1
specified 8
others, 4
split 9
referencing 1
respectively. 2
reasonably 3
scheduler), 1
poorly? 1
must 152
remind 1
players 1
relaxation 1
seamlessly 1
share 36
pioneered 4
point. 7
sane 2
milliseconds 6
statement. 2
programming, 2
pays 1
stack”! 1
overheads; 1
pthread_create(pthread_t 2
piece” 1
ready), 2
queues: 1
primarily 3
recursion). 2
software 17
placed, 1
sizes, 2
screen. 3
overall, 1
src); 3
overheads 14
result. 11
reclaims 1
scheduling. 9
positivity 1
n; 1
repeating 1
pointer? 1
reload 1
shells). 1
she’ll 2
pleasure: 1
pointer). 2
scenarios 2
minute?), 1
storage. 1
proportions 1
penalty 2
straightforward; 1
page? 1
pushing 2
pioneers 4
reasonable. 3
rather, 11
primitive 9
reducing 6
solution. 8
possibly 1
slumber 2
searches 3
regards 2
stack-allocated 2
overlays, 1
rosy 1
references. 2
school, 2
prac-tice, 1
nanoseconds. 3
resort 1
poor 10
remainder 1
shipping 2
simple) 1
point1 1
points; 1
sched 7
modes. 2
string, 2
provably 1
performance”, 1
stuck, 1
race): 2
recall). 1
pages, 26
ratios 1
place 46
principles 5
register, 6
soon, 1
potentially 7
small! 1
segment; 4
reliability. 2
starting 14
overly 3
region, 5
running, 30
searching 4
prefer 2
networks, 1
responsabilit 1
powerful, 2
request. 7
result 30
simplicity, 16
popl 1
schedule: 2
modifying 2
policies 35
structures? 1
question). 1
perspectives 1
subset 3
readable. 1
recognized 1
paging-linear-translate.py, 1
readers, 1
placement, 1
priority). 1
regs 3
sorry, 1
premature 2
something, 2
relocating 1
segmentation 26
starve). 1
p1 8
relates 3
runtimei 1
section? 4
presumably 4
no, 1
powers 1
shrinks 1
requests; 1
return? 2
simulation. 1
posed 5
scream, 2
module 1
pollutes 1
strung 1
ran. 1
peterson.s, 2
substantial, 2
readonly 1
reduced. 2
parameter; 2
really) 2
poorly 3
probabilistically 2
replete 1
space? 6
premise 1
request? 1
sensed, 2
stems 1
space. 45
page(s) 1
relocation 6
safe. 2
sections, 2
prevent 8
non-computer-types 1
pre-specified 2
similarly, 3
researchers 8
returns, 7
situations 3
possibility 5
seconds!). 2
monitoring 3
pragmatic 1
sudden 1
random. 1
phase, 4
surprising 7
reasonably. 1
register-level 1
paranoid. 1
recently, 1
predate 1
proc-struct(B) 1
reset. 2
spaces, 5
presence 11
requests, 2
share; 1
strdup("wc"); 2
sparse, 1
paged 1
said, 10
see). 1
replacement 30
primary 9
normal 11
simplicity; 2
resizing, 2
prints 41
reveal 1
sizeof(PTE)) 7
possible: 1
secure 3
mutex_t 5
predates 1
susceptible 3
rarely 1
photos 1
switches, 2
reboots 1
single 203
park. 2
reclaimed, 1
preserving 1
process: 2
resistance 1
space” 1
printf("this 1
research; 1
short-circuiting 2
stream 7
spawn() 1
parameter 6
seeds 11
say 29
printf() 1
requires 25
notes 5
restores 4
proactively. 1
rid 1
slow. 3
power. 1
semantics 8
my 6
pri- 1
switch() 3
rarely-taken 2
swtch(struct 1
remarkably 1
relatively-short 1
sitting 4
records 1
pressure, 2
particularly 27
resource) 2
stack), 2
programs. 25
priori 3
reside, 1
shortcomings. 1
structure; 2
species. 1
physical 236
peach 4
segments. 3
scaling, 1
prioritizes 1
root, 1
now), 1
return-to-libc 1
proceeding 1
robust 9
slowly) 1
sequence. 2
namely 5
private 18
primitives, 3
swtch: 1
react 1
symbol 3
renewed 1
relocation. 2
sketch 3
redirect 2
pretends 1
partner 1
results? 2
per-CPU 5
proliferation; 1
proceeds 4
resource 14
simulator. 2
talk 10
spend 10
points 15
periodically 9
ship 1
scenes, 2
rude 1
null-pointer 2
returned. 2
processes) 1
rwrw- 1
problems 55
small: 3
short). 1
near 13
priorities. 1
probably 32
table; 5
reads 10
system1 1
requests. 6
replacement. 4
slab 5
region. 1
primitive, 2
starvation 3
resume 8
performs. 2
promotes 2
professional 1
restored 4
testand-set 1
simultaneously 11
preempt 2
pigs. 1
shoppers 1
schedule 14
run; 1
scheduler. 10
returnsfrom-trap, 1
spin 79
rw— 2
process-run.py, 1
processor 28
sparsely 1
shorter 6
specify 10
proc-struct(A) 1
processor; 5
teaching 1
reside. 1
table. 26
requested, 2
sleep) 1
regular 2
reference 57
priorities; 1
statistics 4
revolutionary. 1
processes. 22
proofs 1
produces 7
resulted 2
property 10
sincerely 1
pipes 4
previous 19
null. 2
runtime, 2
scheduler’s 1
room: 1
spin-waiting 4
safe 6
produced. 1
programs5 1
nearly-endless 1
shows 94
signaled 1
single-queue 4
process-run.py 1
properties. 1
them), 2
rest, 1
tables; 1
resident 2
slot 7
removed 6
stopped, 1
referred 27
permissions 1
ruins 2
those 84
themselves, 1
returns), 1
prot 8
single, 1
ple 1
provide 65
previously; 2
rvals->y); 2
secretary; 1
routine1 1
stand 1
scalability. 1
producer 26
newfile.txt. 1
prompt> 37
node 12
similarity 1
six 3
processing; 1
proportions, 1
resuming 1
number 198
thank 2
small) 1
rest 18
requested 8
results, 4
retries 4
picture 5
progress 8
run-time 7
think. 2
thought 17
reused 1
protective 1
situation. 2
pleasure 1
pthread_create(..., 4
printf("hello, 6
section; 2
seemingly 12
put 41
store-conditional, 4
scheduled. 2
so 197
speculation, 2
protocol. 4
not), 3
simplicity 7
sleep; 4
return-tolibc 1
pthread_t 14
objectives; 1
thinking: 2
researchers/engineers, 1
relevant. 2
plenty 3
proportional-share, 1
safer 2
returning 27
tickets), 1
tickets, 4
ridiculously 1
protocols 2
sizes 8
priority; 1
segment: 10
rules, 1
sees 4
pointer 55
question! 1
program 321
stream. 2
professor! 2
streams, 1
solving 4
spring 1
somebody 5
noticed 5
program, 58
software) 2
returning, 2
pthreads 8
scheduler 110
observes 2
thoughtful, 1
results 17
relocate 5
pmap. 1
protection. 3
scalability 2
time-slice 5
scanning 3
rights). 1
right 42
scheduled 11
sleeping). 1
segmentation? 1
rvals->x, 2
problem, 24
services, 1
positively) 3
questions. 3
projects. 1
structure) 1
stride 17
protocols; 1
step). 1
somehow 6
singlequeue 1
observed, 1
proofing 1
solution). 1
right, 3
purchase 1
searched 1
occurs: 1
thoughts 5
returned) 2
remains 11
policy, 12
pthread_attr_t 2
timeline, 1
tmp; 7
round 2
pthread_cond_wait(pthread_cond_t 3
safe? 2
scoff 1
slowed 1
segmentation” 1
rw59 1
processing 4
read(), 1
short 29
proofs” 1
possible 31
students 3
struction 1
pthread_mutex_unlock(&lock); 2
strategy 6
sometimes, 2
size, 12
obtained 1
pros 1
roughly 24
off. 1
segment, 14
on, 11
race 28
review 2
possible; 2
remember 20
pthread_mutex_init(&q->tail_lock, 2
to) 1
pthread_create(&p, 2
scheduler? 5
scratched 2
small-scale 1
sets. 2
saying, 1
programmers. 2
real-world 2
single-threaded 4
runs 83
preemptive 2
proper 14
success! 4
structure: 2
published 4
strdup() 1
sizeof(int); 1
ocean 1
stack, 18
pursue 1
run), 2
service. 3
threshold) 2
once); 1
range. 1
road, 1
possibly-failing 2
repeatedly 15
pthread_mutex_unlock(&c->glock); 4
too: 2
some 505
pthread_mutex_init(&c->glock, 2
schedulers, 1
segmenting 1
show, 1
programming: 2
so, 37
scalable 15
reboot. 1
sit 6
rv 4
proponents 1
sure; 1
present 36
suffer 8
push 2
student, 3
queue; 5
on) 1
states. 1
question, 1
rvalue; 2
tmp->next; 2
re-awaken 1
sets 27
role 11
posterity) 2
replaces 7
publishing 2
tool. 1
soon-to-be-exec’d 1
pthread_mutex_unlock(&q->tail_lock); 2
secondchance 1
senses 1
simplify 1
pronounced 1
operating 151
somehow, 1
second; 1
recognizes 1
sizeof(int)); 2
sat 2
provides, 1
swap? 1
printf("parent: 6
slice 36
sleep. 8
succeeded. 1
random-access 1
operation), 2
statistics). 1
queue? 1
rx 4
topmost 7
queues, 12
shape. 1
roused 2
showing 8
routine, 10
reports 2
rapidly 1
tragically 2
sophisticated 13
see! 2
sense 26
setting 15
shift 1
serve, 1
size=100); 1
properly 15
p3.c), 1
queue 55
provided 20
reduction, 1
saves/restores 1
system), 3
question 27
priorityadjustment 1
suggested 8
sleeping/waking 2
slightly 19
success: 2
something 132
ranges 1
opposites 1
store), 3
second. 5
reaches 2
tricky 10
raised, 2
similar. 2
precisely, 1
prematurely-optimized 1
required. 5
rate) 2
transistors 2
soup.” 1
short-running 4
service 11
sizeof(), 1
see: 2
realizing 1
page, 28
pthread_mutex_init(&q->head_lock, 2
refine 3
saving 6
table2 1
queue_t 2
queues 6
superpages, 1
slice). 1
small). 3
space-usage 1
rdtsc 3
optimizations, 3
strcpy(dest_buffer, 1
section), 2
react, 1
typical 26
size); 2
rule: 2
printf("main: 8
runnable; 2
real 53
rc 13
transparency2 1
specific. 1
short. 3
settle 1
snooping 1
semaphores 1
red-black 4
such 274
server 11
pthread_mutex_lock(&lock); 2
rent 1
scale 4
tables? 1
probability 2
rate, 3
processors. 3
sloppy 4
sparse 7
smaller 14
realistic 3
optional 2
strdup 1
seem 7
read? 2
unanswered: 1
skill 2
resides 9
problem”, 1
rw45 1
recall1 1
rc_wait, 2
trap), 1
spinning. 2
shot 2
short-lived 2
solved 2
redirects 1
page-not-present 1
page-sized 4
pal, 2
parameterize 1
parent? 1
patience 2
perfect 7
permission 1
persists, 1
personally 2
physical, 1
pipe; 1
placed 24
plays 2
poorly-programmed) 1
procedure 12
processing, 3
properly, 1
proportional 3
proportional-share 6
provided, 2
q->head; 2
queued 1
quick, 1
qu’une 1
race. 4
ravages 1
rc_wait 3
re-place 1
really 52
reasons. 10
recency 1
regains 3
remains: 2
remember: 1
reproduce 1
request 35
resources. 5
restrictions 1
returned 15
right”, 1
rw 6
scales. 1
scientists 4
scream. 1
setaffinity() 1
pull 2
replacement) 1
schemes 5
tens 2
support. 9
re-create 1
product 1
small. 1
spatial 7
snapshot 1
rebooted, 1
ordering, 2
strengths 2
send 13
strongly 5
sense, 6
understanding 19
programmer 12
same, 3
redirection, 1
response 31
re-checks 4
traverse 1
stage 3
sign 3
soon. 1
signal 28
reflect 4
supposed 4
to 4068
see, 15
queuingbased 1
research, 4
quick 4
test-and-set! 1
register 75
surprise. 1
re-duces 1
program) 1
src.opensolaris.org/source/xref/ 2
smart 13
space; 11
so. 15
out. 11
reasons 6
software4 1
strut 2
serious 10
undo 4
proportion 5
saved? 2
referring 2
retrospective 3
reaction 2
true, 3
states 15
signals 13
stays 4
symbiotic 1
together! 1
segmentation; 2
school 2
restricted 7
quickly; 3
shared 67
test-and-set.s 2
relaxed 2
suspicion. 2
recommending 2
simply 128
progress, 1
reg/PC 1
spawning 1
start 58
solutions 11
p6 5
reclaiming 1
some_function(char 1
subsystems 1
servers 1
unimaginatively 1
servicing 5
sbrk 3
revisited 1
schedulers 14
unallocated 2
sorry. 1
ready 33
stopping 4
touch 4
similar 45
seminal 1
science. 2
result: 2
rarely. 2
shells, 1
system. 57
them, 20
released 10
switching; 1
recursive 1
slice. 1
protect 11
regions) 1
speculation 2
starving 1
spin-lock 2
page) 4
redirected 2
sometimes) 2
suggest 3
provisions 1
setting, 1
updates 33
region 25
roam 1
scheduling, 15
uncommon 2
space! 2
really, 4
strange 8
translations! 1
similarly; 2
served 3
scratch 3
returning; 1
rears 1
shuts 1
systems; 9
remainder. 1
t). 2
redirection 2
slices; 2
pthread_mutex_lock(mutex); 2
register; 2
stages 1
states: 1
stack: 3
store-conditional 7
reference, 2
supervisor 1
they 149
soon 25
pure 2
severe 3
us. 4
register? 2
round-robin 11
seasoned 1
registers, 10
spaces. 7
replacing 3
stride) 1
trap, 3
simplest 13
shaded 1
second, 6
right; 1
reclaim 3
single-CPU 2
system’s 3
reside) 1
tailor 1
restart 5
reduce 15
purely 1
release? 2
stops. 1
page-fault 3
standpoint, 1
stores. 1
region). 1
surprising, 1
sorry 1
purpose. 2
thing 38
showed 4
usability 1
run: 3
understandable 2
secretary 2
regs(B) 3
specialized 4
reproduce, 1
stronger 2
trees 4
sinister 1
simultaneous 1
sections 6
size. 7
skip 5
routines 41
smarter 1
technical 3
taken 16
reference) 1
return-from-trap 17
purposes 2
reliable 6
straightforward, 2
paper. 1
starve; 1
successful. 1
remain? 1
surround 2
source. 1
queue). 5
timespec 2
spaces 20
use) 10
undertaken; 1
running. 23
security: 1
relies 1
spends 1
relinquish 5
request, 10
underly 1
sizeof(PDE)). 1
recursively 1
seek 2
sizes; 2
sleeping 5
run-and-yield 2
solutions. 4
tend 7
takes; 1
return-to-libc. 1
repeats, 1
ran 15
strdup("p4.c"); 1
registers 48
par-allel, 1
stored? 1
successfully) 1
remains, 1
summary 5
quote. 4
signal, 1
transforming 3
spectrum, 1
usual, 3
unfortunately, 14
segment? 1
stronglytyped, 1
segments, 5
spins 11
request; 1
requester), 1
undertake 1
slow, 8
reference. 8
segment), 3
sloth” 1
so), 1
sad! 1
sources: 1
terms 10
road” 1
replaced 2
task 16
student 3
represent 5
partition, 1
random 37
structures, 13
suspend 2
remembering. 2
superuser 3
ran; 1
signaling. 1
transistors. 1
speeds; 1
splits 1
uniform, 1
save 27
stuff, 1
services. 1
splits. 1
requirements 1
residing 2
unexpected. 2
snippet. 1
refined 5
sending 1
solid-state 1
software, 4
say, 5
splitting 3
rough 3
repository 1
tests 5
study. 2
required). 1
patterns), 1
rc, 3
subject 4
t. 2
repeatedly, 3
survey 16
than 149
random; 1
transparency 1
v 2
spread 9
unlock 13
scaling. 1
subsequently 4
seconds 9
stack). 4
researcher 2
rethink 1
unrealistic 2
soon-to-be-running 1
refuses 1
shorter! 2
software-based 1
solution, 10
sense; 5
stance 1
routines, 5
required? 2
text. 1
simple 196
stuff? 1
restarts 1
phone, 1
re-acquires 4
subsystems. 1
table: 3
replace? 3
swaps 3
that: 3
randomizes 1
valgrind? 1
stack) 7
subverted 1
success; 1
seed. 1
until 52
stands 1
returned, 2
restore 17
sorted 1
reject 4
shortest, 1
solution: 1
update 54
solve 20
strictly 2
scalable. 5
sequence 24
reserved 6
theme 6
simpler. 1
success. 3
restricted? 1
two 241
re-energized 1
sufficient 2
piece 36
terminating 5
report? 4
system) 1
randomly-accessed. 1
varies, 2
stipulated 1
several 1
survive 2
seeds; 1
swapped 12
starts, 3
rewrites 1
resumes 5
relate 1
source 23
sibling 1
solve. 1
usage. 4
someday). 1
stringent 1
scan 5
setpark(). 2
resided 1
there; 5
threads 197
simply, 4
surprisingly, 6
return-fromtrap 3
two-fold. 1
reaching 1
summarizes 1
ready, 3
terminology) 1
requests? 2
system-call 5
wasted. 3
stopped 2
since 7
update) 1
sentence: 1
switching); 1
read 91
t 10
reasonable 9
reuse 1
remains. 1
sparsely-used 2
similarly-named 2
sploitfun.wordpress.com/ 1
val 2
sound 5
structures: 2
scheduling? 1
sets: 2
responsibility 6
thereby 1
tick 1
skimmed 1
suspect 1
revert 1
ubiquitous 2
place! 2
supports 5
thread!) 2
research. 1
recent 16
task; 3
weird; 1
stored. 1
size). 2
upper 1
state, 13
right). 2
run 374
table, 26
root 3
tackle 4
speed 12
simpler, 2
sprawling 1
vastly 1
specialize 1
stub 1
segmentation). 2
shmget() 1
responsibility!” 1
thr_exit(); 1
tick-by-tick 1
skips 1
swath 1
slower. 3
unexpectedly 1
platforms. 1
switching 17
threads). 2
resides, 1
refer- 1
thankfully, 1
willing 3
strategy, 2
should 274
skip-ping 1
urging 1
step-by-step 2
reduced 5
scenarios. 1
repeatedly. 2
runtime 2
require 10
src) 1
simulated 1
sptr. 1
vice-versa. 1
splay 1
suffers 5
segmentation.py 5
short) 5
result! 2
thread; 7
times) 1
rule 4
t(B) 1
running). 2
unless 1
pleasant. 1
tables), 1
throughput?) 1
resources 6
regard, 2
woke 1
streams 2
sleep-ing. 1
used; 2
shown 35
references: 1
store 24
schedule(curr); 1
them 99
tasks. 1
safely 3
resides. 3
stack; 3
slower, 1
started 11
standard 22
sptr 2
supports. 1
self; 2
six-level 1
results. 6
threadID. 2
topic, 4
slowly 12
table? 3
sad 4
unlock. 4
policies. 7
targeted 1
thrown 1
respond 1
registers) 2
wonderful 11
slogan. 1
related 18
users: 1
shudder 1
register). 1
streams. 1
scheme 6
then? 2
technique. 1
sake 5
restoring 5
solve? 1
voo-doo 2
starvation, 1
standards/SPARCV9.pdf. 1
stacks 4
surfing 1
sequence, 8
ticket.s. 2
sleep 30
trade-offs 5
sockets. 2
tables, 8
sanity 1
unmapped 1
preempted 4
tell? 2
return 169
return; 10
structure. 16
sounded 1
workloads 14
times 40
relatively 16
valuable 3
signal() 4
relative 3
sub-microsecond 1
script 2
thr 7
terms) 1
scheduled3 1
sort 6
resulting 24
vruntimei 2
stealing 1
stated, 2
stood 1
switch, 8
serve 2
tidbits 2
tradeoff 1
software? 1
talents, 1
scans 1
used) 1
small 61
principle 6
textbook 1
routinecalling 1
root). 1
structures; 2
space-efficient, 1
tn 2
virtually 9
significant 4
release 23
works 54
supply 1
world. 3
thr_join() 3
theoretical 1
scourge, 2
spaces) 1
section 55
reusing 1
richer 1
store-conditional) 1
stored 15
store-conditional; 2
swpd 1
shade 1
taking 11
transition 6
sounds. 1
structure 73
user; 3
snooping, 1
security 21
printf("%d 4
that? 7
runnable) 1
routine), 4
style. 1
speeds. 1
to? 2
waiter 2
single-processor 5
relevant 13
relax 10
sure. 2
thumb. 1
thing: 4
se, 2
sparc/ 2
semantics. 2
wait. 2
right? 8
stride, 1
— 131
straightforward. 2
time-shared 2
shared. 1
tcsh, 2
treasure 1
target 6
sparked 3
sub-jobs, 1
v); 2
so). 1
sense: 2
printf("returned 4
thesis 1
running? 4
running: 1
subdirectory 2
spinning, 2
web. 1
together 12
site: 2
removes 1
sure 56
surely) 1
tight. 1
threads) 1
seconds), 3
spin-waiting. 2
sensible 4
waitpid() 2
room 17
’94. 1
string 12
strategies. 1
time-slicing. 1
side 4
tends 5
trickier. 1
tcsh), 1
spent 7
succeeded, 2
victim. 1
software. 2
serves 6
privileged; 2
thorough 2
sage 1
runs...) 1
state1 1
worked 6
traces 3
slices, 2
relinquishes 1
repeat 1
relocation, 5
systems), 1
time? 9
throw 6
security, 1
spin. 4
sentence 1
wanted 3
rotational 1
’Precise’), 2
studying 9
strength: 1
told 2
simulation 7
testing 2
trouble. 3
team 2
spurious 2
successfully, 1
vmalloc, 1
somewhere... 1
vruntime 10
thread-local 2
says 2
sampling 2
program. 46
stop, 1
written? 2
smaller? 1
system: 6
represented 3
translations 22
required 15
tail_lock; 2
times, 10
timely 3
semaphore 1
stateful 2
wary 7
separate 17
seconds. 3
“Evaluation 1
super-linear 1
strings? 1
too! 2
sleep, 13
twenty 1
ten 7
storeconditional) 1
switch? 2
think 66
set, 3
soon-to-be-faulted-in 1
thread-safe, 2
sbrk. 1
savings 9
want 50
programs; 3
strike 1
x[10]; 1
somewhere 4
table). 3
rely 5
trapframe 1
resumed, 1
taken: 2
together, 3
timing, 3
services 1
statements 1
water 1
serviced 4
“Man-Computer 1
surface. 1
strong, 1
sleeping. 4
type) 1
top 32
test-and-set. 4
streaming 2
those; 1
severe. 1
specifics 1
system, 65
scenario, 3
say. 2
way) 1
see 272
wc 11
thus, 54
yet: 2
structures. 22
speeding 2
taken, 5
remain 8
retaining 3
replace 9
trust 14
tolerate. 1
tracing, 1
set-it-to-1 2
widely), 1
shortly 1
static 21
“Program 1
surprise: 1
subsystem: 1
slice), 2
unasked 1
toughest 1
theory, 1
strings 1
thus: 1
sharing, 3
spins, 2
table) 2
schedulers. 5
sbrk) 1
program’s 9
seems 12
winning 7
ticket, 2
yourself2! 1
studied 5
splintering 1
talks 1
task: 1
returns. 3
replacement, 3
trace? 2
traversal 3
shell, 5
simplicity. 3
won’t 21
step, 5
“There 1
systems? 2
subtle: 2
uncaught, 1
type 73
slow 15
tracking 2
thermodynamics 1
stuck 16
to; 1
shell 12
stale 1
take, 3
schedules 4
scales 6
promote 1
sends 3
worked. 1
time! 2
zero, 3
sub-job 3
spuriously 2
task, 5
taught?! 2
risen 2
report 9
trigger 2
translate 19
shown), 1
site 1
“Volume 4
terminate. 3
suffering 2
under- 1
unmasks 2
slowly; 1
transfer. 1
still 59
think) 1
succeed. 3
too, 2
shrink) 1
technology-driven 1
starvation. 7
screen 1
work 150
schedulers) 1
pulled 1
sense? 1
worker 6
times. 7
zeroing. 2
subjunctive 1
starve: 1
test? 2
state. 10
run, 24
two: 1
translations, 6
requests 28
“Why 2
size: 16
terms, 3
simple: 39
summarize, 1
undergraduate 4
unpack 2
small, 7
treats 1
strategy), 2
third, 2
suite 1
tool 15
simple. 10
starved 1
tell 28
seeds, 2
workload 14
seconds, 2
q->tail 4
setup, 2
working-set 1
tirelessly 2
’03. 1
together. 5
terminated 2
thanked 1
steps 3
underpowered 1
true. 3
require? 1
“looping 1
reserve 4
them) 1
simulate 3
underlies 2
support, 16
unpark() 2
small-sized 1
triggers, 1
stuff 8
threats, 1
switches 14
tracked 2
tract 1
simulations 4
steal 3
tennis 1
segments: 1
world; 1
seeing 1
question. 7
short-lived, 1
wrap 2
subsections 1
’Approximate’, 2
traces. 2
terribly 1
that. 9
stitch 1
unlucky) 1
tuned. 2
sizeof(node_t); 1
“out 1
themselves). 1
reside 11
size) 5
unit”, 2
surface 3
unrealistic? 1
smallest 5
unsafe 4
subtract 1
three-instruction 3
tail 5
running 227
translated, 1
slip 1
store, 2
text, 2
select 4
segfault 1
worry 21
queues. 2
should. 1
wreak 1
suc-cessfully 1
“010101”, 1
track; 1
testand-set! 1
that’s 8
storeconditional. 1
type, 4
unused 14
slabs 1
“real-world” 2
there? 4
responsive. 1
slides 1
unlock? 2
swapping 12
twice). 1
sneaks 2
unused. 2
suddenly 2
timeout 4
talking 5
rwx 4
treating 2
slowly. 2
strict 1
silently, 2
segmentation.” 1
yield(); 2
raised. 1
signal(). 1
wrote) 1
“Guide 2
translations. 6
them? 3
the?? 1
strange; 1
typeset 2
upper-half 1
slots 7
switch 62
“steal” 1
this? 5
running; 3
slow? 1
user, 3
switches? 1
units 1
software-managed 5
upcoming 1
sz; 1
timing? 1
task). 2
technology. 1
softwaremanaged 1
said 43
satisfying 2
simulator 16
segregated 3
yield, 2
randomly 4
signals, 2
x-axis 1
“Hoare” 1
trapped 2
ticket; 2
studies. 1
underneath 2
things 46
upwards. 1
space) 4
synchroniza-tions 1
“tried 1
thread? 2
satisfactory 1
small/random; 2
valid; 1
swtch 1
unreasonably 1
soon-to-be-run 1
tip: 1
tree. 5
termination 4
upon 40
solely 1
stride. 1
scaling 2
situation 9
sequential 8
yield-based 2
ranging 1
simulating 1
y-axis? 1
“She’s 1
tread 1
tlb.c, 1
undoes 1
subsequent 24
thread), 2
us, 2
stacks, 3
table 175
synchronization 26
satisfied 1
snuck 1
value. 12
sources 6
threads, 38
up. 7
spans 1
tough 2
trees; 1
then; 1
use_ptr 2
solution; 1
scheduling; 4
sixteen 1
seriously, 3
study 52
’a’, 1
sitting; 1
rather 29
yourself! 3
“Survey 1
tree 15
uniform. 1
topic 18
subsystem 4
threshold 11
starting) 1
tempting 4
system.” 1
scaling; 2
useful 69
table! 1
vi, 1
thread” 1
specifically, 13
updated, 2
speculative 1
translated), 2
trends. 1
therein; 2
useful. 10
scheme, 1
skills. 2
shown, 2
space, 50
“Ad 2
success 9
sizeof(x)); 2
readers 1
× 1
“hello”; 1
that 1398
tricks 2
units; 4
totaltickets); 1
subtle 1
through, 1
starve 2
terminal, 1
systems: 5
scenarios), 1
useful2. 1
tables. 6
vmstat, 1
speeds 4
uplifting! 1
tickets 30
starvation: 1
traversals 2
think, 2
under 18
though; 4
scientific 1
slow; 2
species, 1
“Dynamic 3
specifically 6
slowdown 2
reading, 1
snippet: 3
“second-system 1
size 124
things); 1
tricky: 1
upon, 1
succeeds 3
timer, 4
statement 3
try 64
test-and-set.s. 2
taken? 1
user-facing 1
tcsh). 1
speedup. 1
terminate 6
second 78
timeline 3
stated 2
variables) 1
unfairness 4
thoughtful 1
tries 41
second-level 3
turning 9
suggested. 1
“Everything 2
specified, 1
’d’ 1
reality, 1
so; 2
“walk” 1
was 188
slicek 1
thinks 7
type. 1
uses. 3
super 2
tip 2
stolen 1
two-level 7
tests), 1
tasks, 1
using. 2
upward 1
tested 1
stack. 17
see? 6
times), 1
segmentation. 3
unrealistic; 1
threads? 4
software), 1
typing, 1
struct 49
section, 24
suitable 2
segment. 8
speed-of-light 1
“Exterminator: 1
reasoning 1
“Inside 3
slower? 1
solution 44
threadID, 2
understanding: 2
variables), 1
surprised. 2
today, 4
storage 12
units, 2
thing. 2
tcsh 2
utility 3
useful? 1
thanks 4
standpoint 1
variants: 1
status 5
segmented 4
update(counter_t 2
three-queue 1
some, 2
unpark(threadID) 2
stuck; 3
“Mesa” 1
switching) 1
segments; 1
spending 3
way: 5
recently 6
“Intel 4
solved. 1
somewhere. 3
tickets: 1
unified, 1
virtualized; 1
systems). 1
too; 1
straightforward: 6
things; 3
used. 15
technique, 2
variable. 8
utility? 2
them; 2
totals 2
vary 4
strcpy(dst, 4
self)) 2
update; 1
spell 1
time; 16
updated 8
study, 3
“Microreboot 1
tandem 5
segment’s 1
splitting: 1
while2 1
refers? 1
“Is 1
somewhere, 1
sounds! 1
tmp 8
unknown 1
visible 2
t; 2
topic. 1
stringing 1
thinking, 2
technologies. 1
variable’s 1
vector 1
virtual, 1
transformation 2
virtualizes 3
stronghold 1
shifting 1
user 117
users, 1
states, 1
tool, 6
valid). 1
studying. 1
“OSSpinLock 2
serviced, 1
sponse 1
techniques 24
registers. 3
“Segmented 1
sorts 9
source, 1
to. 4
unlock(&m) 1
walling 1
telling 1
total) 2
strlen(), 1
thrashing 2
vengeance’.” 1
therein: 2
this: 49
virtualization. 4
translation-lookaside 1
walks 1
would 200
short, 3
utilizing 4
val; 2
structures 59
trace; 1
stores 16
values). 2
succeeded 4
“System 1
staring 1
show 24
terrible 3
remaining, 1
“With 1
specifies 5
space1 1
tools 16
watermark 2
unlock(lock_t 10
traffic. 1
suffering, 1
threat 1
vruntime: 1
threshold; 4
thousand, 1
virtualized 6
transparently 3
trap 52
shortest 2
well. 30
vector, 1
valid. 2
subtleties 2
transcript 1
string) 2
variables. 13
success, 5
“Take 1
then 227
stateless 1
simplified; 1
remedy 2
test-and-set 15
“owned” 1
spectreattack.com 1
specifying, 1
too” 1
well-known 4
unmodified, 1
try. 1
suggests 2
think-ing 1
wait(). 3
time-sharing 7
three: 1
wreak1 1
waiting 94
unblocked 2
shutdown 1
what’s 2
violations). 1
values. 1
swapoff. 1
translation; 1
subsequently, 1
vice 1
successfully 5
“being 1
there). 1
stdlib.h 1
single-entry 2
reply: 1
test-and-set.s? 2
spinning), 2
→ 17
stack-smashing 1
transparent” 1
we’re 3
unnecessary 1
unlikely 3
sum 3
thr_join(); 1
weight, 1
time-space 2
ticket. 2
timing 5
undesirable) 2
side). 2
while) 1
write 63
virtualized, 1
variety: 1
symbol. 1
traps 5
substituted 1
view, 1
suffice 3
“commoncase 1
therein 1
stream, 2
situations. 1
responsible 6
there! 1
stashes 1
statically-initialized 1
truth: 2
updated) 1
unsatisfying) 1
who 41
surprising? 2
thread.c 1
website 2
weightk 1
tomes 1
unique 7
signal?? 1
work? 7
virtual 253
well 88
virtue 2
vmstat 2
waiters 4
tricks: 1
successful 5
suit 1
“reliability”, 1
those, 1
strings. 1
sizeof() 7
rich 2
state: 2
str); 1
upon. 1
typedef 33
unusable. 1
widely 9
swapping, 1
time-efficient 1
tickets; 1
top), 1
unqualified 1
wrote: 1
workloads, 1
signaling 17
waitpid()); 1
simpler 6
vast 2
system? 4
waiting, 5
ultimately 1
surrounding 2
these 222
surprisingly!) 1
“same” 1
support; 4
though 29
slots, 3
robin, 2
step? 1
strive 5
usage; 1
unfair, 1
unusual 3
win 1
target. 1
time: 2
tracing 6
untimely 6
yes: 3
works, 15
were 76
wake? 1
too 85
simplicity), 1
waited 1
wake(address) 2
understand2 1
survive, 1
what 280
systems, 49
they? 2
switches; 1
survived 1
threads); 2
snatch 1
straightforward 9
strong 2
used? 1
uniformly, 1
within; 2
target’s 2
routine 60
timings. 1
tracks 8
you. 8
written), 1
valgrind 15
when! 2
weaknesses. 1
toolbars, 1
sizes. 3
ways: 2
way. 6
web 10
switch. 4
system” 1
synchronized 10
switching), 1
without 70
swapon 2
so? 5
strangest 1
user/supervisor 1
unlock(&mutex); 2
wonder? 1
structure, 24
test-and-test-and-set.s. 2
sad. 3
too). 2
treasure-trove 1
yourself2 1
use 317
“Analysis 1
vs. 8
while. 2
topics 5
slice, 7
unsurprisingly, 1
well-regarded 2
went 3
tables) 2
things, 6
system; 8
synchronizations 1
time 306
won 3
switches. 1
space), 4
strategies 8
unpark 2
x86)” 2
style, 1
thanks, 1
took, 1
trylock 4
valid 51
user. 7
“Towards 1
“Wait-free 2
wait-for-me.s. 2
winter. 1
trade-off: 1
slower 6
upside 1
which, 4
when, 3
take? 2
thing” 1
t, 2
time-share 1
world!”, 1
same 145
swoop 1
stretching 1
unrealistic. 1
special 22
submitted, 1
which 501
zero. 11
thing; 1
trace: 1
twice, 5
user’s 4
© 21
“have 1
warm 3
wondering: 4
values 75
transaction, 2
smaller, 1
usable. 2
whole 5
work; 6
takes, 1
this! 2
tension 3
timer. 1
test 7
saying; 1
subproblem 1
up, 12
specification 1
substrate 1
winner 5
’05. 1
tmp); 5
trading 1
two. 3
virtual-memory 1
’04, 2
“modern” 1
warnings. 2
work-stealing 2
vary. 2
translated 3
systems 185
solutions, 3
usual 2
system 363
wine, 1
workgroup. 1
tech 1
thousands 10
world, 6
to, 13
themselves 4
today. 6
update. 1
worth 20
wisdom 1
starts 25
’07, 2
transitioning 4
uber-engineer 1
virtuallyindexed 1
track 27
’13, 5
scheduling 102
“parent: 1
wastes 10
world? 1
vulnerable 2
transparent 4
tackled 2
solves 7
utilization. 1
within, 1
worse. 6
tells 11
threads. 19
succeeds, 2
timer? 3
today’s 2
summarize 5
upper-level 2
wrappers 2
wishes 16
take 97
“ARC: 1
treated 6
unsuspecting 1
void; 2
trans- 1
“Efficient 2
state 73
scribble 2
watch 5
world” 1
wall 1
trap; 2
tail. 2
something. 2
utilized 4
worst 7
temporal 7
threshold, 2
writes 21
supporting 1
timers, 2
trace 24
x86. 1
teach 1
“Alto 1
trouble, 2
waking, 1
transparency; 1
“He 1
statement, 1
se. 1
within 89
support 110
yet), 1
way? 1
us 84
turn) 2
whether 59
soon-to-be-executing 4
valid: 1
used 175
varies 5
terrific, 1
takes 50
throughout 13
yet, 10
suppose, 2
tips 2
transforms 4
y; 2
techniques, 7
“Control-c” 1
wants 16
trusts 4
turn 32
“OS”, 1
stay 3
seconds). 1
x; 4
surprise 2
yourself. 1
ways, 1
use; 4
why? 2
turnaround 30
sounds 6
years; 2
user-mode 3
weightB 1
there, 2
techniques? 1
times). 2
zeroing 4
surprisingly 7
tolerate 1
yelling 1
“Evaluating 1
text 9
translation 46
welcome! 1
tuning 1
unifying 1
“Parallel 1
storage, 2
security. 1
yet! 1
table), 1
zplot. 1
well-defined 1
utilization, 1
wikipedia 1
turned 2
special; 1
yell) 1
v; 2
which). 1
therefore 2
temporarily 5
tip, 4
“01” 1
too. 6
you). 1
swap 34
“E”, 2
them). 2
tree? 1
winner: 2
twins!” 1
uninteresting: 1
“best” 2
storeconditional 1
you’ve 6
tapes 1
segments 22
“Electrochemically 1
weren’t 1
variants 4
windows, 1
understand: 1
spin-wait 10
yes. 3
variablesized, 1
winner). 1
therein), 2
term 15
tmp->value 2
“A” 8
traditionally 1
yourself; 3
switched 2
“TENEX, 2
these, 4
trees, 4
wondering 2
two-thirds 1
unit) 1
“emulation” 1
strategy. 1
’75, 1
that, 11
selection 1
“I 1
wild 1
versus 5
worker(), 1
start. 1
users 27
variants) 1
“A 15
virtualization, 7
“B” 8
terrific 4
transactions 1
“Get 1
transferred 4
ˆC 2
treat 4
“havoc” 1
thousands, 1
trials 2
workers 1
unlock(), 2
types 33
studies 4
“1984” 1
then. 1
sense?) 1
“Operating 2
woken, 2
write, 3
virtualizing 14
state; 2
value), 3
worse: 2
thing... 1
“Membrane: 1
translations). 1
“THE” 2
syscall 3
’85, 1
treatment, 2
way 97
threadID 2
tweaks 2
worthwhile 2
unpark(queue_remove(m->q)); 2
u 2
such. 1
“A”), 1
theory-types 2
setpark(); 2
“fault.” 1
wonders. 1
x? 1
vruntime. 1
there 250
step 2
variable, 8
writes, 4
thirty 1
“OS” 1
type). 1
“Test 1
’92. 1
true 14
weighted 1
tables 49
tickets. 5
two-CPU 1
unpleasant. 1
written 18
unaffected 1
sum, 1
“Machine 1
therein. 5
sharing: 1
“operating 1
worse 9
yield 21
store-conditional. 3
waits 36
variable-sized 7
x86); 2
“RISC-I: 1
understand! 2
this, 32
“hello, 1
’94, 2
weighti 2
truly 9
terminated. 1
work. 24
undoubtedly 2
thread, 48
wrong 15
unlocked 2
sun.com/solaris/articles/atomic 2
“Monitors: 1
think? 1
shells; 1
“response”; 1
xv6, 1
you: 1
sub-sequent 1
vectors, 1
xchg 2
wake 33
uninitialized 1
“The 40
“high 1
“80-20” 1
turnaround. 1
tightly 1
themselves; 2
workload. 6
utilized? 1
unlock): 2
three, 3
zero.” 1
unpacks 1
surprised 2
“Myths 2
thinking! 1
shrink). 1
zero). 1
years, 9
substitute 3
view). 1
yields 5
want. 1
universal 1
“a 1
“reserved 2
“Advanced 4
typesetting 2
time-slicing 1
works; 1
then, 16
unmask 1
value, 17
˜mark/syscall.html. 1
unrealistically 2
systems) 4
“Premature 2
three-level 1
similar), 1
’95. 1
yours. 2
succeed 2
visualization 1
zeroing, 1
wasn’t 2
“batch” 1
use, 15
“running” 2
“Our 1
uint 1
time-tested 1
worry. 3
theory 4
unrealistic, 3
’15, 1
upper-case 1
taken. 1
various 27
task. 7
simplified 2
’a’ 4
sufficient, 1
time. 66
’his/their 1
wasted 4
you’ll 37
“cold” 2
user-managed 1
“starts” 2
“Shared-access 1
undefined. 1
timeline. 2
worse! 1
therein, 2
update, 1
’w’ 1
void 153
vulnerabilities 2
usage 16
wait-for-me.s 4
taste 2
software; 1
“Earliest 1
support? 4
times; 3
“A”, 2
“CPU-bound” 1
“Hmm... 1
“free” 1
utilizes 1
“test 2
“Someone 2
unfortunately 4
top-to-bottom 1
wrote 10
things. 7
“U 1
“An 9
wait(), 6
use?) 1
usually 52
this 1109
weightA 1
somewhere). 1
“Jack 1
switching, 2
way). 1
took 16
thus 486
’09, 1
“brain 2
’18, 2
variables 33
“Understanding 5
“goodbye”. 1
transfer 10
www.cs.tau.ac.il/˜shanir/concurrent-data-structures.pdf. 2
thinking? 1
“at 1
“B”. 2
warm-start 1
uses), 1
waste. 7
thr_exit() 3
well), 2
sorting 1
“MIPS 3
synchronize 2
weight 1
tool? 1
“glibc 2
ticket 27
’81, 5
vary). 1
unimaginably 1
“perfect”. 1
transformed 2
www.sparc.org/ 1
“older” 1
“Computer 6
third 18
v9 1
variable-length 2
way! 1
wide 1
space: 2
“Memory 1
system). 4
wherever 2
tools, 3
“lost” 1
time), 4
’flag’ 2
versions 8
unit 7
trap. 1
’19, 1
“works” 1
“If 2
thread 449
valid? 3
variant 3
works3 1
ways. 11
“Purify: 1
tables! 1
specific 21
whims 2
translation. 10
“the 1
“Animal 1
viewing 2
unpacking 2
tiny 21
trapping 3
“Aspects 1
though, 8
“John 1
values? 3
vengeance’. 1
workshop, 1
“Tolerating 1
three 69
tasked 1
spin, 2
we’ve 21
widespread 1
spinning 27
“wreaked”? 1
“Performance 1
visually 1
unused, 1
to! 1
traversing 2
“Before 1
threshold. 2
“OpenSolaris 2
vanishes. 1
violation 2
worlds. 2
“all 4
time) 4
tired 1
to), 1
top-level 2
trade-off 4
time, 75
translations; 1
word, 1
spot 2
” 4
world 26
wakeup, 1
up; 2
tons 2
truth. 1
“H”, 2
“Perfection 1
variable) 1
wrangling 1
“uninitialized 1
transfers 7
timer-interrupt 1
wait 53
tmp->next 4
trials. 1
stop 21
“big 1
worst-case 5
was. 1
useful, 11
ubriaca. 1
“Lottery 2
total 26
“TLB”. 1
versa. 1
write(fd, 1
translation) 1
technology 7
want; 1
terminal 4
trick 3
storing 1
“easy 1
wouldn’t 5
wasteful. 2
users. 1
unfair 2
“Mach: 1
towards 3
“Time 1
x86.py, 4
trees), 1
virtualize 13
total). 1
watching 1
terminates 1
trouble 9
strdup("p3.c"); 1
“too 3
wrapping 2
weaknesses 1
“lmbench: 1
when 480
transfers, 1
“child”, 1
uses 70
you, 11
younger 1
wait()) 1
touches 2
works? 3
text). 2
stream: 2
trying 15
write(), 1
“pinning 1
woken. 2
translation), 2
utopian 1
tried 4
up 156
zeroed 1
wait(address, 2
trace, 3
worlds: 1
textbook, 1
system! 2
unlock() 14
while 170
written; 1
“yeah, 1
www.gnu.org/gnu/manifesto.html. 1
systems. 64
x86, 8
variable-sized. 1
two-phase 6
updating) 1
’02, 2
wakeup/waiting 2
world”. 1
traditional 11
unsigned 2
wishing 3
yeah! 1
t(A) 1
xv6. 1
their 91
tried, 1
variable: 2
using? 2
’11, 2
walk 1
www.stanford.edu/˜ouster/. 1
unused) 1
translation, 15
workers, 2
yield() 2
understand 112
targets, 1
years. 4
turn; 4
them. 16
varying 2
valgrind. 1
’68 1
watches 2
wc), 1
well-suited 2
trials, 1
via 53
write. 2
understandable, 1
tasks 2
yes! 1
unbounded 1
valid), 1
’e’. 1
thinking 23
yielding 5
update: 2
well; 1
trivial 2
’10, 4
virtualization; 1
written, 1
uniprocessor, 2
yet 20
understand, 3
technique 29
there. 6
variables, 5
three-quarters 1
zero), 1
upsides 1
typically 1
“Ah! 1
visualization. 1
wrong, 4
unlock, 2
young 3
understanding. 1
’mutex’ 2
up? 3
we’ll 112
variable” 1
timedlock 4
zsh 2
used, 8
typing 9
“Aleph 1
void. 1
x86-version 2
volatile 5
’83, 1
there’s 1
“But 1
useless 2
whatever) 1
vector-like 1
timer; 1
using). 2
– 19
unfortunate 5
“Principled 1
unsurprisingly: 1
yourself 7
vulnerabilities. 1
“Informed 1
thing, 6
“It’s 2
user-level 6
whereas 14
version? 2
top) 1
’93. 1
“Profiling 1
use. 16
use”, 1
zombies 1
wakeups 2
“Nonblocking 2
thinks), 1
“first-in” 2
usermode 1
wonder 3
viewpoint 1
transform 4
’95, 2
“SDS 1
user-defined 2
usual. 2
value 233
· 4
warmed 1
“Policy/mechanism 1
this. 4
“longword” 1
variety 3
won’t, 1
translations: 2
’wreak 2
“bounds” 1
virtualization 20
usually, 2
utilized. 1
variable). 1
’current’ 1
weirdly 1
“What 5
thread. 20
“prove” 2
viewed 4
words 2
tree, 4
“Cloud 3
“got 1
waste! 1
varied 2
waitFirst 2
value; 22
’c’ 3
“as 2
threads; 2
well, 15
thread’s 14
trend? 1
work, 23
“Idleness 1
“hot” 2
watch. 1
wary: 1
view 14
vision 1
“Cooperating 7
wakes 15
well-meaning 1
virtualization? 1
time). 3
tune 1
“Making 2
workload, 11
“privileged” 1
whichever 4
way, 20
weight0 1
“hello 1
turns 37
weights 2
when. 2
visionary 1
too4 1
“buddy” 1
worst-fit 2
“ticket-assignment 1
while, 8
well) 1
whet 1
“Improving 1
“ready” 2
tweak 1
weird 3
workings, 2
visited, 1
trade-off. 1
“drum” 1
x86) 1
wily 2
which... 1
while? 1
“Multics: 1
“what 1
twice 5
world\n", 1
we’d 9
transac-tions 1
“the”). 2
waste 23
with) 2
work: 1
“PThreads 2
type: 1
updating 13
transaction 4
why 58
write: 1
ways 19
whenever 3
“cooperating 2
wrappers, 2
yet. 4
transfers. 1
your 201
zero 10
’14 1
you’re 18
“direct 1
usable 2
tremendous 1
x86” 2
workload: 1
’new’ 2
why, 1
’threshold’, 2
where 166
“double 1
utilities 1
two, 3
yourself, 2
worry: 1
’peek 1
will, 2
“History” 2
whom 2
“fault” 2
utilization 5
useful2 1
zombies, 1
x86). 2
’self’ 2
window, 3
“Javascript: 2
wired 2
“private 1
’c’, 1
valid, 14
yes, 6
“21” 2
wished 2
woken 13
work! 3
wish 26
“Load-Link, 2
“One-Level 2
“Introduction 3
“Mac 1
will 580
using 140
workloads. 3
with? 1
words, 5
“One-level 2
“One 1
“Run-Time 1
“reasonable” 1
window 3
utilize 5
works. 22
value? 2
worst-fit, 2
“Virtual 8
“Priority 1
“Structure 1
wise 1
value) 13
worry! 2
worstcase 1
worthwhile. 3
“bad 1
“Reese’s 1
“catch” 1
wondered 1
vantage 1
values, 12
wreakers 1
wrong. 3
www.takeourword.com/TOW146 1
y-axis 2
variable 75
“Valgrind: 1
“crux 1
worked, 2
writes: 1
“condition 1
“discovered” 1
“correct” 4
“other 1
virtualization). 1
vectors 1
x 12
“limited” 1
“out-of-bounds” 1
visible. 2
yield.s 2
“ten-items-or-less” 1
visualize 1
you; 1
version 31
wait(NULL); 3
zeroes 2
warmup 1
|| 2
}; 8
’89, 1
’98, 1
{ 281
’b’ 1
’ 11
“2Q: 1
“Algorithms 2
very 60
writing 21
“Atomic 2
“Dahm 2
you 995
vruntime, 1
written). 1
“Cold-start 1
“They 2
yuck! 1
w/ 2
x, 2
xv6 6
← 2
“It 2
wait() 26
years 19
“KASLR 1
was; 1
yield.s, 2
“On 2
way), 1
’63 3
“Solaris 3
wc, 3
’b’, 2
“Solution 2
websites 1
“...with 1
“Symmetric 1
“Change 1
whatever 15
“You 2
“Extending 1
“atomic 2
whose 8
“Hints 3
“implements” 2
why. 2
“Information 1
“interactive” 1
} 271
worker, 2
“Just 2
“it 1
’Classic 1
wreak, 1
“My 1
“on 1
’pedantry’ 1
www.ajwm.net/amayer/papers/B5000.html. 2
“RTFM.” 1
“page 1
“Bell 1
x-axis, 2
“Transaction 2
“right” 1
“Converting 1
x. 2
“Using 2
“setting” 2
“Observations 2
“bad” 3
“Practical, 1
“jemalloc” 1
x86 23
“T”, 2
“just 3
x86-64) 1
“daemon”, 1
“smart” 1
zombie 2
“interrupts” 1
“100x” 1
“CPU 1
“main: 14
“Experience 1
“process 1
“Hoard: 1
• 69
“test” 2
“Ils 1
“Pthread 1
“Relocating 1
“Reminiscences 1
“Time-Sharing 1
“core” 1
“first 1
“fun” 1
“lock” 2
“loop.s”. 2
“turn” 2
we 992
winner) 2
the 8323
threaded 2
three) 1
through 56
timer 36
times? 2
tive) 1
today 7
touching 1
track, 1
translates 5
true! 1
ugly 3
uncommon), 1
underlying 9
units. 3
urgent, 1
usage, 2
using; 2
value); 2
variable; 2
vector. 1
violation, 2
virtual-to-physical 6
virtualized. 1
voluminous 2
wait(); 1
wait, 4
waking 5
weakness 1
were. 1
winner. 2
within. 1
working 28
wrapper 3
wreaked?” 1
www.nds.rub.de/lehre/seminar/SS06/Werthmann 1
x) 1
“Concurrent 2
“H-Pucks”) 1
“Multilevel 1
“Programming 7
“foo” 1
“real” 3
with 638
word 14
workflows. 1
worried 1
worse, 8
wrapper; 2
write() 5
you? 9
yours: 1
you’d 9
| 8
“Fact 1
“Think 1
“baby 1
“demon”, 1
“ease 1
“familial” 1
“right 1
“yes.” 1
− 7
