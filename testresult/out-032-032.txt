2 25
S 28
6 22
PAGING 21
!= 7
"wc" 1
%ax 4
(1e7) 2
(APIs) 2
(BFS)2 1
(P1), 1
(Q0), 1
(RDLK) 2
(THE), 2
(c1–c3). 1
!StoreConditional(&lock->flag, 2
"B"); 4
%d)\n", 4
((flag[1-self] 2
(0x1) 2
(9.2) 1
(B 3
(effectively 1
"A" 1
$0x0) 1
% 8
%ecx 1
(-p 2
(256 1
(AS) 1
(CompareAndSwap(&lock->flag, 2
(No 1
(PM 2
(Page 1
(Tc1), 1
(VAX/VMS) 1
(VPN) 2
(argc 2
(ignoring 1
(including 10
(it 12
(lock->turn 2
(no 4
(nods) 1
(non-toy) 2
%eax,0x0(%ebx) 1
%ebp 1
(-1KB) 1
(-p). 1
(3764 1
(4 3
(4088 1
(As 1
(Gulps) 1
(KASLR). 1
(Left) 3
(P); 1
(PD 2
(PID). 1
(Proc 2
(Software) 1
14 14
"usage: 2
%ecx, 1
(-s) 3
(34KB), 1
(ASLR). 1
(Again) 1
(COW 1
(Good 1
(P0) 1
(StoreConditional(&lock->flag, 2
(Tc2 1
(VPN), 2
(allocated 3
(c1), 1
(on 11
(p.81).” 1
(p3.c) 1
M 20
%eax,8049a1c 4
%esp, 1
%lld\n", 2
&rvalue); 2
(1 1
(100 4
(32-bit 1
(Another 1
(CFS), 1
(C’s 1
(MFU) 1
(NOT 1
(Tc1) 2
(a[8] 1
(another 1
(each 2
(global 3
(non-contiguous) 1
%eax). 1
(200 1
(CTSS), 1
(P=0), 1
(PID), 1
(PTE) 9
(R 1
(Tc2) 1
(a[0]) 2
(after 4
(among 3
(bytesLeft 1
(eventually) 2
(io.c) 1
(ldstub); 2
(m->flag 2
(namely, 1
(p6, 1
(rather, 1
(results 1
(studied 1
(too 1
(turned 1
"A"); 4
$0x1, 6
%d 5
(10 1
(1000 1
(4KB 1
(9.1) 1
(A 14
(Bounded 1
(Niceness) 1
(R/W) 1
(Ready, 1
(TM 1
(Timer 1
$0x0,(%edi,%eax,4) 1
%bx 2
(-a) 2
(232 1
(ARM). 2
(Hardware) 1
(P2), 1
(PDE.Valid 1
(a.k.a. 6
(but, 2
(evicts) 1
 32628
3 1
(C 1
(DEC). 1
(Hardware-based) 1
(LW 1
(STDOUT 1
(VPN=06, 1
(a.k.a., 2
(flag) 2
(hence 1
(mentioned 2
(most 2
(stride=200) 1
(to 10
$0x03, 1
$0x03e8,%eax 1
(2134) 6
(32768) 1
(7030) 1
(And 1
(EEVDF) 1
(MMU); 1
(P=1), 1
(TestAndSet(&flag, 2
8 22
(page 49
%edx 1
%esi 1
& 29
(1024). 1
(104) 1
(I/O). 1
(LDE) 1
(OS)3 1
(R, 1
(TLBs) 1
(char 8
(due 6
(lazily) 1
(p4.c) 1
(pause 3
(potentially) 1
(realistically, 2
(returning 2
(t0.c) 2
(taking 2
F 8
%edx, 1
%esi, 1
&rvals); 2
(01) 1
(14th) 1
(28 1
(64 1
(A) 2
(ASID) 1
(CanAccess(TlbEntry.ProtectBits) 4
(P1) 3
(PCB), 2
(SN) 1
(a) 5
(broken) 1
(c2), 3
(causing 2
(kernel) 1
(milliseconds); 1
(new 7
(ns) 1
(pid:29267) 1
(pid:29384) 1
(potentially), 2
16 9
"hello"; 3
&lock); 2
(11) 1
(B) 1
(K 1
(MRU). 1
(P2) 1
(PDE.PFN 2
(VPN). 1
(a3). 1
(b) 5
(i.e., 96
(incredulous) 1
(interrupt) 1
(modified), 1
(note 4
(older 1
20 1
"fork 4
(1110) 1
(21) 1
(22.1) 1
(AMAT) 1
(C) 1
(L 2
(PCB). 1
(PDIndex 3
(PTE): 1
(Pmiss 1
(SJF) 1
(VM) 1
(VPN=06), 1
(a[3] 1
(again, 3
(c) 3
(c2). 2
(c4), 1
(clearly 1
(current) 1
(generally) 1
(highest 1
(minus 1
(regardless 2
(starting 3
*new 4
(and 111
%ebx 1
(0, 3
(20%), 1
(3) 2
(G), 1
(LRU) 1
(Linux, 1
(LoadLinked(&lock->flag) 4
(PC) 4
(PSJF) 1
(PTIndex 3
(S) 3
(With 1
(dare 1
(fill_ptr 1
(four 1
(full) 1
(header_t 1
(often 2
(p2.c) 1
(p5). 1
(think 5
(web 2
&oops; 2
&x); 1
(-M 1
(-m 2
(./x86.py 4
(1) 13
(100) 1
(Editors 2
(PA) 3
(Q2). 1
(ROP) 1
(always) 1
(bugs) 1
(flag 4
(imagine 2
(into 4
(non-restricted) 1
(releasing 1
(source) 1
(they 3
(way) 1
(VPN 14
18 4
I 26
(-w) 1
(A, 5
(FIFO) 2
(M 1
(PFN) 6
(RR) 2
(SQMS) 1
(Tp) 1
(VPN=07), 1
(VirtualAddress 9
(a[4] 1
(both 2
(c3). 3
(c5), 1
(he 1
(hint: 6
(i); 1
(known 1
(or, 5
(real) 1
(reduction 1
(running, 2
(runtimei 1
%edi 3
&args); 4
&m); 3
(20-ms 1
(400)2 1
(4200) 1
(A’s 2
(C, 1
(Measurement) 3
(O 1
(RSS). 1
(SJF, 1
(T2) 2
(also 7
(an 2
(done) 2
(generated 1
(hence, 2
(if 13
(middle 2
(myturn 2
(scheduling) 1
(shown 5
(simplified) 1
(specifically). 1
(stop) 1
(though 6
12 19
C 16
#2: 2
%dx. 2
%eax, 8
(-q) 1
(16 3
(Bad 1
(Blocks) 4
(Chapter 2
(LAUER’S 1
(MLFQ). 2
(MQMS) 1
(Offset 1
(P). 1
(PTE.Valid 4
(PWT, 1
(Right) 3
(September 1
(TestAndSet(&lock->flag, 2
(VPNs 1
(Virtual 1
(assuming 5
(but 14
(c3), 1
(especially 2
-g 3
(approximate) 2
(physical 1
(pointers) 1
(resulting 1
(usually 7
(v9 1
(we’ll 2
). 3
(say 17
(store 1
(tiny) 2
(total) 1
(use 1
*dst 2
+19 1
-H 1
-pthread 5
./process-run.py 2
./thread 3
0% 5
0th) 1
0x3C00). 1
0x3F80, 1
*curr 4
*kstack; 1
(a 21
(Figure 45
(OS 1
(PDE) 2
(TLB 16
(Thousands) 2
(above), 1
(conservatively); 1
(cpu.c) 1
(free 1
(https://github.com/remzi-arpacidusseau/ostep-projects) 1
(left). 1
(lots 1
(managing 2
(non-paged) 1
(notably) 1
(note, 1
(void 12
10 21
!zero, 2
"common_threads.h" 4
%esp 1
%p\n", 4
(24114) 5
(32 2
(August, 1
+ 45
(particularly 7
$0x1 2
&mutex); 8
(212 1
(5 1
(PowerPC), 2
(Run 1
(TCBs) 2
(at 12
(average: 1
(indeed, 4
(insert 1
(latter) 2
(many 4
(minimally) 1
(of 10
(original 2
(rc 8
(rc_wait:%d) 2
(ready 4
(size: 1
(stride=40) 1
(unrealistically 1
(wait 1
**) 4
-5; 1
"common.h" 7
# 16
%eax 24
%edi, 1
(-n 1
(0xC0000000 1
(101) 2
(2) 4
(34K) 1
(Alpha), 2
(DMA) 1
(Lines 6
(NULL 1
(PFN). 1
(PTE.PFN 2
(R) 1
(T2), 2
(Third 2
(Tp). 1
(about 1
(in 45
4 23
#include 62
(-i) 4
(0x200000), 1
(120−0)+(20−10)+(30−10) 1
(7.1) 1
(Advanced) 1
(CanAccess(PTE.ProtectBits) 4
(HW 1
(London), 1
(Process 1
(c3) 1
(ironically) 1
(mutex, 8
(next 1
(nice 1
(t1.c) 2
(that’s 3
(untimely?) 2
(user 3
(which, 2
*q, 4
*value 2
-1) 1
-l. 1
0). 2
00007f4e7d2d0000 1
07 1
0x300, 1
0xC0000000, 1
1-GB 1
(making 1
(mutex); 6
(n) 1
(p2), 1
(part 2
(sorry!). 2
(whether 2
*), 2
**old, 1
*L) 4
*chan; 1
*tf; 1
L 17
%eax), 1
(117). 1
(2012-01-30-1-g1c41342) 1
(BKL). 2
(BSD). 1
(B’s 2
(G) 2
(LFU) 1
(P 1
(PDE). 1
(VPN=08). 1
(Virtual) 1
(a[7] 1
(curr->key 4
(easily) 2
(erroneously) 1
(formerly 1
(its 2
(long 2
(modulo 1
(note: 2
(probabilistic) 1
(probably), 1
(switching 1
(target) 1
(v1) 3
(virtual) 3
(you’ll 1
*malloc(size_t 1
*mutex; 2
*new); 1
-k 2
-t). 1
.... 1
/proc/meminfo; 1
1); 4
! 2
%d\n", 9
%dx 6
&; 1
(-L 2
(-c) 1
(-l 4
(117 1
(@PFN:101) 1
(FCFS). 1
(Linux) 2
(MLFQ) 1
(OS). 1
(PCB); 2
(PFN), 2
(STCF) 2
"wc"... 1
%ebp, 1
( 6
(*start_routine)(void 2
(-s 2
(28KB) 1
(7.2) 1
(P0 1
(U/S) 1
(VA) 2
(again 3
(arbitrarily; 1
(c1, 1
(read 1
(reduced 1
(si 1
(too!) 2
(we 2
(bytes 2
(count 8
"hello 1
(15th, 1
(MIPS), 2
(Simulation) 16
(T1) 4
(VPN=1, 1
(assume 2
(c4). 1
(depending 2
(even 3
(forever), 1
(hardware 1
(main) 4
(normally 1
(slow) 1
(something 2
(start 2
(trustingly) 1
(who 2
*c) 18
*q; 2
--l0 1
(CFS) 2
(Dynamic 2
(PTEs) 1
0,0,0,0,0,0,1? 1
0x200000. 1
10). 3
(assumes 2
(with 21
(code, 7
(continuing) 1
(discussed 1
0); 8
(atomically); 1
(our 4
B 13
#1: 2
#define 2
(-P) 1
(256) 1
(PA), 1
(SSDs) 1
(TlbEntry.PFN 4
(VP 3
(address 2
(bash?) 1
(done 4
(just 5
(max 2
(my 1
(myturn). 2
(p2); 1
(physical) 1
-> 10
0-9), 1
(Success, 4
(T1 2
(Tarrival 1
(atomic_bit_test_set 4
(binary 1
(called 9
(cleared), 1
(continue 1
(for 24
(pid:29147) 2
(right) 2
(sched 1
(turning 2
(virtual 1
*parent; 1
*tail; 2
-20 2
(by 13
1024 10
128, 1
13.5 1
(Success 4
(all 6
(almost) 1
(bigger) 1
(c->local[cpu] 2
(given 1
(long) 1
(mem.c) 1
(p2). 1
(result: 1
(say, 11
-I 6
(pid:29146) 4
(spinning 2
(stop 1
(using 9
(version 1
*d 1
*thread, 2
--tool=lackey 1
-10 1
(free) 21
(gadgets, 1
(int 6
(left 1
(nearly 2
(quantum 1
(quickly) 1
(double 1
T 10
&stack); 1
(-T). 1
(/tmp/file) 1
(010101), 1
(224 1
(512 2
(8 1
(@PFN:100) 1
(KNUTH’S 1
(MMU) 1
(PTE.Present 2
(SJF), 1
(TD 1
(This 1
(Thread 2
(Volume 1
(alas). 2
*mutex) 12
1000). 1
107 1
(word 3
(during 1
(emacs 1
(curr) 4
0.6 1
0x00000000, 1
0x03e8, 1
0xBFFFFFFF 1
1000s 1
112 2
15. 1
15.2. 1
16.1. 1
 26
(one 6
(only 5
(other 1
(sometimes, 1
(stride=100) 1
(upon 1
(use_ptr 1
-R 13
-r 5
*mutex); 8
-i 18
..., 2
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 1
0.10). 1
0.8 1
0x00000FFF, 1
1% 1
10), 1
); 1
-A 6
-X) 1
(described 5
(dramatic 1
(hex 2
(highly 1
(holding 1
(like 5
(modern 1
*args 4
*head; 4
--l1 1
-5), 1
0x03, 1
*L, 8
(Without 1
(array-based) 2
-P 19
22 1
#3: 1
%ebx, 1
(26 1
(4096), 1
(CPU 2
(D); 1
(Line 5
(S), 1
(Spring), 3
(Tc1 2
(a2), 1
(instead 1
(limit) 1
(line 3
(maliciousness) 1
(p2.c), 1
(still 1
(swapd) 1
(worst-case 1
*) 23
(job 2
(literally) 2
(new_head 2
(p1.c) 1
(p4). 1
(preempting 2
(pretend) 1
(probably 1
(remember, 1
(size 1
(too) 1
(usually, 1
(not 20
./multi.py 4
-t 20
(counter 17
0; 116
0x30 1
0x700, 1
0x7ffe1033b8f4 1
100%), 1
1028 1
110000) 1
143012 1
16.6 3
17.5 1
18.4 2
19.3 1
(see 12
-B 4
-b 3
/ 1
0.1 2
0? 3
0x1024 1
0x900. 1
1.0 1
0x3000, 1
*mythread(void 12
(repeat) 8
(as 49
-Wall 7
* 17
**value_ptr); 2
*abs_timeout); 2
*old_ptr, 2
-1, 1
-= 1
10.1), 1
(because 8
(created 1
(finally) 1
(first-in, 1
(hopefully 2
*mem; 1
(i 19
(implicitly) 2
(implying 2
(p1), 1
(p1– 1
(queue_empty(m->q)) 2
(rc_wait:29267) 1
(rc_wait:29384) 1
(requiring 1
(sometimes 10
(thank 1
(v 2
*H, 4
*old_ptr 2
*p); 1
*worker(void 1
-c. 1
./p1 2
-p 44
(where 12
(quite) 1
./p2 1
./p4 1
0.03 2
0.5. 1
0001 1
0010 1
(available 1
(either 3
(fun!). 1
(hopefully) 3
*next; 6
-a 41
(do 5
(labeled 6
(ld.so) 1
(locked). 2
(pid:29266) 2
(pid:29383) 2
(remember: 2
(shaded 1
(thanks 1
(turn 2
(“Buzz 2
*(*start_routine)(void*), 2
*attr, 2
*c); 1
(roughly 2
(e.g., 108
./random 3
.globl 1
(yet) 3
(similar 3
(somewhat) 1
(that 5
(tmp 1
100); 2
*x); 1
01 2
0100 1
0xFFFFFFFF) 1
(mutex->flag 2
(kernel 6
*q) 2
. 53
0.0 2
10-ms 4
11916, 1
16KB)1 1
18.7 1
19.6 1
1] 4
2-MB 1
2.4: 1
20, 3
10. 7
12(%eax) 1
*x 3
--tool=helgrind 2
-1); 1
(from 16
(gasp) 2
(horribly) 1
// 294
0,0,0,0,0,0,1:0,0,0,0,0,0,1:0,0,0,0,0,0,1 1
0,0,0,1,0,0,0:0,0,0,1,0,0,0:0,0,0,1,0,0,0 1
00007f4e7d932000 1
(v2) 1
1024. 3
104 1
1110101 1
113 4
10 165
10.2 1
(or 83
-i. 2
/bin/ls. 1
1: 7
2.1: 1
2.4). 1
2000) 2
(once 4
(threads.c) 1
16KB 24
$0x1,%eax 4
&& 2
(24113) 5
(Code) 8
(Logical) 1
(MMU), 1
(PFN 2
(TestAndSet(&m->guard, 4
(assert(hptr->magic 1
(atomic_add_zero 2
(include 2
(lock-holding) 2
(probably) 1
(pthread_create) 2
1. 43
(va.c) 1
(vruntime). 1
(wc). 1
100% 5
128: 2
13–14). 1
1000 10
100000 2
11–19 1
120. 1
15.3: 1
15:5, 2
16.2: 1
17.1: 1
18.3). 1
19). 2
1945. 1
1954. 1
20-bit 3
200-MHz 1
2000, 1
28.6 2
(simple 2
-5 1
-u 6
*cwd; 1
(int) 10
(large) 2
(log2 1
... 84
(thus 9
(“0101”th) 1
*ptr, 5
13.1), 1
*/ 16
*c, 5
*old_ptr; 2
140 2
(pid:%d)\n", 9
(required 1
(running 1
(said 2
*consumer(void 5
*dst; 1
*value) 2
--leak-check=yes 2
-C 6
17, 1
(when 3
1963. 2
1965, 1
14949, 1
-D 154
-d 2
0-byte 1
/dev/zero 1
./main 6
*input) 1
*myargs[3]; 2
*str 1
--trace-mem=yes 1
0: 4
0x200000 4
0x600, 1
1.0; 1
1.3.37 1
10) 2
1036 1
111). 1
18, 2
(initial) 1
(let’s 4
(likely) 1
(lowest), 1
(more 3
(mutex 2
(myarg_t 4
(new) 1
(perhaps 7
(pointed 1
(recall 1
(roughly) 2
(size=200) 1
160 2
29.5 6
(stuck 2
/proc/meminfo 1
0KB 13
0x0DC0. 1
0x7ffd3e55d2b4 1
0xC0000FFF 1
(marked 1
-v 17
/proc 1
00000000019d5000 1
0111 1
03 1
105 6
(out 3
-1; 8
-1KB. 1
18-bit 1
0(%eax) 2
0.001), 1
0000000000400000 1
04 2
0x000, 1
0x7ffe45522e94 1
10.5 1
100%. 1
100s 1
*cond, 2
1000. 2
1972. 5
(such 25
(waiting 2
2github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
30.12: 1
30.4) 1
0011 1
0. 11
00007f4e7d508000 1
1, 80
(now 6
(privileged) 1
(sadly). 1
(some 1
(what 4
(without 1
(write) 1
*head 1
14.7 1
-L 18
18.2, 3
(that, 2
(the 61
(through 1
(xchg). 2
137, 1
*arg) 26
*current 1
*rvals; 2
1030 1
*p 6
11–12), 1
1981. 7
17.3. 1
(which 39
*cond); 2
*rvals 2
*src 3
-nw 1
0.4 1
0x068, 1
0x8049a1c 6
1-byte 1
100ns 2
101 4
110 2
13. 2
14KB 2
(seconds) 6
*lock) 20
15.6 2
-l 19
2.5 1
(unused) 6
(value 2
(yes, 4
(you 5
*malloc(size 1
*new_head 2
-l, 1
...; 1
1111 7
-M 15
12, 2
1990. 2
20.1 1
2008). 1
22.5: 1
26.1: 2
26KB, 1
(freeing 1
0x8049a1c, 8
1.01] 203
100. 6
-is-unsafe. 2
-m, 1
-p) 1
0x1096008c0 1
128; 1
15, 7
(there 3
+1 1
-O 1
./main). 1
2005. 9
2007, 2
20000000) 2
) 46
*mutex, 2
*ofile[NOFILE]; 1
1928 1
- 25
./cpu 5
0), 1
0.9. 1
05 1
0x100, 1
10); 1
10.6 1
3; 3
0101 1
0110 2
02 1
0x7fff691aea64 1
10,000 8
12:6, 1
, 15
16.5. 1
./fork.py 4
1)) 2
132 2
14:7 1
(this 4
(thread 6
(usually) 2
*(*start_routine)(int), 2
-15 1
22.9 1
2008–19, 138
14.4 1
-c 22
*ptr) 7
0+1+2 1
09 1
0x500, 1
0x8049a1c). 2
110). 1
1224 1
14.6 1
15.5 2
100-bytes 2
3A: 2
3KB. 2
4-KB 3
110, 1
0x80000000)) 2
10-byte 1
10.3 1
100%, 1
17.4. 1
0.1). 1
10.4 1
104. 1
150 10
17.2. 1
1957 1
1966 1
*m) 6
-F 3
-f 1
1024, 1
12(3), 2
120 9
12000 1
135: 1
14. 4
15.1. 1
15.3, 1
19.3, 1
*H) 2
1 461
16.4 1
100byte 1
117, 1
(get 1
(load 1
(myarg 2
(onto 2
(pthread_join) 2
(via 6
*arg); 4
*child(void 3
*hptr 1
16.1, 2
1101 2
16.5 1
-o 9
./array 1
2.6 3
20(%eax) 1
26.5 4
203 1
15.3 1
-pthread; 2
.EXE 1
--b1 1
128) 1
-m 3
12-bit 2
15KB 7
2.3 1
2003. 4
201 4
22.10 1
22–23), 1
13.3 2
4.2: 1
1234567)) 1
100, 6
13.2; 1
--b0 1
-S, 1
00, 1
00007f4e7cf06000 1
0th 2
0x800, 1
10+20+120 1
100+110+120 1
1074 2
12) 1
*ptr 9
2006. 6
2015. 1
22.12 1
25. 1
254: 1
26.3, 2
27.2, 2
13 93
./x86.py 14
15) 4
2.7 3
*argv[]) 23
100 87
17.3 1
29146; 1
24KB 3
14 71
4.3BSD 1
13.2: 1
137298 1
13: 2
13:4, 2
17.1). 1
06 1
0x200, 1
1), 5
1110 2
17.4 1
12 89
12(%eax), 1
1234567 7
16.7 1
18.5 2
19.4 1
1960’s. 1
1970; 1
1980’s, 2
0 384
28K 3
13.2 2
0+ebx 1
16KB; 1
20), 1
*m); 1
12. 2
18 54
18.2 1
26.1, 4
14.2 1
4: 2
5.1: 1
50) 1
68 1
7). 2
1792K 1
19.1), 2
1960. 1
10% 5
10.7 1
100), 1
1032 1
13.4 1
14.3 1
27.4 4
28.3 2
28.9: 2
1964 1
01, 2
1; 42
1KB. 1
2.2: 1
2.5). 1
23254, 1
25% 1
2007. 3
*ptr; 6
14, 2
3. 32
19.1 2
192KB 1
19384 1
10th 3
13.3: 1
11 110
170 3
7232 1
*producer(void 5
16384, 1
1960’s 5
/* 16
18.3 1
./mem 5
13.1 2
-S 24
15 96
204 3
27.1. 2
2KB). 1
3): 2
4.4 2
4b 4
5.3 1
14.1 1
15.6: 1
16.5: 1
17.4: 1
17.7). 1
18.3: 1
19.2: 1
19345221) 2
1957. 1
143,012. 1
1989. 5
11:5, 2
15.1: 1
15:3, 2
15KB, 1
1961. 1
1963, 1
16K 1
1KB 13
0) 40
19 58
0+5+10 1
15.5: 1
-s 21
................ 1
./p3 1
00 4
1:0,4:100. 1
2.4 1
0.2 1
29.11: 2
30.10): 1
36, 1
17:10, 1
26.6 4
2016. 1
*tmp 7
14-bit 4
30.6: 1
28.10: 2
1966. 3
15.1 2
1998. 2
1277, 1
1100 3
1959 1
8.1). 1
+= 9
./main-two-cvs-while 2
16k 5
1m 6
0x0(%ebx), 2
1.2.1) 1
10,000,000 2
100,000, 1
100:100,100:100), 1
16 92
29 25
0000 14
0] 4
0x0(%ebx) 1
0x80000000 2
10.3. 1
100? 1
108). 1
11. 3
115–116, 2
13, 2
13.2, 1
132: 1
19.8 1
1? 1
1” 1
2.6: 1
20. 1
20.2. 1
15.4: 1
16.3: 1
86 2
1970. 4
//acquire 4
1962 2
1990s, 1
19.2 2
0, 55
2 257
15.2 3
16.1 2
16384 1
16492 1
0x8049a1c. 2
1.0001 1
10-entry 1
10.1 2
10.2? 1
101. 2
12:7, 1
15.2: 1
1586, 1
16.1: 1
16KB, 1
1793, 1
18). 1
19.1). 1
19.3), 1
2). 7
13.1: 1
2000. 9
1968 2
17.2: 1
17: 1
17:4, 1
18.1: 1
1964. 2
1973. 2
152K 1
00007f4e7d731000 1
2.2 2
108 11
16(%eax), 1
29.2 4
16708 2
17.6: 1
170. 1
172, 1
18.5: 1
19.4: 1
1959. 1
27.5 2
2018, 1
-n 19
0x37) 1
0xC0000000 2
1.0, 1
10.2: 1
16.6: 1
1962. 7
2016 1
15). 1
16.1). 1
2017. 2
29.1. 2
3Like 1
3a); 1
4.6 1
44000 1
1982. 7
16.4: 2
010000; 1
0x0(%ebx),%eax 1
11). 1
16.2 2
17.1 1
17.7: 1
18.6: 1
19.5: 1
1) 52
1-second 1
10.1: 1
100) 3
109 1
12). 1
17.8, 1
19.4. 1
200,000, 1
3 231
10:1,10:100). 1
17.5: 1
18.4: 1
18–21); 1
19.3: 1
19221041) 2
1950’s 1
1ms, 1
20-29): 1
2, 38
2-bit 1
20.4: 1
1991. 9
17.3: 1
200 24
1.00] 5
10+20+30 1
10.3: 1
1000; 1
100K 1
10; 2
128-Byte 1
128-byte 2
19.7 1
1968. 11
28.4 2
21.1), 1
214 1
300. 3
3:0,5:100,5:100,5:100 1
21:1, 5
24(%eax) 1
25%. 1
28.11 2
28.4. 2
21.3, 1
22, 1
22.2, 1
28.8 4
29.7 2
30.1. 1
30.14: 1
4KB). 2
200, 3
1Each 1
17.6). 1
2002. 1
11:1, 1
29.8: 2
2004. 7
10, 14
100,000 1
1000, 5
10ms, 1
11168, 1
1174 1
14KB; 1
18.6 2
19.5 2
1970’s. 1
1We 1
2.3: 1
30.11 1
128 13
1963.” 1
1971. 1
1980. 1
1991, 1
1MB 1
1970’s 2
08 2
20.3: 1
1960’s, 2
32K 3
4MB), 1
2015/02/10/understanding-glibc-malloc/. 1
20 95
18.2: 1
2011. 7
135 2
38 8
2008–18, 5
2013. 4
2015, 1
3764-byte 3
13:2, 1
2.5: 1
1986. 1
29.3 2
29.9: 2
250 5
27.2. 2
28KB 2
2008–20, 49
300 4
15), 1
22.7 2
3KB: 1
1949. 1
8KB) 1
2. 29
2- 1
20.5: 1
20.6). 1
1990). 1
32k 6
34920. 1
36.4% 1
3:50,3:50 2
184–199. 1
2013, 1
17.5. 1
4). 7
47 2
4:1, 1
60% 4
64-Byte 1
14). 2
2010, 2
1995. 6
16KB] 5
18705, 1
1970 1
4KB 16
29, 3
26.7 4
3121, 2
3412382, 1
4.1 1
4.8 1
5% 3
9), 1
20.6: 1
0x00000000 1
0x1095afe50 1
0x400, 1
0xFFF. 1
5.5 1
20th 1
20(%eax), 1
3] 1
19.1: 1
23.1. 1
1996 3
2.9 2
1969. 3
202 1
3One 1
64-byte 7
16), 3
20KB 2
1:0,4:100 2
2: 3
1970s 1
1992.. 1
4m 1
3); 1
27.6 2
16(%eax) 1
1780K 1
4096 3
1980s 1
5.7 1
90% 1
200. 3
2015). 1
2000; 2
1999. 1
1). 6
512 9
21.3: 1
20.2 1
4.4: 1
1956. 1
24-bit 1
29.9 2
2009. 5
1978. 5
22.11 1
4-byte 3
74 1
83 1
Accounting 1
20); 1
30.10: 1
1975. 2
1993. 6
5, 6
30.15 1
28.5 2
26.3 2
179–180, 1
50. 1
1985. 2
50), 1
5:100,5:100. 1
7.5 2
70%. 1
78-101, 1
1KB, 1
21:10, 1
55. 1
22.2: 1
2000 15
40, 2
4000, 1
4b: 1
5.3: 1
22.9. 1
1987. 1
220 1
4.3 1
16500 1
21, 4
21-bit 1
21.2, 1
30.13). 1
2.1 2
20.4 2
50,000 2
4.5 2
29.4 4
27 32
1980’s; 1
6100, 1
64GB 1
AM 2
2018), 1
22.3: 1
21.2: 1
8.4 2
88761, 1
9.3 2
90%, 1
23.1: 1
21.1 1
1965. 6
1974. 3
32KB 5
57.1% 1
28.10 4
28.3. 2
324 1
40100 1
1K 1
Actually, 1
20.6 1
28.7 4
384KB 1
2001. 1
21.3 3
50th 1
5.4 2
2; 5
27.2 2
1998 2
1994. 1
6= 2
AMPSON 1
22.4: 1
23.2: 1
21: 1
100). 2
100+(110−10)+(120−10) 1
103.33 1
105-117, 1
1124 2
128KB 1
56483, 1
1983. 4
34K 3
6.2: 1
1996. 4
1KB) 1
1Note 2
45, 1
1k 9
Aha! 1
21.5 1
29.6 2
2Fortunately 1
2003, 2
215, 1
64). 1
56, 1
30.11: 1
28.1 2
28.7: 2
29.6: 2
3-GHz 1
AUSE 1
28.17 2
28.16 2
22.1: 1
22.8 2
56KB 2
24:2, 1
: 289
22.6: 1
13); 2
5–7), 1
1992. 4
3” 1
7.1: 1
24. 1
2501, 1
26, 1
29.10: 2
2KB), 1
30.12 1
34KB 1
36K 1
2] 2
2010. 7
23, 2
23-bit 1
6.3 1
30.14). 1
2) 7
20.1); 1
7.4: 1
30.8 1
Ability 2
2N 2
2:70, 1
23:2, 1
256KB 1
6.4 2
256-byte 1
== 91
ALGORITHMS 1
14.5 1
6 116
20.3 2
40%) 2
9). 1
32868. 2
2), 3
4a 4
2.3) 1
20.2: 1
20.5). 1
39 11
3764 4
30, 3
22 38
8) 3
28.9 4
64KB 9
30.3) 1
7 127
7.2 1
7.8: 1
36 11
Achieving 2
2’s 1
2KB 8
256 6
28.14 2
7.3 2
28(%eax) 1
26.2: 2
API 62
148K 1
6+5 1
21 45
40. 2
ANAGEMENT 17
40050 1
20% 7
Andrea 7
5 169
22.4 2
21.1: 1
4.3). 1
3980 3
30-bit 1
22.2 1
<string>\n"); 1
29.8 2
20.1: 1
31) 4
20.5 3
7.7). 1
8.1 1
4), 2
Aleksey 3
30.5: 1
2m 1
256m 1
28.9, 2
7.9: 1
28.1), 2
27.1: 2
Abstraction 2
15.4 1
6.2 1
21.2 2
4200, 1
AccessMemory(PDEAddr) 1
48KB 4
2014 1
Approximation 2
5.2 2
23.3 1
22.3). 1
48 9
3A 1
30.13: 1
22.8: 1
29154, 1
218 1
24113 1
2016.. 1
70, 1
7282 1
A 728
40% 5
Antoine 1
3KB 3
2”. 2
26.4 4
2K 6
8 109
28.15 2
30.1 1
30.7: 1
16-byte 4
64, 1
64-bit 10
7.1 1
7.7: 1
8.6: 1
9.5: 1
A), 2
ARC 1
Accessing 2
49, 2
21.6 1
22.5 2
500 4
24 37
24114 1
4MB) 1
30.5) 1
4 164
4(%eax), 1
4.2 1
400 1
40000 2
4088 1
4096-byte 1
7354 1
A2’s 1
4088), 1
Approach 1
4, 5
3, 25
27.3 4
2k 1
30.2: 1
4) 2
Affinity 1
320KB 2
16.3 2
17 66
17.2 1
46273, 1
ATA 21
Almost 1
5.6 1
512-byte 1
59–73, 1
52. 2
24(%eax), 1
255 2
5). 6
3000, 1
39016, 1
30. 2
3: 3
254 3
21.4 1
8.7: 1
4196 1
8.3: 1
ASID 9
45 6
Assume 33
4-bit 3
30.4: 1
28 33
8(%eax), 1
3.33). 1
4904, 1
Algorithms 4
4. 27
22.1 2
17.8: 1
18.1 2
18.7: 1
1800s, 1
1979. 2
2212 1
6.5 1
6.1 2
26.6: 2
28.13 2
655, 1
23.1 1
3B: 3
30.15: 1
4.1: 1
28.12 2
22.3 1
80-20 4
4:100,1:0. 1
9.2: 1
Allocator 1
526, 1
B, 22
7) 3
300, 2
28(%eax), 1
8.2 2
30.3: 1
4GB 1
Assume, 3
4.2. 1
22.7: 1
5(2): 1
Abdel-Wahab. 1
Alto 2
Attacks 1
1988. 2
25 33
7.4 1
64k 1
28.4: 2
28.6. 2
7), 3
26.4: 2
4.3: 1
30.2. 1
448KB 1
28.5. 2
22.9: 1
85.7% 1
5.1 1
<stdio.h> 15
<sys/types.h> 1
63 3
BEST 1
@ 8
4096, 2
28.2 2
9.1 1
30.8), 1
3000; 1
BOUT 1
4088. 1
250, 1
50-ms 2
Advanced 1
Answer 1
B) 3
1997. 5
26.1 2
8-byte 1
7.6: 1
29.3: 2
3) 2
75 3
27.3: 2
4146 1
32, 1
49 1
29.11 2
4:10, 1
99% 2
51. 4
7.5: 1
<sys/wait.h> 3
64bit 1
Balakrishnan 1
A1’s 1
4k 1
28.8: 2
9” 4
7.8 1
32KB, 1
BUCKETS], 4
44:1/2. 1
26.3: 2
51, 3
Android), 1
B. 18
B-tree, 2
1:1, 3
26.7: 2
8.3 2
7.9). 1
33 12
30.1: 1
8(%eax) 1
27KB. 2
4a: 1
32-bit 16
4:3, 1
23 37
7); 2
ARPACI-DUSSEAU 38
Andrew 4
7.8). 1
A2 1
90 1
Baumann, 1
ARM 2
5121024 1
29.1 2
<< 9
8.7 1
3906, 1
Background: 1
4b, 1
27.2: 2
6.4: 1
Architectures 4
BUILD 1
Beginning: 1
1e7; 2
272, 1
8049a1c,%eax 4
70–76, 1
42 7
7.7 1
76–86, 1
8.6 2
5.1; 1
36291, 1
4KB, 3
5.3). 1
6). 1
64-bits); 1
76 1
8), 1
AFIPS 4
AME 1
Best 2
ASIDE: 4
54.5%. 1
5→0 2
6) 5
6.2) 1
3:50,3:50. 1
Birrell. 2
5KB 1
28.1: 2
6000, 1
B-trees); 2
Bigger 1
Block 9
20,000,000. 2
28.5: 2
71755, 1
9 119
4200 4
51 18
60 13
9.5 1
5.2: 1
3752 1
4.5: 1
40-ms 1
40KB 2
4page 1
5.4: 1
80% 7
85 1
<sys/time.h> 1
Bhandarkar 1
ASIDs, 1
29.7: 2
29267 1
9.6 1
64-bit) 1
3K 3
Boneh. 1
7.1, 1
28KB, 1
7.3: 1
Blumofe, 1
Brooks 1
But 49
21.7 1
29.4: 2
7356 1
9.2 2
8(9):569, 2
28.2: 2
7.10 1
< 24
5: 2
23.2 2
7.6 1
Anticipatory 2
Available 8
7094 1
50, 5
ACE 1
AND 6
A, 16
Blocked: 1
AccessMemory(PTEAddr) 4
<pthread.h> 8
29384 1
940 1
8:10, 1
4(%esp), 2
Buffer 9
8-page 1
29.10) 2
7.6). 1
Brinch 7
Bryant 4
CONCURRENCY 3
22.6 2
29147 2
8.5: 1
ALICIOUS 1
93 1
29.1: 2
8. 12
>> 11
6.1: 1
26.5: 2
7620, 1
Arpaci-Dusseau 3
B1’s 1
7355 1
5000, 1
ADD 1
AVOID 7
APIs 10
Building 5
Again 2
AIN 1
2This 1
9.8 1
4.3) 1
CHEDULE 2
= 415
846 1
29.3). 2
73-96, 1
Butter 2
Build 4
CRITICAL 1
26 32
30.6 1
9.4: 1
APIs, 4
ALLS 2
30-byte 1
820, 1
A; 2
7332 1
27.4: 2
8.5 2
Basu, 1
B5000: 2
8.4: 1
5th 1
ALLOCATED 2
Abstract” 1
ASID, 1
Butler 3
Allocation: 2
ATC 2
3). 5
? 9
5) 3
CONDITIONS 1
ACM, 19
9) 1
2Q 3
7353 1
CPU-optimized, 1
Buy 1
Certainly 1
26.2 4
32896; 1
AT 1
Acta 1
ASPLOS-IX, 1
30.3 1
9548, 1
ANAGE 3
82% 1
28.2; 2
87, 1
Berger 2
B? 1
9.3: 1
6.3: 1
Ah 1
Adam 1
CISC, 1
ASY 154
Allocator” 2
ATTACK 1
30.9 1
A2, 1
7.9 1
CPUs? 3
AMAT: 1
AT&T/Bell 1
30 31
8.2: 1
CPU. 31
B’s 8
Coherence” 1
27.1 2
335, 1
Ah, 2
Algorithms” 1
Again, 3
30.9: 1
API, 1
Alan 3
9.1). 1
28.3: 2
9.4 2
Bit-precision” 1
Bayer. 1
AS 10
7.2: 1
75% 1
Ahead 2
Calculate 1
And 108
Atomicity 2
Avere 1
B1 1
ACM. 2
9.7 1
Calling 8
<assert.h> 4
ATOMIC 2
30.2 1
9.1: 1
CPUs; 2
CA, 7
Compared 2
28.6: 2
34 12
Aren’t 1
All 21
Amazingly 1
31 21
ARDWARE 2
Although 16
And...? 1
29.2: 2
; 25
;load 1
Berkeley. 1
AZY 1
Allocated 9
8.1: 1
Compilers 1
AUER 1
Apparently 1
AW 5
37 8
Base-and-bounds 2
APPING 1
99, 1
Clayton 1
AIX 1
Annals 1
30.8: 1
99 7
CS 1
CISC. 1
Concept” 1
28KB1 1
372K 1
At 31
Assignment 1
Apparently, 2
32-bits 1
Act. 1
96 2
B: 12
30.4 1
Bobrow, 2
>= 5
Beyond 14
Abstraction: 3
BFS. 1
9:2, 1
Computers, 3
Above 3
Apple’s 1
Amazingly, 4
4-GB 1
Before 21
ARGE 1
99.9% 1
Coffman 1
ARC, 1
Anoop 2
3000 4
<stdlib.h> 9
Came 2
Close 2
Concurrency 1
29.5: 2
43 8
Atlas 10
Attempt: 4
B-Trees: 1
40 28
Address 25
A. 29
Bach. 1
32 33
But, 7
A: 13
Boston, 3
Addison-Wesley, 11
Babaoglu, 1
ACHE 1
Computer” 5
Abstractions 1
Atlas”, 1
April 10
4.1). 1
Berkeley 7
Actually 4
> 5
Completion 4
Anyhow, 1
Architecture: 4
400MB 1
A1 3
AMD 1
Commu-nications 1
Controlling 2
3), 3
7.4. 1
B.W. 1
August 5
BUCKETS; 2
4000 3
Algorithm” 1
ADDRSORT, 1
Battle 1
41 10
Certainly, 2
ABOUT 1
Bouron, 1
Allocators 1
Bart 2
ACM 11
Contents 1
Al 8
Austin, 1
Are 6
ArpaciDusseau. 1
CHEDULING 50
CONDITION, 1
ABCABCABCABCABC 1
Conditions 1
Anything 1
Atomic 2
49).” 1
CPUs), 1
ASLR 1
Computing 4
Couleur, 2
30.7 1
70 2
Base/Bounds 1
Automatically 1
Bovet, 1
50? 1
Allocated] 2
AMAT, 1
C9 1
423, 1
Comes 1
APIs. 1
Broken 3
Amazon’s 1
Butenhof. 2
AKE 1
Contrast 2
Anita 1
Authors: 1
5), 5
Artificial 1
Address-space 1
Cache” 1
ACKGROUND 1
Cups” 1
Appavoo, 1
Award. 1
4MB 2
Come, 1
Access 9
Conversely, 3
Critical 2
300), 1
9. 9
Base/bounds 2
B). 2
Brian 2
549–557, 1
Allocation 3
AN 18
C95]. 1
50 46
Consider 2
About 5
Burroughs 5
C.J. 1
As 158
ALWAYS 1
Correspondingly, 1
Approach” 3
Basically, 5
55 1
Baby: 2
And, 2
Because 50
ASPLOS, 1
DATA 16
Architecture” 3
B; 1
5. 27
6KB 1
After 21
Corbato, 5
Crockford’s 2
35 12
<fcntl.h> 2
Boston 1
B86], 1
C) 3
6. 20
Anderson, 2
ANGRY. 1
CFS 40
512KB 2
Could 1
AccessMemory(PhysAddr) 6
CONTROL 2
CCESSES 1
Atlas” 1
Along 2
Create: 1
Bonwick 3
Bertinoro, 1
64 17
Chile. 1
Annual 1
Borg. 1
Account.html. 2
Dahm 4
Babaoglu 1
Bairavasundaram, 1
Became 1
7, 2
Allows 1
Cox, 1
Currency 1
DVICE 1
<string.h> 2
Bottom 1
BSD 3
CHEDULER 1
7KB 3
Applications” 1
Also 10
CRUX: 6
512m 7
D.B.G. 4
Allocator: 1
Cheap 1
COW 3
Austin 3
Alternately, 2
Decision 1
Both 7
Beyond” 1
9.5. 1
Comment 2
Anomaly. 1
Buddy 1
Allocating 1
Darago, 1
Compacted 3
B 157
Belady, 1
7.2, 1
Alpha, 2
Custer 1
4(%eax) 1
Disk 5
<unistd.h> 6
<value>\n"); 1
BSTRACTION 20
CLOCK 2
8, 1
Approaches 1
An 65
Call 8
6.3. 1
Davis 8
Also, 1
Computers” 1
CPUs. 7
Base[SN] 1
Always 4
Depending 2
Burroughs, 1
Bovet 2
Burchfiel, 2
Conference; 1
Array 4
C), 5
Analysis: 1
Data 13
Corporation 1
BSD) 1
Black 1
8k 1
Alternatives 1
Deadline 2
44 6
Does 29
Bouron 1
Adding 7
Below 2
CPU(s) 1
8-bit 3
Aside 1
Atlas: 3
Case 4
7. 16
December 8
Atomically, 2
Control 11
Casting 1
Blocked 4
Anomaly 2
Despite 1
CPU-bound 2
A) 2
Bye 1
Counters 8
Attempt 3
Chapman 2
Andreas 2
Descheduled 1
Correcting 1
Basic 10
Batch 1
991 1
Amazon, 1
Determining 1
4400 1
ERFORM 1
Brother” 1
Afraid 2
Buffer” 1
CVs 2
;add 1
Assumptions 3
Atlas”; 1
Cassandra, 1
801, 1
Deciding 1
Available: 29
Cooperative 1
Chevalley, 1
Boot 1
Another 38
E) 1
Caching 1
ACHING 1
C-callable 2
Culler, 2
DO 1
Daily 1
Apple, 2
Design 3
Craft 1
C: 2
CISC 7
<virtual 2
Animal 1
Dharmendra 1
4K) 2
ESS 1
CPUs: 1
Algorithm 5
C++ 2
Caching” 1
ANDLE 1
A’s). 1
Award 2
Characteristics 1
8KB 6
Different 5
Average 1
D.A. 1
Common 3
C-language 1
Architecture. 1
Elias 1
Center, 1
Accesses 2
C.A.R. 1
B-tree 2
Clearly, 9
Delete 1
Ask” 2
EAKED 1
D, 2
CPU), 6
CPU: 1
AMAT 4
Approximating 1
Discusses 2
62 2
ETTING 1
Class? 2
Applications 4
CCS 3
Chunks 2
AddressOfPTE 1
BETTER 1
A’s 7
Cores 1
9, 6
Dijkstra; 1
A’s, 1
Dennis 6
Communications 20
CACM 1
Avoiding 1
Even 20
Chang, 1
Approximate 10
CACM, 5
BASED 17
Coalescing 2
Detail 1
B-tree” 2
EC2 1
ECIDE 1
CPUintensive 1
Carl 5
Apple 3
Architecture 9
EASON 1
80 18
EVELOP 1
Code: 2
Art 3
CV 2
Clock 2
Analysis 5
Barton 3
Björn 1
Corporation, 1
9-bit 2
EALLY 1
BFS 1
Directory, 1
Compile 1
CPU, 33
BUCKETS 2
Experimental 2
Compaction 2
Behind 4
CPUbound 1
Before, 2
Cobham. 1
Deterministic? 1
B97, 2
Baby 2
EMBRYO, 1
Compute 4
Copy-on-write 1
Aq 1
Argument 2
END? 1
;store 1
Engineering 1
Commodity 1
Assuming 10
Caching, 1
Coherence 1
April, 3
Base[Segment] 1
Boyd-Wickizer, 3
Critically, 1
Adaptation 1
ERMS 4
Base 3
ETH 1
Copper 1
CREATE 1
Belady 3
FAST 7
Control, 1
Between 2
Bus 1
Belady. 1
Cobham’s 1
Deuterium” 1
DRAM, 1
Baron, 1
EXCLUSION 1
Charles 1
Covering 2
Better, 1
Arpaci-Dusseau, 10
ESIGN 1
ANDOMNESS 1
Envision 1
Considering 1
B5000 4
Chunk 1
Costs 1
Arrivals 1
Better 4
C, 12
Detailed 1
Ajay 2
Edward 2
Bonwick. 1
Either 4
Core 3
Cache 18
Bits” 1
Fast 4
Corbet. 2
Clustering 1
Buttlar, 2
Belady’s 2
Complex 1
Do 18
Don’t 17
Bone: 2
Edsger 8
Classic 1
C’s, 2
Big 2
Atlas. 2
Easton, 1
ANY 1
Evans. 1
Creation 6
BE 1
Cohen, 1
DEC 3
Bradford 2
California. 3
COMPCON 1
Dijkstra 12
Allocate 3
Allocation” 3
Bosch, 1
Experiment 1
DMA). 1
Coding 1
Bruce 1
FindFreePhysicalPage() 1
Couleur. 1
Comparing 2
CPU-intensive 4
Bell 2
Conference 1
E. 20
EALING 1
Brooks. 2
EnvyFS” 1
Compiling 2
Daley. 1
Bits 1
Berger, 2
Edwards, 4
API. 5
Every 1
Culler. 1
BFS, 2
Complete 1
Daggett, 1
BufferOverflow.pdf. 1
Callers 2
Calls 4
Errors” 1
Emacs. 1
Arpaci-Dusseau. 3
Assign 1
Find 4
Declaring 1
Conditions: 1
C. 24
Framework 1
Creating 2
Compatible 1
Cambridge, 2
Berkeley, 2
Corbato. 1
EnableInterrupts(); 2
ECHNOLOGIES 1
B’s. 1
Exactly 1
Computers 2
Discovering 1
Buddy-managed 1
Beth 1
Epema. 1
Accurate 1
Flexible 3
Culler’s 1
BIQUITY 1
Concurrency. 1
Debugging 2
Burnett 1
Canada. 2
Candy 1
FAULT 1
Gandhi, 1
Broken: 1
August, 1
Fred 1
Definition 1
Create 3
Cocke, 1
From: 1
D) 3
Concurrency), 1
Concurrency? 1
Bit 3
Corbato’s 1
Execute 7
C; 2
Exclusion 4
Computing, 3
Dominion 1
EFERENCE 1
CPUs). 4
Bill 1
Epema’s 1
Amazing! 1
Frame 1
DVANCED 13
BSD. 1
Conditions? 2
Dirty 2
Distribution, 1
Certain 1
Com-puting, 1
Fault 4
GBs 1
By 58
Begin 1
Gray. 2
ESOURCES 1
Emacs 1
Computing; 1
Fujiki, 1
Daniel 3
Considered 2
Corbato 4
Bounds[Segment]) 1
Cox. 1
Fagin. 1
Check 8
Failing 3
Custer, 1
ERSION 166
Early 3
Can 40
Boles. 2
French 2
Anderson. 1
Generate 2
Database 1
Bad 3
Cool, 1
COND 2
EG 1
Change 4
Compare-And-Swap 2
HAPTERS 1
Gecsei, 1
CFS” 1
Being 3
Gray’s 2
Data: 2
EvictPage() 1
Convention. 1
Gibson, 1
Definitely 1
Counter 6
Dennis) 1
CHEDULERS 1
Cybertron 1
Gaming 2
Child: 2
Fast, 2
DOO 1
ESX 2
Eligible 2
Consistency 1
Buffer) 1
Go 4
Any 3
Hansen. 5
Devang 2
Be 5
Design” 4
CPUs) 1
EMORY 36
Concept: 1
Compare-and-swap 2
HREADS 1
Hash_Insert(hash_t 2
Hill. 1
Bershad, 1
HY 5
David, 2
Fine-grained 1
C’s 1
Goodness, 1
Dennis, 2
D.H.J. 1
Dialogue 3
CPU). 1
Dilemma” 1
Gets 2
Goodman. 1
Flag 2
Decepticons1 1
Electroanalytical 1
Elliott 1
Correct 4
Goals 2
Approach: 5
Hansen’s 2
C 212
Directory 5
Boost 2
B’s). 1
California, 6
END), 1
DOS 1
Computer 20
Ginting, 1
CODE 2
Hong-Tai 1
Binary 1
Hawkins, 1
Dealing 1
Fortunately, 9
DID 1
Guide 3
ENERALITY 1
Dave 3
Dijkstra. 9
Colorado, 1
DiskRead(PTE.DiskAddr, 1
Christenson. 1
Goodman’s 1
Flash-based 1
Dekker, 2
Europe(!). 1
Errors 3
Counters” 2
H. 20
B+96, 2
Implement 4
CONCURRENT 15
Efficiency 2
Detect 1
C.H. 1
Canada, 4
EVEL 11
Death 1
Corporation” 1
Gollum, 1
CPUs 37
Hydra” 1
Boilen, 2
I/O: 4
Developer’s 4
Fun 3
Days 1
HOW 6
Efficient 2
Department, 1
Dijkstra’s 5
EAD 1
Doctoral 1
Circuitry 1
Gray 6
Frans 4
ECTION 1
Evaluating 4
Evans 1
D. 33
Hash_Init(hash_t 2
BAD! 2
It’s 4
CPU; 11
Figures 2
Dissertation 1
CONDITION 19
Chemistry, 1
Example 18
Examples”. 1
Creation: 1
Guide. 1
Cache-Affinity 1
I. 1
CFS) 1
Inverted 1
Diego, 4
GB 7
Denning. 2
Hardware 18
Everyone 1
DisableInterrupts(); 2
Concepts 2
EE 1
Donkey. 1
Completely 5
Convoy 1
FreeBSD” 1
EPARATE 1
Emery 1
Examination 1
D.R. 1
Inc.. 1
BF 2
Jacob, 1
Cilk 1
G. 9
EASUREMENT 1
CPU? 11
Child 1
Design, 1
F.J. 1
Daley 1
HICH 1
Chou, 1
IBM” 1
CMU 1
Jacqueline 2
ECESSARILY 1
GHz 2
Denning’s 1
Harmful” 2
FFICIENTLY 2
Distribution 1
Conceptually, 2
Effectiveness 1
Download 4
Great 5
Corporation. 1
G62]. 1
FIFO, 7
Fair 6
FILENO 1
Donald 1
Interrupt) 1
Benchmarking” 1
Jeffrey 1
Claypool 1
Good, 1
EBOOT 1
CPUs, 14
Coarse-grained 1
Details 1
February, 1
Dennis. 1
Has 1
Clark. 1
IRECT 15
CONCURRENCY: 15
Josep 1
ECURE 2
GUIDELINES 1
Doing 23
Guide” 1
EECS 1
Conway. 1
How 141
Embedded 1
English 1
HARES 1
Corwin, 1
Germond. 3
FIRST)? 1
Fekete. 2
Follow-on 1
EAL 1
Job:A 1
Blasgen, 1
Johnson, 1
Concurrent 25
Gouicem, 1
ERFECT 1
Caches 3
Come 3
Done 1
Further, 8
Development, 1
Hash_Lookup(hash_t 2
Code 24
Capel 2
KPTI) 1
Earth 2
Good 8
In 387
Each 19
ETERSON 1
HE 83
Couleur 1
Incorrectly 1
D′ 2
F.H. 4
Humorously, 2
Digital 2
Hoc 2
FetchAndAdd(&lock->ticket); 2
Fortunately 2
Jr., 1
EASY 38
CFS, 3
K 6
Figure 335
Current 3
Hill, 3
Earliest 1
Cesati. 3
Conference, 7
Druschel, 1
Futex 2
Douglas 1
I/O), 3
Code00 2
Cilk-5 1
Kanev, 1
Edition)” 2
Google, 2
Includes 2
Ed2.pdf. 2
Eindhoven 2
HYSICAL 27
DeWitt. 1
Innovator’s 1
E.W. 2
Fetch 5
I/O, 3
ELOCATION 2
How, 1
G) 1
Google 2
KB) 3
EKKER 1
Large 2
First: 1
Denning 1
I, 1
CPU 255
Far 1
Chapter 1
Countermeasures” 2
EARN 1
Geometry 2
EC-11:2, 1
IA-32 4
Computer, 6
Cocke 1
Kathryn 1
Environment” 4
Header 2
Indeed. 1
Facebook). 1
Emacs7 1
Hall, 5
Detection 1
Israel. 1
Equipment 2
Final 4
Idea 2
EPLACEMENT 2
I/Os 3
Golding, 1
Growing 1
Lighting 1
Entry 3
Lauder. 1
Free 8
Development 2
Distributed 5
EC-11, 1
FetchAndAdd(int 2
Clear 1
EDUCE 1
Glaser. 1
D 109
ELADY 1
IMITED 15
Control: 1
Computations” 3
Kernel 14
Execution 8
Hill 1
Interposition 1
Formalizations” 2
Engineers 1
Hastings, 1
EEDBACK 11
Italian, 1
Era 2
Forin, 1
Instrumentation” 1
EY 4
Imagine 39
Here, 13
Having 4
List: 2
Ever 2
Levels 1
Freedom 1
I/O. 10
CPU-bound; 1
END, 1
Forgetting 3
Clements, 3
EMORY-M 1
Handle 4
DEKKER’S 1
Exception 1
IRIX 1
Cores” 2
Concurrency: 2
LRU. 3
F. 8
Home 1
Introduction), 1
History” 1
February 16
He 3
EYOND 27
Jackson-Edwards. 1
Evaluation 2
GNU 3
Intelligence 1
Easy, 2
January 14
Hits+M 1
Hoare. 1
Liu, 1
FIFO. 4
Linus 1
Hank 2
INDETERMINATE, 1
CR3 1
Ed2.pdf 1
George 2
Condition 6
EMORY: 26
Hardware?” 1
DRAM 1
FAULTS 2
IS 1
Cutler, 1
Context 3
LRU’s 3
FILENO). 1
Huge 2
Javascript 2
IRTUAL 19
Fetch-And-Add 2
Hennessy 3
Embedding 1
Jiaqi 2
FLOW 1
Generalized 1
Jonathan 3
FIFO: 1
L. 10
House, 1
INVERSION 1
Locks: 2
FIFO’s 1
Manual”. 1
Harper 1
Indeed, 20
Candea, 1
FIFO? 1
Given 15
Counting 2
EPRESENT 1
Helen 1
Dekker’s 6
Finnish 1
Induced 1
DBMS), 1
DDRESS 25
Labs” 1
FOOLISH 1
Job:B 1
In-ternational, 1
I 171
File 3
Hint: 2
Examples 3
Jobs 2
Flow 6
Goh, 1
Kaashoek, 4
Graham. 2
Lampson 6
I/O) 2
IT 3
MIT, 1
Factors 1
March 14
Hybrid 2
Instructions 1
Canyon 1
Facebook) 1
Group, 1
Dickey. 2
ERSISTENTLY 1
History: 1
Destroy: 1
Fredkin, 2
Intel 10
Dick 2
Default 1
Licklider. 3
False) 10
KB64 1
Introduced 3
I/O-intensive 2
Freeing 2
HotOS 2
FIFO; 2
Juan 1
GE, 1
HINK 1
LRU 33
H&P 2
MA, 2
INITIALIZER, 2
ITHOUT 2
Massachusetts. 2
File-System 1
Mark 14
I/O; 3
Kanev 1
Case, 1
Fit 4
HARING 2
ESTRICTED 1
Enough 1
Hive/HDFS, 1
Dr. 1
G.L. 2
Is 14
Direct 8
Dissertation, 1
Lipman 1
Farrell, 2
LATER? 1
Isolation” 1
GB). 1
IECES 154
How? 1
Factor 2
Julin, 1
Heap: 1
I! 1
Least-Frequently-Used 1
Heap 16
Mac) 1
IST 2
Influenced 1
Meltdown, 1
Flesh 2
Martin 1
INTRODUCTION 15
Keith 1
CompareAndSwap(int 2
Frigo, 1
HINGS 1
Electronics, 1
Example: 6
Hmm... 2
EGAIN 2
Generally, 1
Issues 6
ECHANISMS 11
Dynamic 7
Lipp, 1
Fellner, 1
LESS 1
E 195
Get 5
Implementing 2
ID 7
Fall 5
Karels, 1
Heinrich. 3
ISTORY 1
I/O). 3
Let’s 90
Manager” 1
ITS 1
Interestingly, 3
Microsoft 4
Frequency 1
Measuring 2
IP) 1
Krieger, 1
LDE 1
Generally 1
Handled) 1
Examine 9
F 36
Homework 28
ETTER 1
Grove, 3
It” 1
EGMENTATION 12
M62, 1
First, 58
Italy. 1
Languages 2
ERMINOLOGY 1
Gruss, 1
Indeed 1
IMER 1
Finding 2
L4. 1
Hershey 1
Increase 1
IT! 1
Lindberg, 1
McCall. 2
Ideally, 2
Multiprocessing. 2
Friedman, 1
It 92
Melvin 1
Instruction 4
Contents: 1
LOCK-BASED 15
Greenfield. 1
Hazelwood, 1
FOR 2
Facebook, 1
Earl 3
However, 120
Gupta. 2
I’ll 3
Evict 4
MAX; 2
Fleischmann, 1
I’m 5
Lepers, 1
Evolution 1
HARE 14
Internet 1
Ingo 1
Finite 1
Lanyue 4
Hits 2
Initial 3
Innocent 2
Lottery 6
Mellor-Crummey 4
Its 4
NCE 1
Full? 1
Jose, 7
Minneapolis, 1
Introduction 8
Cup 1
Laszlo 1
Hence 2
Human 1
Fill 1
Farm 1
Earlier 2
Hugh 4
Hit/Miss? 4
KASLR” 1
Extract 1
MS-DOS. 1
Form 1
KB); 1
Libraries: 1
FASTER 17
HTTP 1
Issue 4
Joseph 1
Firefox, 1
Levy. 2
Hopefully 2
Intel. 1
Interactive 1
Louisiana. 1
Microprocessor 3
Jain. 1
NTERLUDES 1
GB) 2
Kaufmann, 5
Multiprocessor 4
KB), 1
DD 1
Led 1
Herlihy. 2
IKE 1
First-in→ 11
IP 41
IGHT 1
For 194
Hoare 4
Knowlton 1
Fairness 2
MULATING 1
From 23
LWN 2
Linked 8
Failed 2
Hear 1
Investigator. 1
KASLR, 1
Gain 2
Little 2
Hydra 1
Internals: 3
Joe 3
M.J. 6
NPUTS 1
Jain’s 1
NULL; 22
Getting 1
Knowing 3
Next, 9
Labs 2
David 19
Lock-based 2
Hochshule 2
Evolution” 2
Function 2
IRTUALIZE 5
ISBEHAVIOR 1
Forget 1
IGHER 1
LOCKS 23
Finally, 70
Meehean. 1
Meehean’s 1
Like, 1
LoadLinked 2
Farm” 1
High 2
Jones. 2
KEY 1
Garner 1
Man-Month” 1
IBM 9
J 1
Joy, 1
MBALANCE 1
OK 4
James 1
National 1
Gorman. 1
L1 4
No-Locality 2
Length 1
Dead: 1
Look 1
ICKETS 1
Excellent 1
GAINST 1
ISN’T 1
Interesting 1
FreeBSD, 1
IMMEDIATE 2
Linux, 15
Fox. 1
Fusion 1
Mistakes 1
Logistics 1
Low-level 1
Faster 2
IDs 2
KB 18
Key 1
Gray, 1
Maybe 1
IEEE 7
Knowlton. 1
Jozef 2
MORE 2
ONSTANTS 1
Java. 1
Nemacolin 2
Grows 2
LL/SC 2
No. 6
Loads/Stores 2
Decay-Usage 1
MQMS). 1
In, 2
Extra 1
Handbook 2
Informatica, 1
Future, 1
L 59
IO). 1
Linux-based 3
Free-Space 1
Gates 1
Multics 14
Lord 1
Making 3
Feedback 5
IRE 5
Kenneth 2
L->head 8
Guerraoui, 2
McVoy 1
IF) 1
Knuth 6
June, 1
MS-DOS 1
OS-ignorant) 1
K+96]. 2
Note 34
Here’s 4
Least-RecentlyUsed 1
OMPLEXITY 1
Lots 2
Dijkstra, 4
Malloc(), 2
Inputs 1
FIFO 37
Harry 2
Isn’t 2
G 12
LDE). 1
IRTUALIZATION 5
List 7
FreeBSD 3
Glenn 4
NIX/C 1
MAC 2
March, 1
Festschrift 1
ISCA 4
Kleiman, 2
L4) 1
HW 1
Modeling” 1
IO 7
LaTeX, 1
Ken 2
MUTEX 2
OSes 2
Kleinrock. 2
OMPLETE 19
Hey, 1
Libraries 1
ONTENTS 1
Lucco, 1
Doesn’t 1
Many 21
Issue: 3
Fourth, 1
Henry 1
J.S. 1
HOLD 1
Leffler, 1
Locks 29
HEN 4
If 167
Going 1
NSA? 1
Mac 12
Metrics 1
Golub, 1
Interaction 1
LAW) 2
LOCK 2
Handles 1
Montreal, 1
Index 11
Larry 1
L2 1
Mars 5
LWAYS 1
OUR 2
PERATING 184
Historical 4
MAC, 1
OS) 2
MPLEMENT 1
ECHANISM 30
Mechanism 1
Keeping 2
Francisco, 1
Hershey. 1
Jack 5
Levy, 5
I/O 86
Ma. 2
IFIPS 1
John 14
Harcourt, 2
NT” 2
Mail. 1
Mixed 1
HPUX 1
Interrupts 2
LRU→ 11
Lawall, 1
Hard 1
Morgan-Kaufmann, 2
Instinct, 1
Levin, 1
L60, 1
May, 1
Law, 2
Optimal 3
Park, 2
History 4
MALLER 15
PFN=55 1
Managing 1
Electronic 2
NABLES 1
Kernighan, 1
G.A. 1
Hierarchies” 1
K. 1
List_Lookup(list_t 4
ISSES 1
Man 3
II) 1
Kawamoto, 1
Heart 2
OPT. 1
Manuals 1
Modha. 1
Handbook” 1
Jim 8
Lamport’s 1
Laziness 2
Heap01 2
Multiprogramming 4
International 3
LoadLinked(int 2
Linux. 8
Memory: 3
Leaks 1
Oracle 3
Pesterev, 3
INITIALIZER. 2
MMU. 2
PID. 1
Microsoft, 1
Exactly. 2
NOWLEDGE 1
Kilburn, 4
HERE 1
Hydra. 1
KB, 1
MASK 3
Incrementalism, 1
Management” 2
IME 2
Letters, 2
Instead, 7
OS? 4
Mars?” 2
Moir 6
Happened 2
Joy. 1
Leave 1
Lisa 1
Hussein 1
N 41
J. 33
Lynch, 2
Linux’s 2
Merritt, 2
Learning 2
Our 25
Prentice 4
Initialize 3
Mac, 1
Linux 107
Minimize 2
FFICIENT 1
Ngram 1
LW 1
Language” 2
I/O? 1
LEXIBLY 1
Mayer. 2
Invalid 2
Markstein. 1
IZES 1
Linux” 1
Last 1
OS” 1
Murphy, 2
Mountain, 1
Heavyweight 1
Kernel” 1
Loops 1
List_Lookup(&H->lists[key 2
Incorporating 1
NT, 1
Job:C 1
MANUAL, 1
Long-Running 1
Michael 10
PAGING 22
R+89, 1
Intuitively, 1
Paranoia 1
Management 11
Live 1
Modadugu, 1
FIRST 1
OCALITY 1
HP, 1
Letters 3
IALOGUE 4
LGORITHMS 1
Media, 3
Jaswinder 1
Miss 29
If, 9
Lipman. 4
Library” 2
Or 9
NBA 1
Nothing 4
Hit 29
Kuehner. 1
Lu, 4
Lock 12
Intel’s), 1
NTERPOSITION 1
Joe’s, 1
MIT 5
Long-running 1
Miller. 2
PF 3
README, 1
Isolation 1
Pass(C) 1
Manual” 3
Long 1
Motivating 1
Facebook. 1
OESN 1
HREAD 12
M83]. 1
INTERLUDE: 11
Lacking 1
Multiple 1
Journal, 2
N. 7
Jason 1
Lists 5
Linux); 1
Overall, 3
NOT 1
OMEWORKS 2
Holding 1
L4 3
Locks.” 2
Interludes 1
M 139
NUMPAGES. 1
KPTI 1
MLFQ: 3
MLFQ. 2
Milton 1
Paging 6
ROTECTED 1
Joy 2
Pn−1 1
Memory-mapped 1
NECESSARILY 1
MLFQ 32
Failure 4
OF 9
MLFQs 1
Ideas 2
Lauer 2
HREE 154
Multiprocessors. 2
Lauer. 2
Need 2
Jeff 3
Lu. 2
M.K. 1
P1 6
Not 23
OS), 2
Holt. 1
Las 1
Lower 1
KB-32 2
Marvin 1
O(n) 1
Keeps 2
MMU; 1
MQMS 2
Mitoma, 1
Patel 1
Reliability 1
June 13
Precise 2
Muller, 1
NT 4
Note, 2
First 23
OK; 1
Maintenance 1
Imagine, 4
Linux) 2
Hash 8
Multithreaded 3
Lauer’s 2
OS: 1
Job 11
MAX) 1
MRU 2
PT_SHIFT 1
Novark 1
Oh 5
Horn. 3
Lavington. 3
MAP_ANON|MAP_PRIVATE, 1
KNOW 1
Microprocessors 1
OFFS 1
Knuth. 1
MQMS, 1
Make 5
More 24
Phenomenon” 1
Robin 3
LOW 1
Privileged 3
Multi-Queue 1
Manuals” 3
ONCURRENCY: 15
Fleischmann 1
McGraw-Hill, 2
Of 70
Implementation 6
MEMORY 1
Here 30
NetBSD, 1
Lectures 1
Occur 1
Journal 7
MB 1
Machine” 1
Paged 2
O(1) 4
Overview 3
ITH 4
Leiserson, 1
MPORTANCE 1
Know 2
Mr. 1
OS, 31
LATER 1
LISP 1
Metric: 1
NE 1
NY, 1
SIGMETRICS 2
LRU? 2
Law. 2
Learn 1
Mogul, 1
ONTEXT 2
Frankenstein 1
Models” 1
Organization 1
Information 6
MIPS 14
His 3
ORK 1
Linux). 5
Oddly 1
KB. 4
MMU 3
Markowitz, 1
Preemptive 1
ODING 1
PCD 1
Implementation” 1
Levy 1
Malloc(sizeof(myret_t)); 2
L3 1
Much 9
October 17
Manchester 3
Later 2
Microsystems, 1
Play 1
Newell, 1
SIZESORT+, 1
Problem: 6
Multiprocessors” 5
Low 2
MostFrequently-Used 1
H 42
Most 9
P0), 1
Interlude: 4
Mach 1
OS 504
Hopefully, 4
OSTEP! 2
List_Insert(list_t 4
Often 1
Limits) 1
McGee. 1
Massachusetts, 1
Present 1
OINTER 1
PPN) 1
Iyer, 1
Life 1
Management, 2
LRU, 11
Multics, 6
Ousterhout, 2
Matteo 1
Loading: 2
Nichols. 2
Processes” 2
Now? 2
Spend 3
Programs 4
NIX. 2
Mac! 1
Moving 1
HFE-1:1, 1
NDERSTAND 1
PERATIONS 2
Ion 2
Megiddo 1
Hovav 1
Obviously 1
One 135
Locking 2
Organick. 1
Linear 2
Mechanism: 2
Methods 1
Price. 1
OSSIBLE 2
PROT_READ|PROT_WRITE, 1
Kay 1
Load 4
Mao, 3
MIT), 1
NULL2 1
Overhead 3
Meltdown 2
Looping 1
Nope, 1
Pthread_create(&p1, 5
OPT 4
Spin 7
Pthread_mutex_lock(&c->lock); 6
Nethercote, 1
Marco 2
Multi-Level 4
Hall/CRC 2
NTERLUDE 35
PHit 1
January, 2
Memory 58
IBM, 1
PACES 8
Only 10
Longer 1
Over 6
List_Pop() 1
Metha 2
Miscellaneous 1
Priority(B), 4
Object-Caching 1
PTE. 3
Keep 4
Looping-Sequential 1
McCarthy. 2
Mac. 1
Nice. 1
PageTable[1] 1
Moseley, 1
MAX_HEAP_SIZE; 1
November 10
R.H. 1
PC 16
Spin-waiting 2
Putting 1
No 10
Mattson, 1
Multi-level 7
Hardware/Software 1
Oh, 1
PREMATURE 1
Just 15
Multi-Threaded 2
INUX 1
PDIndex 1
Oops! 2
May 11
PROGRAMMER 1
M. 35
Multics. 1
Morse. 1
Pthread_cond_signal(&fill); 2
Operation 1
PageDirBase 1
LRU-like 1
M.I.T., 1
McCarthy’s 2
Michael, 2
Nucleus. 1
Patterson. 2
Network 1
MB) 1
ONTROL 8
R4000 5
PINNING 2
Success! 1
Questions 26
Novark, 1
Maurice, 1
NIX! 1
I/Os. 1
Orwell. 2
PTE, 6
L1) 1
Multi-threaded 1
Idea1 1
Palo 1
Orran 1
McCarthy, 2
PTEs 3
MB, 1
NIX 55
Most-Recently-Used 1
NOW 1
PAT, 1
Part 6
Leonard 2
MORTIZATION 1
Menace 1
Microsoft) 1
Or, 7
Pons. 1
New 9
MIT. 1
OO 1
RINCIPLE 2
POSIX 20
Sullivan, 1
RY 1
O. 1
Measure 5
NOMALY 1
Included 1
Orwell’s 1
Passing 2
L78]. 1
Multiprogrammed 5
International, 2
Patent 1
Other 15
Membrane 1
PTIndex 1
MIN). 1
Neither 1
Pthread_mutex_lock(&m); 6
NVERSION 1
PDP-10” 2
Processes 8
Let 18
Microsystems. 1
Molnar 1
NULL); 35
P1, 2
Previously, 1
Nickolai 4
MIT’s 1
P. 12
Raiders, 2
PPLICATION 1
TORE 1
Rachid 2
OCK 16
Measurement, 1
OCKS 23
Inserts 2
P3 1
Quarterly, 1
LLUSION 1
NTRODUCTION 59
Johnstone, 2
Patterson, 1
Ousterhout 3
NULL, 20
Page” 2
MMU, 1
Nelson 1
Q0 13
Node_t; 1
PD_SHIFT 1
Processing: 2
Like 6
Mitchell. 1
Must 2
NUTH 1
PFN) 2
Priority, 1
Nuclear 1
MUTUAL 1
PEED 1
RaiseException(PROTECTION_FAULT) 9
PTE.ProtectBits) 3
Tf 1
Rafael 1
OLUTIONS 1
Mesa, 1
OS. 26
Instead 20
PCD, 1
RUN 5
Lampson, 2
Nancy 2
Joint 5
PowerPC, 3
P2 3
Nobel-prize 1
Particularly 1
McCarthy 2
ROBLEM 4
Performance” 1
Now 79
Producers 1
O 247
MIPS, 2
Mudge. 1
NIX: 1
Nethercote. 1
Parallel 3
Pthread_mutex_unlock(&c->lock); 6
OMPILED 1
Manual: 3
PETERSON’S 1
Recollections 1
PTEs). 1
They 5
Relational 1
OMPARING 1
Microsystems 1
OS’s 4
Intel, 2
PTE: 1
Lanigan, 4
Ready 58
Narrow 1
July 4
Provides 1
PRIORITY 1
Padegs. 1
Plenty 1
Miss? 1
Random 21
Pioneers, 1
OAD 1
Project 3
ORRECT 2
MM00]. 2
Multics” 1
Neely, 2
Nimrod 1
Peanut 2
Python, 2
P1) 1
Memory” 1
PT: 2
Ritchie. 1
Pathfinder. 2
Transforming 1
Tucker, 1
Two 11
Warburg 1
ON 12
MongoDB, 1
Ousterhout. 3
Interscience, 1
Problems” 1
Late 1
Recheck 1
Node_t 1
KB). 1
Pthread_join(p1, 5
Numbering 1
Paging, 1
Pthread_cond_wait(&c, 3
Monitors 1
Recent 1
Prediction 1
OK: 1
Pthread_create(&p2, 5
OSDI 10
Main 1
NDETERMINATE 1
Next 2
Nir 2
Power 1
Quarterman. 1
PFN_SHIFT) 1
Minimally, 3
Peterson. 2
SSD, 1
Perhaps 15
Resort, 2
Win, 2
OOLS 1
NCREMENTALISM 1
Ousterhout’s 2
I’d 1
Processes, 1
List_Init(list_t 4
Riak. 1
Non-Cooperative 1
KB-64 1
RAM, 1
OES 1
Priority 4
Queue_Enqueue(queue_t 2
Mythical 1
Required 1
Problem 3
ONSIDER 1
Pthread_mutex_lock(pthread_mutex_t 2
One”. 1
Malcolm 1
NUMPAGES 2
Nucleus 2
No, 2
Pthread_join(p2, 5
Quote 1
PTEs. 1
Mozilla 1
Peterson’s 6
Schedulability 1
Phoebe 1
Rules 5
X/macOS 1
OS; 8
ND 10
I” 1
Professor 5
MALICIOUS 1
P 280
O(log 1
Run 68
KPTI, 1
REAT 3
OFFSET 1
Professor? 1
RADE 1
NGINEERS 1
Running 24
Processes: 1
O_CREAT|O_WRONLY|O_TRUNC, 1
RE 1
OpenSolaris 1
Manchester; 1
Now, 26
Old 2
Notes 4
Publishers, 1
RAM. 1
Parent 6
Mutual 4
Placing 1
Search 2
Pointed 2
S.Sahni). 2
X11 1
On 21
Namely, 1
Jing 1
Programming 15
Macintosh 2
P4, 1
OK? 2
S_IRWXU); 2
L->head; 8
RaiseException(PAGE_FAULT) 1
OPTIMIZATION 1
Q1 15
REE 19
NIX, 2
S. 22
Q 12
O_WRONLY|O_CREAT|O_TRUNC, 1
Rago. 4
P1’s 1
Manifesto” 1
OLICY 4
Orr, 1
Number 8
RDLK 2
RANSLATIONS 15
Pass(B) 1
Point 1
Problems: 1
Server” 1
Positive 1
SJF/STCF) 1
Yuanyuan 2
P=0 1
Naval 1
Joyce. 1
Q2 9
Maurice 2
PAGES 2
OS). 2
Section 1
LATER, 1
Randall. 1
Offset 15
Randell 1
Read 38
NIX-based 6
SECTION, 1
Quicksort, 1
Organization” 1
Overflow 1
PD 2
PDEAddr 2
ONCURRENT 16
PC, 7
OOK 1
RR) 1
README 20
Netzer 2
Policy: 2
Pthread_cond_signal(&cond); 6
Simple, 1
Proceedings 2
Saying 1
[AC97]. 1
PAGE 6
Neumann 2
KB; 2
RISC-like 3
McDougall. 3
PDPTA’97, 1
Shedler. 1
LLOCATE 1
Rate 4
Overflows 1
OSTEP. 166
Reese’s 1
Read-Execute 1
NULL 20
SN 3
RANSFER 1
Regions 1
Pacific 3
Memory, 1
PID). 1
OOPERATION 1
POSIX, 2
OPERATING 42
RUNNING, 1
ROM 2
ODE 2
Presented 1
Pthread_mutex_init(&c->lock, 2
Sometimes 9
Recall 9
Sharing” 1
[B+18], 1
PID 5
No-eXecute), 1
Lampson. 2
RR? 1
McKusick, 1
PFN, 1
Solomon. 2
Later, 2
Rudolf 1
O’Reilly, 2
Overlap 2
References 28
Reduced 2
NeXTStep 1
Saavedra-Barrera. 1
REATE 2
Revolution 1
Pfaff, 1
MenuMeters 1
Phipps 1
OR’d 1
Perl, 2
OSTS 1
Random, 5
Recovery” 1
OFTWARE 1
Programmer’s 2
Protected 1
Spectre 3
Relocated 2
Software 7
Sorry, 1
PM 4
OFFSET_MASK 7
Lampson’s 1
Limited 6
Line 3
Pages 5
Stack? 1
Lee. 1
SET 2
PDE. 1
P.M. 1
SJF/STCF 1
Report 2
Negative-Growth 1
Said 1
REEMPTIVE 1
Scalable 10
Preemption-safe 2
Mesa” 1
Prentice-Hall, 7
Orleans, 1
PhysAddr 8
Operating 38
Readings 1
Remove 2
Oregon. 1
R.P. 1
Pthread_mutex_unlock(&mutex); 8
Stack 14
[B89, 2
Stalin 2
Page 39
OOT 1
RUNNABLE, 1
Measurement 2
S 379
Locks, 1
Paging: 4
Statement 1
List_Init(&H->lists[i]); 2
Schedulers: 1
PTE.PFN, 3
PACE 21
San 12
SEG_SHIFT 1
Nelson, 1
Scaling 6
RISC 14
Shared 2
Prefetching 1
Modern 3
Priority(A) 4
P0 4
Plot 1
O’Hallaron. 2
Reprinted 1
Return-into-libc 2
Out 2
R10k 1
Quanta 1
Stan 1
[CP78] 1
Stride 4
Pal 1
OPT? 1
Recommended 1
Mesa 4
SEG_MASK) 2
Mangard. 1
Peterson 2
Steven 1
List_Insert(&H->lists[key 2
Set 6
PTIMAL 1
PDE 8
Santiago, 1
SIGNALING 1
Nevada, 1
Scientific 1
ROP 3
Sleeping 3
Primer 1
Navarro, 1
Proc 14
Parts”.) 2
Priority] 2
O’Reilly. 2
Research 3
Robert 9
PAGESIZE 1
ROPORTIONALLY 1
Random) 1
Sun 5
[D97]. 1
TECHNICAL 1
Pathfinder/Authoritative 2
Open 2
Repair 1
Mike 2
Saavedra-Barrera 1
Maxwell’s 2
Policy 6
Storage 10
Load-Linked 2
Sharing 12
Per 5
PIECES 38
Similarly, 6
STCF, 1
Non-Coalesced 1
Shacham, 1
RaiseException(TLB_MISS) 1
Software-based 1
Process0 12
Needed 1
Pthread_cond_wait(&c); 1
Patterson 2
Process 35
PLDI 3
Running, 1
SIGINT 2
PTBR 5
Randomization” 1
Recognized 1
Tb 2
[Free] 1
TERMS 1
Physical 13
PCs, 2
Replacements 1
NUMCPUS; 4
Segment 10
McKinley, 1
Portland, 1
Swapping, 1
Load-linked 2
Signals; 1
Pick 3
Page-Reference 1
Single 7
Short, 2
OK! 2
Shortly, 1
Ratios” 1
Solution: 1
Professor, 1
OSSpinLock 2
Read-Write 2
Perry. 1
Processor” 1
PTE 17
Russ 1
SIGTSTP 1
PTE.present 1
Reboots 1
Relocation: 2
Threading 2
[J91]. 1
THREADS 1
Processing 5
Paul 3
SJF 21
NX 1
Share 4
Mechanisms 3
Problem” 3
TLBs 10
Locks”) 2
Smotherman. 1
Pren-tice 1
Patt 1
Slab 1
Shortest 6
Obtaining 1
Sood, 2
Reducing 1
Sorin, 1
Programmers 4
Once 41
Ott. 1
Peter 5
Producer/Consumer 5
PTHREAD_COND_INITIALIZER; 3
Say 2
SOMETHING 1
PTHREAD_MUTEX_INITIALIZER; 7
Review, 3
S). 2
Tickets? 1
[LL82] 4
TLB) 3
Professor: 37
Performance 11
SLEEPING, 1
OK, 11
South 1
Morris, 4
Process1 9
Ta 3
MIN 1
Smotherman’s 1
Protection 7
Pieces 2
So 30
Signaling 2
O’Hallaron 2
Special 1
Relationships, 1
Spin(), 1
ROCESS 30
Reese 1
PAT 1
Pons 1
Purify 1
Page, 1
Schroeder. 1
Schwarz, 1
PTIMIZATION 1
S+03] 1
SDS 2
Trans. 2
[M07]. 1
TLB-miss 1
Programming: 3
Pollack, 1
STDOUT 1
ORE 2
Spectrum 1
Neat 1
Protection) 1
Tuning 1
Mauro 2
Space 20
Pthread_mutex_lock(&mutex); 8
Pillay. 1
Sometimes, 9
Silas 3
O’Reilly 3
Stanford 1
Review” 2
Spin(1); 2
Ritchie, 1
PDE, 1
RPACI 154
Poor 1
Quantitative 2
PageTable[39] 1
Scott 10
Segmentation 3
Separating 1
SHIFT 8
SER 1
Tricky 2
[R97] 2
Technical 4
Pthread_cond_signal(&c); 4
Positive? 2
Sequin. 1
OSes, 1
Student, 1
Non-compacted 1
Python. 1
Types 1
Microsoft’s 1
Thomas 3
Q6 1
Portable 1
Sun, 2
Simpler 2
PTE.PFN 1
Starts 1
Ritchie) 1
Stephen 4
River, 1
PageTableBaseRegister 1
Ranganathan, 1
PowerPC 1
RAIDs, 1
Pass(A) 1
Segmentation” 1
PT_MASK) 1
She’s 1
SN_SHIFT 1
SHIFT, 1
Typical 1
[S+04] 1
Than 1
Pthread_cond_wait(&cond, 6
Protocol 3
Shacham. 2
OUBT, 1
Such 16
OK. 2
Q1. 1
Morgan 6
U 89
Turner, 1
ROCESSES 1
Press, 7
T. 14
Solaris” 1
PWT 1
State 12
SGI. 1
Support: 1
Seward. 1
Patt, 1
Ready: 1
Prints 1
ROP. 1
Perspective” 5
Specification, 1
Ph.D. 3
Sizes 1
STCF. 1
Shan 2
UCB/CSD-92-684, 1
[SHW11]. 1
Threads 5
Pthread_mutex_lock(&lock); 6
Queue_Dequeue(queue_t 2
Steinberg 1
OW 34
T3, 4
OLICIES 16
RR, 1
Mysterious 1
VMM-level 1
UK, 2
Rashid, 1
Process: 2
Sounds 6
Perfection, 1
TLB 173
Student: 36
SJF. 2
Switzerland 1
Single-Queue 1
Persistence 1
Relocation” 1
Probability” 1
RUX 33
Processing, 1
Stanford, 1
Physics), 1
Slutz, 1
Saint-Exupery 1
Simple 29
[Y+18]), 1
UTUAL 1
RISC, 2
USSEAU 154
Queues: 2
Stoica 1
Otherwise, 1
THER 1
ONCURRENCY 3
Randell. 1
NTERRUPT 1
WAIT 1
Unfortunately, 37
Refers 1
Producer/Consumer: 3
Staelin, 1
Pioneered 1
TORAGE 1
Supervisor” 1
Sanzi, 1
Systems” 7
Some 25
Prof. 1
Remember 5
Pthread_cond_wait(&fill, 2
Recall, 1
Proportional 2
Store-Conditional” 2
Policies 3
So, 1
Scheduler” 2
Smaalders. 2
__lock_t 8
VMS), 1
RaiseException(SEGMENTATION_FAULT) 5
Understanding 2
R 21
Structures” 2
P6 1
Texas. 2
Relocation 1
NULL) 6
Wait 1
ORG 166
Unknown.. 1
Remzi 6
Put 4
Stallman 1
Probably 11
Tb, 1
Symbiosis” 1
Scalability 3
TLBWR, 1
Sopena. 1
Pthread_create(&p, 5
Repeatedly 1
Pthread_mutex_unlock(&lock); 6
Record 1
Proportional-Share 3
Sun). 1
Principles” 2
Sriram 2
Simply 3
Spider-Man: 2
abstraction 15
Va4 2
Reclaim 1
V 31
RIORITY 1
TO 26
PID) 1
Time-Shared 1
Replacement 6
STACK: 2
XCLUSION 1
OSes. 1
Unlock 2
River” 1
ROCEDURE 1
Support” 1
Pthread_join(p, 4
Times 1
Systems.’ 1
Scheduled 1
Thanks. 1
States 1
Q4 1
Replacement” 1
Published 1
Responsibility” 1
Proportional-share 1
Surveys, 1
Program 20
Start 5
Smotherman 1
Spurious 1
accessed? 1
Was 1
Restoring 1
VICT 1
VMS 16
Tamil, 1
Tc, 1
Tracking 1
OBS 1
STCF 8
Zel-dovich 1
PDBR 2
Until 3
Runs? 1
ROPORTIONAL 13
T1). 4
RACE 1
To? 1
THE 9
Science). 1
There? 1
Stevens, 2
Queue 8
Response 3
R. 33
Right! 1
Pthread_cond_signal(&empty); 2
Swift 2
Pthread_create(&c, 2
Store-Conditional 2
Splitting 1
Stallman. 2
accessible, 1
Windows 10
Resulting 4
RR. 2
W.C. 1
PPROPRIATE 1
Those 2
USTERHOUT 1
ONDITION 1
Shah, 2
To 152
PD_MASK) 1
VAX-11/780 1
S09]. 2
RTFM 2
TLB: 2
RANSLATION 15
Together 1
TLBs, 6
Setup 1
Tickets 1
Storage” 1
RAND 5
Rings, 1
RAID 1
S, 6
Q8 1
System/370” 1
Queue_Init(queue_t 2
Store-conditional 2
Staelin. 1
Structuring 1
acquire/release 2
Woodlands 1
Richard 9
Randal 1
WAPPING 1
Page-Fault 2
V.A. 1
ONG 1
Zonkey), 1
Sharedmemory 1
Trees 1
PTHREAD 4
Va5 3
SHIFT) 8
Relocation) 2
Thesis, 1
ROGRAMS 1
Translations 2
TM 2
Silicon 1
Trap 2
StoreConditional(int 2
REMATURE 1
Round-Robin 1
RAM 5
SCHEDULER 1
ROVIDE 1
TestAndSet(flag, 4
Queues 4
Summary 30
Status: 1
Susan 1
acquired, 2
Write 11
SUPPORT 1
Rather, 4
Weaver, 2
Physical) 1
Von 2
OPERATIONS 1
[B+79] 1
Short 1
Tresponse 1
Paperbacks, 1
Virtually 5
Secure 1
Research, 2
Traiger. 1
Race 2
Trevor 1
Similar 3
U/S 1
Red-Black 2
Run: 2
Reese, 1
SEFUL 2
Rago 1
ULL 1
R/W 1
Survey 3
Stick 1
Switches 1
actual 15
Yale 1
Secker 2
Results 1
T 378
Wikipedia? 2
Processor-Memory 1
WAITING 1
OU 1
[B94]. 1
The 821
Single-Threaded 2
Tron 1
Pilot 5
Wulf. 1
Semantics 3
Restartable 1
Turns 2
Resources 2
UIDELINES 1
Simulation, 1
USA. 1
Register 8
SJCC, 1
Ronald 1
SEG 2
Raiders” 2
URL: 1
Raging 1
TLB, 21
Structures: 1
Synthesis 1
advocates 1
[3] 1
See 43
SWITCH 6
T2. 4
Wiley, 1
Protection” 1
OWERFUL 1
[C93]. 1
Through 1
Smaller 1
WWW. 166
VM 18
Prentice-Hall 1
[4] 1
September 13
Restricted 1
USENIX 8
Running: 1
University 6
Sitaram 1
VA 1
Reuter. 2
SJF, 4
SPINNING: 1
SPARCv9). 1
Really 3
USE 3
Redell 2
TLBWI, 1
Superpages” 1
TV 1
affinity 8
[B89] 2
Seems 1
SYNCHRONIZATION 1
Tc1, 2
Woke 1
Q5 1
Operations 3
[HJ92] 2
Timer 1
Stored? 1
Wahbe, 1
VMMs 1
Pretty 8
[AC97] 1
Shedler 1
Roscoe. 1
UST 1
Scott. 4
Upon 3
Standard 2
VAX-11/750. 1
Save 2
SIDE 40
Scheduling: 6
Scheduler 5
RetryInstruction() 4
Redirection 1
Use 35
Tcompletion 2
THINK 1
Thread2 6
again: 2
[D+13] 2
algorithms 26
Schedulers 1
Tel-Aviv, 1
Xerox 2
Rather 1
P4 1
[J16], 1
Underlying 3
Structure” 1
Waiting 8
WARY 4
Pthread 11
[B,C 2
[BH73] 2
Routines 3
WITH 1
Segregated 1
VAX/VMS. 1
Steinberg. 1
Valgrind 2
Scan-resistant 1
SOSP 9
Sleeping) 1
Seg 1
SOLATION 1
Reduce 1
User’s 4
Time” 1
TLBP, 1
Threads? 2
Shared-Memory 4
[E95] 1
annotate 2
Seward, 1
Tix:50 1
Zeldovich. 2
Redell. 1
PDP 1
[K+61] 2
PFN 43
Switching 4
Were 2
Wanted 2
Pthread_cond_wait(&empty, 2
Star.” 1
[C03]. 1
S.J. 1
Wales 1
Sequential 2
VAXen 1
Strachey. 1
W 17
Should 4
SPARC, 3
Sorry! 1
Showing 1
Soon 2
Reeves. 2
VirtualAddress 7
Timothy 1
TLB_Insert(VPN, 3
Threads” 6
Shared-memory 1
[H74] 1
anymore? 1
Sorry3 1
U.C. 2
[C69], 1
Redell’s 1
Unsafe” 2
[LL82]; 1
PT 2
TLB. 13
Which 12
Work 1
Q7 1
Steve 4
[CD85] 1
SIZESORT-) 1
Size 10
VMS, 1
Strachey’s 1
We 166
WITCHES 1
Stoica, 1
Saltzer 1
Spinning: 2
Sadly, 2
Spaces 3
Registers 1
WRONG 1
Tudor 2
TLBs) 1
Tim 2
Shavit. 2
[HP06]), 1
approach, 25
Speaking 1
UEUE 11
[CM00]. 1
SPINNING 1
VPN=0 1
[MM03] 1
PTEAddr 6
TLBs; 1
Within 4
Workload 11
REASON 1
Surprisingly, 1
[D97] 1
SPARC 9
State: 2
VPN. 1
Structure 3
Whew! 1
Watch 4
Subsequent 1
Scheduling” 1
Stanley 1
Scientists 1
Streams 1
Represent 1
Waiting: 2
UILD 3
TR-95-22, 1
Tony 1
Shavit’s 4
[J09] 1
arose 5
Sploitfun. 1
US, 1
[H61, 1
SSDs) 1
Working 2
[MS96]. 1
Patel. 1
TLB’s 1
Yupu 2
Yield, 4
RITICAL 1
Rajimwale, 1
[G85] 1
STCF) 2
Strategies 2
VPNs; 1
Synchronization” 2
Wilson 2
Whether 4
Then 17
Server. 1
Stockholm, 2
Served 1
System: 1
Rule 14
Wakeup 2
University, 2
TRUCTURE 3
UPPORT 2
Solaris 18
[M06] 1
array; 1
Sun.. 2
Unused 2
[HP06] 2
Same 2
Wrapper 2
[O11], 1
Pennsylvania, 2
TestAndSet() 6
[C69]) 1
[B72] 1
Swap-Based 1
Report, 2
[H93] 4
Thus, 206
Supporting 1
Vegas, 1
System, 2
Why? 5
With 82
Though 5
Singh, 1
Sure! 1
Servers” 1
TOPLAS, 2
SE 11
YBRIDS 1
VPN: 1
Technische 2
VERLAP 1
Solution 5
[M15] 4
asleep 3
Sweden, 2
Useful 1
[W+95]. 2
Sanjay 1
YNAMIC 1
[TTG95] 1
Personal 2
[CSG99], 1
[CP78]) 1
T3 8
Resource 4
Sleep 40
[J91] 1
Tom 2
Swaminathan 2
What’s 4
T1, 12
Wikipedia 3
Word 1
Time 29
Slow 1
TEST 2
Solaris, 7
Tc1). 1
SS+10]) 1
[BJ81] 1
We’re 1
Think 12
Va3 2
Soyeon 2
[W95]. 1
assume, 2
Switch 3
VAX/VMS 11
[WG00] 3
Scheduling 12
YPES 2
[W06] 1
Plus 1
[D72]. 1
[D70] 1
TCB. 2
Responsibilities 1
Small 2
[M07] 1
Tp, 1
Swap 4
[A90] 1
TOOLS 1
Workstations” 1
Worried 1
Today’s 1
System 37
TLBR, 1
Sound 2
That’s 6
SSD. 1
[FLR98] 1
Who 4
Traffic” 1
Wanjohi: 1
Stretch 1
a[2] 2
batches 1
Synchronization 8
__queue_t 2
VPN 69
Science, 1
[B+10]; 2
[W15] 1
Presumably 1
[L+13] 2
[E06] 1
TILIZATION 1
Round 3
Study 8
[SHW11] 1
Tree 1
Swift. 2
[B94]; 1
TRUCTURES 17
Yield 2
Worse, 3
Torvalds 1
T1 30
TLB_Lookup(VPN) 4
Sundararaman, 4
Try 11
SYSTEMS 42
[FP89]. 1
[AD03]. 1
Transitions 1
Weaver 1
Subramanian, 3
accounting 4
Systems: 6
a[1], 1
been 100
WWW.OSTEP.ORG 42
Segments 2
[B+79], 1
__hash_t 2
Problems 1
[L78] 3
[G04] 1
TIP: 9
Saving 1
Summer 1
[SN05]. 1
Tricks 1
T2), 2
[BC05] 3
TeX 1
Zorn. 1
XD 1
Trace 9
TAKE 1
Tc2). 1
Swapping 1
ULTIPLE 2
Security 2
[HP06]). 1
[B+18] 1
ULTI 11
Weiwei 2
Suli 1
accuracy 1
T2, 4
abilities 1
bit; 1
Well 1
Shasha. 1
[BS+09] 1
a4 1
Pthread_mutex_unlock(&m); 6
[M11], 1
[I11] 2
TS 1
Second, 31
Swift, 1
a[3] 1
UNIX-based 1
TABLES 15
[BC91]; 1
Tell 1
[B+13]. 1
ZFS) 1
Translation 5
TOCS, 3
Technique: 1
Tc2 7
URSE 1
Self-Tuning, 1
[K64] 1
[B+72] 2
ULTIPROCESSOR 12
Wilson. 1
Support 9
across 30
Tc2) 2
about; 3
break), 1
Werthman. 1
Specific 1
[C06] 2
about: 1
Q3 1
[N+02] 1
[MM03]. 1
Table? 1
Segmentation: 1
Techniques 2
above? 3
VALID 3
TPDS 1
[BH00] 1
Texas, 1
[C95]. 1
[B+18]. 1
Trials 1
Take 2
Times?” 2
Thanks 5
User 14
Spending 1
[KL88]. 1
[C+62] 2
Unfairness 1
Wilson’s 1
TLB; 1
adjust 1
TestAndSet(int 2
above) 6
buffer 43
Spin-based 1
[C54,PV56] 1
achieve 12
Queues, 2
What 214
[N+07]; 1
[RK68] 1
Third, 5
Space-time 1
Terminology 1
access: 1
Values 2
Tables 9
[CK68]. 1
That 14
[E95], 1
[BB+72], 1
Undoubtedly 1
Tarrival 3
Tix:100 1
Trace: 4
Vol. 5
Stack11 2
[L09] 4
[DD68] 1
VAX-11 4
Wisconsin—Madison, 1
TeX, 2
advantage 14
Too 3
accesses, 4
bugs) 1
Spinning 4
[CD85]), 1
acquisition, 2
RR 14
Without 15
[WW94] 1
[TTG95]. 1
Turning 2
Stevens 6
Test-And-Set 2
accomplished 9
Waldspurger 6
Then, 19
[JS94] 1
Tomlinson. 2
[H74], 1
[CV65] 2
VAX 5
Test-and-set, 2
True 1
Trigonakis. 2
WITCH 1
Stodolsky, 1
[L81] 4
[JM98]. 1
VLSI 1
Worse: 2
Theodorus 2
alloc 1
Transparent 2
addr:10 1
building, 1
Support) 1
[L78]. 2
activities 3
RSS, 2
XIST, 1
a2 1
[W06]. 1
Typically, 2
Still 5
Test-and-set 4
accuracy/performance 2
X-windows 1
Therein, 1
[M11]; 1
Tools 1
[J09], 1
[GR92] 2
VM, 3
Up 2
UNUSED, 1
True) 9
WORST 1
SunOS 1
[LM+89] 1
[JS94], 1
Waldspurger. 2
[2] 2
TlbEntry) 4
alright 1
U.S.S.R; 1
advanced 7
bx 2
Systems. 1
[P+95] 1
add, 3
Real 3
Zebra 1
affords. 1
[W15]. 1
UNSW-CSE-TR-0321, 1
Summary: 2
These 24
accurate); 2
Yandong 3
Things. 1
[MS91] 2
Uman 3
[M+70] 1
[K65]. 1
VPN; 2
VPN=42. 1
Unfortunately 1
Turn 1
Worst 2
Systems 18
[Low 1
[K65] 1
Waldspurger’s 1
[B97] 2
Tolerance 1
amortize 2
Undefined 1
allowed. 1
c->global; 2
T2 38
addl 2
[VERSION 42
Referring 1
Zuckerberg 1
ahead 8
accomplish 9
VPNs 5
Sumner. 4
Transactions 3
action. 1
Yes? 1
Third 1
[O49]. 1
VM. 1
[M06], 1
[L09, 2
Vasileios 2
Van 4
VAX/VMS, 2
USA 1
YNCHRONIZATION 1
TD 2
[M62] 1
THREAD 12
Wanjohi. 1
[BNS69] 1
Uh 2
amt) 2
Users 2
altering 1
c->local[i] 2
TR 1
addresses). 1
Region 1
[B+96] 2
algorithm, 8
achieves; 1
Va0 3
TABLE 2
Turing 5
addition 13
You’ll 3
TimeSharing 1
[SR05] 6
VPN_SHIFT 1
[MS98]. 2
[LM+89, 1
Wait: 1
Vancouver, 5
VMWare’s 1
UT 1
Yes. 1
[M28]? 1
[P10]); 1
When, 1
[C+04] 1
THREE 37
VAX’s 1
analogy 1
VMware 1
arcane, 1
Technique 1
calling 55
affinity; 1
Requirements 3
[B75]. 1
algorithmic 1
acquiring 22
Virtual 12
Table 18
UNESCO, 1
addresses. 4
Zeedonk 1
Tp). 1
[WG00], 1
Wei, 1
[SS74]. 1
[M83], 1
We’ll 38
Virtualization 5
VPN, 2
VAX/VMS), 1
Zero” 1
[O16] 1
[RL81]. 2
Wow! 1
[C69] 1
Takes 2
VPN=39 1
answer; 3
Visualization 1
architectures 2
Thompson. 1
capacity, 1
algorithm. 2
Rewritten 2
[CK68] 1
allocate(100), 1
ago, 5
WORST)? 1
Tc1 9
Uncontrolled 2
advice 4
[BB+72] 1
Traditional 2
[virtual 5
Xiong, 2
[W17] 2
[MS04] 2
Whereas 3
Visually, 1
Well, 27
VS 1
[CG68, 1
[SR05], 3
__list_t 2
[C03] 1
[D68] 7
Techni-cal 1
Value 1
approximate! 2
Warm-start 1
arguments 23
Time-to-Completion 2
card 1
allocated, 2
Runtime 1
[D82]. 1
allocate. 1
akin 2
Waciuma 1
Thrashing 1
VARIABLES 18
[BH00]. 2
again, 31
UMMARY 3
a[i] 1
Yes 1
[W95]: 1
[O16]. 1
William 3
[AD03] 1
W. 18
Va2 2
[FP89] 1
a[5] 1
a[4] 1
[CS97] 2
[DV66], 1
a 3927
Techniques” 2
Vyssotsky. 2
approximation 1
We’ve 2
astute 2
Tix:250 1
chan 1
When 122
SQMS 7
[D91]. 2
alternates 1
all... 1
Weihl. 1
Time-Sharing 8
Variables 3
[BS+09, 1
amazingly 3
UPERUSER 1
abbreviated) 1
York, 6
__Node_t 2
[O45], 1
XECUTION 15
[G+17]. 1
Weihl, 2
Virtual-Storage 1
[K68]. 1
ability 11
above 50
[DV66] 3
[G83] 1
about-to-be-run 4
Wilkes. 1
There 42
architectural 2
attention 10
Transformers 1
anon) 1
This 201
YSTEM 2
STRUCTURES 16
[K+15] 1
alternatives! 1
analysis” 1
Wood. 1
Tracing 8
WHILE 2
[CG68] 1
another; 1
Usually, 3
abilities, 1
[A91]. 1
__node_t 10
[O72], 1
YOUR 1
[JM98] 1
Whichever 1
Wow, 2
[KL88] 1
accessible 3
abstractions 7
[E06]; 1
[GR92]. 2
accesses). 1
Wisconsin 1
array, 7
award-winning 1
Tturnaround 3
chapters 14
applications. 12
Thompson 1
Yet 2
Scotland, 2
[L11]. 1
amazing, 2
Specifically, 52
Y. 1
Unlike 5
Weihl 1
[M65] 1
[M83] 1
Valley. 1
above), 3
abused. 2
address-translation 4
advanced, 2
Your 1
[NS07] 1
[S07]. 1
[W03]. 1
[MB91]. 1
[N+02], 1
access; 1
[LR80] 1
[H91] 2
actively 4
Workshop 2
array-based 2
ask, 1
ULE 2
choosing 2
aren’t 5
Zhou, 2
[A79]) 1
[BOH10] 3
answers 3
Spectre. 1
Springer-Verlag, 1
VLDB 2
anti-gaming 1
While 31
[MS91]. 2
Vyssotsky, 1
[B72]. 1
accounting, 1
accrued 1
advantageous 1
You’re 2
While, 1
Write-back 1
[WL+93]. 1
achieving 7
[P81]. 2
accidentally 12
[M65]. 2
[I09] 4
adapted. 1
YOU 2
beguiling 1
assert(tmp 2
Using 19
chunks. 3
arg; 7
[O49] 1
Thread 95
[C63]. 1
anywhere 6
[AC97]; 1
Stan. 1
VPN_MASK) 7
appealing; 1
Winter 1
[O45] 1
We’d 1
[BC05, 2
[X+10] 2
accumulates 1
advent 1
[B+19] 1
Wikipedia. 1
[1] 2
access. 8
acquired 15
[RL81] 1
account 6
YSTEMS 203
[K+61,L78]. 1
address; 3
Yes, 9
beware 1
atomic. 2
VERY 1
clean). 1
arises. 2
[R69]; 1
Three 4
[EF78] 1
approach), 2
[B94] 1
Structures 6
Va1 2
appears 1
Y 3
and 2770
[O72] 1
Where 7
[D70]. 1
a; 4
acquisition. 4
age), 2
[C06]. 2
[A79] 1
address: 8
again. 24
[W02]. 1
[NM92] 2
activity 3
[B+00] 2
[KE+62, 1
addresses): 1
beyond), 1
You 89
attacks 5
Variable 2
clears 5
around, 4
[S09] 2
Time) 2
[G+17] 1
[MM00] 2
[BC05,G04]. 1
Sun. 2
Virtualizing 2
approaching 1
[CK+08] 1
ap-proaches 1
[O90] 1
Wish 2
[G04]. 1
accessible. 2
active; 2
algorithm; 2
[D70], 1
[B+13] 1
affected. 1
all), 1
[WW94], 1
[O90]. 1
alas, 3
[D65,D68] 2
[L60] 1
administrator 2
bit). 3
[AD00] 1
attempt, 2
Version 4
code? 9
art. 1
[W+95], 1
Transactions” 2
approximating 1
[PS81]. 1
[BC91] 1
Sun’s 1
Waiting-Line 1
appropriately 3
assembly, 3
applications, 6
[S05] 2
Yang, 1
[K68] 1
active 13
addr:20 2
all) 1
[H87] 1
[BH70] 2
again 58
am 16
a:100:100,b:100:50,c:100:50). 1
[S07], 1
allocator, 5
[D68]; 1
[LR80], 1
adopted 1
bodies 2
[B+19]. 1
backward, 1
Very 2
codes, 2
a3 1
Two-Phase 2
architecture 18
[S07] 2
[C93] 1
Systems, 3
Warehouse-scale 1
[D+13]. 2
attempts: 2
arise? 3
a[7] 2
Yet) 1
[MB91] 1
actuality, 1
advisors, 1
allocators. 3
[L83] 2
[BOH10]). 1
alternate 5
answering 1
absolute 6
[SN05] 1
anyhow). 1
[D72] 1
[MS04]. 8
affordable; 1
both) 1
[D01] 1
basic) 1
Virtual” 1
commonplace, 3
at 576
Two-phase 2
able 59
argument 22
Volume 35
[CK+08]. 1
System” 22
Wilson, 2
[E95]. 1
badly 1
arises, 4
about), 1
Zhiqiang 2
[P81] 2
adds 24
ago 1
already 28
[M28] 1
[C95] 1
alternatives. 2
anything, 5
accesses), 1
a:0,b:1,c:1 1
applicable 2
[G83]; 1
[S04]; 1
afterwards. 1
brutal, 1
[H87]. 1
become 32
Warburg, 1
compares 1
attributes. 2
[W03] 1
arrive: 1
address. 21
Voorhis. 1
[CSG99] 1
TENEX 3
Wouldn’t 1
[H74]. 2
behaves. 5
arranges 1
abuse 1
[BJ81]. 1
[P90] 1
adios, 1
agreed-upon 1
amazingly!), 1
[M82] 2
[CS94]. 1
amazed. 1
appeared, 1
actions. 1
access, 9
approach? 3
[KR88] 2
[SS+10] 1
ahead. 1
bus, 1
[K+96] 2
beginning: 1
Weighting 1
completes. 4
axis 4
[WL+93] 1
assert(count 2
administrators 2
[CV65,DD68]) 1
Why 28
This, 2
XITS 1
[LR80]; 1
behaviors) 1
array[1000]; 1
accept 2
[CS94] 1
[RK68]. 1
affairs 1
allocated. 5
amount. 2
[S+04]), 1
[J16] 1
analyses 1
applies 1
actively-used 1
action 15
args 8
actually 38
a:30:200 1
alas 1
bus-based 1
[S15], 1
behave 12
Wiggins. 1
completion 4
bad. 7
a1 1
assigning 1
alike. 1
[D65] 2
Will 6
Thus 24
XXX 2
[M+63] 2
bits: 1
aspects 10
accessed), 1
[EF78]) 1
accessing 36
affects 2
anytime 1
ancient 2
[S+11]). 2
[KE+62]. 1
apparently 1
added, 1
[M+70]. 1
array. 4
additions 1
a[1] 1
approach 138
algorithm: 2
butter 1
[W95] 1
benchmark 3
Wiggins’s 1
complexity, 1
bandwidth 3
a[9] 1
avalanche 1
all; 4
[G62] 1
Wood-lands 1
Ticket 3
Zeldovich 1
[R69] 1
blocks. 2
assumption 10
[S15] 1
[FLR98]. 1
accom-plish 1
allotment, 1
appearing 1
anticipate 1
[S04] 1
[L+75]. 1
approaches: 1
additionally 1
[Y+18] 1
array’s 1
address-space 5
archive, 1
accesses 47
allocator 26
c3 10
] 2
benefit. 1
Windows; 1
conceptualized 1
base/bounds 5
basics. 1
allocation. 7
[H61] 1
access 133
X 3
Tiny 1
[B86] 1
[S+03] 1
book! 1
atomic_decrement 2
[High 1
address>, 1
although 15
approach) 1
[V 166
anyhow, 2
[V+65,BH70]. 1
[L+93]. 2
arise, 4
accesses; 1
addresses 42
arrived 6
again? 2
assigned 7
according 3
altered 1
assume 80
a[i]; 1
bit, 10
X. 1
concerns? 2
basics 13
behaviors 2
allocators 9
[M+63]. 2
accesses)? 1
amount 37
Torrellas, 1
[CM00] 1
[S+68]), 1
books. 1
atomicity 8
[K64]. 1
administer 1
an- 1
approached 1
[W02] 2
anything 17
[VPN 11
[M04] 2
arrange 4
achieved, 1
adoption 1
assertion), 1
ahead, 3
call: 2
amortization 1
came 12
automate. 1
accommodate 4
block 22
ZOMBIE 1
book 47
be. 11
bits1 1
[M11] 2
Zelenka. 1
accesses?) 1
an-THREE 1
Tp 3
[CV65], 1
[S05]) 2
both? 2
author 2
[KE+62] 2
aforementioned 2
answer, 8
arrives; 1
[stack 1
application. 4
a[6] 1
[MS98] 2
arrangement, 1
ad 3
advantages 5
assumption: 1
allegorical 1
acquire 57
allow 22
always. 1
background. 2
accordingly. 3
condition3 1
Zwaenepoel, 1
born: 1
begin\n"); 5
breaking 1
[MS96] 2
[AD00]; 1
added 12
analyze 3
ULLER 1
[K+61,L78], 1
[S59] 2
bottom). 2
[L+75] 1
avoid 50
aggressive 3
approach. 8
articles 2
__counter_t 6
architectures, 1
accommodated. 1
[O11] 1
array[i] 1
addr:0 4
algorithm). 1
available, 11
active. 1
anything? 3
case: 4
and, 5
bases 2
acquires 8
conditions 9
[B+10] 3
bottleneck 1
books). 1
builds 1
[NM92]) 2
[BH70, 1
address, 7
UNIX 7
application 29
[LL82]. 3
[S68] 1
bowels 1
[L+93] 2
base-and-bounds 4
allotment 2
argc/argv 1
asking: 3
a+b,b+c,c+d,c+e,c-. 1
arguments, 5
accordingly 1
[P10] 1
aside: 1
address? 1
alloc()/free() 1
away; 1
actively) 1
arises: 1
cen-tral 1
another. 6
best 31
actions, 1
constructed, 1
[B66] 2
boost. 1
bounds 48
[anon 1
[BH73], 2
address-based 1
Unix 1
approaches. 2
[LM+89]; 1
c 177
[SN05]; 1
buffers? 1
[L83], 1
bash), 1
almost 13
arrives 4
assembly). 1
a:100:100,b:100:50,c:100:50) 1
arise. 3
address) 2
[PV56] 1
aspect 15
advances 1
allocating 19
beautiful, 1
adapt 1
assumes 14
chains 1
applied 5
body 2
address(es). 1
consume 5
[B75] 1
bottom 10
brk, 1
about, 2
[BNS69]. 1
advance 1
affected 1
arg: 1
[MS04], 2
after 54
business 1
above, 39
but 288
be, 2
alone! 1
assigned. 1
assume) 1
a[8] 1
arriving 2
addressed 2
[RT74] 1
assembly 13
all, 17
answers; 2
big; 1
address); 1
assumption. 2
challenges 2
appreciation 1
bounds”); 1
address). 1
consumer. 2
[D82] 1
bouncing 1
acceptance 2
[C+04]. 1
V. 3
argue 1
c4, 1
[S59, 1
alike, 1
bye, 1
[M82], 4
abundant, 1
byte). 1
amplifying 1
assistance. 1
assured 1
before 130
attackers 2
actions 18
admit 1
[SA96]. 1
associated 18
all-too-trusting 1
appreciate 1
bit. 5
addresses, 3
atomic_increment 2
both 87
arguments) 1
branch 3
addresses? 1
contents, 1
[D91] 2
box, 1
accessed, 12
[D01]; 1
VMS. 2
argv[1]; 1
cannot 21
[W+95] 4
allocation, 2
check. 4
[PP03] 2
achieved 1
c->value 4
available; 1
answer 29
attacks, 3
before!” 1
attention, 3
activate 1
adversely 1
[SS74] 1
awful! 1
appropriately-named 1
allocate 31
again!) 1
changed, 3
attain 3
briefly 7
array 46
buffer[fill_ptr] 1
alive, 1
contrast, 10
[G+95]. 1
buffer; 6
achieved. 3
[D68]. 2
Whenever 2
arise 12
caused. 1
[X+10], 2
choices. 1
[R97]! 2
allows 37
additional 15
cache). 1
avoided 2
anything. 1
avoided; 2
begin. 3
authors.. 4
ago: 1
agent 1
a1). 1
background 15
approximations 2
allocate(10). 1
aims 1
class 12
attainable, 1
broadly 1
ask 12
allocation). 2
control-c) 1
building 41
[L11] 1
bytes. 3
adding 35
[D70]), 1
Why, 1
arose: 1
chain 2
above; 7
chosen, 1
[SA96] 1
alternatives 4
addresses; 4
among 14
battle 1
appropriate) 1
awake. 1
belt, 1
base/bound 1
albeit 2
alas. 4
a:100:100,b:100:100,c:100:100) 1
base-and-bound 3
arg); 8
alternately 1
answer: 2
cleans 2
author. 1
close 11
assembly? 2
allowed), 1
costs. 1
built. 1
[LL82], 1
c2 10
address! 1
[G+95] 1
X, 1
arrangement 1
challenge 5
abstraction. 1
chucking 2
a:100:100,b:100:50, 1
candidates; 1
advantage. 1
and? 1
behavior, 3
arbitrary 13
best-case 1
better.” 1
algorithms). 1
all!), 3
basic 94
a[0] 2
big. 3
args->b); 4
animals 1
anyone 3
broken, 2
authors’ 1
code; 3
attaining 1
count++; 1
allowing 22
burden. 1
[QI15]. 1
caches. 1
admission 1
[G85], 1
Xerox. 1
array), 1
chapters) 1
accessibility 1
chunks 13
a[9]) 2
cast 4
age-old 1
approaches, 1
believe 5
bigger, 2
billions 1
bounce 1
along 10
allocator. 2
batch 7
about. 6
bit! 1
argument; 2
answered, 1
approximate 20
buffers 6
available 31
combat 2
attempt 14
counter: 1
always, 5
buying 2
[R+89] 1
carved 1
advertise 1
[H91]. 2
Years 4
cheating 1
accidental 1
cleaned 1
certainly 32
clearly 17
architectures: 2
bitwise 1
binary. 1
about 294
brag 4
all 247
alternately, 2
allocators; 1
behalf 2
abusing 1
bits. 2
arrays, 2
approach). 4
approximation? 1
c:100:50 1
avoid. 3
combining 7
away.” 1
course) 1
amortized. 1
cache: 1
[W09]. 2
caused 2
affecting 1
as 1029
[H93], 3
Zhang, 4
child? 2
accumulated 1
are: 2
choice 8
clock 11
arguments: 3
block, 2
boost, 1
above. 20
build, 2
allocations 8
alone 6
always 53
below) 3
accessed. 4
blocked, 3
arrive), 1
approaches? 1
architects 4
caching 9
back-and-forth 1
communication 2
axes. 2
credentials, 1
amt; 2
calculate 5
centralized 1
against 9
asked, 1
[I09]. 2
[C54] 1
chopped 5
accurate 2
arrays 5
class), 2
close(fd); 1
argv 3
book, 18
boots, 1
address 561
bx=1000,bx=1000 2
accessed 42
alternating 2
beneficial 1
achievement 1
another 105
book), 2
ask? 2
arbitrarily 2
arithmetic 2
also 213
call1 1
barest 1
compiler; 2
back-to-back 1
cycles). 2
another, 12
caller; 2
chances 4
ain’t 2
assumptions. 2
[N+07] 1
[C63] 1
chunks). 1
accustomed 1
aside, 2
classmates; 1
cloud), 1
array.c 2
bounds, 5
break. 1
affinity, 1
bytes), 3
accident 1
amt>0) 2
answer) 1
acquisition 6
answer! 1
boolean 2
asks, 1
args->a, 4
arrives. 2
am! 1
camp, 1
basi-cally 1
back. 2
computing 16
approximates 1
capacity 2
chapter. 25
atop 1
algorithm 34
[P+95]). 1
data 252
[DV66,V+65]. 1
clean 9
achieves 7
asks 4
client, 2
clustering, 1
aware 2
but, 1
broadcast 1
algorithms, 3
c->value++; 4
accomplishes 1
blocked. 2
answered 1
answers. 2
add 82
break; 5
atomics. 2
assign 3
assert(p 1
amount; 3
clean-page 2
be: 2
backward 1
concurrently-running 1
argc 1
careful, 3
characterize 1
attains 1
all. 9
[Page 2
datacenters, 1
[HP06]. 3
cloud-based 1
active, 2
assert 3
clustered 1
cmpl 1
basics; 1
c4 6
btrees. 1
allocation 24
account. 1
book). 5
appear 4
arbitrarily, 1
affect 10
call 230
attempts, 3
built 19
assignment, 3
assists 1
atomically; 2
attained 1
avoided. 2
beautiful 9
base); 1
concurrently. 1
argument: 2
cares 2
children, 3
attentive 1
amazing 9
[QI15] 1
daunting 1
[PS81] 1
company, 2
concern; 1
assumed 12
command, 4
co-exist 1
behalf. 1
call; 2
buffer[MAX]; 1
behavior 35
applications? 1
activity. 2
both), 1
are! 3
architecture. 4
again) 3
care! 2
baby 2
c->value--; 4
case 62
clever, 1
balanced 6
before. 7
based 17
consists 8
asking 4
cases? 2
circular 1
attribute 2
amounts 7
[S+11] 2
decision, 4
[SB92], 1
activity; 1
assumptions, 6
companies, 1
concurrent 80
co-workers 1
careful), 1
an 545
bytes, 10
below). 3
apply 1
addr 2
bounds). 1
area 5
architectures; 2
al-though 1
baby!” 2
assumptions? 1
cache, 11
caught 8
client. 1
bash, 1
begs 2
before, 7
controlled 8
aspiring 1
chaos 2
class? 2
authors. 1
anti-hero 1
[SB92] 1
defense 3
[V+65] 1
affinity. 4
atoi(argv[1]); 1
compared 7
concurrently; 1
code/stack/heap? 1
case; 3
anomalous 1
cache? 2
benefits 5
address), 1
approaches 31
breed 1
array.c) 1
argument. 2
al.’s 2
backwards, 1
automatically, 2
call); 1
chagrin 1
client’s 2
beauty 2
beyond 20
bidding. 1
correctly? 3
association 1
chosen. 1
clear. 2
balance. 1
any? 1
[W09] 2
describing 4
about) 1
design 22
attack: 1
completes? 1
connections 1
coherence 3
certainly, 1
answer? 3
caches, 5
bigger 19
addressed, 1
are. 4
bytes; 2
array: 1
arguments; 1
base/bounds) 2
allocated 46
auxw 1
campaign 1
challenging 6
cocoon, 1
behave? 4
blame 3
corruptions. 1
citations 1
atomic 25
code: 7
bit 93
basically 6
anymore, 1
a:30:200. 1
age; 1
above). 7
desktop 4
attempts 4
computers) 2
consist 2
collection 3
chips 3
answers, 2
call). 5
bolts, 1
admit, 1
arg, 2
cache. 9
asides 1
arrival 1
becomes 18
avoiding 16
awoken 3
can. 3
chapter), 1
command. 2
behaves, 1
boring 1
curious, 1
classic, 1
atomically. 2
common, 1
bits”. 1
basing 1
a[1]. 1
algorithms. 5
applications 29
accumulate 1
detector 1
average). 1
concepts, 1
constructing 3
com- 1
choice, 2
application; 1
called. 4
boosted 3
again; 3
arise2 1
caches; 1
ask: 2
also: 1
behaves 11
awesome 2
barons 1
case); 2
characteristics 2
commands; 1
behavior: 1
bottom, 2
behind 31
clustering. 1
attacks2 1
communicate 2
bombs, 1
batch-like 1
a[3], 1
allowed 8
appropriate 3
address> 1
devices). 1
away 12
contributed 1
concurrency 36
come–great 1
chosen). 1
approximately 1
caller 14
broadcast(), 1
al. 5
arose, 1
calamity. 1
attacks. 3
always!). 3
behavior. 4
begin 32
categories: 1
checking 6
compaction 3
back 65
currently-running 9
bounded 8
benefits: 1
codes 2
attempting 1
compact. 1
born. 1
below; 1
a[6]) 2
area. 1
analysis 5
differentiate 2
awesome! 1
convention 2
condition); 1
any 171
commands: 1
cloud 2
architecture, 4
carefully, 6
browser, 1
also, 1
arrive] 2
cannot? 1
auto-magically 1
analogous 1
behaviors; 1
cell 1
being 54
co-authors). 1
compete 1
beginning 15
deal 16
boxes 2
column 5
awesome, 3
comparison: 1
between 79
boundary; 1
better. 7
accesses. 5
arena 1
anyhow. 2
difficult 10
backwards 1
copies 12
construction 7
appetite, 1
commonly-used 2
cofounded 1
argument, 11
caution 1
altogether, 1
aside 4
careful 16
automatically 6
build 118
anonymous 4
benefits. 1
centers, 1
below, 2
codes. 2
compiled 6
behaviors. 2
demand-zero 1
bragging 2
commonly 13
b; 4
completion; 5
blocks, 1
break: 1
bit), 1
accused 1
architectures. 1
arises 21
dismantling 1
before? 2
correctly, 3
consumers, 2
applicable; 1
completes 6
comes 14
arise; 1
chapter, 16
anticipating 1
asleep, 1
carefully; 1
ax 4
bunch 6
anymore. 1
best-fit 7
chosen 5
better? 1
commercial 3
con- 1
big? 1
descriptor). 1
brilliant!” 1
commonplace 1
back, 4
complications 1
book? 1
brk 1
black). 1
act 3
are, 4
art 1
documentation 3
begins: 1
could, 1
contiguous; 1
approach: 5
concept 9
company 1
assert(rc 5
clear, 5
arising. 2
assumptions 14
challenges, 1
ax=0,ax=1 2
burst 3
argc, 23
bible 2
circumvent 1
biggest 4
complexity. 2
conclude 2
big” 1
determining 4
broken 1
communicating 3
became 21
comprises 1
bounds? 1
broader 1
blocked 16
addition, 4
argued, 1
dominant 4
assuming 25
better, 14
creators 1
correctness 9
big 44
concurrent) 2
compare-and-exchange 2
atomically 16
close(), 1
associative 1
authors 8
chance 4
ax=1,ax=0 2
buy 6
big!”, 1
around 42
clustering 3
billions) 1
constructed. 1
consumers. 1
binary, 1
developments 1
c2, 1
company). 1
began 4
condition. 8
brutal 1
buggy! 2
boot 11
addr:21 1
arguments. 4
dread: 1
attr, 4
crucial 2
arg. 2
costs? 1
confusing 2
competitive. 1
bits 70
attacker 4
combination 11
atomically, 2
auto-matically 1
chapter; 1
chooses. 2
bytes) 3
big, 3
arrive 21
cmp 1
binary 14
contention; 2
consumes 2
bits? 1
died 1
calculates 1
compilers 1
begin\n", 2
conditionals. 2
bug, 1
bugs. 11
bounds) 1
advice, 1
arranged 1
drive 5
attributes 4
ctxt 1
array) 3
cover, 2
consider-ably 1
computers), 2
born! 1
available. 14
community. 1
attacker, 1
avoids 5
balances 1
class, 3
caches) 1
bits, 7
associative. 1
combina-tion 1
bookshelves 2
contents. 2
contention, 2
born 4
dirty-page 2
calculations? 2
complexity 10
beginning, 1
conditions; 2
bus 3
bx=100). 2
byte 15
alas). 1
arrive; 1
ease-of-use 1
automatic 2
culprit 1
asked 2
consisted 1
current 37
bring 4
award 4
complain 2
critical 140
attr 2
balance 15
average 16
capability. 1
classic 26
blocks 9
atomically: 2
comparing 5
break 5
context-switches 1
control, 4
break, 1
discusses 1
caller. 2
computation; 2
begun, 1
confines 1
bx=3 2
c->global 4
c->local[cpu]; 2
all? 8
article 3
eat 6
assume: 1
bad 31
concurrency, 10
cycles 11
consumer 26
browser. 1
backing 1
complete: 1
currency 4
bed. 2
be? 9
avoided? 1
careful. 1
clear; 1
books 21
attachment 1
complementary 1
brings 1
copy! 1
convenience 2
bugs 6
display 2
caller’s 1
computers, 1
behavioral 1
considering 6
c;, 1
caller, 4
c1 10
allocate(int 1
asleep... 1
ebx; 1
attempted 2
base, 1
cond_t 5
data) 2
contain 6
bumping 1
battles 2
complicated. 4
days: 2
begins! 2
begins. 1
background; 1
chance. 2
close, 1
botte 1
average. 1
components: 3
c6, 1
cores 1
cool 17
busy. 1
eax=51), 2
can’t 30
conceptual 4
benefit 1
contiguously 2
call. 17
calloc() 1
allocates 11
assert(fd 1
edition. 1
avoided, 1
cache 86
configurations, 1
data[100] 1
continuing. 2
bytesLeft 3
begin... 1
component 5
define 9
behave. 2
child, 8
cluster 2
bucket 2
awake 1
base 66
better 88
concludes 1
call) 1
counts 4
correct; 1
call), 1
effectively 5
caused, 1
concert 2
better-than-expected 1
convince 1
can’t) 1
cause. 1
alter 2
attention. 1
effective) 2
bad! 1
cake 4
confused 1
declares 2
correct: 1
calculated 1
behaved 1
computation 2
deliver 8
behind-thescenes 1
chip, 2
cold 3
buffer); 1
base. 1
bet 2
black) 1
concurrency), 1
crime, 1
creating 9
called, 10
be 785
efficient) 1
called 111
center 2
confidence 2
bind 1
cooked 1
case. 3
changing 9
amazingly, 1
avenue 1
efficacy 2
before), 2
centers 1
deeper. 1
consider 26
costly. 3
behavior? 2
conceptually 2
descriptor, 2
below 11
binaries, 1
comfortably 3
bug 4
best; 1
bits) 1
book; 1
considered 10
critically, 1
curr->stride; 1
catastrophic, 1
below. 13
element, 2
case) 1
choose 5
confirm 6
bitmap 2
core, 5
causing 3
client 5
analyzed 2
can 699
balanced: 1
emphasis 1
biased 2
cesses. 1
deeply 1
continuous 1
costs 8
better) 1
concrete 1
device; 1
chunk). 1
block. 3
compiling 1
buggy 1
bet. 2
borrow 2
bounds; 2
constituent 1
crux: 5
decisions, 2
cause 24
bits), 2
employ 4
changes, 1
cleaning 1
constructed 4
black 3
crashes, 3
challenging. 1
coalesce 2
apologize. 1
child. 2
because, 1
enables 23
bit) 1
change. 6
depends 5
core. 2
counter, 15
beyond. 1
condition, 7
difference 18
coarse-grained, 1
book. 23
complete) 1
build. 2
bits). 4
both. 4
broadcasts 1
bucks. 1
curr 6
definitely 4
challenge. 4
boost 8
end” 8
cheat 2
clear: 6
contents 28
born, 1
cream.” 1
changed 18
code); 2
append 2
chip’s 1
becoming 2
enterprising 2
blank 1
changes; 3
design) 1
corollary 2
coverage 2
bizarre 3
confuse 1
code), 4
disk 54
both, 1
comprise 3
bx=2,bx=2 2
blocking 2
breathe 2
context; 1
buffer, 11
datacenters. 2
delaying 2
chapters). 2
boots 2
error, 3
choice: 1
clever 5
contrast 7
bugs, 2
are 870
charge 7
colleagues’ 1
chocolate 2
begin” 6
entirely. 4
bounded-buffer 1
chooses 3
designed 9
correctly 19
cycles) 1
brilliant. 1
connected 4
combines 1
disrupt 1
bottleneck. 2
compromised 1
bytes). 3
cabinets 1
broaden 2
continue; 2
bytes? 1
decision. 2
deploy 1
checks 25
brand 2
etc., 1
chunk, 3
close(STDOUT_FILENO); 1
controversy 1
creation 20
counter. 12
assertion 2
children! 1
color 1
chose 1
behaving 1
entries 22
brief 4
classically 1
development 13
correctness, 4
date. 1
broken. 3
consuming 3
compacted 1
distinguish 2
bounds. 5
computers 7
c; 3
calculation: 1
broadly. 1
control? 3
brought 10
decrease 2
deployment, 1
chores.” 1
builder 1
example... 1
cite 2
coalescing) 1
byte) 2
data; 1
counter_t; 6
attack 9
chop 5
command 12
coalesces 2
borrowed 1
broad 4
exactly 39
command-line 2
devices 15
costing 1
debugging 1
brutally 1
context. 2
complete). 1
bug; 2
computing, 4
can, 4
calls: 3
c->value; 4
control” 2
built; 2
defeats 1
does 256
designs 1
community, 1
exec() 13
clearing 2
columns 1
bytes 41
cache) 1
database 13
counter’s 2
avoidance. 2
co-advisors 1
commentary 1
coined 2
bother 1
buffer. 6
examines 3
commonalities 1
complete; 5
components. 1
buffer), 1
continue. 7
compromised. 1
c->local[cpu] 4
concurrency). 1
could 137
casts 1
casting 1
calls). 1
cooperative? 1
bx=0,bx=1 2
demands 2
doing: 1
desktops 1
complicated, 1
existed 1
client/server 1
combined 1
caches 16
calls. 5
deal? 2
darned 1
badly, 1
concurrency? 1
commonlyused 1
commands 2
breath. 1
bx=1 2
different-sized 1
example. 31
decreased, 1
concern, 3
buffer[use_ptr]; 1
contributions 1
computers. 1
c6 6
configure 5
count. 2
chapter). 3
central 7
cases). 1
correct. 2
desire 7
domains 1
dest_buffer[100]; 1
concerned 5
expectations? 2
clues) 1
complete?) 2
call-ing 1
candidate 3
debug. 1
deadlock). 2
constant 1
companies 6
common) 1
browser 1
because 93
call, 19
begins 13
examples; 2
degree 3
exclusion 21
cache; 2
correct-ness; 1
conclusions 1
changes 20
confusion. 1
counterpart 1
checkbook 1
char 35
cast; 1
destination: 1
easy-to-read 1
developing 7
concurrently) 1
eyes 2
counter 116
co-authors 5
complicate 1
care, 2
carts 1
decreasing 1
deallocate 1
containing 4
compiled(!) 1
completed), 2
built-in 1
by 705
differs 1
canonical 3
below? 1
concurrently, 1
depicts 1
executing. 1
calculation 1
cost: 4
condition) 1
counters 14
context-switching 2
crazy. 2
children 1
certain 26
check 46
detailed 8
ebx, 1
differentiates 1
configurable 1
consulted 1
create(); 1
community 3
computation. 2
carefully 17
cases. 3
deeper 5
decision 15
converted 1
complicated: 2
completing 1
c->threshold) 2
c->threshold 2
directory. 6
carefully! 2
blocked); 2
conditional 1
desired, 1
execvp(myargs[0], 2
call3 1
channel 1
connection 1
counting, 2
conventions, 1
critical, 2
citation. 2
chanced 1
child: 1
device, 1
enabled 4
direction, 4
facets 2
context, 2
create, 2
company’s 1
computed 1
change! 2
challenge: 9
defense; 1
decreases? 1
cooking 1
computation, 2
conception 2
c5, 1
caching. 1
distributed 7
blocks: 1
consumers), 1
case, 105
detects 1
exit 13
check; 1
contiguous 13
calls 88
counting-based 1
couldn’t. 2
cyclic 2
cited 2
circuitry 2
differ, 2
change 55
enact 1
disabling 5
failure. 1
continue, 1
curr); 1
compile-time 1
condition: 1
changes. 1
child/parent 1
depth 2
depending 12
cores. 1
concepts 7
conflict 2
causes 5
calculation, 1
efficiency. 3
bold). 1
controls 5
challenging, 1
diagram). 1
explained 2
choice. 1
copyon-write 1
crude 2
cases 29
counting; 2
deadlock 5
closes 3
clean; 2
differently 1
chapter? 9
engineering 2
disaster. 1
fashion. 3
control-c 1
current->tickets; 1
complete, 7
cons. 1
chops 1
chapter 37
diagram 10
dequeue 5
directory 18
concrete, 1
consideration 2
cheaper, 1
call? 4
end, 5
bookstore 1
converts 2
chapter! 1
differences. 2
extreme 4
correcting 1
customer! 1
chunk 44
challenge, 1
crux 3
deciding 5
commands, 1
direction; 1
code. 44
chapters, 9
ensuring 14
do: 2
fetch, 2
correct? 3
deadlock) 2
complicated 13
contention 4
closest 1
cheapskate. 1
corre-sponding 1
desired. 9
dirty) 2
cond; 2
consistency 3
calls, 3
child 59
environment. 4
bound 4
cost; 4
chapters. 6
directly, 5
failing 3
craft 2
debug, 2
claims 2
closing 2
curse 3
decodes 1
completely 6
discussing 4
collaboration 1
clarity. 1
equals 3
drives 2
finish), 1
counter++; 1
decisions? 1
concatenate 2
coarse 1
chunk. 4
control 79
costly, 6
despite 6
discipline1 1
considerably 1
corn 1
can) 1
chip 1
escalation 1
breaks 2
couldn’t 2
characteristics, 1
dirty 11
fast, 6
crazier 1
dedicate 1
compete, 1
cold- 1
dark 3
dedicated 2
completion); 1
do) 1
cleverness, 1
errors. 1
common 61
dynamically-allocated 1
finished, 10
counter1 1
deletion, 1
concurrency: 2
cold-start 2
chunks; 1
cooperative 5
coupling) 2
detail; 1
discrepancy 1
consumers 9
corner-case 4
canceled, 1
coalescing, 4
esp; 1
buddy 11
buffering 1
disappears 2
create 49
faulting 2
creation; 1
deeply-nested 1
compiled, 1
collected 1
complete 23
deleted 1
concatenating 1
don’t, 2
collect 1
especially 13
competitive 1
earlier) 1
first-out) 1
course 20
descriptors. 1
consider. 2
combine 7
clear 12
creation, 6
crazy! 1
discussed. 1
didn’t 11
consumption 1
care 10
correct 42
coarse-grained 2
evidence 1
checking, 1
byte(s) 1
disassemble 2
currency) 6
file: 1
creator 1
destroyed 1
deallocations 2
collectively 2
concurrency. 7
demand. 1
condition). 1
downsides, 1
combinations 3
compile 11
easy; 1
every 52
first. 10
crash 2
constitutes 1
coming 7
clock; 1
desired 52
criteria. 2
cross 1
divide 6
digest. 1
case? 5
contains 32
correctly; 1
code) 3
example). 3
closer 2
c5 5
disassembler. 2
daemon 8
fills 3
cycle 4
decided 6
detail 26
detour 1
construction. 1
demise 1
congratulations! 1
draw. 1
compare? 1
completed, 2
edi; 1
example? 2
fits 9
create(), 2
construct 5
completed 5
destruction, 1
curr->next; 4
curious 3
code, 73
drop 4
directly. 3
counters, 6
cases, 27
count) 3
colleagues 3
exchange 2
code.” 2
cached 3
disposal.” 1
dealing 2
declare 4
dedication. 1
columns. 1
flag 73
developed; 1
convenience, 1
dependence, 1
consumed 2
drawn 1
competing 6
compulsory, 1
effect 4
examples, 3
formula 2
cycles. 4
completes1 1
deterministic, 2
currently-executing 2
context 70
date, 2
collector 2
eagerly, 1
dividing 6
course. 4
catches 1
covers 4
come 9
excluding 1
communicates 1
cat 3
doing; 1
declared 1
delve 5
demoted 1
compare-and-swap 10
flash-based 2
difficulty 4
convenient 1
dependent 1
continuing 4
dreams 1
completion, 2
concurrentlyrunning 1
excess 1
efficient 19
forward! 1
danger 2
compulsory 5
directly 8
deallocates 1
continue 10
day, 2
commandline 1
easily. 3
do; 2
cover 11
character. 1
crazy) 1
complex, 4
executed, 5
completion. 2
century. 1
doubt. 1
degenerate 1
depend 3
depicted 2
completion), 1
forever! 2
disabled; 3
converge 1
desired). 1
convention; 1
dx 2
complex. 2
confront 1
exercises 4
efficiently; 1
existing 14
data). 1
compute 12
disciplines) 1
decisions 7
converse 2
deep, 1
compact 3
efficiency 8
double-click 1
crash. 1
citation 1
customer 2
computing. 1
exited 1
computing2 1
changes? 2
driver 1
delivered 2
depends.” 1
depressing. 1
forgets 1
computer 59
discussed, 1
cool, 1
details1 1
convoy 2
easy-to-use 2
components 1
constants, 1
fourteen. 1
emptying 1
exit() 6
days 4
computer. 1
disk), 2
delight 1
correctly-working 1
demands. 1
compare 6
else, 7
draw 2
cyclic-sequential 1
closing, 2
deallocated 4
concise 7
expect: 4
concern 5
chopping 1
dummy 4
depressing 1
description, 1
destination 2
forth). 1
concurrent, 2
coolest 2
detecting 1
copy-onwrite. 1
edx; 1
comprised 3
contending 14
fraction 5
emulate 2
experts 1
decides 11
concerned, 2
distribution 1
deployable 1
do 328
correctly. 8
demonstrated 2
comparison, 3
enable. 2
eax=50. 2
day! 1
decrement(counter_t 4
cond 17
expensive, 6
concurrently 9
chunks, 4
ease. 1
depths, 1
designers, 1
deterministic. 2
game 4
constantly 3
copying 4
difference, 4
correct, 2
encountered 1
computations 1
continued 1
code 391
free(rvals); 2
entry; 2
extents 2
deeply. 2
concurrently), 2
does), 1
describe 14
driving 1
correctness: 2
desire. 1
compiler, 2
ending 1
endless 4
days. 1
demanded 2
constraints, 1
explanation 1
conditions. 5
clarify. 1
easy: 2
describes 6
destination. 1
devices? 1
determines 17
contention. 2
correctness. 3
costly 7
entering 9
cost 49
copy-on-write, 1
columns: 2
future; 1
different 196
essentially 11
famous 21
default, 2
configure; 1
easy. 3
detail. 12
editor, 1
cost, 5
destroy 1
complete. 6
entries; 2
etc.); 1
delete, 2
descriptors 5
context-switch 4
explored 2
consult 2
clean), 1
eax. 5
design: 1
get: 4
directions. 3
device 11
control. 1
count--; 1
concept: 2
errorprone. 1
costly; 2
copy. 1
compare-and-swap, 2
gcc) 1
differently; 1
everyone 1
features, 2
descrip-tion 1
connects 2
eax=50 2
details; 3
encounter 7
countermeasures 1
details); 2
complex-instruction 1
enum 2
depiction 2
designers. 2
contexts, 1
external 10
continuously, 1
coalescing 6
effect” 1
designate 1
getpid(), 2
disk). 3
differ 2
even 148
creation: 1
curr->pass 1
concluding 1
errors? 2
court, 1
core 8
comparison 7
gdb) 1
disciplines 2
examples. 3
disk, 14
devices. 4
constants 2
effects 1
deter- 1
endlessly 2
create() 11
diagnose 1
concurrently? 2
environment 4
derive 1
destructive 1
convenience). 1
failure; 2
control-z 1
coherence, 2
elapsed. 1
destruction 2
globally-shared 1
distinct 2
directory; 1
evicts 3
criterion 2
cycle. 1
concurrency; 2
esi; 1
cpu.c 2
count 25
generalized, 1
compiler 26
felt 3
excuse 1
does, 6
dictates 1
consulted, 1
efficiently. 1
determined 9
entered, 2
cruces 1
differently. 3
events 5
descriptor 1
condition 81
details, 4
counter); 6
fashion; 1
couple 10
complete? 3
end), 1
detail10 1
gracefully, 1
does). 1
disappear). 1
execl(), 1
cycles, 3
dandy. 1
condition3, 1
estimate 2
currency. 2
counter) 1
gettid()); 4
computational-overhead 1
few) 1
exhibit 3
domains, 1
did 22
convoys, 1
enabling 15
developer; 2
entirety? 1
daemon1 1
discuss, 1
eventually, 1
detail, 6
confusing; 1
developer, 1
feeble 2
created, 14
course). 1
completed; 1
energy-efficiency 1
granting 1
d’un 1
details. 34
discipline, 1
executable, 3
data), 1
date 2
condition? 1
exceptional 5
dairy 1
crashes 2
globally 4
computer, 3
find!) 1
exist 11
dramatically 2
dies, 2
copy-on-write 5
enacted, 1
diagram, 6
establishment 1
darn 1
disk-access 1
evolved 1
did. 2
conspired 1
die 1
fell 2
creativity 1
covered 2
completely: 1
entirely 4
grasshopper, 1
effectively, 1
deterministic 8
disconnection 1
execution: 1
decayed 1
day 5
conference. 1
exciting! 1
darker 1
crazy 3
concerns 3
go 37
flaws. 3
exits 3
dream. 1
different: 2
digit 1
engineers 2
direction 1
etc.) 11
debate 2
disk? 2
exact 26
different-size 1
const 3
directed. 1
fields, 1
dangling 1
cpu 4
completes, 9
equivalent. 2
grow; 1
embarrassment. 1
deterministically. 1
discussion, 1
exists. 4
decimal 2
configured 1
execvp() 1
decide 23
data? 1
create()); 2
confections 1
goals 15
flexible 9
expected; 3
dynamically 1
corresponding 10
entry. 10
directory, 8
doing 76
evenly 3
debugger 6
disks, 1
example) 10
do, 11
consumer; 1
directives 1
field” 1
decade. 2
current->next; 1
errant 3
complex 22
handle. 1
enforcement, 1
developer. 2
doing? 2
expires. 1
decisions. 2
confined 1
expects 3
deep 7
fail 13
datacenter. 1
confining 1
good”. 1
flushed 1
experiment, 1
ele-ment 1
counter1, 1
examining 4
diving 1
dollars 2
do. 18
default 7
eax, 3
executing) 1
document 1
cope 1
discussion. 1
fine! 1
decimal), 1
est 1
currently 27
comprehensive 2
happening 1
event 3
disable 3
exploited 2
decreases 3
confuses 1
don’t 81
defensive 1
descriptor? 1
fast. 5
de 1
fault 12
habits; 1
fly 1
fancifully 1
employs. 1
execution, 8
execle(), 2
dominate 3
done; 1
course, 73
element 14
described 36
exit; 1
doesn’t). 2
copy, 1
disk-drive 1
first; 6
default? 1
currently-pointed 1
configuration 2
hard-and-fast 1
exceptions 3
discretion 1
extracts 3
example 131
defined 5
continues. 6
earlier, 3
demonstrates 3
descriptors, 2
consults 1
declaring 1
feel 8
happen: 1
following: 8
fast” 1
en-us/um/people/mbj/Mars 2
exhibits 2
doubts 1
execute 29
dump”, 2
covering 7
ends 4
device), 1
exited2 1
doing. 3
copying. 1
diverse 1
fit 27
defaults, 2
dangerous 5
confusing, 2
hardware, 15
exec(), 6
disk) 3
executable 13
exceeding 1
execution. 17
cooperatively 1
efficiency; 1
designs, 1
device. 1
consume! 1
defeat 1
fewest-possible 1
harder 4
form). 1
features. 2
enabled, 4
exists 3
execution” 1
end 46
crash, 1
error 17
difference: 4
expect, 2
doubt! 1
cost. 1
do? 9
flag) 5
deployed. 1
data. 9
each 340
constant. 1
hardware-based 5
fair, 1
doesn’t, 3
delay 2
executed), 2
counterbalance 1
explicit 22
elsewhere, 1
fair 19
die, 1
control: 1
definition 6
files) 1
haul, 1
formed. 1
fg 1
expand 1
efficiency, 3
expressed 2
estimator? 1
current: 1
etc. 5
different. 2
explicitly. 2
drivers 1
counting 7
done, 6
flag[1] 2
description 9
databases 5
eases 1
constraints 2
heavy-handed, 1
fast 19
done. 10
deployment. 2
created. 3
executing 26
design” 1
evicted, 1
fair-share 7
differences 2
conundrum 1
delving 1
copy 18
http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 1
former 5
finish, 2
expected. 4
frame 40
evaluate 6
either 49
executed 17
exam? 1
disciplines. 1
exploration 1
each. 4
downward, 1
creates 34
designers 9
fork() 25
decay-usage 2
eater 2
consumer, 6
hide 1
fetches, 2
double-precision 1
descheduling 2
critical; 2
exists, 3
desirable. 1
evil 1
family 5
disassembler 2
fill_ptr 2
demand 11
correct) 1
i.e., 29
first-level 2
far: 2
exporting 1
free) 5
days, 6
encounter. 1
exit(1); 6
exception; 2
does: 2
exports 1
earlier; 2
earlier. 2
customized 1
destroy()) 2
forth 3
decides). 1
contexts 2
effective 12
hierarchy; 1
few, 2
downward. 3
describe. 1
critique 2
exits? 2
detect 5
excellent, 4
far) 2
finegrained 1
deschedules 3
discuss 53
counter; 2
i=0 1
flags 10
faster. 6
failed; 2
free-list 1
decimal. 1
enough; 1
exiting? 1
execvp(). 1
done? 1
facility 3
eaters; 1
datacenter, 1
developments. 1
easy 50
frees. 1
deep... 1
continues 7
efficiently? 5
high: 1
fewer), 1
duty. 1
desires 1
currency; 1
expected: 2
developers 12
exec(): 1
fetches 10
fixed-sized 11
die). 1
discussion: 1
create()6 1
ignored. 1
fork; 1
fetched 5
familiar; 1
friends 3
defined. 1
environment, 2
expect. 2
experimentation. 1
downfall. 2
fact). 1
economist. 1
debug 1
deviously 1
ebp; 1
gave 3
definite 1
correctly! 2
eight 1
hit), 4
fewest 2
e.g., 8
details) 1
fact. 2
data, 18
diagram); 1
fair. 1
flag[self] 4
difficulties. 1
disks 4
creature 1
few 102
illegally). 1
formal, 1
files 10
faster; 1
from). 2
deletion) 1
epic 1
expectations 1
express 1
dramatic 2
failed\n"); 4
effective. 3
definitive 1
digested; 1
efficiently 10
demand? 1
generally 28
costs, 1
encountering 1
hoc 2
emailing. 1
figure, 15
deterministically) 1
feature 5
declaration 5
digging 1
family. 1
followed 5
displays 1
documents, 1
credit 3
improvement 3
figure 35
fought 1
follow 2
favorite 8
func(). 1
design-ers, 1
equation; 1
expensive 3
fact, 28
dx) 4
fairshare 1
employed 4
degenerates 2
demanding 3
egomaniac. 1
demand” 1
coverage, 2
goal 19
enters 21
enacted 1
file. 2
holds 38
develop 12
file, 9
defaults. 2
directing 1
famously 3
double. 1
doing.” 1
datacenter 1
in? 2
fill; 2
found 84
free(): 1
for, 2
fetch-and-add 8
generate 28
designer, 1
etc.). 1
exploring? 1
fail. 2
fanatics, 2
dynamic 20
endlessly, 2
discipline 1
desk 1
elsewhere. 2
descheduled. 1
hack, 1
created 22
entries). 2
enough. 2
file.txt 2
honorable 1
devices, 2
first-in 2
defend 2
disappear 1
fancy? 1
disk. 14
done\n", 2
days... 1
incrementalism; 1
fine 7
frequency; 1
forced 2
fight. 1
four 52
give 30
details). 4
eviction 3
fault; 2
families 1
faulty 1
e 1
establish 3
discredited 1
details! 1
enough, 5
design. 2
hand-over-hand). 2
curious. 1
entry? 1
entirety 2
file’s 2
hope. 1
differ? 1
free-page 1
defense, 1
downside, 1
few. 1
dissertation 6
don’t. 1
de-queue 1
indexing 1
fit? 1
frequently-used 1
forget, 1
free()) 1
glock; 2
file 95
determine 34
example), 10
fellow. 1
fault. 7
fetch-ing 1
easier, 1
examples 21
developers. 2
discussion 17
desire, 1
hard-hitting 1
ensure 34
debugging, 1
exec(); 1
entries: 1
fine, 1
how, 1
direction. 3
fullness 1
defer 2
dream 1
field, 2
divided 8
doubt 2
deallocation, 1
infinite 6
fits, 1
funky 1
free() 8
free(void 4
google’s 1
flexibility; 1
did, 1
exceeds 8
few), 2
favor, 1
figures 4
end. 1
excellent; 2
discussed 24
double) 1
desktop. 1
have? 2
entity), 1
decide: 1
existed; 2
excessively 1
focus. 1
however: 1
directory: 1
fully 8
deletes 1
filled 6
during 29
does. 1
downsides. 1
decrees 1
influential; 1
flag)? 1
gcc 10
freely, 1
generalization 5
grouping 4
flushing 1
disk-like 1
exceptionally 2
fields 2
fd 1
file), 1
enjoy 3
execute, 2
doesn’t? 1
down, 1
destroying 1
header: 2
defaults 3
exit). 2
entry 55
exchange1 1
fragmentation? 1
http://www.sparc.org/standards/SPARCV9.pdf. 2
disk); 1
further, 2
demonstrate 5
fine. 2
doivent 1
else 45
due 19
deleted); 1
initialization. 3
flag[0] 2
gdb 5
full 33
ghastly 1
grow, 1
focus 21
doing, 3
experiment 5
figure), 1
fill. 1
fetch 29
ensures 14
explore 5
done! 3
driver8 1
diagrams 1
headway 1
dereference 1
expected? 2
etc.)? 1
framework 3
execution 48
hypervisors, 1
done) 1
futex 16
dereference. 2
fixed 13
downwards 1
employs 3
ease 4
dense, 1
initialized 8
floor 1
globallyshared 1
functions: 1
github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
guesses, 1
downward). 1
follows: 21
family? 2
flexible, 1
fitting 3
entities 5
extremely 3
final 51
double-ing! 1
dx=3,dx=3 4
differently, 1
heavilyused 1
designated 2
explain 1
ever 19
free, 5
exit()) 1
iMac 4
draconian 1
general. 1
derivatives 1
for) 1
drives, 1
emulator 1
easy, 1
designs. 1
insight 1
flush 5
graduate 9
futex_wake 2
grab 11
harmless, 1
each, 1
form, 6
figures, 1
frankly 3
early 68
error; 1
factor 8
finished 14
drops? 1
earlier 18
difficult. 3
help: 1
designing 3
extended 5
everywhere, 1
full; 2
experiments 3
illegal 11
eax=51. 4
generalpurpose 2
descheduled, 1
free. 13
dustbin 2
enacting 1
destroy() 2
eax 20
instead. 4
forces 2
group 12
gaming 2
grabbing 2
held. 16
formally: 1
files. 1
fix. 1
free), 2
effective, 2
essay 1
fall 5
five 8
easier. 1
eaters 2
discovered 4
hence 20
failed, 1
developed 23
evicted. 2
getpid() 1
expose 1
either. 1
imagine 41
generation 1
design, 1
funny 1
dynamically-allocated, 1
entity, 3
develop, 2
ecosphere 1
integers), 1
form. 2
grow. 1
gently 1
gray) 3
hierarchy, 1
forthcoming 3
flag; 6
friends, 2
efficiencies 1
find 86
evermore 1
fashion). 1
everything 12
easily 17
effectively. 3
dive 4
here? 3
fancy 7
dirty, 2
executes, 3
gettimeofday(); 1
far; 1
empty 14
implications. 1
get(); 5
desk? 2
guessed 1
earliest 13
entry). 1
easier 19
efficiently, 1
intense 2
forms; 1
guarantee 21
homeworks, 3
had 57
free(10), 1
gets 51
focused, 1
friend” 1
elements 8
finish 13
flavor 2
evolution 3
features 17
editor 2
elsewhere 3
enable 24
heuristics 1
fares 1
down 25
expected 7
goes 27
fashion, 1
eviction. 1
inc 1
exception 15
despairing 1
handled 4
differentiation 1
error-prone. 1
efficient, 5
enter 32
formula, 1
interrupted 14
guessed, 5
hot 1
hard-andfast 1
freeing 6
gettimeofday() 5
for. 3
fully-operational 2
else-where, 1
for: 1
flight, 1
exec 2
fetch), 2
divides 6
empty), 1
end\n"); 5
historically, 1
faster, 6
download 2
faint 1
grep 7
finds 10
global; 2
increased, 1
excessive 3
happy. 4
details 46
difficulties 2
error? 2
efforts 2
entries); 1
is: 9
guide. 1
https://gruss.cc/files/kaiser.pdf 1
hard-working 1
from, 3
giant 1
forefront 2
functionality. 3
free 187
empty. 1
forget: 1
foil 2
executed. 1
files, 3
do), 1
end”. 1
endeavors 1
historically-based 1
first) 1
drink 2
field. 1
groups. 2
first, 20
globally-allocated 2
incremented, 1
execvpe(). 2
have, 1
developed. 1
digest; 1
etc.? 2
eip; 1
entry, 8
iterations/threads: 2
handled, 1
hard. 1
implement 30
fully-associative, 1
gray 3
fork.py, 1
good. 6
further 31
encouraged 1
fork()ing 1
found. 2
expensive. 2
finding 15
documented 1
ensued 1
enough! 1
hostility: 1
flag). 2
dynamics 1
file-system 1
guard; 2
floating 1
grand 1
indicating 8
exit), 1
heavily-used 1
developer 2
here, 22
eventually 15
en.wikipedia.org/wiki/LoadLink/Store-Conditional. 2
ever, 1
kernel), 1
happen 15
hardware? 1
imply 2
forward 4
freedom 1
hardware) 3
fusion, 1
great 79
end-of-string 1
formal 2
fragmentation; 1
exploit 1
flag[2]; 2
envisager 1
doesn’t 51
entire 46
huh?? 1
eating 1
following 55
files” 1
guide 1
follows. 4
grows: 1
inseparably 1
expensive!). 1
direct 14
did), 2
herein), 1
evict. 3
enabled. 1
execlp(), 2
hardware. 10
lead 50
he 20
increases. 5
free(ptr), 1
from. 5
head->next; 1
futex_wait 2
grossly 1
enemy? 2
forms: 1
frequent 4
failed 8
flexibility: 2
equal, 2
drive. 2
entirely; 2
hurt 3
electrical 1
forgot 2
findings 2
hacker 2
forays 1
hallmark 1
integer, 4
face 4
discussion). 1
disk; 4
heuristic 2
except 6
encapsulated 2
expected, 4
hardware’s 1
line. 1
head; 2
inform 4
frees 6
go, 2
header. 1
gains. 1
guard 14
enormously 1
four-level 1
frequently; 1
familiar 2
flexibly 1
era, 1
driven 1
entry), 1
identifier 3
element. 1
fork(). 2
fork 7
hands 4
forever; 2
hand-over-hand 8
intensively 1
fails 5
dives 1
https://quoteinvestigator.com/2015/07/23/great-power. 1
execution), 3
done 72
encourage 3
fact 20
list: 3
helgrind 16
initializing 1
frequencies; 2
goals, 1
header_t; 1
gates, 1
guess, 3
equally 1
fprintf(stderr, 6
full). 2
far, 13
folks 1
faster 16
else? 2
importantly 1
examine 36
elements; 1
forth. 10
formally, 1
has 348
happens? 2
handle 17
form 46
interact 15
fault3 1
documents/R4400 1
hybrid. 1
expect 15
double-check 1
engineering. 1
field: 1
load/store: 1
here) 4
instruction) 9
frightening 1
going. 1
held: 2
generality, 1
handling. 1
errors 9
fragmentation2 1
general, 18
errantly-freed 1
follow, 1
fault) 1
email 2
in, 6
exist: 1
enjoys 1
fully-developed 1
free()? 1
head->next 1
handler. 2
freed. 3
interesting. 2
faults 3
double 3
improve. 1
eyes...) 1
down-wards 1
entitled 2
filled. 1
locks: 3
hardware 263
hides 1
functionality, 2
greater-than 1
help. 1
has). 2
evil.” 2
free(). 6
generalized 1
evicted 3
forest, 1
int 260
get 126
faulting”, 1
embracing 1
increasing 10
explicitly 12
enlisted 1
get() 7
frequency 5
header_t 1
handlers; 1
intergalactic 2
finally 27
earlier). 1
indefinitely, 1
failures. 2
downward 1
equivalent; 1
fit; 1
lottery.py, 1
high. 3
hierarchy. 2
furthest 5
happy 5
higher 24
heap), 1
exception. 1
free? 4
gettimeofday()). 1
forward-growing 1
from 443
intellectually 1
excellent 42
graph. 1
feedback 5
emptied 1
incrementing 12
fairly 9
enqueue 4
friend: 1
headers 2
global 56
havoc’ 1
find. 1
ecx; 1
indexes 1
fairness. 6
drive, 2
et 7
focusing 2
love 2
history; 1
goals? 2
harsh, 2
historically 2
hierarchies, 1
exchange1) 1
freed; 1
glance 1
into 339
free(), 2
fully-associative 1
interface: 1
exec(). 2
greedy 3
filling 1
entries. 3
inefficient? 2
fairness, 2
entity; 1
function, 3
equal 19
grande 1
heap. 10
fine-tuned 1
effect. 1
inefficient, 2
fantastic, 1
duration 2
evicting 1
fork(); 4
lwarx/stwcx 2
homeworks. 1
good, 2
hate 1
horrible 1
hint 4
excludes 2
frustration 1
how 441
gnu 2
introduces: 1
free(tmp); 3
function. 2
exist). 1
groups 3
it. 68
finishes, 1
essential 3
innocently 1
far-reaching 1
helpful, 1
getpid()); 9
era 7
graphics 2
helgrind? 2
finish. 2
eight-page 1
inflation, 1
fast; 1
edit 2
exactly? 2
forth; 1
machines. 6
http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF. 1
growth: 1
heap); 1
imperatives. 1
hit. 5
execl, 1
fundamen-tally 1
hugely 3
good! 2
invention 1
got 16
functions; 1
existed. 2
grows. 1
itself); 1
flexibility 2
exclusion. 6
inopportune 2
far. 1
helps 5
gettid() 2
exam- 1
green 1
hidden 4
fit, 2
emails 1
initiating 1
feasible. 1
editor? 1
exclusion? 2
forwarded 1
main() 11
idea: 1
gruesome. 1
heart. 1
highlyfragmented 1
hybrid 10
identifiers, 1
illusions 1
immediately. 2
hold, 1
improve 17
gadget), 1
hybrid, 1
full, 6
invocation 1
greater 4
fundamentally 3
expect; 1
guaranteed 1
forever, 6
execvp(), 2
inputs 2
it’s 33
fascinating 9
higher-level 1
getting 33
grows? 2
high, 4
five-level 1
highest 20
input 20
feature-filled 1
effort 3
exist, 1
frames 5
main-race) 2
identical 6
guy 3
example, 262
implement, 1
extension 1
humorously, 1
inadvisable 1
glibc 3
idea; 1
functional, 1
job? 1
guarantee. 1
gates 1
expert, 1
hacked 1
functions, 1
exert 2
insert. 2
kernel-owned 1
fewer. 1
hinted 3
graph 11
handlers 5
empty, 3
flag), 2
homework 9
input/output 3
fellow 1
encounters 2
exit? 1
main.c 6
general 41
indefinitely) 2
hacking 1
executing, 2
impossible 1
fail! 2
industry 2
great. 1
illusions, 1
fundamentalist 1
idea 92
jobs, 14
handler, 3
explains 2
going 29
happened; 1
garbage-collected 2
exist; 2
instructions. 5
kicked 2
fill 11
history... 2
grows 16
handling, 1
ence 1
force 2
hope 13
insert; 2
fine-grained 3
engineering; 1
exits, 2
many! 1
generates 10
inspires 2
handler). 1
execv(), 2
failure), 1
inefficiencies. 1
greater). 1
immense 1
gadgets 1
imagining 1
jumping 2
happen. 2
extra 18
heap-allocated 1
header). 1
getrandom(0, 1
existence 3
intensive. 1
kindly 1
finishes. 1
hit). 1
hash_t; 2
havoc 2
enough), 2
fork(), 9
inspiration 1
fingertips. 1
instruction. 22
enough 32
measured 2
far 21
gives 15
instant, 1
hates 1
exercise 4
falling 1
inherently 2
grew, 1
implementation)” 2
gain 16
immensely 1
kill. 1
happens; 2
fastpath) 2
heart 2
hear 1
government 3
exit. 5
intricate 3
know, 5
first” 1
http://books.google.com/ngrams). 1
have. 3
entry) 1
hit, 28
forth, 4
however, 49
flag.s. 2
instructions; 2
entries, 5
memorymanagement 1
few). 1
goofs 1
integers, 2
head->value; 1
exiting 2
fantastic 1
hackers 1
in-between 5
gaming, 1
implemented? 1
instruction 130
laid 4
harddisk 1
field 15
held). 2
hello, 8
graphs 1
exits; 2
intuition 3
in 2103
knowing. 1
fix 3
http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD329.PDF 1
evict 9
head 39
honest 1
fragmentation 13
http://www.multicians.org/history.html. 1
focused 3
interchangeably 1
equation 1
mind. 1
fewer 13
granularity, 2
interludes. 1
header, 4
expert 3
farmer 1
hardware-interpreted 2
increased 3
generalizing 1
implies 7
intend 2
lations 1
has. 1
file.txt|wc 1
heap, 22
hack. 1
high 36
experience 9
investigate 1
includes 13
flag=0 2
imbalance 3
exception, 3
heavily 2
large 93
hurts; 2
free(16500) 1
idiom: 1
forcefully. 1
interfaces, 1
era. 1
miss: 1
fine). 1
graph, 6
heap). 1
exploring 2
fine; 2
interrupt 77
hardware-specific 1
incremented 4
generations 1
inaccessible. 1
interrupt), 1
learned? 1
hello 5
finally), 1
hexadecimal), 1
handling 14
history. 3
extend 2
junctures 1
incorrect. 1
flags: 9
in-between. 3
exhibit. 1
held), 7
larger. 1
ice 1
freed) 1
important. 5
formulae. 1
invoked 2
example: 8
mistakes), 1
finishes 6
grows, 4
help, 1
exposed 1
fire). 1
introduce 12
haven’t 4
independent 4
get? 1
inactive 4
interrupted, 3
len:10 6
himself, 1
first-fit, 1
hood 1
happened 5
hit; 1
failure 21
keeping 14
incurred; 1
incorrectly. 1
exist. 5
help) 1
left 21
impacts 1
frequently 7
info 1
fortunately, 2
it3 1
excited 2
modification 2
fires 1
halted, 1
highest-order 1
extent 1
for 1176
isolation; 3
highlighted 1
inexpensive 1
gigabytes 1
independently 8
libc 2
introduction 17
honor. 1
foo 4
http://www.unix.org/version3/. 1
hardware). 3
honor: 1
fashion 4
killer 1
initiate 3
increased. 5
exits. 4
helped 2
length) 1
in-use 1
from; 1
inserted. 1
fragmentation: 1
modified), 1
executes 23
flag? 3
hand-controlled 1
http://en.wikipedia.org/wiki/You 1
flaws 1
fact: 3
forever. 1
issued 7
http://linux.die.net/man/3/pthread 1
init: 2
great, 1
indicated. 1
lie 1
its 295
intuition? 1
http://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1303.PDF. 1
foreground) 1
hundred 7
heavyweight 1
however 1
fault, 7
languages, 2
insidious 1
indicated). 1
expected) 4
here. 11
levels 9
in: 1
functioned 1
instructions). 1
fragmented, 2
modularity, 1
interesting 46
flags, 1
handler 24
http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html. 1
formed 3
fetch. 2
forewarned: 1
jobs? 3
http://www.ostep.org/Citations/notes-solaris.pdf. 1
inodes, 1
greater), 1
installations. 1
life: 1
itself) 1
issuing 6
http://www.intel.com/products/processor/manuals. 3
format; 2
idle, 1
here! 1
http://ostep.org/Citations/inside-cfs.pdf. 1
faulting. 1
library. 10
insights. 2
inner 1
extract 7
here’s 1
libcrypt-2.23.so 1
inaccessible, 3
fundamental 18
front 10
exhaustive 3
monolithic 1
interrupts, 4
forever 6
hang 1
humans) 1
fragmentation. 6
finished. 2
forget 8
join(), 7
hurting 2
insert(queue, 1
greatest 1
intelligence 1
grow 18
it’ll 1
items 9
hundreds). 1
fortuitous 1
imbalance. 1
hex 4
http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF. 5
fetching 4
libtinfo, 1
install 1
input, 1
fail? 1
hey, 1
libraries. 2
incurring 1
generally, 7
fun 20
exiting. 1
most-recently 1
intro 3
forewarned, 2
have: 2
hybrids 1
fragmented 3
first-fit 3
forms 3
kernel, 7
imaginary 1
instruction, 19
listing 4
interactions 4
guesses 3
jars 1
iterations 4
idea! 1
foundational 2
impact, 3
high-level 6
hung. 2
lives 7
integer) 2
fails, 3
inside 30
historical 14
inducing 1
local 56
functionality 2
generated 12
exploits. 1
neat. 1
kill 10
first 278
forgetting 2
head, 1
icon, 1
free; 5
flavor. 1
freely 2
key); 4
incur 1
integer 17
locations. 1
interval. 1
handles 14
join 12
itself; 3
immediately 23
friend, 2
important, 7
highly 7
immediately, 4
long-term. 1
interested 11
failures 1
instruction: 1
history 16
init(), 2
locates 2
future. 9
goal, 1
figured 2
networking. 2
killed). 1
flag. 13
frames; 1
implement!) 1
frequently. 1
heap 76
flow 14
future, 5
know. 3
indexed 3
interest 3
intervention. 1
lock() 38
killed; 1
hard 51
kick 8
implementation. 4
generating 2
incorporated 4
highly-networked 1
implicitly 2
loop) 2
interposition 2
fairness 7
intricacies. 2
honor, 1
inputs. 1
long; 1
garbage 2
grabs 16
flag, 14
new, 1
knowledge, 3
flag’s 2
frustrating 1
important). 1
friendly 5
hearing 3
focuses 3
general) 1
indicate 15
introduction, 1
invalid, 8
logic, 1
laborious 1
lookup 12
known 90
last. 1
implemented 10
giving 15
increase 20
in) 2
hit 32
lying 2
involvement 1
familiarity 2
inverse 1
idea? 2
inquiry 2
ls, 1
gone 5
grade, 1
follows 6
new_head; 2
latter 5
footnote: 1
functions 7
impressive. 1
from) 2
here: 10
forth), 1
generator 2
ineffec1 1
inventory 1
invited 1
hardware/OS 2
laptop 2
la 3
latency 9
loop 41
inclusion 1
goals. 2
initial 5
increment(counter_t 4
holding 12
machine. 9
irstrun 1
fault? 1
involving 1
ideas, 3
interface 16
m->guard 10
ground 1
for? 2
nonetheless. 1
layout. 1
forcing 1
good 99
gcc, 1
improves 4
func() 4
indeed, 11
fourth 4
grammar 1
infinitum. 1
iterations, 1
involved, 6
here; 4
leap 3
later), 1
leaks 1
loved 1
independently! 1
hair 4
initiates 4
indicative 1
hoping 6
machines; 1
is; 3
faults, 2
implementation, 2
interval, 1
management. 3
guarantees 6
forget-ting 1
life, 3
note 27
foreman 1
gum 1
gdb, 2
him 1
gaining 5
indeterminate, 2
fragmented; 1
gruesome 1
infrastructure 1
it!), 1
hierarchy 2
least) 1
latest 8
learning 2
leave 13
indicates 3
jobs 102
handed 4
input: 1
informed, 1
hypervisors). 1
made, 5
issue. 3
feasible 1
importance 8
mark 6
introduced 25
guts, 1
fragmented) 1
lightweight, 1
noticeable 2
fork()/exec() 1
halt 5
general-purpose 8
history, 3
general? 1
insert 12
friend 3
guess 8
insparable 1
itself, 8
high-performance 1
left). 2
main-deadlock.c 2
letter 3
lies 4
inefficiencies 1
l/stl 2
harder. 1
ins 1
init(); 2
ideas? 1
mail 1
it: 4
figuring 1
in; 2
matching 1
is), 1
measuring 5
free(50). 1
linking 3
obliged 1
found, 2
hand. 3
generalizes 1
hogging; 1
generated. 1
installing 1
greater. 1
hand, 3
instant 3
killall. 1
homeworks 5
legends 2
memory! 2
library; 1
limitations 1
information. 9
leftmost 1
hardly 3
installs 2
innovator 1
idioms 1
manipulates 2
jobs) 1
file; 1
inconclusive 1
incremental 1
isolate 1
meet 5
free(x); 1
load, 3
observe 6
gained 1
handed-out 1
holder 2
generic 4
instance 3
greatly 4
hand-coded 1
given 80
instruction? 3
kinds: 1
instructions 78
mention 1
length 16
live 12
limits; 1
informed 3
length, 1
instructions), 1
installed 1
hash 17
implementations, 1
manually 1
juggling 1
finally, 8
hackers. 1
indefinitely. 2
keyboard 2
memory-like 1
freed 3
off; 2
locations 11
good? 1
happens: 5
host 2
goal: 1
hand-assembled 1
handle; 1
gods, 1
instructions, 10
hopes 1
l/stq 2
insufficient. 2
mid 1
line: 2
load-linked, 2
locality, 8
is 2736
init 4
lesson: 2
interactive, 1
int), 2
in-kernel 5
many. 5
jump; 1
flag.s 2
happen?4 1
index: 1
kmalloc. 1
misses). 1
older 13
loops? 1
function 41
guest 1
hardware; 2
hour 1
growing 5
handle, 1
hardwaremanaged, 1
happening? 1
integers 4
hours. 1
launches 2
interconnected 1
missing 4
lingo) 1
locale 2
lock(&m) 1
input); 1
issues 26
life. 2
investigating. 2
interaction 13
have 487
in. 11
mechanisms; 1
kids, 1
flags. 2
indivisible 2
large-memory 1
multiprocessor 19
happens 78
optimal 20
lowest. 4
game, 1
guide: 1
hptr 1
header 15
guarantees. 2
hands-on 1
head), 1
heap; 2
intelligence. 1
how-to-generate-a-random-number-from-within-a-range. 1
interesting) 1
mmap(NULL, 1
listens 2
let’s 73
lock(lock_t 14
instead, 5
it? 11
like) 2
long 68
link 6
headaches. 1
inability 1
interrupts 33
memory-management 2
languages 4
forcefully 2
inefficient. 4
laugh 1
near-term 1
hence, 3
machinery, 1
generalize 1
habit 2
http://www-formal.stanford.edu/jmc/ 1
heavy, 2
handlers, 3
head->size 1
heap) 2
helgrind, 2
intensive, 1
https://lwn.net/Articles/170003. 2
invalid. 2
mode), 1
our 230
lost 4
like. 6
locked; 2
instrumentation 1
itself), 3
is. 7
lost. 2
list-like 1
heard 1
inaccessible 2
interval’ 1
memory?”, 1
large, 7
found? 1
information, 6
learn? 1
nearly 9
high-priority 2
little 103
goodness); 1
happen, 2
https://birrell.org/andrew/papers/035-Threads.pdf 2
held, 6
happens. 3
heap: 2
helping 2
here), 2
interactions. 2
idea, 7
involved. 2
naming 1
over-written 1
list). 2
lots 12
lookups 1
int) 2
loops 18
isolating 1
lot! 1
incentive 1
intriguing 1
here 46
mentioned 7
laws 2
fragmentation, 6
initialize 15
libtinfo.so.5.9 1
necessitates 1
main-race.c. 2
hits). 1
load. 2
harming 2
hardware-managed 9
i5 2
hard-to-find 1
held; 2
help 38
herein, 1
hog; 1
intervals) 2
ideal 4
isolated 2
nary 1
overheads), 1
lists[BUCKETS]; 2
main(), 1
it’d 1
interleaving, 2
lowest-priority 1
it.” 1
luck! 1
incredibly 8
introduces 6
heyday 1
left, 6
free-space 4
installation 1
like, 3
next, 1
majors 1
hy-brid 1
most 130
lock(&mutex); 2
head_lock, 2
hardware: 3
ideal? 1
harmful. 1
highlight 3
herein. 5
hierarchies 2
https://events.static.linuxfound.org/sites/events/files/slides/elc 1
invalidate 1
idle! 1
issue, 3
next; 4
overseas. 1
llock[NUMCPUS]; 2
managed), 1
it” 1
invent 3
ls. 1
item; 1
machine; 2
k-stack(A) 1
increment 14
high-end 4
frequently, 3
less 29
intent 5
list), 1
nice, 3
make. 1
identifier, 2
much?). 1
lock->flag 6
held) 1
harm 3
idle 5
home 3
hits 13
having 29
human 4
inversely 1
hold 27
illegally 3
non-executable 1
itself. 19
paging 28
loads 19
managing 9
jobs. 7
memory) 5
m 1
kernel) 2
mainframe 2
kernel” 1
incrementally. 1
fringe 1
if 483
letting 6
interposing 1
lives. 1
non-practical 1
maliciously! 2
multilevel 2
logic 7
higher-priority 2
has, 1
impact 5
http://cag.csail.mit.edu/raw/ 1
homework, 9
heap? 3
identical, 1
inverted 4
http://ftp.gnu.org/gnu/glibc. 2
imbalanced? 1
noted 3
joke, 1
paging-policy.py, 1
locking, 2
it). 3
join, 2
methods. 3
main.c). 2
killing 2
malfeasance 1
kicking 1
indicated 4
his 37
future 21
lifeless 1
illusion 20
intervals: 4
long-lived 3
none-too-subtle 1
manual. 4
munication, 1
lost, 3
hints 4
headers, 1
implements 6
huge 20
hopefully 6
heavy 5
implement. 5
iterations? 1
held 25
independently, 2
nuance 1
observed 1
pain. 1
logarithmic 3
judiciously 1
jokes 1
kept 12
malloc()); 1
landmark 3
malloc(sizeof(int)); 2
kind: 1
init() 6
hits, 2
gather 1
link) 1
immediate 2
isolation 3
longrunning 1
not: 3
mapping 13
notes: 2
machinery. 3
hit! 1
hire 1
importance, 1
http://en.wikipedia.org/wiki/ 1
i 22
implementations 4
humorously 1
join() 9
hogs, 1
instantaneously. 1
key, 2
old; 4
paragraph 1
longer, 1
migrating 2
kind. 1
jump 22
managed 6
least-recently-used 4
manner, 11
know! 1
initializes 5
hopefully, 3
generated, 1
linked 18
immediately; 7
it), 4
lower-half 1
numer-ous 1
mask 1
occurred, 4
market... 1
hits. 1
hole 1
https://en.wikipedia.org/wiki/Buffer_overflow 1
illusion: 2
important 63
implication 1
imag-ine 1
k-stack(B) 2
http://stackoverflow.com/questions/2509679/ 1
integrity 1
kicks 2
once), 3
parallel) 2
looking 13
large) 1
lottery 24
kernel; 2
manipulate 2
lest2 1
mappings. 3
innovation 2
knowledge 14
house 2
get(counter_t 6
list; 4
importantly, 9
job). 1
m;) 1
old, 1
master 4
odd, 1
matters. 3
hold? 2
how: 1
humans, 1
illustrate 5
in-terface 1
important; 4
impetus 1
humble 2
intelligent 2
kidding; 1
onelevel 1
patient! 1
kernel 123
minimize 11
malloc; 2
last 37
larger? 1
materials. 1
match 12
integer). 2
large-scale 1
interval 8
grocery 2
likely 73
loader 4
init(counter_t 6
jobs); 1
machines) 1
oldest 1
matter? 3
odd-sized 1
mature 1
holds, 2
i++) 18
increments 7
implementing 8
in/out 1
in-depth 1
implementations. 4
hundreds 5
interface. 4
killed 2
operator. 3
periods 4
keystroke 1
misses. 7
message. 1
leading 9
later); 1
mem.c 2
matter 13
last, 1
http://cag.csail.mit.edu/raw/documents/R4400 2
intervention 1
growth 1
list. 21
initially 3
key) 16
made: 3
lock. 64
on. 9
matters, 2
of. 1
maybe 4
honor 1
illegal. 2
implying 1
index 20
ideas 36
incorporates 2
important) 1
illusion. 2
interrupted) 1
knew 5
opposed 3
persistently 1
lazily, 1
modification, 2
metal 1
left) 1
ldl 2
memory). 6
mem. 1
lazy 5
http://history-computer.com/Library/AltoUsersHandbook.pdf. 1
intrinsically 1
habits 1
list_t; 2
inode 3
kind, 1
main(); 1
lock_t; 8
one) 4
mem- 1
offerings 2
memory), 5
imbalance, 1
improbable, 2
informs 1
indirection 3
illegal, 1
influence 1
interesting; 2
imbalances. 1
interruption, 2
least-significant 1
optimizations 1
perspective, 1
ldq 2
motivating 1
millisecond 1
library” 1
len:30 1
men-tioned 1
memories, 1
lean 1
http://www.ibm.com/developerworks/linux/library/l-solar/. 2
invisible 1
half 8
list’s 1
instructions: 2
mainstream 1
knows 18
lock’s 2
one-word 2
memory-allocation 10
one! 1
memoryintensive 1
included 4
increase? 2
innocent 1
inheritance. 2
imagine, 4
instrument 1
interrupt: 4
important? 1
investigator 1
led 8
options. 3
pipeline 1
length? 1
movement). 1
miss). 1
line, 7
libc-2.23.so 1
merest 1
mesh 1
left), 1
https://github.com/mit-pdos/xv6-public. 1
isn’t, 2
hand 6
located. 2
interactivity 2
maintain 4
language. 3
low-level 16
other) 1
meta-level 1
ones. 3
merely 1
increasingly 6
increases, 2
inserted 2
init(lock_t 4
implementation 7
interpose 1
invalid 8
in-memory 2
kernel?” 1
lengths 5
ordering 9
play 4
lengths, 1
multi.py 2
library, 10
lived 1
merge 2
microkernel-like 1
legal; 1
i; 16
it?) 1
list 103
happen? 8
locks. 6
iss 6
larger), 1
lowly 2
makes 57
output: 4
minimally 1
open() 6
microkernels 3
initialization 8
incremented; 2
inspired 1
inkernel 1
improved 6
interrupt, 4
involved 9
kills 2
libcrypt, 1
including 51
originally 2
point, 30
otherwise 14
multiplexing 2
lifesaver 1
location; 2
meters 1
misbehaved), 1
levels), 1
ideally 1
join()); 1
ignore 5
happening! 1
make, 2
it1! 1
larger-scale 1
malloc(strlen(src) 1
outs 1
made 23
minus 5
operates 4
mirrors 1
instances 2
indeed 26
installation, 1
innovations 2
incl 1
interrupt-based 2
isn’t. 3
increases 6
mlfq.py, 1
pointier, 1
know 71
library 47
overhead, 1
necessarily 8
likely). 1
looping-race-nolock.s 8
metric, 2
misbehaving 2
load/store 3
life 22
jump) 1
improvement. 1
happens, 4
manifests 2
item 9
largest 2
manuals 2
owner 4
monopolize 6
organization. 1
miss-handling 2
making 63
indeterminate 2
instructions) 2
inode) 2
incorporate 7
instead 95
isses 1
isn’t 26
influenced 2
mocked 1
possession 2
knowledge? 1
lively 1
overwrites 1
newly-freed 1
links 3
lucky, 2
modifies 1
located 13
lightweight 1
jumped 1
in- 1
hardwaremanaged 1
manual, 2
join(). 2
much 135
ld-2.23.so 1
maps 7
ownership, 1
ms, 5
ours: 1
mistake 3
malloc(). 4
individual 3
intact; 1
insisting 1
index. 1
interactive 20
it!) 2
journaling 3
inherent 5
mode. 4
pressed 2
left-shifted 2
p3). 1
nitty-gritty: 1
literature 1
machine? 2
modulo 1
lock_t 2
lock, 61
like; 2
incarnation. 1
harmful, 1
masking 4
judicious 1
name, 4
keep 48
measure? 2
p; 7
learn 65
outdated) 1
mix 1
malloc’d 3
informally, 1
multiple 95
interacting 1
interact. 1
info: 1
isolation, 2
it... 1
kinds 5
inject 2
printed 6
like: 3
page-replacement 6
nodes) 2
locality 18
machines, 5
moment 5
locking. 3
limits. 1
locks 79
has? 2
include 18
math 4
jumps 7
napping 1
languages. 2
message, 2
packages, 1
len:9 1
overall. 1
mode) 9
malloc” 1
informing 1
multiprocessors. 4
interested! 1
interest: 2
more 470
it! 14
information 57
know: 2
itself 32
inputs: 2
printf("%lld\n", 2
limit 6
park(); 4
nonsolution: 1
loss 2
main-two-cvs-while-extra-unlock.c. 1
monopolized 1
logs 1
long, 5
headed 3
load 35
inefficient 4
mathematical 1
kernel. 6
neatly 4
learns 1
messy 2
limits 6
page. 21
overhead), 2
move). 1
manages; 1
interleavings. 2
mythread. 2
interesting, 4
interleaving 4
jacket, 1
mutex 17
infrequently 1
known, 2
job, 19
instead), 1
printf("location 3
load” 1
park, 2
note, 5
lottery. 1
maliciously) 1
moving 13
longer-running 1
lowers 1
helgrind. 2
lock). 10
infinite. 1
maximum, 1
kernel’s 4
necessary 9
least, 7
miss), 3
legal 6
mode, 13
p3 5
ms. 5
internet 1
mapped 14
natively 1
interlude, 2
interrupt; 1
join. 2
myarg_t 8
inherits 1
large. 3
known: 1
instruction; 3
pro-cessor) 1
ls 1
participated 1
low-priority 1
malloc(20);. 1
machine, 8
muck 1
magic; 1
herein 3
lock_init(lock_t 4
inflation 2
microcode), 1
kind) 1
next. 10
look 121
literally 1
pages; 9
legitimate 1
model 8
p4.output 1
multiprogramming 8
intervening 3
metrics 7
necessarily!) 2
interpretation 1
knows, 1
is, 22
naive 3
injected 2
needed. 11
lags 2
interactivity. 2
process). 2
macOS, 1
partition 1
notice 34
many” 2
magic 7
main-two-cvs-while.c 1
multi-level 30
holes 1
logically 6
informative 3
migration 5
laptops, 1
notes); 1
loop; 2
lock) 4
pairs, 1
most. 1
part, 2
mutex; 6
invented, 1
let 36
miss; 1
neighboring 1
intervals 6
latency. 1
jobs: 2
latency) 1
innovations. 1
needless 2
lawyers 1
negative 14
internal 12
machinery? 1
perfectly, 1
now. 7
marked 11
malloc(10 2
mainframe, 1
nanoseconds), 1
however; 2
looping-race-nolock.s, 2
initializer 2
minicomputer. 1
laughing 2
nuances 3
locked 7
machine 34
papers 8
myret 4
myarg_t; 4
particular, 28
inversion, 4
levels: 1
mmap(); 1
nondeterminism 1
it; 14
layout 2
judiciousness 1
laughably 1
instruction(s) 2
processes? 3
learned, 1
new) 4
interposed 1
machines). 1
perform? 1
occasions 1
marriage, 1
manner 7
malloc(3) 1
newlyrunning 1
http://portal.acm.org/citation.cfm?id=540365. 2
looping-sequential 3
innovations, 1
minimum. 2
lengths: 1
miss. 9
looking? 1
main-signal-cv.c. 2
low 10
nearly-complete 1
n 4
peeking 1
modifications. 2
not; 1
issue 33
jumps) 1
learn, 1
known; 1
lay-out. 1
intervals. 1
processes” 5
lessons 5
no?). 2
like 215
interpret 1
main-one-cv-while.c. 1
phone 1
omitted, 1
matters! 1
means 31
malloc(strlen(s) 1
next-to-last 1
if, 4
low. 1
interfaces 17
occurs?” 1
lifetime 1
mistakes) 1
parameters). 1
malloc(), 3
lower-case 3
necessitating 1
nearly-infinite 1
people.cs.clemson.edu/ 1
notion), 1
move 31
keeps 13
library) 5
it, 68
lie. 1
lays 1
into, 1
produced 2
lines, 1
now? 7
linker 1
invented 5
main: 12
physics). 1
mean 6
measurement. 1
noble 1
man 21
illusion, 2
machinery 10
interfere 2
ones!). 1
list_t 2
mocked). 1
park(), 2
malloc(strlen(src)); 1
lowered 1
needed, 7
nonconcurrent 1
period 8
null.c 1
ms). 3
large-file 1
limits, 1
job. 8
limit) 1
intricacy 1
least 35
professors 3
one 500
location. 3
numbers). 1
list) 5
inversion 6
makes. 1
picks 5
mechanism, 2
memory; 19
none 3
manages 9
implicit 1
main-two-cvs-if.c. 1
interrupted. 2
oops, 1
lists 13
more). 1
pdflush), 1
m->flag 6
normally 2
phrase 2
object), 1
much... 1
last); 1
loading 6
job’s 2
limited 17
introducing 5
length). 2
many 252
profilers 2
obscure 1
locking 34
listed 1
is! 2
mappings 8
pipe, 2
megabytes 3
methods 4
not 449
not? 2
manner; 1
only 202
improving 4
malloc(sizeof(double)); 1
issue; 1
opposite: 1
lives, 2
moves 15
physical. 1
macro 1
notice, 3
physics 1
observation 5
multiprocessor, 2
last-in 1
lock), 2
key 28
line 14
intuitively 1
lmbench 4
marking, 1
projects, 1
obvious, 2
longer 17
location, 6
masks 2
please 3
memories 4
million 17
nothing”; 2
note: 4
memory): 1
oops! 1
influential 4
manner? 1
job) 3
or, 5
locality. 4
multiprocessorbased 1
points. 1
maintains. 1
now: 1
popular 7
obviously 5
myargs); 2
later 36
knowing, 1
long-running 15
invocation, 1
looked 8
local-to-global 2
mathematician 2
proverbial 1
offset, 2
lowering 1
locks) 3
meaning 3
pmap, 1
mental 2
mind, 4
objdump 8
notice. 1
micro-instructions 1
open()? 1
initially, 2
manufacturers 1
journalism 1
orderings 2
lock()), 2
multiprocessors, 2
malicious, 1
portion 20
on-chip 4
porting 2
occurring 3
natural 9
latter, 2
labeled 3
list, 26
it) 5
low, 3
meant 1
location 39
mechanism 18
once. 5
lowest-order 1
macros 1
mem 10
pool 1
mentor, 2
objectoriented 1
misses 21
num 1
mines 1
optimal, 5
initiated 1
memory-constrained 1
key; 6
otool 2
it 1299
lot 35
mythread, 14
me 6
practice 4
preemption 2
one, 26
offset=04); 1
newly-opened 1
lets 10
larger, 2
lock? 10
it?!) 1
lowered, 1
pthread_mutex_trylock(pthread_mutex_t 2
long-list 1
ptr 16
one-quarter 1
manager, 3
made. 2
more, 6
populated, 1
metadata 1
once, 9
month. 1
obvious) 2
minicomputer 5
insertion 2
memory-failing 2
known). 1
out-of-bounds; 1
item. 1
luck 5
need. 2
measure 21
precise 4
prior). 1
other, 5
operator 3
news: 2
other 303
laser-like 1
level 23
locks, 22
itself? 1
lowest 9
memory-reference 1
lookup? 1
query 1
operate): 1
marvel 1
magnificently; 2
most-significant 1
power.” 1
method 8
ongoing 1
online, 2
main 66
minimum 2
interleavings 4
message; 1
language 8
p1, 5
iteration. 1
magic. 1
needs; 1
memory-mapping 1
pro2 1
predict 16
outcomes? 4
optimality 1
notes. 1
overflow. 1
laziness 2
light 1
looks 39
machine) 2
microseconds, 2
loop? 1
questioning 1
opposite 5
multiples 1
pre-configured 1
millisecond. 1
more! 1
off), 2
may 123
matches 1
operation 20
intermediate 1
miss 32
methods, 1
just 304
later, 5
pagereplacement 1
jne 3
main-signal.c. 2
negative). 1
mentioning: 1
proceed! 1
predictors, 2
overcome. 2
options 3
nothing 5
own. 2
notion 12
leads 13
lookup. 3
madvise), 1
mid-instruction, 2
loops, 4
read/write 1
opt 1
major 28
predictable; 1
milliseconds; 1
multicore 6
offending 10
mem.pdf 1
measurements, 1
optimal; 2
interrupt. 4
mmap() 7
miss); 1
law 2
paging). 1
just-finished 1
kind 54
maintaining 1
network 2
metric. 4
process); 1
pressing 1
overhead 12
others). 1
likes 1
p2 7
number. 2
leak, 1
loop. 8
magnitude 1
minimal. 2
reason. 3
multiprocessing). 2
optimization, 3
malloc(100e6)); 1
preferred; 2
mistakes 3
names 1
offset=000000, 1
memory-related 1
measures 2
optimize 4
is? 2
mode). 1
misses, 8
ldrex/strex 2
pairs. 1
keyboard, 1
late 4
manner. 7
network-connected 1
job 144
previously) 1
processes, 31
oversubscribed, 1
output; 1
lives), 1
paging, 4
object 10
legality. 1
loops; 13
minimizes 2
receives 4
mutex, 4
out; 1
managed, 2
primitive! 2
modified 15
networking, 1
once”, 1
make 214
order), 1
more) 1
mode; 2
memory. 103
level, 3
parallel 6
kill() 1
later. 9
material 8
mighty 4
known. 1
memory, 124
primitives? 2
producers, 1
parameters: 1
over-designed 1
locate 3
parameters. 2
new 140
occurred 3
liked 1
lucky 3
misses! 1
recollections 1
mutual-exclusion 2
outlines 6
matter, 3
primitives. 8
more. 14
new->next 4
orphaned 1
malloc(sizeof(node_t)); 8
one. 24
multiprogramming. 1
movie 1
millions 3
ms 14
parameter, 4
knowing 6
leaked 2
meltdownattack.com 1
milliseconds, 2
lack 4
memory-user 4
printing 3
professor 2
park 6
p3) 1
locations, 1
parentheses 2
non-ASLR 1
occurrence. 1
linear. 1
m; 1
ms), 4
recover 1
myret_t; 2
own? 1
measurements 4
process; 13
music 2
newly-created 3
otherwise). 1
mandated 1
open-source 2
myargs[1] 2
likes, 1
mind-blowing 1
much-improved 1
park(). 2
least- 1
larger 23
memories. 1
more? 1
launch 2
priority) 1
mov 33
programming 7
paths. 2
package 4
lock->ticket 2
perror("malloc"); 4
noticeably 4
odd 6
loaded 17
must, 1
machines 21
regain 1
negative, 3
p2.c 1
protections 4
mutex. 1
nice), 1
manual 13
memory 568
name; 1
output 36
linear) 1
minimal 7
multi-CPU 3
path 8
least-frequentlyused 1
leak 2
memory-add 2
lazy; 2
message 10
must-read 3
progress. 3
privileged 24
perfectly 2
lock-free 3
pair 21
persistently, 1
nuclear 1
offender. 1
local[NUMCPUS]; 2
naturally-occurring 1
main-deadlock.c. 2
representing 2
page-number 1
paging-multilevel-translate.py; 1
node. 1
next 101
operations, 3
name 22
map 7
mess! 1
naturally 4
p4.output. 1
load-linked 14
misbehaves 1
multiply 2
lock; 24
leaving 3
libraries 3
method. 3
leaking 3
minutes 1
need 152
project, 2
probes 1
looping 1
performs 21
passed, 1
pipe 8
nuts 1
oh 2
newlyfreed 1
matter; 1
requiring 11
pthread_join(pthread_t 2
paradigm. 1
node_t; 5
original; 2
nice 34
nearby 2
marks 4
pageable 1
mitigates 1
peach, 3
myarg 2
logically-different 1
level. 7
limiting 1
middle 11
learned 13
nanoseconds). 1
miss) 1
lock 370
needed). 2
ps 2
low-cost 1
problem: 25
physically 2
patent 1
might 218
pmap 5
objects 5
order; 1
notes, 3
resource. 2
mechanisms 32
pthread_mutex_unlock(&c->llock[cpu]); 2
parent) 1
node’s 4
other. 8
not. 14
negatively) 3
marvelous 1
part: 4
maximum 8
peanut 1
needed; 1
longlived 1
libc, 1
lists. 1
modified. 1
life; 1
nearest 1
missed 2
logical. 1
no? 8
re-referenced, 1
lower-priority 2
pipeline, 2
process, 51
pattern. 2
models), 2
previously, 1
occasion; 1
ority 1
notices 2
resources; 2
memoryreference 1
pthread_mutex_unlock(pthread_mutex_t 2
password 1
others; 1
of... 3
newer 2
much: 1
patterns 4
mem-access 1
performance; 5
main(). 1
now 184
libraries) 1
never 38
ll/sc 2
mother 2
lifetime, 1
negatives, 2
mode 23
lower 13
none, 1
reach 2
main(int 23
ponder: 1
processing. 1
performance: 4
permanently-valid 1
priority, 7
occur. 3
out? 1
now! 1
respect 2
microprocessor. 1
purpose, 1
penalties. 1
other’s 1
non-blocking 2
nanoseconds, 2
pauses 1
old 60
mem? 1
permissible. 1
main-signal-cv. 2
old_ptr 4
lifted. 1
nothing) 4
loathe 1
mythread() 2
nicely. 2
linear 34
lowlevellock.h 2
numbers 12
ready. 1
modern 90
malloc 8
power-of-two-sized 1
producing 1
much, 1
pesky 1
priority-based 1
occurs; 3
overview 12
number, 4
restored. 1
mind 5
queue), 1
people. 1
p 1
notice? 1
numbering 1
people, 1
online: 1
metric: 1
phones 3
maintains 1
on). 1
locally-allocated 2
noticed: 2
lock->turn 8
myturn 2
nightmares 1
lines 14
machinery) 1
oblivious 1
receive 11
n). 1
mapping, 1
powerful. 3
practice! 1
proceeding. 1
multi-threaded 44
odds 1
programs 85
page: 1
obvious. 2
retains 1
miss, 10
races, 4
per-process 12
p1–p3). 1
obvious: 2
obvious 12
percent 6
operation. 5
moment. 1
phrase... 1
manipulations 2
otherwise: 2
location.” 2
now, 18
luck. 1
name. 4
node, 1
list? 1
main); 1
occur 9
recommended 1
named 8
massive 4
prerequisite 1
precision 2
processor. 9
multiplied 3
one-third 1
properly. 1
papers, 6
retry 6
modify 3
randomness 6
perfect... 2
packaged 2
occasionally 3
oddity: 2
performance? 3
opposite, 1
mouse), 1
piena 1
maximize 2
overflow 3
lock(), 8
now-extinct 1
maintain, 1
nasty 1
now-standard 1
lists, 7
oddly 1
regions, 2
malloc() 32
master, 1
preventing 3
preferably 2
programmed 1
needed 44
multiprogrammed 3
open("./p4.output", 1
provided. 2
parallelization, 1
running), 1
money 1
rate. 3
offset: 1
perhaps 39
off, 3
performance” 1
optimal) 1
pipes, 2
movl 28
memory-bug 1
pages 195
lookup, 2
once; 4
makes, 2
own 72
nature 8
ocean, 1
load; 1
offset), 1
regs(A) 3
math. 1
manage 19
previously 3
preserve 1
proportionally 1
new; 8
nears 2
opinions; 1
pseudocode 7
parcel 1
runs. 11
mostly 4
readied, 1
one-to-one 1
persistence. 2
permit 1
offset 42
organize 1
player 1
multiple-queue 1
memory-user.c. 1
pals 1
loop, 10
onto 17
p); 1
management 29
olden 1
needs 32
locality: 2
repair 3
logical 15
management, 1
often 69
pthread_cond_signal(pthread_cond_t 3
primitives 15
newly-allocated 2
priority 61
next: 9
optimizing 2
pthread_mutex_init(&c->llock[i], 2
rw- 1
much; 1
one? 1
reading 21
part 52
persistence, 1
place. 16
oops.x 2
output. 2
pointer, 10
multiprocessors 5
metric 5
patch 5
main-deadlock-global.c. 2
open. 2
p3.c 3
material. 3
open 7
newly 3
measurements? 1
replacements 2
lookaside 4
manager. 4
once). 1
purpose 9
problem; 2
nothing. 2
proceed 6
others), 3
node_t 24
purify, 2
scale. 1
multiprocessing 1
ones, 2
one” 1
persistent 4
ploticus 1
optimization 6
overcome? 1
possible, 14
particular 60
mutex_unlock 2
microsecond. 1
performance-minded 2
out-of-memory 1
malicious 14
page). 1
pass 54
operations. 8
newly-fetched 1
megabytes). 1
reset 3
lookups. 1
marking 2
one: 3
put(i); 5
problematic: 1
numbers) 1
processes”, 2
outcome. 6
non-cooperative 2
putting 17
scientist 1
naturally, 1
reality 7
oops 2
persistently; 1
overflows 4
pointed 15
overzealous 1
power 8
new->key 4
min 3
performed, 2
overcome 3
malloc. 1
maximizing 1
pages); 1
pausing 2
out-of-bounds 1
non-scalable 2
memory-access 1
resource; 1
restricts 1
meeting 1
microseconds 2
migrate 1
migration? 1
processor, 13
program-debug 1
program4 1
non-preemptive 2
non-stop; 1
neat 8
search 20
recommend 2
opposite. 1
phase 3
overwrite 4
pointers? 2
ownership 1
precautions 2
new_head->value; 2
nptl 4
physically-indexed 1
overheads? 1
manifesto 1
memcheck 1
parameters 9
perceived 3
outputs. 2
nor 1
memory? 9
loop.s 6
retain 1
oops; 2
q->head 4
object. 1
miniscule 1
of 3668
produced, 1
over. 1
prove 5
quantum 5
notably 5
necessary; 1
second: 1
recursion 1
physics. 1
owns 2
policies; 1
page-directory 5
preemptive, 1
mini-computer; 1
number), 1
pioneering 6
overwriting 2
mapping: 1
memory); 2
peaches; 1
perfect. 2
page), 2
o 2
memory” 1
page-table 31
revolutionized 1
opinion 1
queue) 1
offers 1
misses), 1
offset. 6
professor? 1
overload. 1
or 469
provides 30
questions 13
occurs)! 2
need, 1
sections. 4
recycles 1
place, 9
p1.c), 1
poorly. 2
park() 4
present, 2
models 2
numerous 12
own, 3
masses: 1
policy 50
memory-mapped 3
milliseconds). 1
person 3
obey 1
loops. 1
lovely 1
pagedirectory 1
rightly 2
quote 7
omniscient, 1
mobility 1
on-disk 5
once 60
professors, 1
p: 18
orderly 1
pseudo-random. 1
randomization, 1
omit 2
networking 3
semaphores” 1
register), 1
platform, 1
pages). 3
positive 4
patterns. 2
prevented 5
mode” 1
of) 3
p1.c. 1
max 1
possess 1
piece. 3
minicomputers. 1
phenomenon 1
observing 1
mesmerizing. 1
magic: 7
paper: 1
routine1, 1
races 4
molecules 1
order 80
ones 8
online 6
prompt 4
pages: 2
organization, 1
pushl 1
re-enable 2
one). 1
non-contiguous 2
semi-nal 1
relaxing 1
poorly, 1
pause) 1
practical 8
percentages. 1
modification. 2
print 25
on! 2
p3.c, 1
meaningful 5
potential 12
plain 2
moglie 1
placed. 1
occurs 19
mess 1
malloc.py, 1
re-acquire 1
run. 22
monster! 1
outcome 4
performance 91
optimization. 1
opens 4
protection; 2
painful; 2
original, 1
put(int 2
read-only 1
puts 19
norm, 2
separation 5
popular. 1
releasing 16
peaches. 1
prepared 1
perhaps, 1
multiplex 1
printf("%s\n", 3
on-going 4
parameters, 5
meanwhile, 1
precisely 2
pointers 5
mother. 2
policies? 1
onnv/onnv-gate/usr/src/lib/libc/port/threads/synch.c. 2
messages 1
manager 3
reads” 1
runs; 3
motivate 1
person; 1
ordering; 1
opportunities 1
pthread_mutex_lock(&q->tail_lock); 2
over 90
other? 1
parent 44
open("/tmp/file", 1
read-write). 1
occur, 2
rate 27
servers, 2
possibilities. 1
reliability 2
processors 16
pipe() 2
per 57
myret_t 6
open, 1
part) 1
measurement 3
preempts 1
process. 69
postulates 1
multi-queue 4
practice, 1
open(), 1
microcosm, 1
manner: 1
referenced; 1
rv; 2
moustache 1
piece, 1
organization 2
option, 2
ptr, 3
overhead. 1
others, 4
option 1
parts 19
rearrangement 1
often, 7
re-referencing 1
similarly 3
powerhouse 1
remaining 13
production, 1
played 1
perform, 1
needed? 6
operational 1
passed 18
messages. 2
previously. 2
process’s 18
multitude 1
powerful 21
prevents 3
opinions 2
migration. 1
match. 1
references, 1
rvals; 2
pioneer 2
original 19
ordered 4
others 14
overheads; 1
overall, 1
out! 1
overheads 14
must 152
reboot 6
oops.y 2
reached 1
simple, 9
printf("child\n"); 3
reporting 2
productive. 1
pouvoir”, 1
predictors 1
nicely 1
others) 2
paths 4
met 1
printf(), 1
properties 8
myargs[2] 2
pthread_mutex_t 22
printf("(%d) 2
opposing 2
million); 1
matter. 2
register) 2
satisfy 9
plots 3
python 1
out.” 1
our-selves 1
page? 1
pause, 1
overcoming 2
overlays, 1
n; 1
reduced-instruction 1
optimizations. 1
realize 5
size; 6
printf("hello 3
resources? 1
program; 3
performance), 1
preferred 2
non-performant. 1
out"); 1
peach? 1
mild 1
priority. 8
pre-WWII 1
mystery 1
pthread_mutex_unlock(&q->head_lock); 4
procedure. 1
orders 2
mobile 1
memory-intensive 1
rele-vant 1
sbrk() 1
policies: 2
overlap, 1
quickly 21
overall 9
pages, 26
pay 12
overlap 6
overly 3
nanoseconds. 3
reduces 9
order, 5
regardless 2
slowly, 4
rolls. 1
prohibitive. 3
performant) 2
presenting 1
non-zero, 1
p. 1
problem 121
per-futex 2
pages. 28
problem? 2
preferring 1
news 2
queue_init(m->q); 2
out). 1
modes 2
mid-execution 1
relocated; 1
scheduler); 2
no 140
politely 1
p5 5
randomly-generated 3
overlays 1
paging-linear-translate.py, 1
peep 1
overly-large 1
p1 8
networks, 1
relocation; 1
ordering. 2
remote 1
someone 3
says: 1
protection, 2
pick 15
preserves 1
occurs), 1
processes: 4
milliseconds 6
paid 1
performance. 35
problems, 12
presents 7
rage. 1
outcomes 1
modified). 1
middle, 1
remove 10
processes 107
school; 1
none.” 2
pretend 5
pages), 1
re-check 3
owns. 1
parameter; 2
percentage, 1
overwhelm 1
page(s) 1
no, 1
replacement; 1
origin 2
responsibility, 1
scales? 2
question; 1
pieces. 1
prio_to_weight[40] 1
sometimes 73
odds: 1
professor. 2
minute?), 1
pattern 5
place; 1
problem” 1
presumes 1
raising 3
overheads. 4
multi-processor 4
minds 1
replies: 1
producers 3
section. 34
not, 14
problematic 2
pagetable 4
reacts 1
p4.c 2
paranoid. 1
perl). 1
pages) 3
paged 1
non-computer-types 1
represents 4
ory. 1
rest. 2
scheduler; 2
queue. 12
pleases: 1
problem. 26
sooner 1
once? 2
programmer), 1
modes. 2
pause 2
players 1
producer, 2
principle. 1
ran, 1
own; 3
mutex->flag 6
minimizing 1
responds 2
program? 6
sections; 4
obey. 1
problems. 11
paradigm 1
realization 1
page-frame 1
park. 2
permanent 1
process 403
parameter 6
normal 11
require. 1
ourselves 3
returning. 1
scope 2
queue_t; 2
pressure. 2
space-management 1
operations 26
programming. 5
modifying 2
percentage 5
pointer? 1
pthread_mutex_init(&lock, 2
privileged) 2
random, 1
painful 7
miss? 1
mutual 29
responsive 1
programmer; 4
sentence. 2
obtain 10
processes; 7
parent; 1
reason: 3
panacea, 1
papers. 4
passing 12
particularly 27
processors, 9
peach 4
producer/consumer 9
periodically 9
over, 1
revenge 1
scorned, 1
queues; 1
primitive. 6
spaces). 1
optimal. 1
property, 2
module 1
performance, 14
poor 10
q->tail->next 2
proc 5
randomized 2
passes 5
mjtsai.com/blog/2015/12/16/osspinlock 2
myturn) 2
restricting 1
programs, 16
separa-tion 1
obviates 1
processes’ 1
part. 1
recourse: 2
persons 1
parallel, 2
patience, 1
partner 1
notes 5
requirement: 2
producer; 1
pigs. 1
packed 4
right. 5
segmentation, 4
re-reads 1
primitives; 2
optimizes 4
ps. 1
monitoring 3
period; 1
powerful, 2
stack 79
quickly. 5
proc_state 2
range 7
peach. 6
monitors 5
name). 1
return. 1
project 4
server, 1
occurs. 3
produce 9
peaches, 1
perspective 8
path, 2
placed, 1
references 28
per-CPU 5
now), 1
respectively, 1
promise 1
pipes 4
pain 1
rvals->y 2
sensitive 1
reader 7
printf("Final 1
ptr; 2
out, 27
mutex_t 5
placing 7
powers 1
stack”! 1
radical 2
process), 3
rarely-used 1
perfection 1
moreover, 1
necessity! 2
rewrite, 2
pthread_mutex_lock(&c->llock[cpu]); 2
server-based 2
producer. 2
peek 1
pessimal, 1
peaches 2
possibly 1
point 39
performs. 2
null-pointer 2
response-time 1
prone; 2
ple 1
patches 2
say? 1
sent 3
realloc() 4
printf("Initial 1
quantify 3
p4 7
my 6
plans 1
pre-specified 2
straightforward; 1
rc; 4
profit 1
read() 1
periodic 1
moved 6
needlessly 3
scare 1
pthread_mutex_lock(pthread_mutex_t 2
serviced. 2
program: 6
pending 1
performing 14
relinquishing 2
pieces 19
pre-initialized 1
permissions 1
null. 2
proportionality 1
result, 12
pleasure 1
paying 3
says, 1
sequential” 1
on 719
referenced 6
private, 3
queue, 17
paging. 4
namely 5
policy. 4
stuck, 1
readable 1
prints 41
pthread_mutex_lock(&L->lock); 8
reader: 2
periodically. 1
much. 6
network. 2
scorned 1
pthread_mutex_unlock(&L->lock); 12
sits 3
prone. 2
people 28
potentially 7
remembers 2
placement 1
precious 2
picture 5
proves 1
ret 1
picture, 5
pointer 55
scheduled; 1
set. 2
operation, 9
register. 4
privilege 8
re-use 1
paper, 3
near 13
portions 7
subset 3
number 198
real, 2
proactively. 1
publicized) 1
recent, 1
philosophy 1
multipro-gramming 1
new. 3
screen. 3
questions, 3
sizeof(PDE)) 1
protocol 3
persistence 1
premature 2
picking 6
player, 1
presented 8
plenty 3
purify 1
reverts 1
pointing 2
positively) 3
screen, 1
sharing. 3
opportunity 1
registers; 4
probabilistic 1
read), 1
parallelism. 2
nearly-endless 1
preserved. 2
substantial, 2
objectives; 1
surprising 7
proceeding 1
quantum) 1
reduction 2
pointer. 3
mutex_lock 2
newfile.txt 2
searches 3
r-x 5
sketch/review 1
providing 16
remove_min(queue); 1
premise 1
pieces, 5
plural) 2
prevention 2
pmap. 1
rage 3
right.” 1
preparing 1
possible 31
sense. 11
shouldn’t. 2
order! 1
relatively-slow 1
properties: 1
receive. 1
paralleliza-tion, 1
newfile.txt. 1
printf("%d\n", 7
realized 8
observes 2
switches, 2
processes) 1
rabbit 1
region) 1
pop 1
myargs[0] 2
non-synchronized 2
segment; 4
re-referenced 2
sleeping, 3
pthread_mutex_lock(&c->glock); 4
responsiveness; 1
presence 11
piece” 1
policy) 1
printf("%p\n", 1
policy, 12
randomization 3
rip 1
preemptive 2
pretty 26
sequences 5
sidebar 2
output, 2
released. 6
recommended. 1
parent: 2
protection 22
node 12
privacy 1
rearranging 1
occurs: 1
swtch(struct 1
raise 10
processor 28
registers), 2
popular, 1
mythread(), 2
non-zero 3
read-only, 2
segmentation 26
slices 10
quest 3
retry, 1
printf("this 1
pioneers 4
pool? 1
priorities 5
possible; 2
rates 1
rules 6
process) 6
present 36
signal/wakeup 1
outside 4
relocated 6
recursion). 2
partially-ordered 1
pthread_mutex_init(&L->lock, 4
not), 3
set 146
problematic, 1
reasonably 3
off. 1
symbol 3
reason, 8
programs5 1
relegated 2
popular-sized 1
nanoseconds 1
nondeterminism, 1
really. 1
sensed, 2
snippet 9
question: 7
rewrite 8
priori 3
popularity 1
programmer. 5
place 46
possibly-failing 2
re-accessed 1
rvals->x 2
processed 2
printf("parent: 6
simultaneously, 1
overstate 1
renders 1
reducing 6
past, 4
quoting 1
noticed 5
set-top 1
problems: 2
reclaims 1
on, 11
sharing 30
recently. 2
repeat, 1
possible. 14
nature, 2
prompt> 37
noticeably. 2
rearrange 2
share; 1
solidify 1
queues: 1
right); 2
proceeds 4
potentially-starving) 1
progressed, 2
placement, 1
posterity) 2
reader, 1
satisfies 1
professionals 3
priorityadjustment 1
sizes, 2
oversubscribed; 1
representation 1
register, 6
performance2 1
r-x-rw--r-x-r-x-r-x-r-x-rw--- 1
observed, 1
process? 4
references. 2
system1 1
once); 1
shouldn’t 5
table. 26
pragmatists 1
refer 27
necessary. 1
protocol. 4
now-sleeping 2
reassurance; 1
short-circuiting 2
shortcomings. 1
rather, 11
rogue 1
professional 1
pressure 5
prohibitively 2
poorly 3
precisely, 1
realizes 3
saw 12
programmer, 1
probability 2
slumber 2
p2; 5
reside). 1
regs 3
performed 11
raises 8
obtained 1
protocol, 1
region, 5
repeating. 1
signal. 3
tables; 1
precisely? 1
needs, 2
releases 14
protocols; 1
objects. 1
reboot, 1
solve: 1
simulator. 2
operating 151
ratios 1
saves 9
progress 8
primarily 3
projects 3
predate 1
prematurely-optimized 1
recall, 1
saying 4
properties; 1
processors. 3
small! 1
packing 2
replete 1
personal 1
returns 61
reac-quiring 1
ocean 1
pthread.h 2
relates 3
reproduced 1
signals; 1
thank 2
preemption, 2
non-concurrent 1
reliably 3
pthread_mutex_unlock(&lock); 2
obviously, 1
regions 11
sometime 1
simultaneously 11
p3.c), 1
readers, 1
say), 2
proportional-share, 1
primitive 9
promoted 1
preserving 1
printf("main: 8
rechecking, 2
proportion, 1
scheduler, 20
product 1
something, 2
reset. 2
phases 2
rise 2
reasons, 6
space. 45
pthread_cond_t 3
relocation 6
required, 3
simulator, 1
thinking: 2
prefetching 2
noticing 1
resource, 4
published 4
oh! 1
relaxation 1
space). 3
sincerely 1
really) 2
page, 28
scale: 1
protection. 3
principles 5
protected 4
pressure, 2
problem”, 1
record 6
second-chance 1
program) 1
resistance 1
place? 1
routed 3
pthread 57
on) 1
received 3
sparse, 1
pthread_create(pthread_t 2
replacement 30
sleeps 4
research 18
thoughtful, 1
prepare 1
null 2
page 635
restored, 1
push 2
on; 1
reload 1
spaceshared 1
single, 1
recently, 1
page-not-present 1
scary 1
pthread_attr_t 2
priority). 1
pthread_mutex_lock(&q->head_lock); 2
pretends 1
programmer 12
referenced, 1
secretly 3
progress, 1
resource) 2
protect 11
rvalue); 2
operation), 2
refers 9
spawn() 1
pushing 2
quite 114
requires 25
research.microsoft.com/ 2
thoughts 5
primer 1
obtaining 4
painful. 1
reused, 1
queue; 5
operator, 2
remainder 1
spear-headed 1
situation. 2
reclaimed, 1
page-sized 4
scenario. 4
pthread_mutex_init(&q->tail_lock, 2
probabilistically 2
space 278
pthread_mutex_timedlock(pthread_mutex_t 2
primitive, 2
proportion 5
regained 2
see. 4
planet 1
results? 2
pthread_mutex_lock(mutex); 2
resume 8
saved 11
relocation.py 1
species. 1
removing 8
quote: 2
root, 1
resize; 2
threshold) 2
printf("%s: 4
occur? 2
passion 1
routine. 2
random-access 1
request. 7
started, 1
records 1
sizes 8
pal, 2
scheduler.py, 1
pthread_mutex_unlock(&c->glock); 4
proc-struct(B) 1
specified 8
put() 4
priorities; 1
provisions 1
region; 1
out 181
seen 31
plus 11
opposites 1
policies, 7
revolutionary. 1
scenarios, 2
race): 2
spend 10
requesting 1
randomness. 1
rude 1
respectively. 2
tmp->next; 2
product. 1
occurs, 14
pays 1
rudimentary 4
off 30
requests; 1
stash 1
redirect 2
sleeping). 1
parameterize 1
school: 2
publishing 2
process: 2
split 9
puzzle 2
pure 2
processes. 22
relaxed: 1
outrage! 1
series 9
purely 1
optimizations, 3
poorly? 1
ruins 2
scripting 1
readable. 1
resources, 4
range; 1
run; 1
result. 11
spin 79
topmost 7
professor, 1
penalty 2
ranges 1
run? 8
offered 1
researchers 8
runs, 21
region. 1
slowed 1
parent? 1
scientist, 1
rapidly 1
src); 3
programs. 25
queue_add(m->q, 4
purpose. 2
produces 7
remedied 2
packet 3
set” 2
purposes 2
optional 2
positivity 1
ran 15
security; 2
readonly 1
restricted. 1
re-initialized. 1
runtime, 2
read, 7
spin-waiting 4
tricky 10
program). 2
performance”, 1
rdtsc 3
often? 1
resizing, 2
statement. 2
restores 4
regular 2
small-scale 1
patience 2
seamlessly 1
rate) 2
stack-allocated 2
proliferation; 1
rare 2
queue). 5
property 10
remind 1
page; 5
shooting 1
ordering, 2
run-time 7
prac-tice, 1
seemed 1
reasonably. 1
random 37
return-oriented 1
rosy 1
rvals->y); 2
reap 1
stand 1
programmers 13
perspectives 1
typical 26
realistic 3
opened 1
satisfaction, 1
storage. 1
return-to-libc 1
removed 6
perfect 7
requested 8
rc 13
so, 37
promotes 2
starting 14
re3 1
quote. 4
prot 8
repeating 1
simplest: 2
out. 11
safer 2
prefer 2
paper 85
reboots 1
rc, 3
returning) 2
segment 56
section; 2
running, 30
store-conditional, 4
programming, 2
peterson.s, 2
reason 32
unanswered: 1
rebooted, 1
operating-system 3
scale, 1
string, 2
returned. 2
shells). 1
permission 1
researchers/engineers, 1
rc_wait, 2
somehow, 1
proofs 1
starve). 1
read. 6
readability 1
protective 1
resort 1
simplifying 3
p6 5
scalability 2
presumably 4
parent. 4
relatively-short 1
re-acquires 4
right) 1
semantics, 5
sees 4
runtimei 1
stream. 2
proportions 1
phase, 4
rechecks 2
reg/PC 1
understanding 19
origins 1
scenario 4
structures? 1
returnsfrom-trap, 1
shipping 2
persists, 1
re-checks 4
results 17
stems 1
ran; 1
provide 65
protocols 2
readily 5
responsabilit 1
something 132
sketched 1
page) 4
scanning 3
prevent 8
past 6
relocation. 2
re-energized 1
routines. 1
sequence: 1
services, 1
safe. 2
structure) 1
said, 10
photos 1
recorded 3
recourse 1
redoing 2
outcome? 5
scheduler), 1
strung 1
room: 1
shrinks 1
personally 2
reaction 2
returned) 2
strdup("wc"); 2
ready 33
physical 236
pthread_cond_wait(pthread_cond_t 3
ready), 2
space-usage 1
slight 2
sparse 7
result 30
scheduled 11
primary 9
penalize 1
replacement. 4
reaching 1
runaway 1
setassociativity; 1
provably 1
short 29
students 3
share 36
regions) 1
undo 4
referencing 1
p1.c) 1
scheduling. 9
sudden 1
routine1 1
similarly, 3
physical, 1
review 2
random; 1
pthread_create(..., 4
really, 4
stream 7
pthread_create(&p, 2
points 15
reasonable. 3
page-fault 3
slightly; 1
spatial 7
return? 2
scoff 1
printf() 1
person! 1
requested, 2
ready, 3
runs? 2
question). 1
single-threaded 4
say 29
success! 4
she’ll 2
register; 2
unimaginatively 1
regards 2
pains 1
school, 2
susceptible 3
rules, 1
simplicity; 2
pipe; 1
road, 1
randomizes 1
placed 24
role 11
pthread_mutex_init(&c->glock, 2
put 41
preempt 2
recall). 1
paper. 1
sneaky 2
src.opensolaris.org/source/xref/ 2
returns, 7
scratched 2
prioritizes 1
perspective. 2
resident 2
sane 2
single 203
recent 16
sit 6
scaling, 1
sure; 1
simple) 1
release? 2
reliability. 2
updates 33
passive 2
searching 4
switch() 3
rvals->x, 2
replacing 3
randomly-accessed. 1
structure; 2
plays 2
roused 2
pthread_mutex_unlock(&q->tail_lock); 2
question! 1
recognized 1
previous 19
par-allel, 1
software 17
reveal 1
segmenting 1
start 58
pid; 1
problems 55
places 6
scenarios 2
rest 18
sitting 4
refer- 1
sizeof(int)); 2
scenes, 2
swap? 1
simplicity, 16
reliable 6
slice 36
us. 4
path. 3
section? 4
swtch: 1
rw59 1
reproduce, 1
talk 10
request, 10
routine, 10
questions. 3
read 91
reduced. 2
previously; 2
partition, 1
queue 55
solution. 8
rid 1
senses 1
starving 1
ran. 1
process-run.py, 1
platforms 2
sched 7
results, 4
sketch 3
regard, 2
system), 3
schedule 14
simulation. 1
relocating 1
repeats, 1
usability 1
slightly 19
sections, 2
table; 5
saying, 1
perform 70
poorly-programmed) 1
testand-set 1
requester), 1
rule: 2
read(), 1
reasonable 9
register-level 1
printf("hello, 6
patterns), 1
realizing 1
soon, 1
robust 9
serve, 1
states: 1
service 11
produced. 1
point. 7
schedule: 2
retries 4
slab 5
registers) 2
table2 1
related 18
situations 3
request? 1
replaced 2
use) 10
small). 3
see). 1
teaching 1
seeds 11
scalable 15
procedure 12
themselves, 1
residing 2
runnable; 2
real-world 2
reduced 5
remarkably 1
priority; 1
phone, 1
red-black 4
sorry, 1
rwrw- 1
random. 1
store-conditional 7
settle 1
producer 26
pointer). 2
scream, 2
sleep) 1
returning 27
slot 7
tables? 1
relatively 16
sizeof(PTE)) 7
requests, 2
repository 1
usual, 3
smaller 14
philosophical, 1
them), 2
segments. 3
second; 1
processing, 3
think. 2
rethink 1
rw45 1
reboot. 1
references: 1
renewed 1
problem, 24
redirects 1
space? 6
piece 36
rw— 2
rarely 1
stores. 1
short-lived 2
professor! 2
points; 1
seconds!). 2
scheduler. 10
small) 1
tens 2
right 42
slow. 3
release 23
research; 1
required? 2
v 2
snapshot 1
pioneered 4
ship 1
see: 2
properly, 1
those 84
tickets), 1
returned, 2
time-slice 5
recognizes 1
tmp; 7
requests. 6
processing 4
reflect 4
spaces, 5
place! 2
safe 6
rarely-taken 2
successful. 1
sign 3
secure 3
scheduler’s 1
program, 58
policies 35
test-and-set! 1
safe? 2
slowly) 1
relevant 13
reside, 1
reserved 6
valgrind? 1
pleasure: 1
so. 15
shoppers 1
semaphores 1
proportional 3
so 197
thought 17
same, 3
rewrites 1
register). 1
shows 94
to) 1
reside. 1
programmers. 2
space” 1
platforms. 1
scalability. 1
react 1
register 75
successfully) 1
signals 13
semantics 8
secretary; 1
proofing 1
pollutes 1
test-and-set.s 2
scheduler? 5
small: 3
removes 1
resided 1
varies, 2
responsibility 6
point1 1
solutions 11
server 11
proportional-share 6
solving 4
tickets, 4
saved? 2
right). 2
reduction, 1
relative 3
single-queue 4
too: 2
rest, 1
programming: 2
stack), 2
pleasant. 1
scheduled. 2
reads 10
relaxed 2
summary 5
sequence. 2
similar 45
pros 1
seemingly 12
pragmatic 1
schedulers, 1
them, 20
sparsely 1
repeat 1
resource 14
wasted. 3
responsibility!” 1
popl 1
spin-lock 2
setaffinity() 1
provided, 2
somebody 5
they 149
sbrk 3
refine 3
relax 10
six 3
tool. 1
resuming 1
pronounced 1
starvation 3
policies. 7
properly 15
superuser 3
short). 1
similarly; 2
reference 57
pursue 1
segment: 10
predates 1
secondchance 1
scheduler 110
specify 10
represented 3
restored 4
weird; 1
result! 2
posed 5
run 374
stack: 3
q->head; 2
timeline, 1
somehow 6
shared 67
schedulers 14
rent 1
scheduling, 15
relinquishes 1
sleep; 4
tragically 2
return-tolibc 1
statistics 4
released 10
preempted 4
provided 20
shorter 6
survey 16
simplest 13
question, 1
segmentation? 1
referred 27
pri- 1
see! 2
searched 1
speculation, 2
required 15
resulted 2
willing 3
results. 6
possibility 5
scenarios. 1
standpoint, 1
queued 1
sometimes, 2
shells, 1
thing 38
replacement) 1
seasoned 1
relocation, 5
software) 2
transistors 2
returning, 2
stopped, 1
remainder. 1
principle 6
pthread_mutex_init(&q->head_lock, 2
signaled 1
swaps 3
sinister 1
queue? 1
segmentation” 1
relevant. 2
primitives, 3
sense 26
spring 1
segment, 14
resumed, 1
returns), 1
woke 1
possible: 1
schedule(curr); 1
starve; 1
quick, 1
stack, 18
shuts 1
timespec 2
research, 4
secretary 2
rely 5
solution). 1
transparency2 1
return 169
right, 3
streams, 1
reside) 1
printf("%d 4
restart 5
similarity 1
system) 1
sizeof(PDE)). 1
queues, 12
sets. 2
relocate 5
priorities. 1
setting 15
step). 1
service. 3
retaining 3
reused 1
wonderful 11
sets 27
scheme 6
stored? 1
qu’une 1
states. 1
single-CPU 2
transforming 3
restricted 7
security: 1
remain 8
trap), 1
routinecalling 1
roughly 24
stride 17
pthread_mutex_lock(&lock); 2
printf("returned 4
simplicity 7
return-from-trap 17
system-call 5
slow, 8
raised, 2
show, 1
proc-struct(A) 1
remains 11
shift 1
strategy 6
returns. 3
remember 20
power. 1
shape. 1
workloads 14
script 2
race. 4
structures, 13
works 54
skip 5
transistors. 1
result: 2
segment? 1
replace 9
segments, 5
runnable) 1
some 505
run), 2
struction 1
pull 2
privileged; 2
singlequeue 1
return-to-libc. 1
task; 3
snippet. 1
simplify 1
process-run.py 1
short-running 4
strdup() 1
real 53
ridiculously 1
risen 2
repeatedly 15
private 18
showing 8
ravages 1
probably 32
subject 4
world. 3
section 55
sleeping 5
transparency 1
returning; 1
traverse 1
replacement, 3
services. 1
running? 4
soon-to-be-exec’d 1
rvalue; 2
structure: 2
queuingbased 1
road” 1
size, 12
program. 46
thankfully, 1
soon-to-be-running 1
size=100); 1
processing; 1
short. 3
student, 3
recall1 1
rights). 1
round 2
them 99
replaces 7
similar. 2
statistics). 1
runs 83
processor; 5
subsystems. 1
semantics. 2
so), 1
right; 1
true, 3
unallocated 2
several 1
— 131
since 7
sophisticated 13
rx 4
suffer 8
quick 4
rough 3
sizeof(int); 1
programs; 3
sorted 1
sizeof(), 1
shot 2
succeeded. 1
redirection, 1
run, 24
then? 2
reports 2
two 241
size); 2
rc_wait 3
store), 3
rv 4
properties. 1
sufficient 2
sensible 4
software, 4
report 9
routines 41
run-and-yield 2
sage 1
’94. 1
size). 2
program 321
soup.” 1
second. 5
suggested 8
quickly; 3
routines, 5
sleep. 8
program’s 9
snooping 1
solved 2
success: 2
signal 28
referring 2
thr 7
thr_join() 3
thumb. 1
two-fold. 1
skill 2
re-place 1
strcpy(dest_buffer, 1
simply 128
proportions, 1
summarizes 1
sentence 1
software-based 1
running 227
requests 28
sad! 1
uncommon 2
says 2
’Precise’), 2
skip-ping 1
projects. 1
specific. 1
section), 2
superpages, 1
seem 7
scalable. 5
sleeping/waking 2
promote 1
source 23
soon. 1
region 25
required. 5
tight. 1
ubiquitous 2
software4 1
strdup 1
sat 2
slice. 1
really 52
pthread_t 14
supports 5
such 274
separate 17
solution: 1
rwx 4
require? 1
say, 5
understandable 2
to 4068
“Evaluation 1
sleep-ing. 1
proofs” 1
spinning. 2
rarely. 2
support. 9
send 13
scan 5
slice). 1
pulled 1
sparsely-used 2
sorry. 1
register? 2
resides 9
time? 9
unexpectedly 1
some_function(char 1
strengths 2
saves/restores 1
slices; 2
reasons. 10
pthreads 8
supposed 4
switching 17
serviced 4
solve. 1
reserve 4
sense; 5
said 43
sbrk. 1
undertaken; 1
together! 1
“Man-Computer 1
slogan. 1
stage 3
proper 14
rears 1
surprise. 1
sense, 6
scheduling? 1
sloppy 4
q->tail 4
speed 12
space! 2
registers, 10
times, 10
response 31
unless 1
sometimes) 2
strongly 5
saving 6
smarter 1
recency 1
purchase 1
symbiotic 1
tables), 1
shortly 1
sploitfun.wordpress.com/ 1
reside 11
satisfying 2
sequence 24
scenario, 3
unfortunately, 14
touch 4
“Program 1
sounded 1
proponents 1
states 15
reclaim 3
suspicion. 2
serious 10
segmentation). 2
small. 1
question. 7
src) 1
spaces. 7
regs(B) 3
together, 3
retrospective 3
unlock. 4
strut 2
soon 25
scale 4
solutions. 4
regains 3
targeted 1
simplicity. 3
race 28
sprawling 1
responsive. 1
scaling 2
system. 57
setpark(). 2
schedulers. 5
uniform, 1
translations! 1
“There 1
space-efficient, 1
provides, 1
stays 4
recursively 1
switching; 1
servers 1
segmentation.py 5
smart 13
queues. 2
space; 11
specialized 4
relies 1
tolerate. 1
revisited 1
unmapped 1
subsystems 1
sorry 1
suggest 3
sources: 1
remains: 2
tell? 2
site 1
range. 1
sptr. 1
running; 3
scheduling; 4
systems; 9
sets: 2
schedules 4
unlock 13
trap, 3
“Volume 4
speeds. 1
stopping 4
question 27
reference. 8
t). 2
servicing 5
self; 2
stack; 3
raised. 1
spawning 1
spends 1
relinquish 5
trace? 2
roam 1
used) 1
schemes 5
source. 1
supervisor 1
splitting 3
remember: 1
textbook 1
re-awaken 1
size: 16
satisfactory 1
started 11
scheme, 1
system’s 3
shmget() 1
screen 1
trees 4
“Why 2
spinning, 2
until 52
strange 8
queue_t 2
refined 5
tailor 1
setting, 1
sequence, 8
randomly 4
standard 22
speculation 2
spins 11
request; 1
translate 19
user; 3
round-robin 11
school 2
surprising, 1
spaces 20
stance 1
reproduce 1
that? 7
reaches 2
sizeof(node_t); 1
satisfied 1
starvation, 1
scientific 1
taken 16
short) 5
seeds, 2
underly 1
“looping 1
state1 1
update) 1
stride) 1
queues 6
refuses 1
technical 3
severe 3
serve 2
ranging 1
standards/SPARCV9.pdf. 1
stages 1
splits. 1
requirements 1
translations, 6
v); 2
run: 3
science. 2
surround 2
spectrum, 1
strictly 2
thesis 1
react, 1
request 35
slabs 1
scaling; 2
stealing 1
second-level 3
takes; 1
six-level 1
segments: 1
undertake 1
“out 1
stop, 1
upper 1
stronger 2
rate, 3
reject 4
tend 7
showed 4
shade 1
stated, 2
rather 29
stops. 1
stack). 4
researcher 2
true. 3
victim. 1
restore 17
running. 23
suspend 2
speeds; 1
stringent 1
thorough 2
read? 2
resources. 5
slots 7
scenarios), 1
store-conditional) 1
task 16
section, 24
select 4
unexpected. 2
sleep 30
“real-world” 2
strike 1
urging 1
stronglytyped, 1
re-create 1
relate 1
terms 10
signal, 1
shared. 1
readers 1
stored 15
straightforward, 2
stands 1
tuned. 2
scratch 3
vmalloc, 1
second, 6
t. 2
save 27
splits 1
structures: 2
thread-local 2
reasons 6
restrictions 1
space) 4
stride, 1
tests 5
segment. 8
silently, 2
unrealistic 2
second 78
“steal” 1
used; 2
structures. 22
stuff, 1
re-duces 1
remains. 1
small 61
signaling. 1
side 4
reading, 1
strdup("p4.c"); 1
starts, 3
type, 4
vruntime 10
resumes 5
sections 6
structure 73
table: 3
scaling. 1
than 149
spread 9
stub 1
thread-safe, 2
reclaiming 1
stacks, 3
returned 15
text. 1
string 12
segments; 1
simulator 16
see? 6
“tried 1
users: 1
studied 5
subsequently 4
update 54
recommending 2
repeatedly. 2
snooping, 1
require 10
reality, 1
student 3
typeset 2
state, 13
reuse 1
seek 2
want 50
sub-jobs, 1
terminating 5
seconds 9
that: 3
stack) 7
suffers 5
redirected 2
starting) 1
simple 196
right”, 1
thus, 54
rw 6
studying 9
segment’s 1
situation 9
segmentation. 3
valuable 3
sub-job 3
subverted 1
usage. 4
recursive 1
simulation 7
so). 1
resides. 3
reasoning 1
study. 2
underneath 2
step-by-step 2
root 3
segment), 3
way) 1
succeeded, 2
terminology) 1
seed. 1
stipulated 1
supports. 1
reference, 2
starve 2
simpler. 1
theme 6
ticket, 2
scales. 1
super-linear 1
serviced, 1
sixteen 1
segmented 4
virtually 9
subjunctive 1
success; 1
threads 197
val 2
redirection 2
software. 2
sleep, 13
restoring 5
recently 6
stuff? 1
undoes 1
runtime 2
store 24
sending 1
successfully, 1
wc 11
thread!) 2
seeds; 1
stopped 2
surfing 1
region). 1
statement 3
simply, 4
there; 5
time! 2
scientists 4
surface. 1
skills. 2
self)) 2
show 24
waiter 2
subsections 1
survive 2
tick 1
vastly 1
somewhere... 1
reduce 15
sleeping. 4
refers? 1
resulting 24
success. 3
uniform. 1
safely 3
streams. 1
shorter! 2
switch? 2
winning 7
threads). 2
sentence: 1
stored. 1
switch, 8
remain? 1
stolen 1
skimmed 1
thereby 1
times. 7
scream. 1
surprise: 1
slow; 2
shifting 1
simplified; 1
web. 1
suc-cessfully 1
swapped 12
tick-by-tick 1
vice-versa. 1
soon-to-be-faulted-in 1
reference) 1
should 274
registers. 3
reusing 1
surprisingly, 6
units; 4
sake 5
sub-microsecond 1
shortest, 1
worked. 1
throughput?) 1
strategy, 2
swpd 1
remains, 1
system, 65
skips 1
thr_exit(); 1
storage 12
tirelessly 2
see, 15
systems? 2
software), 1
short, 3
single-entry 2
worked 6
switching); 1
times) 1
voo-doo 2
switch 62
specifics 1
slice), 2
remaining, 1
shown 35
registers 48
richer 1
suspect 1
upon, 1
scheduled3 1
supply 1
sibling 1
worker 6
thrown 1
streams 2
taking 11
remembering. 2
structure. 16
slower. 3
thread; 7
straightforward: 6
together. 5
segmentation; 2
terminate. 3
some, 2
shortest 2
situations. 1
written? 2
t 10
topic, 4
vruntimei 2
synchroniza-tions 1
spins, 2
slow 15
remedy 2
shudder 1
represent 5
right? 8
swath 1
uses. 3
scourge, 2
sure. 2
similarly-named 2
working-set 1
tcsh, 2
times 40
tends 5
repeatedly, 3
structures; 2
threadID. 2
slowly 12
stringing 1
traces. 2
seminal 1
terms, 3
spell 1
shutdown 1
sizeof() 7
x[10]; 1
trade-offs 5
wait. 2
table, 26
stale 1
synchronization 26
slowly; 1
reply: 1
signal() 4
required). 1
t(B) 1
variables), 1
room 17
se, 2
surely) 1
simpler, 2
wrap 2
table) 2
tn 2
testing 2
replace? 3
style. 1
report? 4
sockets. 2
strlen(), 1
track; 1
served 3
them) 1
states, 1
side). 2
slots, 3
yet: 2
tradeoff 1
waitpid() 2
tackle 4
wanted 3
system.” 1
small, 7
responsible 6
significant 4
restarts 1
table? 3
virtualized; 1
rotational 1
seconds), 3
systems), 1
simulated 1
wreak 1
take, 3
to? 2
ticket.s. 2
subdirectory 2
requests? 2
software? 1
suffering, 1
think 66
translations. 6
shaded 1
themselves). 1
signal?? 1
stores 16
snatch 1
yourself2! 1
transition 6
starvation. 7
tasks. 1
wary 7
systems: 5
small-sized 1
rich 2
single-processor 5
restricted? 1
tables, 8
visible 2
seconds. 3
security, 1
tail_lock; 2
slower, 1
wrote) 1
technology-driven 1
together 12
tidbits 2
research. 1
sounds. 1
suggests 2
sure 56
those; 1
system: 6
simultaneous 1
table). 3
signaling 17
string) 2
so? 5
zero, 3
treasure 1
see 272
technique. 1
water 1
taken? 1
smallest 5
robin, 2
site: 2
return-fromtrap 3
talents, 1
walling 1
semaphore 1
taken: 2
solve? 1
x-axis 1
traces 3
tell 28
time-shared 2
resides, 1
sparked 3
sum 3
trapped 2
thus: 1
there? 4
size. 7
this? 5
simpler 6
subsequently, 1
space), 4
zeroing. 2
starved 1
trickier. 1
seems 12
terms) 1
widely), 1
tasks, 1
sneaks 2
slices, 2
revert 1
target 6
watermark 2
services 1
task: 1
routine 60
sort 6
y-axis? 1
translations 22
tennis 1
time-slicing. 1
resources 6
spent 7
surprising? 2
tread 1
to; 1
tree 15
sizes; 2
thread? 2
simplicity), 1
substituted 1
’03. 1
threads, 38
steal 3
trouble. 3
sends 3
theoretical 1
tcsh 2
thing: 4
software-managed 5
smaller? 1
rule 4
tcsh), 1
well-known 4
set-it-to-1 2
taught?! 2
shell, 5
spaces) 1
yourself! 3
trapframe 1
text, 2
told 2
respond 1
spurious 2
swapping, 1
taken, 5
too, 2
tricks 2
sloth” 1
sizes. 3
successful 5
special 22
’Approximate’, 2
thread” 1
store, 2
twenty 1
sense? 1
won’t 21
technique, 2
threads) 1
soon-to-be-run 1
somewhere 4
running). 2
team 2
we’re 3
sad. 3
terminated 2
terribly 1
who 41
sparc/ 2
× 1
trust 14
too! 2
storeconditional) 1
return; 10
root). 1
talks 1
tool 15
tricky: 1
solid-state 1
slice, 7
surrounding 2
slower 6
“010101”, 1
strict 1
tickets 30
type) 1
setup, 2
technologies. 1
throw 6
spans 1
speeding 2
sad 4
ten 7
shown), 1
test-and-set. 4
work 150
widely 9
spin-waiting. 2
’d’ 1
streaming 2
target. 1
top 32
type 73
routine), 4
task, 5
tracked 2
type. 1
solution, 10
same 145
specification 1
survive, 1
smaller, 1
switch. 4
stride. 1
timeline 3
unasked 1
short-lived, 1
timely 3
speculative 1
splintering 1
this: 49
sanity 1
testand-set! 1
theory, 1
win 1
simple: 39
workload 14
spin. 4
“Exterminator: 1
strings 1
target’s 2
toughest 1
unmasks 2
running: 1
test? 2
tract 1
understanding: 2
saying; 1
solve 20
“Guide 2
starts 25
solutions, 3
synchronized 10
times), 1
uncaught, 1
should. 1
timing, 3
starvation: 1
spuriously 2
thousand, 1
study 52
scans 1
them? 3
thermodynamics 1
security 21
simulate 3
world; 1
stateful 2
“Inside 3
test-and-test-and-set.s. 2
stuck 16
tracking 2
unpack 2
runs...) 1
thanked 1
translated, 1
unified, 1
someday). 1
“Hoare” 1
solves 7
system; 8
totals 2
under- 1
signal(). 1
state 73
tracing, 1
stated 2
starve: 1
three: 1
scheduling 102
success 9
that 1398
within; 2
think) 1
sense: 2
things 46
size) 5
statements 1
worry 21
“Intel 4
thanks, 1
succeed. 3
transfer. 1
unpark() 2
sampling 2
that. 9
treating 2
unknown 1
sound 5
“She’s 1
something. 2
t, 2
transformation 2
undergraduate 4
signals, 2
statement, 1
traversal 3
state. 10
ticket. 2
scribble 2
suggested. 1
things); 1
wonder? 1
third, 2
struct 49
serves 6
stuck; 3
slides 1
study, 3
“Is 1
static 21
thing; 1
suite 1
treats 1
unrealistic? 1
savings 9
that’s 8
tree. 5
unlock(&m) 1
specialize 1
“Survey 1
soon-to-be-executing 4
tension 3
translation-lookaside 1
underlies 2
simulating 1
stay 3
trigger 2
steps 3
tickets; 1
se. 1
suitable 2
thinks 7
x86)” 2
threats, 1
thread), 2
set, 3
threshold 11
slow? 1
studying. 1
“Segmented 1
step, 5
tmp); 5
triggers, 1
switches 14
unsafe 4
track 27
the?? 1
trees; 1
splay 1
unlock(lock_t 10
“hello”; 1
sounds 6
test 7
transparently 3
unit”, 2
sitting; 1
storage, 2
two: 1
stitch 1
seconds). 1
switching) 1
threadID, 2
zero. 11
three-instruction 3
too 85
yield(); 2
severe. 1
through, 1
small/random; 2
succeeded 4
“With 1
twice). 1
say. 2
tail 5
still 59
unused. 2
trans- 1
ticket; 2
trends. 1
sptr 2
unmodified, 1
“second-system 1
special; 1
themselves 4
spin-wait 10
sizeof(x)); 2
storeconditional 1
underpowered 1
trap 52
storeconditional. 1
security. 1
tandem 5
tickets: 1
’05. 1
timeout 4
toolbars, 1
yield, 2
sharing, 3
timer, 4
shell 12
success, 5
“owned” 1
units 1
sbrk) 1
talking 5
scales 6
upcoming 1
transparency; 1
tlb.c, 1
stacks 4
under 18
unnecessary 1
“walk” 1
unlock? 2
timer? 3
start. 1
slowdown 2
strategy. 1
unlucky) 1
unblocked 2
strange; 1
techniques 24
segments 22
tmp 8
’07, 2
timing? 1
topics 5
yield-based 2
snuck 1
tip 2
shrink) 1
successfully 5
unreasonably 1
→ 17
up. 7
task). 2
schedulers) 1
trusts 4
stood 1
topic 18
upon 40
unfairness 4
updated) 1
user, 3
timers, 2
state; 2
snippet: 3
studies 4
unused 14
undesirable) 2
studies. 1
terrible 3
selection 1
to. 4
subsequent 24
tip: 1
trade-off: 1
’a’, 1
sources 6
today, 4
simple. 10
suffice 3
strategy), 2
updated, 2
technology. 1
seconds, 2
tuning 1
store-conditional; 2
totaltickets); 1
use_ptr 2
unrealistic; 1
upon. 1
valid; 1
tips 2
step 2
try 64
such. 1
upper-half 1
unique 7
test-and-set 15
sense?) 1
“ARC: 1
tools 16
subsystem 4
tough 2
transaction, 2
“Ad 2
specifically, 13
too; 1
simulations 4
suit 1
stuff 8
uplifting! 1
termination 4
seeing 1
twins!” 1
straightforward. 2
useful. 10
update(counter_t 2
usage; 1
value. 12
tolerate 1
so; 2
store-conditional. 3
two-level 7
sum, 1
solution 44
unqualified 1
test-and-set.s? 2
setpark(); 2
“Alto 1
too” 1
subtle 1
translated), 2
translated 3
“Dynamic 3
speeds 4
topic. 1
slip 1
surprisingly!) 1
subtract 1
upward 1
then; 1
segfault 1
two-thirds 1
strategies. 1
variables) 1
update; 1
used? 1
vi, 1
too. 6
sub-sequent 1
units, 2
upwards. 1
sun.com/solaris/articles/atomic 2
somewhere. 3
untimely 6
there! 1
sharing: 1
“Control-c” 1
transparent” 1
succeeds 3
traversals 2
transparent 4
“Everything 2
speedup. 1
total) 2
slowly. 2
switches; 1
suddenly 2
useful? 1
therein; 2
segmentation.” 1
strength: 1
variants: 1
types 33
users, 1
user/supervisor 1
vmstat, 1
traditionally 1
substitute 3
used. 15
us, 2
surprised 2
sounds! 1
valgrind 15
shells; 1
“Evaluating 1
useful 69
super 2
trap; 2
“Mesa” 1
tries 41
traffic. 1
stack. 17
softwaremanaged 1
switching), 1
sz; 1
utility? 2
think, 2
segregated 3
these 222
strings? 1
vary 4
u 2
val; 2
transferred 4
valid 51
succeed 2
systems) 4
source, 1
vs. 8
shrink). 1
truth: 2
values 75
useful2. 1
user 117
surprised. 2
was 188
turn) 2
“Microreboot 1
turning 9
try. 1
standpoint 1
solely 1
synchronizations 1
vector 1
though; 4
sequential 8
they? 2
strong, 1
virtualizes 3
unaffected 1
valid. 2
treat 4
sufficient, 1
taken. 1
table 175
space1 1
wait-for-me.s. 2
similar), 1
“E”, 2
vary. 2
typedef 33
user-facing 1
utilizing 4
systems). 1
way: 5
“OSSpinLock 2
turnaround 30
typing, 1
unlikely 3
status 5
solution; 1
virtual, 1
thoughtful 1
seriously, 3
things, 6
subsystem: 1
walks 1
unlocked 2
values. 1
treatment, 2
support? 4
task. 7
tempting 4
specifying, 1
warm 3
simplified 2
“TENEX, 2
vulnerable 2
unfair, 1
using. 2
vector, 1
t; 2
while2 1
“System 1
turned 2
system 363
unpark(threadID) 2
unsatisfying) 1
strcpy(dst, 4
virtualization. 4
threads? 4
shown, 2
thing” 1
space, 50
take 97
unpacks 1
variety: 1
well. 30
true 14
switching, 2
taste 2
size 124
stack-smashing 1
warnings. 2
software; 1
“havoc” 1
wall 1
uniformly, 1
utility 3
violations). 1
telling 1
“Take 1
understand: 1
updated 8
unusable. 1
stronghold 1
virtualized 6
three-queue 1
this! 2
subtle: 2
time; 16
teach 1
tool, 6
would 200
vast 2
waited 1
truly 9
synchronize 2
terminal, 1
slicek 1
then 227
wastes 10
somewhere). 1
way? 1
unlock(&mutex); 2
variable. 8
virtualized, 1
“being 1
valid). 1
users 27
unusual 3
thousands 10
structures 59
suffering 2
species, 1
unrealistically 2
techniques, 7
trace; 1
wreak1 1
what’s 2
ways: 2
waiting 94
turnaround. 1
system). 4
test-and-set.s. 2
statically-initialized 1
slower? 1
there). 1
watch 5
sorting 1
ways, 1
unpark 2
variable’s 1
virtue 2
“commoncase 1
values). 2
value), 3
subtleties 2
threads. 19
summarize, 1
specifically 6
upper-case 1
text 9
transcript 1
while) 1
web 10
website 2
typesetting 2
write 63
tables! 1
tests), 1
str); 1
solved. 1
therein 1
space: 2
well-defined 1
unrealistic. 1
use 317
whether 59
vmstat 2
“reliability”, 1
variables. 13
variable, 8
swapoff. 1
threshold, 2
specified, 1
throughout 13
them). 2
usage 16
translation; 1
work? 7
went 3
weightk 1
uint 1
wrote: 1
tasked 1
thing. 2
strive 5
somewhere, 1
those, 1
weren’t 1
vengeance’.” 1
specific 21
up, 12
user. 7
why? 2
waiters 4
waiting, 5
vice 1
variable-sized 7
symbol. 1
support, 16
speed-of-light 1
times). 2
these, 4
use?) 1
traps 5
workloads, 1
when, 3
undefined. 1
yes: 3
technology 7
things; 3
strong 2
were 76
sorts 9
wild 1
vruntime: 1
spin, 2
though 29
update. 1
user’s 4
wikipedia 1
“same” 1
wake(address) 2
view, 1
way. 6
system? 4
surface 3
spending 3
splitting: 1
thousands, 1
uses), 1
tricks: 1
works, 15
work; 6
unfortunately 4
you. 8
terminal 4
thinking, 2
when! 2
structure, 24
style, 1
woken, 2
wait(). 3
weight, 1
upper-level 2
well 88
virtual 253
waitpid()); 1
wake? 1
weaknesses. 1
while. 2
winter. 1
used 175
virtual-memory 1
windows, 1
vectors, 1
well-regarded 2
tip, 4
which, 4
sponse 1
threadID 2
variable-length 2
ultimately 1
systems, 49
written), 1
workgroup. 1
unimaginably 1
worse. 6
terminates 1
text). 2
specifies 5
submitted, 1
wonders. 1
threads); 2
wondering: 4
spinning 27
user-mode 3
virtuallyindexed 1
worker(), 1
view). 1
tmp->value 2
whole 5
staring 1
tickets. 5
variant 3
understand2 1
system” 1
“Analysis 1
yourself2 1
unit 7
thrashing 2
© 21
what 280
swapping 12
textbook, 1
spectreattack.com 1
without 70
worse 9
work-stealing 2
which 501
spot 2
v; 2
void; 2
their 91
visualization 1
transactions 1
wine, 1
stateless 1
tightly 1
vengeance’. 1
unsurprisingly, 1
tables) 2
“Towards 1
unpacking 2
writes 21
threat 1
yet, 10
switches? 1
spinning), 2
substrate 1
won 3
xv6, 1
world? 1
time 306
winner 5
variablesized, 1
write, 3
waking, 1
stop 21
them. 16
translations). 1
wants 16
stdlib.h 1
time-slicing 1
violation 2
upside 1
take? 2
“Wait-free 2
unused, 1
’04, 2
threshold; 4
void 153
zeroing 4
swtch 1
stashes 1
summarize 5
world!”, 1
years, 9
world” 1
time-share 1
wisdom 1
variants) 1
x? 1
storing 1
within, 1
type). 1
thinking 23
welcome! 1
stream, 2
time-tested 1
usable. 2
takes, 1
“have 1
wait 53
up; 2
’13, 5
time-sharing 7
vulnerabilities 2
“01” 1
table! 1
“A” 8
world, 6
yours. 2
yet), 1
timer. 1
virtualization, 7
wishes 16
strdup("p3.c"); 1
worst 7
yield 21
understand! 2
three-quarters 1
winner: 2
strings. 1
timeline. 2
support 110
usual 2
tech 1
“modern” 1
want; 1
“Efficient 2
useful, 11
time-space 2
wait(), 6
state: 2
tables. 6
“Get 1
worth 20
yourself. 1
you’ll 37
to, 13
stream: 2
today. 6
you: 1
uninitialized 1
timedlock 4
wondering 2
support; 4
top-to-bottom 1
within 89
surprise 2
x; 4
“parent: 1
tells 11
watching 1
way 97
“He 1
users. 1
uses 70
warm-start 1
step? 1
tcsh). 1
“THE” 2
wrappers 2
zplot. 1
’09, 1
years; 2
system! 2
today’s 2
zero). 1
universal 1
timer; 1
workers 1
survived 1
transfer 10
utilization. 1
table), 1
yet! 1
temporal 7
works? 3
weighted 1
“OS”, 1
timing 5
utopian 1
waste. 7
straightforward 9
terminate 6
“Test 1
x86. 1
“Electrochemically 1
’18, 2
yell) 1
’95. 1
trace 24
top) 1
use, 15
worthwhile 2
systems. 64
swapon 2
written 18
utilized 4
tapes 1
you’ve 6
terrific, 1
worlds: 1
weighti 2
“Parallel 1
tomes 1
variable-sized. 1
way! 1
strangest 1
tested 1
strategies 8
y; 2
“I 1
’81, 5
yes. 3
’a’ 4
transforms 4
transform 4
user-managed 1
t(A) 1
transformed 2
switches. 1
wrong 15
valid: 1
’75, 1
that, 11
there, 2
world”. 1
“best” 2
“emulation” 1
variable: 2
work. 24
ways. 11
“hello, 1
thanks 4
stretching 1
yelling 1
“Operating 2
’flag’ 2
“Earliest 1
“A 15
translations: 2
utilizes 1
translation 46
targets, 1
trap. 1
swoop 1
zero.” 1
varies 5
“1984” 1
then. 1
therefore 2
www.stanford.edu/˜ouster/. 1
top), 1
varying 2
workload. 6
“high 1
them; 2
we’ve 21
via 53
virtualization; 1
visualization. 1
void. 1
volatile 5
vulnerabilities. 1
wakeups 2
warmed 1
weirdly 1
systems 185
you). 1
“fault.” 1
“Animal 1
“Jack 1
“B” 8
tree, 4
variables 33
tree? 1
tasks 2
trapping 3
˜mark/syscall.html. 1
weightB 1
technique 29
theory-types 2
therein), 2
therein. 5
tracing 6
works; 1
“reserved 2
therein: 2
well, 15
tackled 2
yourself; 3
“operating 1
“Performance 1
“MIPS 3
“Membrane: 1
trend? 1
vary). 1
trees, 4
versions 8
’15, 1
“A”), 1
which). 1
there. 6
yielding 5
thing... 1
think? 1
tracks 8
worry. 3
“running” 2
think-ing 1
well-meaning 1
tail. 2
ˆC 2
when 480
subproblem 1
“response”; 1
“big 1
“Memory 1
“OS” 1
tune 1
traversing 2
trials 2
viewing 2
’w’ 1
“Machine 1
winner). 1
there’s 1
zero), 1
thirty 1
thinking! 1
treasure-trove 1
worse! 1
“starts” 2
thr_join(); 1
wrote 10
’85, 1
woken. 2
succeeds, 2
takes 50
“easy 1
“Purify: 1
“RISC-I: 1
truth. 1
tweaks 2
visually 1
turns 37
“Monitors: 1
“An 9
worse: 2
thing, 6
zsh 2
three-level 1
trylock 4
this, 32
“test 2
when. 2
workings, 2
thread.c 1
’92. 1
www.gnu.org/gnu/manifesto.html. 1
supporting 1
techniques? 1
“too 3
“Tolerating 1
ubriaca. 1
two-CPU 1
wakeup, 1
tweak 1
“Myths 2
“The 40
“B”. 2
writes, 4
thinks), 1
– 19
time. 66
twice, 5
thread, 48
www.cs.tau.ac.il/˜shanir/concurrent-data-structures.pdf. 2
world\n", 1
time-efficient 1
’94, 2
x86, 8
suppose, 2
temporarily 5
“all 4
unfair 2
undoubtedly 2
was. 1
twice 5
“Premature 2
“a 1
“Computer 6
x86); 2
this. 4
’93. 1
times; 3
two. 3
three, 3
www.sparc.org/ 1
wrappers, 2
time: 2
timings. 1
xv6. 1
surprisingly 7
“uninitialized 1
swap 34
unlock): 2
wasteful. 2
type: 1
“U 1
“batch” 1
“If 2
xchg 2
’95, 2
thread. 20
uber-engineer 1
took 16
’19, 1
yet. 4
“80-20” 1
up 156
“Advanced 4
years. 4
term 15
switched 2
unmask 1
weaknesses 1
“at 1
updating 13
“cold” 2
“John 1
yields 5
’wreak 2
threads; 2
unsuspecting 1
tool? 1
“Aspects 1
zero 10
too). 2
updating) 1
“Our 1
yes! 1
terrific 4
syscall 3
unrealistic, 3
“older” 1
“works” 1
thus 486
“free” 1
“glibc 2
zeroing, 1
“Cloud 3
thread’s 14
tools, 3
“Before 1
’14 1
took, 1
using? 2
“Shared-access 1
us 84
yet 20
update, 1
usable 2
tables 49
“OpenSolaris 2
ticket 27
while 170
“lost” 1
the 8323
“Idleness 1
time). 3
translation. 10
“H”, 2
’new’ 2
trace: 1
valgrind. 1
“Someone 2
use; 4
young 3
utilities 1
terminated. 1
utilization 5
time), 4
wishing 3
there 250
’his/their 1
usually 52
“the 1
threaded 2
“Making 2
too4 1
translations; 1
“Lottery 2
’peek 1
trading 1
valid), 1
“Understanding 5
utilization, 1
’83, 1
“Perfection 1
themselves; 2
valid, 14
workers, 2
tiny 21
“A”, 2
v9 1
“wreaked”? 1
valid? 3
“buddy” 1
trade-off. 1
trials. 1
“Mach: 1
trick 3
transitioning 4
variables, 5
treated 6
variants 4
“Informed 1
“TLB”. 1
then, 16
value? 2
write. 2
to! 1
“CPU-bound” 1
three) 1
” 4
values? 3
“drum” 1
transac-tions 1
’self’ 2
transaction 4
trouble 9
“goodbye”. 1
variable” 1
trouble, 2
versus 5
“Nonblocking 2
“Time 1
theory 4
written, 1
values, 12
virtualization). 1
visible. 2
“Hmm... 1
vanishes. 1
“the”). 2
through 56
“lmbench: 1
“21” 2
transfers. 1
“Introduction 3
vector-like 1
trying 15
“Policy/mechanism 1
virtualizing 14
“child”, 1
unlock() 14
therein, 2
wrong, 4
tons 2
visualize 1
“brain 2
variable) 1
“pinning 1
“perfect”. 1
timer 36
tremendous 1
“One 1
version? 2
“What 5
vruntime. 1
turn 32
unsigned 2
things. 7
x86-version 2
wait(NULL); 3
total 26
versa. 1
“yeah, 1
times? 2
two, 3
“Priority 1
viewpoint 1
“as 2
unifying 1
unused) 1
thinking? 1
virtualization 20
waste! 1
waits 36
towards 3
virtualize 13
tive) 1
useful2 1
today 7
“hello 1
uninteresting: 1
update: 2
yourself 7
warmup 1
third 18
watch. 1
this 1109
whichever 4
wait()) 1
wake 33
“Reese’s 1
touching 1
“ready” 2
unit) 1
upsides 1
zombies 1
though, 8
transfers, 1
thr_exit() 3
wait(address, 2
while, 8
want. 1
“catch” 1
track, 1
“what 1
unlock(), 2
using 140
used, 8
· 4
threshold. 2
translation), 2
wakeup/waiting 2
wily 2
wasn’t 2
“crux 1
translates 5
unpark(queue_remove(m->q)); 2
utilize 5
using). 2
’current’ 1
tried, 1
walk 1
with) 2
wasted 4
“other 1
true! 1
time, 75
unpleasant. 1
value) 13
’c’ 3
turn; 4
watches 2
write: 1
way). 1
ugly 3
timer-interrupt 1
utilized? 1
vantage 1
“Cooperating 7
unbounded 1
wc), 1
x86” 2
yourself, 2
uncommon), 1
tmp->next 4
value, 17
“Improving 1
“Multics: 1
well-suited 2
weight 1
variable 75
zombies, 1
underlying 9
total). 1
understand, 3
various 27
value 233
“PThreads 2
well; 1
thread 449
wherever 2
vectors 1
’c’, 1
units. 3
touches 2
understanding. 1
wait-for-me.s 4
variable). 1
“cooperating 2
whims 2
“Load-Link, 2
urgent, 1
trace, 3
version 31
up? 3
weightA 1
three 69
waitFirst 2
we’ll 112
“direct 1
widespread 1
“One-Level 2
usage, 2
traditional 11
useless 2
well), 2
we 992
time) 4
wary: 1
whatever) 1
very 60
“double 1
word, 1
“One-level 2
using; 2
translation, 15
user-level 6
wide 1
winner) 2
tired 1
vruntime, 1
way, 20
“fault” 2
whereas 14
world 26
“Virtual 8
value); 2
trials, 1
usermode 1
works3 1
to), 1
w/ 2
well) 1
“private 1
wonder 3
worst-case 5
“bad 1
variable; 2
trivial 2
variety 3
workshop, 1
top-level 2
which... 1
trade-off 4
“reasonable” 1
won’t, 1
“condition 1
wouldn’t 5
vector. 1
typically 1
viewed 4
worlds. 2
wait() 26
work: 1
transfers 7
words 2
“discovered” 1
wrapping 2
violation, 2
virtualization? 1
typing 9
wrangling 1
was; 1
workload: 1
translation) 1
“limited” 1
write(), 1
work, 23
virtual-to-physical 6
visionary 1
unfortunate 5
write(fd, 1
way), 1
worry: 1
trees), 1
“ten-items-or-less” 1
written; 1
virtualized. 1
workload, 11
visited, 1
use. 16
x86.py, 4
wc, 3
waste 23
tried 4
yeah! 1
voluminous 2
with 638
worst-fit 2
user-defined 2
x86). 2
websites 1
you, 11
two-phase 6
yield() 2
ways 19
wait(); 1
x86) 1
wait, 4
usually, 2
yes, 6
younger 1
whatever 15
’10, 4
whenever 3
word 14
waking 5
varied 2
zeroed 1
“Ah! 1
whose 8
why, 1
understand 112
workflows. 1
weakness 1
view 14
’02, 2
“Aleph 1
why. 2
will, 2
understandable, 1
worried 1
were. 1
wakes 15
’11, 2
“Principled 1
worker, 2
window, 3
uniprocessor, 2
worse, 8
winner. 2
weights 2
’68 1
“Profiling 1
wreak, 1
wished 2
unlock, 2
your 201
wrapper; 2
within. 1
weird 3
’e’. 1
“SDS 1
www.ajwm.net/amayer/papers/B5000.html. 2
woken 13
unsurprisingly: 1
write() 5
you’re 18
we’d 9
’mutex’ 2
working 28
“bounds” 1
x-axis, 2
work! 3
use”, 1
you? 9
’threshold’, 2
“But 1
wrapper 3
“got 1
x. 2
workloads. 3
usual. 2
yours: 1
“History” 2
“It’s 2
wreaked?” 1
“hot” 2
where 166
x86 23
utilized. 1
you’d 9
“Javascript: 2
value; 22
“first-in” 2
www.nds.rub.de/lehre/seminar/SS06/Werthmann 1
“privileged” 1
whom 2
x86-64) 1
| 8
works. 22
“Mac 1
vision 1
“longword” 1
x) 1
“ticket-assignment 1
wired 2
zombie 2
“Fact 1
worry! 2
“Run-Time 1
weight0 1
“prove” 2
“Concurrent 2
“100x” 1
“Think 1
wish 26
wreakers 1
“Structure 1
whet 1
“H-Pucks”) 1
you 995
“CPU 1
“baby 1
with? 1
“Valgrind: 1
writing 21
while? 1
“Multilevel 1
yuck! 1
“Experience 1
“demon”, 1
words, 5
“correct” 4
written). 1
“Programming 7
“Hoard: 1
“ease 1
worst-fit, 2
why 58
“out-of-bounds” 1
x, 2
“foo” 1
“Ils 1
“familial” 1
worstcase 1
xv6 6
“real” 3
“Pthread 1
“right 1
worthwhile. 3
“Relocating 1
years 19
“yes.” 1
wrong. 3
} 271
“Reminiscences 1
yield.s, 2
− 7
www.takeourword.com/TOW146 1
’Classic 1
“Time-Sharing 1
’63 3
y-axis 2
’pedantry’ 1
“core” 1
’b’, 2
“Bell 1
“first 1
“...with 1
“Converting 1
“fun” 1
“Change 1
“Observations 2
“lock” 2
“Extending 1
“Practical, 1
“loop.s”. 2
“Hints 3
“T”, 2
“turn” 2
“Information 1
“daemon”, 1
“Just 2
“interrupts” 1
“My 1
“RTFM.” 1
“Transaction 2
“main: 14
“Using 2
“process 1
{ 281
will 580
“bad” 3
“test” 2
’ 11
window 3
“jemalloc” 1
“2Q: 1
wise 1
“just 3
“Atomic 2
wondered 1
“smart” 1
“Cold-start 1
worked, 2
“It 2
writes: 1
“KASLR 1
“On 2
x 12
• 69
“Solaris 3
yield.s 2
“Solution 2
you; 1
“Symmetric 1
zeroes 2
“You 2
|| 2
“atomic 2
}; 8
“implements” 2
’89, 1
“interactive” 1
’98, 1
“it 1
’b’ 1
“on 1
“Algorithms 2
“page 1
“Dahm 2
“right” 1
“They 2
“setting” 2
← 2
