S 28
$0x0,(%edi,%eax,4) 1
%bx 2
(-a) 2
(232 1
(ARM). 2
(Hardware) 1
(P2), 1
(PDE.Valid 1
(a.k.a. 6
(but, 2
(evicts) 1
$0x1 2
&mutex); 8
(212 1
(5 1
(PowerPC), 2
(Run 1
(TCBs) 2
"A" 1
(in 45
16 9
8 22
%ebx 1
(0, 3
(20%), 1
F 8
%edx, 1
%esi, 1
&rvals); 2
(01) 1
(14th) 1
(28 1
(64 1
(A) 2
(ASID) 1
(CanAccess(TlbEntry.ProtectBits) 4
(P1) 3
 32628
4 23
T 10
&stack); 1
(-T). 1
(/tmp/file) 1
(010101), 1
(224 1
(512 2
(8 1
(@PFN:100) 1
(KNUTH’S 1
(MMU) 1
(PTE.Present 2
(SJF), 1
(TD 1
(This 1
(Thread 2
(Volume 1
(alas). 2
%edx 1
%esi 1
& 29
(1024). 1
(104) 1
(I/O). 1
(LDE) 1
(OS)3 1
(R, 1
(TLBs) 1
(char 8
(due 6
(lazily) 1
(p4.c) 1
(pause 3
(potentially) 1
(realistically, 2
(returning 2
(t0.c) 2
(taking 2
(think 5
!StoreConditional(&lock->flag, 2
"B"); 4
%d)\n", 4
((flag[1-self] 2
(0x1) 2
(9.2) 1
(B 3
%eax,0x0(%ebx) 1
%ebp 1
(-1KB) 1
(-p). 1
(3764 1
(4 3
(4088 1
(As 1
(Gulps) 1
(KASLR). 1
(Left) 3
(P); 1
(PD 2
(PID). 1
(Proc 2
(Software) 1
(VPN 14
(Without 1
(array-based) 2
#include 62
(-i) 4
(0x200000), 1
(120−0)+(20−10)+(30−10) 1
(7.1) 1
(Advanced) 1
(CanAccess(PTE.ProtectBits) 4
(HW 1
(London), 1
(Process 1
(c3) 1
(ironically) 1
(mutex, 8
(next 1
(nice 1
(t1.c) 2
(that’s 3
(untimely?) 2
(user 3
(which, 2
*q, 4
*value 2
-1) 1
-l. 1
0). 2
00007f4e7d2d0000 1
07 1
0x300, 1
0xC0000000, 1
1-GB 1
(making 1
(as 49
"hello"; 3
&lock); 2
(11) 1
(B) 1
(K 1
(MRU). 1
(P2) 1
(PDE.PFN 2
(VPN). 1
(a3). 1
(b) 5
(Figure 45
(OS 1
(PDE) 2
(TLB 16
(Thousands) 2
(above), 1
(conservatively); 1
(cpu.c) 1
(free 1
(https://github.com/remzi-arpacidusseau/ostep-projects) 1
(left). 1
(lots 1
(managing 2
(non-paged) 1
(notably) 1
(note, 1
6 22
$0x0) 1
1024 10
128, 1
13.5 1
137, 1
14.4 1
15.3 1
%edi 3
&args); 4
&m); 3
(20-ms 1
(400)2 1
(4200) 1
(A’s 2
(C, 1
(Measurement) 3
(O 1
(RSS). 1
(SJF, 1
(T2) 2
(also 7
(an 2
(done) 2
(generated 1
(hence, 2
"common.h" 7
# 16
22 1
#3: 1
%ebx, 1
(26 1
(4096), 1
(CPU 2
(D); 1
(Line 5
(S), 1
(Spring), 3
(Tc1 2
(a2), 1
(instead 1
(limit) 1
(line 3
(maliciousness) 1
(p2.c), 1
(still 1
(swapd) 1
(worst-case 1
*consumer(void 5
*dst; 1
*value) 2
--leak-check=yes 2
-C 6
"hello 1
(15th, 1
(MIPS), 2
(Simulation) 16
(T1) 4
(VPN=1, 1
(assume 2
(c4). 1
(depending 2
(even 3
(forever), 1
% 8
%ecx 1
(-p 2
(256 1
(AS) 1
(CompareAndSwap(&lock->flag, 2
(No 1
(PM 2
(Page 1
(Tc1), 1
(VAX/VMS) 1
(VPN) 2
(argc 2
(ignoring 1
(including 10
(it 12
(lock->turn 2
(no 4
(nods) 1
(non-toy) 2
-c 22
3 1
(C 1
(DEC). 1
(Hardware-based) 1
(LW 1
(STDOUT 1
(VPN=06, 1
(a.k.a., 2
(flag) 2
(hence 1
(mentioned 2
(most 2
(stride=200) 1
(to 10
! 2
%d\n", 9
%dx 6
&; 1
(-L 2
(-c) 1
(-l 4
(117 1
(@PFN:101) 1
(FCFS). 1
(Linux) 2
(MLFQ) 1
(OS). 1
(PCB); 2
(PFN), 2
(STCF) 2
(Success 4
(all 6
(almost) 1
(bigger) 1
(c->local[cpu] 2
(given 1
(long) 1
(mem.c) 1
(p2). 1
(result: 1
PAGING 21
&oops; 2
&x); 1
(e.g., 108
(from 16
(gasp) 2
(horribly) 1
16 92
16(%eax), 1
16.2 2
17.1 1
(3) 2
(G), 1
(LRU) 1
(Linux, 1
(LoadLinked(&lock->flag) 4
(PC) 4
(PSJF) 1
(PTIndex 3
(S) 3
(With 1
(dare 1
(fill_ptr 1
(four 1
(full) 1
(header_t 1
(often 2
(p2.c) 1
(p5). 1
(particularly 7
(read 1
(reduced 1
(si 1
(too!) 2
(we 2
14 14
"usage: 2
%ecx, 1
(-s) 3
(34KB), 1
(ASLR). 1
(Again) 1
(COW 1
(Good 1
(P0) 1
(StoreConditional(&lock->flag, 2
(Tc2 1
(VPN), 2
(allocated 3
(c1), 1
(count 8
(during 1
(emacs 1
(i 19
(implicitly) 2
(implying 2
(labeled 6
(ld.so) 1
(locked). 2
(pid:29266) 2
(pid:29383) 2
(remember: 2
(shaded 1
(thanks 1
(turn 2
(-M 1
(-m 2
(./x86.py 4
(1) 13
(100) 1
(Editors 2
(PA) 3
(Q2). 1
(ROP) 1
(always) 1
(bugs) 1
(but 14
"wc"... 1
%ebp, 1
( 6
(*start_routine)(void 2
(-s 2
(28KB) 1
(7.2) 1
(P0 1
(U/S) 1
(VA) 2
(again 3
(arbitrarily; 1
(c1, 1
18 4
I 26
(-w) 1
(A, 5
(FIFO) 2
(M 1
(PFN) 6
(RR) 2
(SQMS) 1
(Tp) 1
(VPN=07), 1
(VirtualAddress 9
(a[4] 1
(both 2
(c3). 3
(c5), 1
(he 1
(flag 4
(imagine 2
(into 4
(non-restricted) 1
(releasing 1
(source) 1
(they 3
(way) 1
*L, 8
 26
L 17
%eax), 1
(117). 1
(2012-01-30-1-g1c41342) 1
(BKL). 2
(BSD). 1
(B’s 2
(G) 2
(LFU) 1
(P 1
(PDE). 1
(VPN=08). 1
(Virtual) 1
(a[7] 1
(curr->key 4
(easily) 2
(erroneously) 1
(formerly 1
(its 2
(long 2
(modulo 1
(note: 2
(probabilistic) 1
(probably), 1
(switching 1
(target) 1
(v1) 3
(virtual) 3
(you’ll 1
*malloc(size_t 1
*mutex; 2
*new); 1
-k 2
-t). 1
.... 1
/proc/meminfo; 1
0,0,0,0,0,0,1? 1
0x200000. 1
(say, 11
(hardware 1
(mutex); 6
(n) 1
(p2), 1
(part 2
(sorry!). 2
(whether 2
*), 2
**old, 1
*L) 4
*chan; 1
*tf; 1
(at 12
(hint: 6
(i); 1
(known 1
(or, 5
(real) 1
(reduction 1
(running, 2
(runtimei 1
-pthread; 2
*mythread(void 12
*x 3
--tool=helgrind 2
-1); 1
-5 1
-u 6
20 1
B 13
#1: 2
#define 2
(-P) 1
(256) 1
(PA), 1
(SSDs) 1
(TlbEntry.PFN 4
(VP 3
(address 2
(bash?) 1
(done 4
(just 5
(max 2
(my 1
(myturn). 2
(p2); 1
(physical) 1
(pid:29146) 4
(spinning 2
(stop 1
(using 9
(version 1
*d 1
*thread, 2
--tool=lackey 1
-10 1
-A 6
-X) 1
(counter 17
./main 6
0011 1
0101 1
0110 2
02 1
0x7fff691aea64 1
(with 21
(word 3
); 1
*mem; 1
*next; 6
12 19
C 16
#2: 2
%dx. 2
%eax, 8
(-q) 1
(16 3
(Bad 1
(Blocks) 4
(Chapter 2
(LAUER’S 1
(MLFQ). 2
(MQMS) 1
(Offset 1
(P). 1
(PTE.Valid 4
(PWT, 1
(Right) 3
(September 1
(TestAndSet(&lock->flag, 2
(VPNs 1
(Virtual 1
(assuming 5
(bytes 2
(code, 7
(continuing) 1
0x80000000)) 2
10-byte 1
10.3 1
100%, 1
%eax). 1
(200 1
(CTSS), 1
(P=0), 1
(PID), 1
(PTE) 9
(R 1
(Tc2) 1
(a[0]) 2
(after 4
(among 3
(bytesLeft 1
(eventually) 2
(io.c) 1
(ldstub); 2
(m->flag 2
(namely, 1
(p6, 1
(PCB), 2
%eax 24
%edi, 1
(-n 1
(0xC0000000 1
(101) 2
(2) 4
(34K) 1
(Alpha), 2
(DMA) 1
(Lines 6
(NULL 1
(PFN). 1
(PTE.PFN 2
(R) 1
(T2), 2
(Third 2
(Tp). 1
(about 1
(average: 1
(c3), 1
(especially 2
"fork 4
(1110) 1
(21) 1
(22.1) 1
(AMAT) 1
(C) 1
(L 2
(PCB). 1
(PDIndex 3
(PTE): 1
(Pmiss 1
(SJF) 1
(VM) 1
(VPN=06), 1
(a[3] 1
(again, 3
(c) 3
(c2). 2
(c4), 1
(clearly 1
(current) 1
(generally) 1
(highest 1
(minus 1
(regardless 2
(starting 3
*new 4
-R 13
(by 13
(indeed, 4
(insert 1
(latter) 2
(many 4
(minimally) 1
"A"); 4
$0x1, 6
%d 5
(10 1
(1000 1
(4KB 1
(9.1) 1
(A 14
(Bounded 1
(Niceness) 1
(R/W) 1
(Ready, 1
(TM 1
(Timer 1
(“Buzz 2
(discussed 1
+ 45
(web 2
(int) 10
(large) 2
(log2 1
(marked 1
(now 6
(privileged) 1
(sadly). 1
(some 1
(what 4
(without 1
(write) 1
*head 1
M 20
%eax,8049a1c 4
%esp, 1
%lld\n", 2
&rvalue); 2
(1 1
(100 4
(32-bit 1
(Another 1
(CFS), 1
(C’s 1
(MFU) 1
(NOT 1
(Tc1) 2
(a[8] 1
(another 1
(each 2
(global 3
(non-contiguous) 1
*curr 4
*kstack; 1
*q) 2
-i. 2
/bin/ls. 1
0(%eax) 2
0.001), 1
0000000000400000 1
04 2
0x000, 1
0x7ffe45522e94 1
10.5 1
100%. 1
100s 1
1030 1
(say 17
(store 1
(tiny) 2
(total) 1
(use 1
*dst 2
+19 1
-H 1
-pthread 5
./process-run.py 2
./thread 3
(main) 4
(a 21
*(*start_routine)(void*), 2
(for 24
-> 10
0-9), 1
11 110
*mutex) 12
*x); 1
-is-unsafe. 2
-m, 1
-p) 1
-r 5
(double 1
(because 8
(free) 21
(gadgets, 1
*lock) 20
(of 10
(original 2
(rc 8
(rc_wait:%d) 2
(ready 4
(size: 1
(stride=40) 1
(unrealistically 1
(wait 1
**) 4
-5; 1
10). 3
*mutex); 8
0% 5
0th) 1
0x3C00). 1
0x3F80, 1
(pid:29147) 2
(right) 2
(sched 1
(turning 2
(virtual 1
17.7: 1
2 25
-g 3
./fork.py 4
0.1). 1
06 1
(created 1
(finally) 1
(first-in, 1
(hopefully 2
(mutex->flag 2
(out 3
(seconds) 6
(there 3
(this 4
(thread 6
(usually) 2
*(*start_routine)(int), 2
*m) 6
(one 6
-P 19
1000). 1
107 1
13.1), 1
16.5. 1
17.4. 1
1); 4
10.1), 1
0; 116
1100 3
15.4: 1
16.3: 1
18.6: 1
19.5: 1
1969. 3
./multi.py 4
(job 2
0x200, 1
$0x03, 1
$0x03e8,%eax 1
(2134) 6
(32768) 1
(7030) 1
(And 1
(EEVDF) 1
(MMU); 1
(P=1), 1
(TestAndSet(&flag, 2
-a 41
(freeing 1
*ptr 9
(only 5
(other 1
(sometimes, 1
(stride=100) 1
(upon 1
(use_ptr 1
170 3
(not 20
100); 2
0x30 1
0x700, 1
0x7ffe1033b8f4 1
100%), 1
1028 1
110000) 1
143012 1
16.6 3
17.5 1
18.4 2
19.3 1
+1 1
(on 11
1111 7
.EXE 1
$0x1,%eax 4
(if 13
(rather, 1
(SN) 1
(and 111
. 53
0.0 2
10-ms 4
11916, 1
16KB)1 1
18.7 1
(assumes 2
*attr, 2
* 17
**value_ptr); 2
(quite) 1
1024. 3
104 1
1110101 1
17.2: 1
!= 7
"wc" 1
%ax 4
(1e7) 2
(APIs) 2
(BFS)2 1
(P1), 1
(Q0), 1
(RDLK) 2
(THE), 2
(c1–c3). 1
(effectively 1
(middle 2
(myturn 2
(scheduling) 1
(shown 5
(simplified) 1
(specifically). 1
(stop) 1
(though 6
-t 20
(normally 1
19.6 1
(available 1
*c); 1
1959 1
1968 2
(similar 3
(somewhat) 1
(that 5
(tmp 1
(v2) 1
(va.c) 1
(vruntime). 1
(wc). 1
(literally) 2
1), 5
(int 6
(left 1
(nearly 2
(quantum 1
(quickly) 1
&& 2
(24113) 5
(Code) 8
(Logical) 1
(MMU), 1
(PFN 2
(TestAndSet(&m->guard, 4
(assert(hptr->magic 1
(atomic_add_zero 2
(include 2
(lock-holding) 2
(probably) 1
(pthread_create) 2
(either 3
(fun!). 1
-D 154
2017. 2
29.1. 2
3Like 1
3a); 1
4.6 1
44000 1
1978. 5
./p2 1
*/ 16
*c, 5
*old_ptr; 2
1: 7
2.1: 1
2.4). 1
2000) 2
20000000) 2
22.9 1
0 384
(results 1
(a) 5
(broken) 1
(c2), 3
(causing 2
(kernel) 1
(milliseconds); 1
(new 7
(ns) 1
(pid:29267) 1
(pid:29384) 1
*abs_timeout); 2
(hopefully) 3
-d 2
0-byte 1
*parent; 1
113 4
128: 2
13–14). 1
140 2
18, 2
18-bit 1
(new_head 2
10% 5
-1; 8
-1KB. 1
(p.81).” 1
(p3.c) 1
*) 23
(i.e., 96
(incredulous) 1
(interrupt) 1
(modified), 1
(note 4
(older 1
(our 4
(p1), 1
(p1– 1
(queue_empty(m->q)) 2
(rc_wait:29267) 1
(rc_wait:29384) 1
(requiring 1
(sometimes 10
(thank 1
(v 2
*H, 4
*old_ptr 2
*p); 1
1 461
0); 8
4KB). 2
1987. 1
0,0,0,0,0,0,1:0,0,0,0,0,0,1:0,0,0,0,0,0,1 1
0,0,0,1,0,0,0:0,0,0,1,0,0,0:0,0,0,1,0,0,0 1
00007f4e7d932000 1
10.7 1
100), 1
-L 18
128) 1
(page 49
-15 1
-F 3
-f 1
1024, 1
12(3), 2
(get 1
(load 1
(myarg 2
(onto 2
(pthread_join) 2
(via 6
*arg); 4
*child(void 3
*hptr 1
*old_ptr, 2
-1, 1
-= 1
*tail; 2
-20 2
*worker(void 1
100 87
12. 2
14, 2
1996. 4
18.2, 3
2.5 1
1. 43
-O 1
1032 1
-l 19
./main). 1
/* 16
26.5 4
0.2 1
(studied 1
(approximate) 2
(atomically); 1
-S 24
-Wall 7
(usually 7
(v9 1
(slow) 1
1] 4
2-MB 1
2.4: 1
20, 3
20-bit 3
200-MHz 1
2000, 1
28.6 2
-B 4
-c. 1
./p1 2
./random 3
.globl 1
1KB) 1
(p1.c) 1
// 294
100. 6
-o 9
13.4 1
14.3 1
(physical 1
0) 40
27.4 4
0x80000000 2
(too 1
120 9
12000 1
-s 21
................ 1
./p4 1
0.03 2
0.5. 1
0001 1
0010 1
01 2
0100 1
0xFFFFFFFF) 1
... 84
17: 1
29.5 6
-b 3
/ 1
0.1 2
14-bit 4
1Note 2
2005. 9
(p4). 1
0. 11
12:6, 1
13.2; 1
13.3: 1
15.1: 1
15:3, 2
15KB, 1
1961. 1
1963, 1
1970. 4
1970’s 2
2- 1
20.5: 1
./p3 1
00 4
(something 2
(thus 9
(potentially), 2
*producer(void 5
(kernel 6
10 21
!zero, 2
"common_threads.h" 4
%esp 1
%p\n", 4
(24114) 5
(32 2
(August, 1
(CFS) 2
(Dynamic 2
(PTEs) 1
(Success, 4
(T1 2
(Tarrival 1
(atomic_bit_test_set 4
(binary 1
(called 9
(cleared), 1
(continue 1
10.3. 1
(turned 1
(do 5
(initial) 1
(let’s 4
(likely) 1
(lowest), 1
(more 3
(mutex 2
(myarg_t 4
(new) 1
+= 9
./main-two-cvs-while 2
10 165
0: 4
17:4, 1
2github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
30.12: 1
30.4) 1
3; 3
3A: 2
2), 3
2007, 2
(preempting 2
00007f4e7d508000 1
./array 1
13 93
15 96
(pointers) 1
0x0(%ebx), 2
28.3 2
(curr) 4
(described 5
(dramatic 1
(hex 2
(highly 1
(holding 1
(we’ll 2
0000 14
0x8049a1c. 2
(“0101”th) 1
(repeat) 8
(roughly 2
(simple 2
(stuck 2
*cond); 2
*rvals 2
*src 3
-nw 1
0.4 1
0x068, 1
16KB] 5
3KB. 2
20% 7
2008–19, 138
(pretend) 1
0x8049a1c, 8
./mem 5
13.2 2
15.2 3
(resulting 1
1.2.1) 1
10,000,000 2
100,000, 1
100:100,100:100), 1
135: 1
-p 44
/dev/zero 1
/proc/meminfo 1
). 3
(start 2
1.0001 1
*ptr, 5
(perhaps 7
(pointed 1
(recall 1
(roughly) 2
(size=200) 1
18.1: 1
0.6 1
4MB), 1
0? 3
0x8049a1c 6
1-byte 1
100ns 2
2014 1
203 1
(probably 1
110, 1
0+5+10 1
14.1 1
16.1 2
(see 12
(that, 2
100? 1
(void 12
108 11
14. 4
15.1. 1
15.3, 1
0KB 13
*args 4
*head; 4
--l1 1
-5), 1
(or 83
//acquire 4
10.2 1
0x200000 4
(such 25
1964. 2
1973. 2
5.5 1
0x1024 1
0x900. 1
1.0 1
101 4
110 2
22.12 1
25. 1
254: 1
0, 55
15.6: 1
16384 1
16492 1
(unused) 6
(value 2
(yes, 4
11). 1
11:1, 1
(like 5
(modern 1
0x0DC0. 1
(trustingly) 1
(who 2
, 15
--b0 1
-S, 1
00, 1
00007f4e7cf06000 1
0th 2
0x800, 1
10+20+120 1
100+110+120 1
1074 2
12) 1
4-KB 3
10. 7
1000. 2
11–12), 1
12, 2
1234567)) 1
26.3, 2
00007f4e7d731000 1
16.5: 1
28.9: 2
16708 2
17.6: 1
170. 1
(you 5
*malloc(size 1
*new_head 2
-l, 1
...; 1
0x7ffd3e55d2b4 1
0xC0000FFF 1
*c) 18
*q; 2
--l0 1
-I 6
1000 10
0x600, 1
(waiting 2
0x00000000, 1
0x03e8, 1
0xBFFFFFFF 1
1000s 1
1234567 7
16.7 1
18.5 2
19.4 1
1960’s. 1
1970; 1
1980’s, 2
27.2, 2
010000; 1
0x0(%ebx),%eax 1
29 25
108). 1
(when 3
172, 1
18.5: 1
19.4: 1
1959. 1
(once 4
(threads.c) 1
10-entry 1
1, 80
0x03, 1
0x3000, 1
12(%eax) 1
14949, 1
160 2
17.3. 1
19.3, 1
2.7 3
20), 1
18705, 1
112 2
15. 1
15.2. 1
16.1. 1
(remember, 1
12-bit 2
13.2: 1
1; 42
1KB. 1
2.2: 1
2.5). 1
23254, 1
25% 1
*cond, 2
*p 6
135 2
17.5. 1
1968. 11
./cpu 5
*arg) 26
*current 1
*rvals; 2
(pid:%d)\n", 9
(required 1
(running 1
(said 2
1.0; 1
(which 39
*H) 2
512 9
2007. 3
2016. 1
2018, 1
21.1), 1
214 1
16KB 24
(size 1
15) 4
16KB; 1
28K 3
17.4: 1
1.00] 5
10+20+30 1
11. 3
26.6 4
27.5 2
28.4 2
29.3 2
29.9: 2
2: 3
30.10: 1
30.13). 1
384KB 1
- 25
--b1 1
01, 2
100000 2
11–19 1
120. 1
15.3: 1
15:5, 2
16.2: 1
17.1: 1
18.3). 1
19). 2
1945. 1
1954. 1
1963. 2
1965, 1
137298 1
17:10, 1
29.11: 2
17.7). 1
18.3: 1
10.3: 1
115–116, 2
2015). 1
-M 15
15KB 7
1996 3
2.9 2
0), 1
0.9. 1
05 1
0x100, 1
10); 1
10.6 1
100-bytes 2
100byte 1
117, 1
13.3 2
*argv[]) 23
55. 1
1970 1
4.2: 1
21.6 1
13. 2
14KB 2
17, 1
1928 1
1964 1
1:0,4:100. 1
2.4 1
30.10): 1
36, 1
19.2: 1
1000; 1
13, 2
13.2, 1
132: 1
19.8 1
1? 1
1” 1
2.6: 1
20. 1
20.2. 1
08 2
-i 18
0] 4
(the 61
(through 1
(xchg). 2
14 71
*m); 1
56KB 2
1992.. 1
4.3BSD 1
4: 2
250 5
15, 7
(too) 1
1972. 5
13: 2
19.7 1
2004. 7
29.2 4
3764-byte 3
19345221) 2
100K 1
22.3: 1
-m 3
2.3 1
1986. 1
2009. 5
10.1 2
1.01] 203
39 11
2000. 9
0x00000000 1
0x1095afe50 1
0x400, 1
0xFFF. 1
1982. 7
) 46
14.2 1
143,012. 1
6.4 2
2.1 2
2001. 1
2003, 2
2010. 7
23, 2
23-bit 1
1981. 7
1990. 2
20.1 1
2008). 1
22.5: 1
3One 1
1957. 1
10; 2
128-Byte 1
128-byte 2
13:2, 1
14). 2
22.9. 1
10.2? 1
101. 2
12:7, 1
15.2: 1
1586, 1
16.1: 1
1.3.37 1
1). 6
1991. 9
*mutex, 2
*ofile[NOFILE]; 1
15.1 2
7.3 2
22.5 2
5.1: 1
50) 1
16.1, 2
(usually, 1
28.9 4
13:4, 2
2.5: 1
2008–18, 5
29.8: 2
26.1: 2
26KB, 1
29146; 1
23.2: 1
./x86.py 14
2003. 4
1995. 6
16), 3
28.10 4
10,000 8
4.3). 1
21.3, 1
..., 2
0x0(%ebx) 1
16KB, 1
10) 2
1036 1
1Each 1
*ptr; 6
*ptr) 7
16.6: 1
7.9: 1
2212 1
27.2. 2
68 1
16384, 1
(where 12
29.8 2
17.1). 1
2010, 2
2013. 4
38 8
4-byte 3
1966. 3
1970s 1
28.16 2
0+ebx 1
201 4
1:0,4:100 2
16500 1
28.3. 2
100, 6
10th 3
22, 1
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 1
10, 14
100,000 1
100). 2
111). 1
14.7 1
15.6 2
16.5 1
17.4 1
18.3 1
25 33
28KB 2
29, 3
3); 1
(yet) 3
29154, 1
1792K 1
20KB 2
2015, 1
4). 7
47 2
4:1, 1
1975. 2
2:70, 1
1) 52
1-second 1
10.1: 1
100) 3
109 1
12). 1
17.8, 1
19.4. 1
200,000, 1
1793, 1
1000, 5
100+(110−10)+(120−10) 1
20 95
*tmp 7
-n 19
0x37) 1
0xC0000000 2
1.0, 1
10.2: 1
10:1,10:100). 1
16K 1
30.15 1
*cwd; 1
30. 2
19.1), 2
21, 4
202 1
4.3 1
3. 32
60% 4
1993. 6
2KB 8
2m 1
20); 1
1K 1
324 1
48 9
11:5, 2
22.2, 1
0.10). 1
21:1, 5
24(%eax) 1
25%. 1
28.11 2
20(%eax), 1
0+1+2 1
17.5: 1
8 109
19 58
26.1 2
7). 2
128 13
16k 5
4.5 2
*input) 1
30.15: 1
1960. 1
21-bit 1
22.11 1
40100 1
30.6: 1
64-Byte 1
20.4 2
22.10 1
2”. 2
20.6 1
1k 9
32868. 2
4MB) 1
1277, 1
13.1: 1
15). 1
16.1). 1
19221041) 2
1950’s 1
1ms, 1
20-29): 1
20.3: 1
20.6). 1
2000; 2
21.2: 1
21: 1
22.1: 1
15), 1
1962 2
5.4 2
*myargs[3]; 2
30.2. 1
1960’s 5
21.2, 1
220 1
45, 1
300. 3
64-byte 7
74 1
83 1
Accounting 1
Actually, 1
Aha! 1
40050 1
5). 6
28.8 4
0.8 1
18). 1
10ms, 1
103.33 1
28.4. 2
20.2 1
09 1
18.4: 1
8(%eax), 1
19.2 2
26.7: 2
7232 1
23:2, 1
16(%eax) 1
1780K 1
56, 1
*str 1
32, 1
1KB 13
28.7 4
24. 1
4a 4
3:0,5:100,5:100,5:100 1
21.3 3
22–23), 1
3, 25
21.5 1
2.3) 1
Andrea 7
48KB 4
655, 1
29.7 2
0x00000FFF, 1
19.1). 1
11168, 1
105-117, 1
3KB: 1
2000 15
0x500, 1
18–21); 1
8.2 2
1960’s, 2
272, 1
8.1). 1
256 6
1990s, 1
179–180, 1
6.3 1
--trace-mem=yes 1
32-bit 16
1m 6
29.6 2
2501, 1
4KB 16
5 169
215, 1
24KB 3
30.4: 1
22.4 2
20.2: 1
Approximation 2
49, 2
7), 3
30.1. 1
1% 1
19.3), 1
1174 1
14KB; 1
4.8 1
21.1 1
0x8049a1c). 2
19.3: 1
9.1 1
1990). 1
28.5: 2
86 2
28.14 2
1980’s; 1
2 257
2.2 2
-v 17
36291, 1
3752 1
4.5: 1
40-ms 1
4m 1
5.2 2
22 38
26.1, 4
300, 2
4096, 2
4k 1
5121024 1
54.5%. 1
75 3
30.14: 1
10), 1
1962. 7
1124 2
18.6 2
5% 3
22.6: 1
110). 1
1224 1
14.6 1
15.5 2
16.4 1
17.3 1
28.9, 2
1998 2
64KB 9
200 24
2002. 1
7 127
2Fortunately 1
2] 2
40KB 2
4page 1
5.4: 1
50, 5
5000, 1
23.3 1
20.5). 1
Attacks 1
5.6 1
5→0 2
8(%eax) 1
32K 3
100% 5
1963.” 1
128KB 1
13); 2
14.5 1
148K 1
15.4 1
16-byte 4
16.3 2
29.4: 2
8KB) 1
18 54
18.2 1
19.1 2
192KB 1
19384 1
2011. 7
2013, 1
23.1. 1
24-bit 1
29.9 2
500 4
22.2 1
22.8: 1
23.1 1
24 37
24(%eax), 1
26.6: 2
512-byte 1
59–73, 1
6.5 1
32k 6
105 6
128; 1
132 2
14:7 1
26.2: 2
27.1: 2
30.1 1
1999. 1
17 66
17.2 1
17.8: 1
18.1 2
18.7: 1
1800s, 1
1979. 2
1989. 5
1998. 2
26, 1
30, 3
5, 6
32KB 5
52. 2
28.10: 2
5th 1
26.4: 2
21.1: 1
B) 3
28.4: 2
6) 5
8(9):569, 2
93 1
ALLS 2
1971. 1
19.5 2
5.7 1
50), 1
5:100,5:100. 1
9” 4
30.7: 1
1KB, 1
29147 2
9), 1
90% 1
2) 7
/proc 1
2, 38
1988. 2
1997. 5
2). 7
2016 1
22.7 2
26.3 2
34K 3
6.1 2
6.3: 1
3 231
27.3: 2
22.3). 1
B-tree, 2
29.3: 2
6.2) 1
7.4 1
34920. 1
ASPLOS-IX, 1
1980. 1
1991, 1
1MB 1
1970’s. 1
7.5 2
<< 9
320KB 2
21:10, 1
30.6 1
32896; 1
335, 1
20.1: 1
00000000019d5000 1
2-bit 1
20.4: 1
1:1, 3
29.10: 2
30-bit 1
50,000 2
27 32
3” 1
64k 1
7.2: 1
30.11 1
27KB. 2
24114 1
Beginning: 1
33 12
64-bit) 1
8-byte 1
36.4% 1
Again, 3
150 10
17.2. 1
1957 1
1966 1
2.6 3
20(%eax) 1
4. 27
22.8 2
256KB 1
256m 1
34 12
372K 1
0111 1
03 1
200, 3
1e7; 2
2KB), 1
30.13: 1
50th 1
27.2 2
40%) 2
7.6: 1
75% 1
300 4
28.2: 2
255 2
Block 9
42 7
8:10, 1
8.3 2
3:50,3:50 2
Amazingly 1
1949. 1
2. 29
20.6: 1
70%. 1
78-101, 1
2006. 6
2015. 1
204 3
AM 2
26.4 4
218 1
43 8
7.4. 1
0x1096008c0 1
2015/02/10/understanding-glibc-malloc/. 1
20,000,000. 2
21.7 1
22.6 2
64). 1
28.1 2
40. 2
7.9). 1
8.1: 1
3121, 2
29.1: 2
28.13 2
But 49
4200 4
9.8 1
8049a1c,%eax 4
3] 1
Apparently, 2
1980s 1
1985. 2
1994. 1
20.1); 1
20.5 3
2016.. 1
21.4 1
22.3 1
22.9: 1
27.3 4
24113 1
254 3
28.12 2
28.5. 2
20th 1
30.12 1
30.5) 1
26 32
8) 3
28.7: 2
4200, 1
46273, 1
9:2, 1
3412382, 1
4.1 1
4096 3
50. 1
6100, 1
64GB 1
4.4: 1
9 119
B-Trees: 1
1We 1
200. 3
<pthread.h> 8
8.4 2
4.2. 1
4088. 1
44:1/2. 1
AMPSON 1
23 37
28 33
28(%eax), 1
70 2
1)) 2
29.11 2
21.3: 1
34KB 1
3000, 1
26.2 4
27.1 2
29.6: 2
70–76, 1
71755, 1
ACHE 1
30-byte 1
28.6. 2
CONCURRENCY 3
51 18
? 9
6= 2
40, 2
4000, 1
4b: 1
5.3: 1
57.1% 1
6.2: 1
88761, 1
2K 6
27.1. 2
4b, 1
AUSE 1
23.2 2
7.2 1
28.2 2
9. 9
10.4 1
4:10, 1
22.2: 1
36K 1
39016, 1
<string>\n"); 1
28.6: 2
3-GHz 1
5(2): 1
50-ms 2
ACM 11
30.3 1
3) 2
CRITICAL 1
60 13
7.10 1
7.4: 1
9.2 2
BUCKETS; 2
2.3: 1
2018), 1
AIN 1
7.1: 1
9.3 2
2k 1
2KB). 1
5KB 1
Ability 2
26.5: 2
27.4: 2
28.8: 2
<fcntl.h> 2
104. 1
7); 2
23.1: 1
3764 4
3B: 3
4.3: 1
30.8 1
36 11
51, 3
AKE 1
ALWAYS 1
30.1: 1
A 728
A2’s 1
A2, 1
8. 12
7.7). 1
ALICIOUS 1
Bovet, 1
2008–20, 49
22.4: 1
ATC 2
9). 1
90%, 1
30.2: 1
3): 2
7.1, 1
: 289
7.8: 1
8.1 1
29.1 2
<string.h> 2
1101 2
7.6 1
24:2, 1
3980 3
28KB1 1
4146 1
7356 1
4), 2
6.4: 1
30.9: 1
Along 2
7.7 1
Certainly 1
ASID 9
Allocator 1
820, 1
70, 1
APIs, 4
Brian 2
26.7 4
28.17 2
ATTACK 1
ANAGEMENT 17
4) 2
4.4 2
Achieving 2
8-page 1
== 91
28.2; 2
8.7: 1
29.7: 2
<unistd.h> 6
<value>\n"); 1
7620, 1
256-byte 1
3A 1
29.5: 2
4a: 1
5.1; 1
40% 5
6000, 1
31 21
Alternately, 2
76–86, 1
Coherence” 1
Compared 2
Andrew 4
9548, 1
API, 1
Acta 1
C) 3
27.6 2
2N 2
AW 5
AccessMemory(PDEAddr) 1
4904, 1
4GB 1
Aleksey 3
846 1
ALGORITHMS 1
28.3: 2
80-20 4
29267 1
1110 2
Adding 7
8.5 2
28(%eax) 1
3), 3
30.7 1
4 164
5.2: 1
4088), 1
7.3: 1
32-bits 1
Always 4
8.6 2
9.5 1
Concept” 1
Available 8
7282 1
ARDWARE 2
Algorithms” 1
CHEDULER 1
28.5 2
2’s 1
Amazingly, 4
Accessing 2
4b 4
5.3 1
56483, 1
5–7), 1
API 62
Abstraction 2
Affinity 1
29384 1
12 89
Afraid 2
87, 1
28.1), 2
8.5: 1
9.4: 1
4(%eax), 1
5: 2
45 6
7.6). 1
40 28
Anomaly 2
ACM. 2
< 24
Concurrency 1
B1’s 1
7354 1
Act. 1
All 21
CLOCK 2
29.4 4
30.5: 1
April 10
Almost 1
7.8 1
Antoine 1
9) 1
6 116
29.2: 2
85.7% 1
Algorithms 4
2This 1
12(%eax), 1
Algorithm 5
9.4 2
28.15 2
300), 1
AT 1
4.2 1
400 1
526, 1
73-96, 1
4000 3
Another 38
Architecture. 1
>> 11
Controlling 2
B5000: 2
8.3: 1
Address 25
Assignment 1
CPU(s) 1
2; 5
3KB 3
4, 5
Alto 2
8.7 1
Approach 1
<assert.h> 4
6+5 1
30.4 1
99% 2
Assume, 3
3). 5
13.1 2
Applications 4
; 25
3.33). 1
35 12
4(%eax) 1
6.1: 1
40000 2
63 3
7353 1
50? 1
549–557, 1
Avoiding 1
A; 2
Couleur, 2
B? 1
9.2: 1
Algorithm” 1
Attempt: 4
CVs 2
30.11: 1
Are 6
4-bit 3
Answer 1
9.6 1
Assume 33
AIX 1
6.2 1
32 33
ARPACI-DUSSEAU 38
BOUT 1
30.9 1
15.5: 1
Art 3
;load 1
30.3: 1
Ah, 2
44 6
7332 1
4088 1
64bit 1
8.2: 1
9.1: 1
6. 20
7KB 3
8, 1
Critical 2
Bayer. 1
<stdio.h> 15
Allocated] 2
August 5
Caching” 1
30.14). 1
ArpaciDusseau. 1
7) 3
B. 18
940 1
B, 22
ARC, 1
64, 1
41 10
Anticipatory 2
BUCKETS], 4
37 8
152K 1
Assuming 10
>= 5
30.8), 1
Aren’t 1
4400 1
82% 1
4096-byte 1
4196 1
4:100,1:0. 1
5.1 1
BUCKETS 2
ANAGE 3
8-bit 3
Crockford’s 2
Berkeley. 1
<sys/types.h> 1
Allocation 3
Automatically 1
Chunks 2
30.3) 1
Artificial 1
@ 8
BUILD 1
BEST 1
Anyhow, 1
64-bit 10
423, 1
Arpaci-Dusseau 3
Background: 1
= 415
4-GB 1
16.4: 2
B5000 4
A: 13
3000; 1
At 31
4K) 2
9.1). 1
90 1
APPING 1
99 7
51. 4
Belady 3
Alan 3
;add 1
Currency 1
DVICE 1
<sys/wait.h> 3
Anderson, 2
B). 2
Clock 2
31) 4
Baby: 2
A1’s 1
Bigger 1
Balakrishnan 1
Anything 1
7.1 1
50 46
Basu, 1
Birrell. 2
ACM, 19
4.1). 1
17.3: 1
BE 1
ABOUT 1
32KB, 1
Atlas 10
62 2
96 2
ACE 1
ARGE 1
<stdlib.h> 9
7.5: 1
Bits” 1
Although 16
ANDLE 1
Beyond 14
Disk 5
A2 1
Applications” 1
B86], 1
Coherence 1
3: 3
Because 50
ARM 2
Brooks 1
Baumann, 1
Appavoo, 1
7.7: 1
512KB 2
Berger 2
Boneh. 1
AMAT: 1
5), 5
17.6). 1
BFS, 2
APIs. 1
3906, 1
B.W. 1
80 18
A. 29
ADD 1
Actually 4
A1 3
7.8). 1
Bruce 1
And...? 1
AddressOfPTE 1
Boston, 3
Does 29
AFIPS 4
Approaches 1
BSD 3
Costs 1
4.1: 1
448KB 1
ASIDE: 4
Bryant 4
Best 2
Architecture” 3
8.6: 1
512m 7
Bit-precision” 1
Buffer 9
AT&T/Bell 1
55 1
18.2: 1
BIQUITY 1
About 5
3:50,3:50. 1
Base/Bounds 1
;store 1
ADDRSORT, 1
AMAT, 1
Address-space 1
AMD 1
7094 1
C. 24
B: 12
Analysis 5
Bouron, 1
ERFORM 1
AME 1
Aside 1
BSTRACTION 20
Below 2
Borg. 1
49 1
ASIDs, 1
Build 4
Bhandarkar 1
9.5: 1
6.3. 1
B 157
BSD) 1
CHEDULE 2
ATOMIC 2
64 17
184–199. 1
BSD. 1
AccessMemory(PhysAddr) 6
3K 3
Base/bounds 2
ANDOMNESS 1
ANY 1
AN 18
ANGRY. 1
ASLR 1
7355 1
Cocke, 1
Bach. 1
April, 3
Broken 3
ESS 1
AND 6
Assumptions 3
DEC 3
Buffer” 1
Buddy 1
4:3, 1
4KB, 3
Buy 1
Blocked: 1
A), 2
7. 16
Bobrow, 2
Basic 10
CONDITIONS 1
Annals 1
9.5. 1
19.1: 1
Bad 3
Allocator: 1
4(%esp), 2
Boston 1
ALLOCATED 2
API. 5
Accurate 1
Also 10
Access 9
8.4: 1
Computing; 1
Battle 1
Arrivals 1
Burroughs 5
ETTING 1
AVOID 7
A’s). 1
Daggett, 1
C++ 2
C), 5
AccessMemory(PTEAddr) 4
5.3). 1
B’s 8
Building 5
ARC 1
801, 1
But, 7
Batch 1
CPUs? 3
Anoop 2
A) 2
1956. 1
Be 5
Also, 1
4.3) 1
Bottom 1
Ah 1
And, 2
Amazing! 1
An 65
After 21
9.3: 1
Convention. 1
C9 1
C95]. 1
CONTROL 2
EVELOP 1
Abstract” 1
BETTER 1
Barton 3
Base[Segment] 1
Better 4
Again 2
6). 1
CA, 7
Butler 3
ATA 21
8KB 6
Certainly, 2
CISC 7
Calling 8
Clayton 1
Coffman 1
1965. 6
Boost 2
Atomically, 2
5) 3
7.9 1
Allocated 9
Annual 1
Anderson. 1
Atlas: 3
Allows 1
AS 10
C’s 1
Bradford 2
CFS 40
Cheap 1
Engineering 1
Adam 1
Debugging 2
CCS 3
Chapman 2
California. 3
Allocation: 2
64-bits); 1
76 1
CISC, 1
Abdel-Wahab. 1
9, 6
Comes 1
CPU: 1
Architecture: 4
ACHING 1
Completion 4
1974. 3
B’s). 1
Available: 29
Bouron 1
9.7 1
BFS. 1
Babaoglu, 1
Any 3
Atlas”; 1
Award 2
AZY 1
DID 1
BufferOverflow.pdf. 1
CRUX: 6
Computers” 1
Envision 1
Ahead 2
Dirty 2
CV 2
Clearly, 9
Callers 2
Allocator” 2
CISC. 1
8), 1
Calculate 1
Advanced 1
9-bit 2
Consider 2
Carl 5
Atomic 2
Accesses 2
Conditions 1
1983. 4
C.H. 1
Average 1
Brother” 1
99, 1
99.9% 1
Bart 2
Approach: 5
Alpha, 2
A’s 7
Abstraction: 3
Days 1
Burnett 1
Call 8
Control 11
Evans. 1
Distribution, 1
And 108
Caching, 1
Coalescing 2
Canada. 2
Apparently 1
CPUs), 1
80% 7
Compilers 1
Android), 1
Adaptation 1
Ajay 2
Charles 1
Award. 1
Approximate 10
Cups” 1
1992. 4
CONDITION 19
A’s, 1
CPUs: 1
Anomaly. 1
> 5
Butenhof. 2
B+96, 2
Alternatives 1
Björn 1
Addison-Wesley, 11
Denning. 2
COND 2
Case 4
Cooperative 1
D.A. 1
Dennis 6
Atomicity 2
Avere 1
Cobham. 1
Cobham’s 1
Apple’s 1
Come, 1
85 1
Computers, 3
Architectures 4
Could 1
Allocate 3
Classic 1
B; 1
Behind 4
DATA 16
20.3 2
CPU? 11
BFS 1
Class? 2
Array 4
ABCABCABCABCABC 1
C.J. 1
BAD! 2
Amazon, 1
Boyd-Wickizer, 3
Allocators 1
Denning’s 1
CPUs) 1
Cassandra, 1
Every 1
EG 1
Directory, 1
ETH 1
B1 1
Certain 1
Complex 1
Atlas”, 1
Compacted 3
<sys/time.h> 1
Computer” 5
B-trees); 2
D.B.G. 4
Allocation” 3
Compiling 2
Babaoglu 1
Between 2
Dahm 4
21 45
CPUs, 14
Base 3
Code: 2
Commodity 1
ACKGROUND 1
CCESSES 1
BF 2
Animal 1
C, 12
Amazon’s 1
Doing 23
California, 6
Characteristics 1
Flexible 3
Frame 1
Generate 2
Either 4
Base-and-bounds 2
Change 4
Conference 1
Austin, 1
Corporation 1
A, 16
Contents 1
Blumofe, 1
Davis 8
Arpaci-Dusseau. 3
Computers 2
Bairavasundaram, 1
Bus 1
Darago, 1
21.2 2
Caches 3
Bonwick. 1
Bosch, 1
Considering 1
ASPLOS, 1
COW 3
Benchmarking” 1
Apple 3
COMPCON 1
Each 19
Canada, 4
Chemistry, 1
Cores 1
Corporation, 1
Chunk 1
Hansen. 5
Experiment 1
Before 21
Concept: 1
Corbato. 1
Authors: 1
Correcting 1
APIs 10
Contrast 2
Brinch 7
December 8
Assign 1
Computing, 3
Became 1
Buttlar, 2
Data 13
22.1 2
Cesati. 3
Chapter 1
Broken: 1
Creation 6
Account.html. 2
CPUs. 7
Blasgen, 1
Aq 1
Calls 4
Ed2.pdf. 2
As 158
Child 1
EMORY 36
END), 1
Cohen, 1
Hansen’s 2
Find 4
Berkeley 7
DOS 1
Corbato’s 1
Basically, 5
Craft 1
ASID, 1
Correspondingly, 1
Butter 2
Deciding 1
August, 1
Custer, 1
Belady, 1
CPU-intensive 4
Descheduled 1
22.7: 1
Attempt 3
Clear 1
Culler. 1
By 58
Allocating 1
Casting 1
CFS, 3
Better, 1
Candy 1
Facebook). 1
Formalizations” 2
CPU 255
CPU-bound; 1
Critically, 1
EVEL 11
Complete 1
Implement 4
Fred 1
CHEDULING 50
Death 1
Cox. 1
Bertinoro, 1
D, 2
Create: 1
ASY 154
CPU-optimized, 1
Different 5
Dijkstra; 1
DOO 1
Black 1
Cambridge, 2
Design 3
250, 1
B-tree 2
Clements, 3
Culler’s 1
CFS” 1
Analysis: 1
Chevalley, 1
Big 2
Com-puting, 1
History” 1
Atlas” 1
Coarse-grained 1
CR3 1
Candea, 1
Example 18
Concurrency. 1
It’s 4
Gray. 2
CONDITION, 1
Design, 1
Cybertron 1
Beyond” 1
DRAM, 1
Decision 1
AUER 1
CPU. 31
Begin 1
EALLY 1
Decepticons1 1
C: 2
Concurrency? 1
EAKED 1
26.3: 2
BASED 17
Condition 6
DVANCED 13
CODE 2
Andreas 2
Common 3
Bits 1
Compare-And-Swap 2
IRTUAL 19
Austin 3
Come 3
Detailed 1
Canyon 1
Examples”. 1
Conditions? 2
Jacob, 1
Gray’s 2
Cache” 1
Details 1
Dilemma” 1
Bovet 2
Don’t 17
Depending 2
Above 3
CPUs; 2
Being 3
ERMS 4
Dekker, 2
CPU), 6
Corbato 4
EC2 1
27.2: 2
Before, 2
Counting 2
Database 1
CPUs 37
Apple, 2
Communications 20
Buddy-managed 1
Compare-and-swap 2
In-ternational, 1
Base[SN] 1
Conference, 7
Dijkstra 12
Case, 1
F.J. 1
Cool, 1
Jeffrey 1
HY 5
Chile. 1
Done 1
DiskRead(PTE.DiskAddr, 1
Burchfiel, 2
EALING 1
Despite 1
Abstractions 1
CS 1
Bershad, 1
Edward 2
ECTION 1
CPUintensive 1
Dennis) 1
ECIDE 1
28.1: 2
Belady. 1
Dickey. 2
Devang 2
Cache-Affinity 1
Ask” 2
Compile 1
CPUs). 4
Computer 20
Introduced 3
Blocked 4
Countermeasures” 2
Errors” 1
FAULT 1
February, 1
Design” 4
Johnson, 1
Hawkins, 1
Comment 2
Druschel, 1
Doctoral 1
Bye 1
ECHNOLOGIES 1
E) 1
Al 8
Came 2
Binary 1
ERSION 166
EPARATE 1
Compute 4
Dialogue 3
EMBRYO, 1
EXCLUSION 1
Belady’s 2
ESTRICTED 1
Directory 5
Chou, 1
B-tree” 2
Copper 1
Can 40
Corporation” 1
Isolation” 1
Italy. 1
CompareAndSwap(int 2
D 109
Fault 4
Further, 8
Detect 1
K 6
I/O: 4
Conference; 1
EARN 1
Donkey. 1
C-callable 2
Elias 1
Anita 1
Close 2
Emacs. 1
Boilen, 2
ESX 2
Emery 1
Copy-on-write 1
Dijkstra. 9
28KB, 1
Edsger 8
Bell 2
Electronics, 1
Efficiency 2
Clark. 1
B97, 2
Core 3
Consistency 1
Creation: 1
Boot 1
I’m 5
Contents: 1
DEKKER’S 1
GBs 1
Futex 2
Dissertation 1
Large 2
Inverted 1
Jacqueline 2
EDUCE 1
Download 4
C.A.R. 1
Even 20
Approach” 3
Commu-nications 1
Gandhi, 1
CFS) 1
Electroanalytical 1
Fair 6
Covering 2
Dijkstra’s 5
29.10) 2
EnvyFS” 1
Berkeley, 2
Examine 9
Figures 2
Code 24
Baby 2
DMA). 1
Correct 4
Daley 1
C-language 1
KB); 1
Cup 1
DRAM 1
Gecsei, 1
Geometry 2
EASUREMENT 1
Lauder. 1
Counters 8
Josep 1
EMORY-M 1
D′ 2
CACM, 5
Experimental 2
Bonwick 3
Computing 4
HAPTERS 1
CMU 1
Europe(!). 1
Fekete. 2
C’s, 2
EAD 1
29.3). 2
Exactly 1
Bit 3
FOR 2
G. 9
Code00 2
Baron, 1
Declaring 1
Counters” 2
Dennis. 1
CACM 1
LWN 2
DD 1
Dekker’s 6
Ginting, 1
Glaser. 1
EBOOT 1
Levels 1
Culler, 2
KPTI) 1
EMORY: 26
E.W. 2
CPUbound 1
FAST 7
Both 7
Conversely, 3
HREADS 1
CONCURRENCY: 15
Evaluating 4
Daley. 1
EE 1
2Q 3
Exclusion 4
Bounds[Segment]) 1
Figure 335
First: 1
Good, 1
Computer, 6
Bone: 2
Definition 1
D. 33
Development, 1
CPU, 33
Like, 1
David 19
Destroy: 1
Gollum, 1
Handle 4
ERFECT 1
Linus 1
DO 1
Kanev, 1
EPRESENT 1
Equipment 2
Clustering 1
Fast 4
Burroughs, 1
Corbato, 5
Hash_Insert(hash_t 2
Capel 2
FIFO, 7
Discovering 1
Effectiveness 1
30 31
Failing 3
CHEDULERS 1
CPU). 1
Colorado, 1
Gouicem, 1
Control: 1
Brooks. 2
ESOURCES 1
D.R. 1
Douglas 1
CREATE 1
Logistics 1
Dead: 1
Decay-Usage 1
Guide. 1
Hardware?” 1
Earliest 1
Manual”. 1
Daily 1
Kathryn 1
ERSISTENTLY 1
Era 2
Comparing 2
FindFreePhysicalPage() 1
CPU-bound 2
Cox, 1
Hill. 1
Cilk-5 1
FIRST)? 1
Dominion 1
Embedded 1
30.2 1
Fast, 2
Fill 1
Free 8
Concepts 2
Hill, 3
Cores” 2
B’s. 1
Emacs 1
Donald 1
EC-11:2, 1
Cache 18
Coding 1
Dr. 1
Dijkstra, 4
HICH 1
Helen 1
Far 1
March 14
Delete 1
Kernel 14
Enough 1
Evaluation 2
Compatible 1
Framework 1
Caching 1
Custer 1
Hong-Tai 1
Cocke 1
FetchAndAdd(&lock->ticket); 2
EFERENCE 1
English 1
30.8: 1
Flag 2
Freedom 1
Conceptually, 2
I, 1
For 194
Cutler, 1
C; 2
EvictPage() 1
EAL 1
ELADY 1
Lord 1
Conditions: 1
EGAIN 2
Doesn’t 1
Has 1
History: 1
FetchAndAdd(int 2
Mark 14
Detail 1
LRU. 3
Example: 6
FLOW 1
F 36
From: 1
Center, 1
Deadline 2
Hydra” 1
Computations” 3
G) 1
Early 3
F.H. 4
3000 4
Flash-based 1
Hank 2
Conway. 1
I/O. 10
Forget 1
DBMS), 1
Check 8
Fine-grained 1
EASY 38
Exception 1
MAC 2
Create 3
ETTER 1
ECHANISM 30
Hash_Lookup(hash_t 2
Hive/HDFS, 1
Forgetting 3
Martin 1
Deterministic? 1
LRU’s 3
Concurrency), 1
Flow 6
GE, 1
Fujiki, 1
Chang, 1
Determining 1
I. 1
Concurrency: 2
Golding, 1
Eligible 2
Fetch 5
400MB 1
Frans 4
Harper 1
Couleur 1
INDETERMINATE, 1
FreeBSD, 1
Dick 2
Child: 2
Fortunately, 9
EKKER 1
FAULTS 2
Mac 12
Data: 2
Earl 3
Electronic 2
I/O), 3
Hmm... 2
George 2
Measuring 2
Deuterium” 1
Labs” 1
Considered 2
Facebook, 1
Heap: 1
Gibson, 1
Compaction 2
Dharmendra 1
IBM” 1
Context 3
Here, 13
Elliott 1
Final 4
49).” 1
FreeBSD” 1
Hybrid 2
DeWitt. 1
Indeed, 20
Future, 1
Direct 8
Christenson. 1
Fun 3
Entry 3
Finnish 1
Mail. 1
Manuals 1
Earlier 2
Exactly. 2
IA-32 4
IMITED 15
Given 15
Melvin 1
Do 18
Licklider. 3
Counter 6
Farm 1
Heinrich. 3
Goodness, 1
Control, 1
Discusses 2
IRECT 15
DDRESS 25
Hits+M 1
Errors 3
Forin, 1
4MB 2
G62]. 1
I/O; 3
Detection 1
Instructions 1
G 12
ECHANISMS 11
Circuitry 1
GB 7
Ever 2
Fredkin, 2
David, 2
Mars?” 2
Evolution” 2
FFICIENT 1
Homework 28
IRIX 1
Group, 1
Minneapolis, 1
E. 20
Lipman 1
D.H.J. 1
First-in→ 11
Hershey 1
Guide 3
Corbet. 2
EASON 1
Default 1
House, 1
Evans 1
GNU 3
In 387
5. 27
Germond. 3
INTRODUCTION 15
EEDBACK 11
Kanev 1
HOLD 1
EGMENTATION 12
Completely 5
GHz 2
GUIDELINES 1
G.L. 2
Dealing 1
Murphy, 2
Excellent 1
FIRST 1
IS 1
HARING 2
However, 120
Multiprocessor 4
EnableInterrupts(); 2
Lipp, 1
Dave 3
Function 2
Hits 2
HOW 6
Couleur. 1
END? 1
Dissertation, 1
I/O) 2
Examination 1
Generalized 1
Includes 2
6KB 1
Hoc 2
IP) 1
EYOND 27
Keith 1
Evict 4
I/O 86
Convoy 1
FIFO. 4
Good 8
Generally, 1
Developer’s 4
NBA 1
Extra 1
Facebook. 1
Induced 1
HINGS 1
Hugh 4
Next, 9
Execute 7
M62, 1
Department, 1
GAINST 1
Hopefully 2
Hardware 18
Creating 2
ESIGN 1
Dynamic 7
INITIALIZER, 2
FILENO 1
Goh, 1
Indeed. 1
Interposition 1
Introduction), 1
Instruction 4
Embedding 1
Krieger, 1
Extract 1
ISSES 1
Corporation. 1
FIFO’s 1
Google, 2
Grove, 3
Diego, 4
NOT 1
FIFO 37
Failure 4
Intel 10
Handled) 1
IGHT 1
No-Locality 2
Fagin. 1
MAX; 2
DisableInterrupts(); 2
Handbook 2
Hydra 1
Harmful” 2
D) 3
Easton, 1
IST 2
Follow-on 1
HINK 1
7, 2
How, 1
E 195
Javascript 2
Introduction 8
Examples 3
FIFO; 2
Fairness 2
Incrementalism, 1
Corwin, 1
Factors 1
Header 2
Gupta. 2
ECESSARILY 1
Not 23
Fourth, 1
First 23
Is 14
Hazelwood, 1
ISBEHAVIOR 1
No. 6
Gaming 2
MS-DOS. 1
Distribution 1
Harry 2
IBM 9
Daniel 3
Edwards, 4
ITS 1
Fortunately 2
How 141
I! 1
7.2, 1
I/Os 3
ERMINOLOGY 1
Job:B 1
KB), 1
LDE 1
Factor 2
Invalid 2
Finally, 70
Digital 2
File-System 1
Hill 1
Hit/Miss? 4
ECURE 2
Novark 1
Francisco, 1
Fleischmann 1
Issues 6
Human 1
Interesting 1
OMPLEXITY 1
Gets 2
MULATING 1
EECS 1
Henry 1
IEEE 7
Definitely 1
Dennis, 2
Ideally, 2
Google 2
Incorrectly 1
ISTORY 1
8k 1
Evolution 1
Imagine 39
KB64 1
Labs 2
LOCK-BASED 15
Fall 5
Finding 2
Finite 1
ELOCATION 2
Flesh 2
Home 1
Hoare 4
Earth 2
O(1) 4
G.A. 1
Frankenstein 1
It” 1
IKE 1
ONTENTS 1
IP 41
Goodman. 1
Meehean. 1
ETERSON 1
Hershey. 1
IF) 1
Epema. 1
ENERALITY 1
Its 4
Growing 1
Innovator’s 1
Increase 1
991 1
FASTER 17
January 14
LATER? 1
Length 1
Laszlo 1
Led 1
Fox. 1
Firefox, 1
EPLACEMENT 2
Frequency 1
Huge 2
IGHER 1
Edition)” 2
ODING 1
HERE 1
H 42
I’ll 3
L 59
OS) 2
IRTUALIZE 5
Goodman’s 1
Meehean’s 1
Eindhoven 2
Hierarchies” 1
IO 7
Epema’s 1
Efficient 2
Jain. 1
Having 4
Hoare. 1
Initial 3
<virtual 2
Failed 2
L. 10
LESS 1
Loads/Stores 2
Jaswinder 1
Lock-based 2
Free-Space 1
Gain 2
EY 4
Friedman, 1
IMMEDIATE 2
Environment” 4
OINTER 1
I 171
HP, 1
HFE-1:1, 1
KASLR” 1
LDE). 1
PFN=55 1
ISN’T 1
Gray 6
Mistakes 1
Emacs7 1
Hydra. 1
Index 11
French 2
Everyone 1
Jain’s 1
Israel. 1
INVERSION 1
Intel. 1
AMAT 4
Farm” 1
Lampson 6
Languages 2
Lots 2
Journal, 2
Look 1
FreeBSD 3
Garner 1
Easy, 2
Full? 1
IO). 1
Execution 8
OSSIBLE 2
I/O-intensive 2
HREAD 12
Hall/CRC 2
Knowlton 1
Leffler, 1
IECES 154
Informatica, 1
Great 5
Multics 14
Engineers 1
I/O? 1
Instinct, 1
Go 4
FFICIENTLY 2
James 1
Italian, 1
IT 3
Internals: 3
Approximating 1
Faster 2
MA, 2
Lepers, 1
Lucco, 1
Lauer. 2
MQMS). 1
HEN 4
Gray, 1
FIFO: 1
GB) 2
IRTUALIZATION 5
F. 8
Object-Caching 1
Hardware/Software 1
LOCKS 23
PID. 1
Levy, 5
HREE 154
Implementing 2
Isn’t 2
HARES 1
NIX/C 1
February 16
IALOGUE 4
International 3
Goals 2
Guide” 1
Java. 1
Jackson-Edwards. 1
HE 83
J 1
Architecture 9
Feedback 5
Mac) 1
Libraries: 1
MPLEMENT 1
Lauer’s 2
Malloc(), 2
IFIPS 1
Guerraoui, 2
Graham. 2
Getting 1
FILENO). 1
Operation 1
If 167
I/Os. 1
Linux, 15
Paranoia 1
List_Lookup(list_t 4
Hash 8
Indeed 1
Internet 1
Humorously, 2
NSA? 1
Fetch-And-Add 2
INTERLUDE: 11
J. 33
H. 20
K+96]. 2
ITHOUT 2
Jiaqi 2
HYSICAL 27
Knowlton. 1
Argument 2
Festschrift 1
Manager” 1
Linked 8
Managing 1
Lectures 1
Many 21
II) 1
HW 1
H&P 2
Gorman. 1
FOOLISH 1
PAT, 1
John 14
Kawamoto, 1
Linux-based 3
Pass(C) 1
MASK 3
Here 30
His 3
Issue 4
I/O, 3
NT” 2
File 3
Ideas 2
Job:C 1
Hash_Init(hash_t 2
Kleinrock. 2
Influenced 1
Jobs 2
Hall, 5
Knuth 6
Arpaci-Dusseau, 10
Golub, 1
McCall. 2
LoadLinked 2
Microsoft, 1
Linux). 5
Mechanism 1
IME 2
Handles 1
Heap 16
Grows 2
False) 10
PDP-10” 2
Included 1
Letters, 2
List 7
Pn−1 1
Locks 29
Ma. 2
Hopefully, 4
Joseph 1
Idea 2
OPT. 1
Freeing 2
Imagine, 4
Joe’s, 1
Inc.. 1
LWAYS 1
Interestingly, 3
Juan 1
Hastings, 1
It 92
Atlas. 2
HPUX 1
Mellor-Crummey 4
Low-level 1
Minimize 2
List_Insert(list_t 4
NABLES 1
IZES 1
Hard 1
I/O). 3
Here’s 4
Farrell, 2
PD_SHIFT 1
Inserts 2
Linux” 1
Precise 2
Mayer. 2
J.S. 1
Man 3
Hovav 1
KASLR, 1
Instrumentation” 1
OS? 4
GB). 1
Implementation 6
KPTI 1
Interrupt) 1
Law, 2
Julin, 1
LaTeX, 1
He 3
Jose, 7
Berger, 2
Handbook” 1
Microprocessor 3
Making 3
Modadugu, 1
Locking 2
NOWLEDGE 1
If, 9
Heap01 2
IT! 1
Hey, 1
Fellner, 1
Performance” 1
Instead 20
Lipman. 4
Privileged 3
Media, 3
Jack 5
Management” 2
IBM, 1
KEY 1
Intelligence 1
OS” 1
Get 5
Information 6
Keeps 2
Job:A 1
Leaks 1
Karels, 1
Larry 1
Hennessy 3
Kaufmann, 5
Beth 1
Happened 2
NPUTS 1
March, 1
Motivating 1
Longer 1
Ngram 1
Jason 1
Hussein 1
Innocent 2
Historical 4
First, 58
Pioneers, 1
Intel, 2
Lists 5
Problem: 6
Multiple 1
K. 1
Markstein. 1
INUX 1
Key 1
Jonathan 3
Or 9
Gruss, 1
Interlude: 4
Knuth. 1
Jr., 1
Learning 2
L4. 1
Levin, 1
Hint: 2
Knowing 3
Bill 1
Heavyweight 1
OK 4
Metrics 1
NECESSARILY 1
May 11
OCALITY 1
Jeff 3
Incorporating 1
Interactive 1
History 4
Fleischmann, 1
Prediction 1
Interscience, 1
Lu. 2
Programs 4
Multiprocessors. 2
KB, 1
Miss 29
Idea1 1
L->head 8
Kaashoek, 4
Overall, 3
HARE 14
Ion 2
LATER 1
KB) 3
Lanyue 4
Linux 107
LoadLinked(int 2
HotOS 2
L1 4
Boles. 2
Hit 29
ONSTANTS 1
Mixed 1
NT 4
McCarthy, 2
OESN 1
Job 11
Intel’s), 1
Joe 3
INITIALIZER. 2
Form 1
Problem 3
I’d 1
MAX) 1
Pthread_mutex_lock(&c->lock); 6
Putting 1
LEXIBLY 1
N. 7
International, 2
L4) 1
LRU 33
P1 6
HTTP 1
January, 2
LISP 1
Lighting 1
Levy. 2
Live 1
Lynch, 2
How? 1
LL/SC 2
Buffer) 1
Holding 1
OS-ignorant) 1
Modha. 1
Note, 2
Membrane 1
OF 9
Journal 7
Interludes 1
Joy, 1
Initialize 3
From 23
Processes: 1
I” 1
MB 1
Multithreaded 3
Questions 26
LGORITHMS 1
Need 2
Johnstone, 2
LOCK 2
Least-Frequently-Used 1
PT_SHIFT 1
Hear 1
Just 15
Later 2
List: 2
Little 2
Long 1
MANUAL, 1
ID 7
Least-RecentlyUsed 1
Holt. 1
OSes 2
Moir 6
ONCURRENCY: 15
NULL, 20
C 212
OK; 1
KB. 4
KB-32 2
Jozef 2
Intuitively, 1
Fusion 1
Q 12
Jing 1
MMU 3
NetBSD, 1
RY 1
Lacking 1
OS: 1
Joint 5
Lawall, 1
Paged 2
Let’s 90
High 2
L1) 1
Loading: 2
Liu, 1
Man-Month” 1
MLFQ 32
MIT 5
IMER 1
Libraries 1
Horn. 3
Mountain, 1
ONTEXT 2
PERATING 184
Nobel-prize 1
CONCURRENT 15
Limits) 1
Of 70
KNOW 1
June, 1
Isolation 1
Gates 1
Quicksort, 1
Joyce. 1
McGee. 1
ORK 1
Rachid 2
Lauer 2
Occur 1
July 4
Laziness 2
Preemptive 1
Lindberg, 1
IDs 2
L78]. 1
Looping 1
Locks: 2
Maybe 1
Manuals” 3
MLFQ: 3
Ingo 1
MAC, 1
ITH 4
Nothing 4
Park, 2
Numbering 1
CPU; 11
Linear 2
Organization 1
Know 2
Ken 2
OS 504
Joy 2
Glenn 4
RANSFER 1
KB; 2
Mechanism: 2
OSTEP! 2
Rafael 1
Linux) 2
Oddly 1
KB). 1
Lisa 1
Present 1
Lottery 6
IRE 5
LLUSION 1
MAX_HEAP_SIZE; 1
MIT, 1
McVoy 1
Mogul, 1
MMU; 1
Investigator. 1
MALLER 15
Implementation” 1
OMEWORKS 2
Pesterev, 3
OES 1
Cilk 1
List_Pop() 1
P0), 1
L3 1
L2 1
June 13
Going 1
REATE 2
One 135
Lampson. 2
Metha 2
Obviously 1
Relational 1
MEMORY 1
Often 1
KB-64 1
List_Lookup(&H->lists[key 2
Price. 1
Louisiana. 1
ISCA 4
Lampson, 2
MB) 1
Massachusetts. 2
Modeling” 1
MostFrequently-Used 1
MQMS, 1
Jones. 2
MMU. 2
Iyer, 1
OS), 2
Prentice 4
OFFSET 1
Claypool 1
PERATIONS 2
M. 35
LRU, 11
L60, 1
LOW 1
Harcourt, 2
REEMPTIVE 1
Only 10
Lampson’s 1
Multics. 1
PACES 8
PDIndex 1
MIPS 14
Organick. 1
KPTI, 1
Lock 12
Priority(B), 4
M.J. 6
Interaction 1
Lanigan, 4
MIT. 1
Meltdown, 1
Montreal, 1
Moving 1
Manchester 3
KB 18
Mac, 1
Kay 1
Oh 5
R+89, 1
OPTIMIZATION 1
Concurrent 25
PHit 1
MB, 1
MIT), 1
Linux. 8
LRU? 2
Heart 2
RISC 14
Oops! 2
Limited 6
NIX 55
Resort, 2
Palo 1
Mach 1
Over 6
L->head; 8
Locks.” 2
Pthread_cond_signal(&fill); 2
MBALANCE 1
Interrupts 2
Late 1
MIT’s 1
Microsoft 4
Morgan-Kaufmann, 2
Multi-Level 4
Matteo 1
Kenneth 2
Management 11
Keep 4
Overview 3
README, 1
Offset 15
Current 3
PREMATURE 1
MIN). 1
Mac. 1
Linux’s 2
Law. 2
Instead, 7
ROP 3
Orran 1
Line 3
Neither 1
Rules 5
Patent 1
Megiddo 1
PROGRAMMER 1
LATER, 1
Lower 1
MAP_ANON|MAP_PRIVATE, 1
MORE 2
Jim 8
List_Init(list_t 4
MUTUAL 1
Multiprocessing. 2
Multiprogramming 4
Multi-level 7
Meltdown 2
Kleiman, 2
Manual” 3
LRU-like 1
PCD 1
ROTECTED 1
Overflows 1
Denning 1
PTE, 6
Passing 2
Michael, 2
Long-Running 1
Learn 1
Last 1
RaiseException(TLB_MISS) 1
Other 15
Locks, 1
Nelson 1
S.Sahni). 2
Patterson, 1
PTEs 3
PTIndex 1
LLOCATE 1
Pthread_mutex_lock(&m); 6
MPORTANCE 1
MS-DOS 1
Joy. 1
MALICIOUS 1
Manual: 3
NCE 1
N 41
NT, 1
Moseley, 1
LAW) 2
Memory-mapped 1
Leonard 2
PPN) 1
Reliability 1
O’Reilly, 2
Development 2
MMU, 1
Quarterly, 1
Microsoft) 1
Long-running 1
Low 2
Library” 2
Ratios” 1
Ousterhout 3
Mangard. 1
SJF/STCF) 1
Saying 1
Memory 58
Page” 2
Later, 2
O 247
Q0 13
Malloc(sizeof(myret_t)); 2
MUTEX 2
Kernel” 1
Macintosh 2
Memory” 1
NTERLUDES 1
NIX! 1
NTERPOSITION 1
Network 1
LRU→ 11
Muller, 1
Let 18
PROT_READ|PROT_WRITE, 1
Robin 3
PDE. 1
Distributed 5
McCarthy 2
RUN 5
NULL); 35
MLFQ. 2
Mac! 1
Linux); 1
Reducing 1
P2 3
Maxwell’s 2
PowerPC, 3
Sharing” 1
Multi-Threaded 2
Particularly 1
Lee. 1
ORRECT 2
ROBLEM 4
Management, 2
Mars 5
Kuehner. 1
Maurice 2
Minimally, 3
NULL; 22
NOMALY 1
NUMPAGES. 1
New 9
Lamport’s 1
Multi-Queue 1
Like 6
PTE. 3
SIGMETRICS 2
PTE.PFN, 3
EC-11, 1
Miss? 1
NUTH 1
MQMS 2
Ready 58
Marco 2
M.K. 1
Relationships, 1
PRIORITY 1
Padegs. 1
Paging, 1
Software 7
Multi-threaded 1
Plenty 1
List_Init(&H->lists[i]); 2
OSDI 10
Random 21
Mao, 3
May, 1
L4 3
McDougall. 3
Mozilla 1
National 1
OCKS 23
O(n) 1
OS. 26
Leave 1
Multiprocessors” 5
MIPS, 2
PageDirBase 1
SIZESORT+, 1
PTIMAL 1
END, 1
Monitors 1
Nethercote. 1
Make 5
Recheck 1
Mattson, 1
MRU 2
Review” 2
McKinley, 1
Provides 1
Priority 4
Sorry, 1
Multiprogrammed 5
Pthread_cond_wait(&c, 3
List_Insert(&H->lists[key 2
One”. 1
Recent 1
McCarthy. 2
Memory: 3
Las 1
McKusick, 1
Mutual 4
Nemacolin 2
Nickolai 4
OFFS 1
OS’s 4
Loops 1
NIX. 2
MM00]. 2
Part 6
Spend 3
Per 5
Ed2.pdf 1
Mythical 1
Next 2
Metric: 1
Riak. 1
Maurice, 1
Machine” 1
Ritchie) 1
Mechanisms 3
Pthread_join(p1, 5
Professor? 1
Stalin 2
Queue_Enqueue(queue_t 2
NTRODUCTION 59
Load-Linked 2
OpenSolaris 1
Required 1
McCarthy’s 2
Merritt, 2
Lavington. 3
Measurement 2
Netzer 2
Note 34
Nuclear 1
OS, 31
Ousterhout. 3
Lu, 4
Nethercote, 1
Main 1
Processes 8
Spin 7
Pick 3
FIFO? 1
NGINEERS 1
Nucleus 2
Microsystems, 1
Measure 5
Markowitz, 1
Run 68
SGI. 1
Morris, 4
RAM, 1
Q1 15
Stride 4
RADE 1
Nancy 2
Load-linked 2
P1’s 1
Running 24
Menace 1
Michael 10
Leiserson, 1
Mesa 4
ODE 2
OMPLETE 19
OMPILED 1
October 17
Ousterhout’s 2
No 10
Malcolm 1
M 139
Processing: 2
Spin-waiting 2
Pren-tice 1
Facebook) 1
NIX, 2
Old 2
Nichols. 2
Measurement, 1
Massachusetts, 1
S_IRWXU); 2
SJF. 2
Sanzi, 1
Scalability 3
Randell 1
TECHNICAL 1
REE 19
Narrow 1
Locks”) 2
Pacific 3
S. 22
Molnar 1
Miller. 2
Levy 1
Mike 2
OFTWARE 1
OUR 2
P1) 1
Ousterhout, 2
Novark, 1
Manchester; 1
Marvin 1
Producers 1
Success! 1
Protection 7
Fit 4
NIX-based 6
Orr, 1
P 280
Nope, 1
Mesa, 1
Microsystems 1
Section 1
Neat 1
REAT 3
Scheduled 1
Reese’s 1
TERMS 1
Node_t 1
Read 38
MIN 1
Pfaff, 1
SECTION, 1
Must 2
Milton 1
Life 1
NUMCPUS; 4
Oregon. 1
Optimal 3
PFN_SHIFT) 1
Overhead 3
O. 1
Manifesto” 1
Microprocessors 1
Project 3
Sullivan, 1
Pthread_mutex_lock(&mutex); 8
Frigo, 1
NULL 20
PC, 7
P4, 1
November 10
Methods 1
MongoDB, 1
Shedler. 1
Non-compacted 1
RaiseException(PAGE_FAULT) 1
Science). 1
References 28
THREADS 1
Non-Cooperative 1
Read-Execute 1
Mauro 2
Preemption-safe 2
SN 3
NIX: 1
Mitoma, 1
Load 4
NX 1
Out 2
Oracle 3
PTEs. 1
PageTable[1] 1
OCK 16
Memory, 1
Mr. 1
Pthread_create(&p2, 5
TORE 1
Q6 1
Generally 1
NeXTStep 1
POSIX, 2
PAGES 2
ONTROL 8
Miscellaneous 1
NCREMENTALISM 1
Solomon. 2
OK. 2
Randall. 1
Setup 1
SJF/STCF 1
TLB) 3
O(log 1
Reduced 2
Microsoft’s 1
Prefetching 1
Saavedra-Barrera. 1
Neely, 2
More 24
Looping-Sequential 1
OK, 11
PAGESIZE 1
Our 25
Parent 6
Patterson. 2
OLUTIONS 1
MenuMeters 1
Much 9
Pthread_mutex_lock(pthread_mutex_t 2
Tf 1
ROCESSES 1
Greenfield. 1
Negative-Growth 1
Perl, 2
PDPTA’97, 1
OO 1
Morse. 1
ND 10
Stack? 1
OLICIES 16
Rate 4
Silicon 1
San 12
TLB-miss 1
OK? 2
Report 2
Morgan 6
Primer 1
Said 1
Nimrod 1
NE 1
M.I.T., 1
ORE 2
PTBR 5
PAGING 22
Pass(B) 1
Pons. 1
OMPARING 1
Mesa” 1
Multics, 6
RE 1
They 5
Rashid, 1
Hence 2
Nelson, 1
PhysAddr 8
PFN, 1
P. 12
Most-Recently-Used 1
Namely, 1
Statement 1
ONCURRENCY 3
Rudolf 1
SET 2
Santiago, 1
Technical 4
OS). 2
SEG_SHIFT 1
Mysterious 1
Process0 12
Scaling 6
Nir 2
NY, 1
MORTIZATION 1
OSes, 1
PTE.present 1
PF 3
Point 1
Previously, 1
ON 12
Modern 3
NULL2 1
Rago. 4
Transforming 1
Refers 1
Herlihy. 2
Nevada, 1
Plot 1
Pages 5
PEED 1
NOW 1
Naval 1
Steven 1
Similar 3
Schedulers: 1
ORG 166
Similarly, 6
Than 1
SIGNALING 1
NTERRUPT 1
OSTEP. 166
Professor, 1
Scientific 1
No, 2
Newell, 1
Microsystems. 1
OUBT, 1
PTHREAD_MUTEX_INITIALIZER; 7
Paging 6
Policy: 2
Priority, 1
OOLS 1
Navarro, 1
Nice. 1
Regions 1
Tucker, 1
Remzi 6
Hochshule 2
Non-Coalesced 1
Priority] 2
Paging: 4
Process 35
NVERSION 1
Node_t; 1
Storage 10
Simulation, 1
Set 6
OSes. 1
Single 7
Threads 5
STCF, 1
NULL) 6
Overlap 2
Programmers 4
Shacham, 1
Notes 4
Now? 2
Mitchell. 1
OW 34
PTIMIZATION 1
Patel 1
Presented 1
Pthread_mutex_unlock(&c->lock); 6
OS; 8
Needed 1
Nucleus. 1
Revolution 1
Two 11
River” 1
ICKETS 1
OK! 2
PETERSON’S 1
Peterson 2
Processor” 1
Neumann 2
Swapping, 1
Now 79
Sitaram 1
Sharing 12
PDBR 2
Slab 1
UTUAL 1
So 30
OBS 1
P.M. 1
ROCESS 30
Shortly, 1
Number 8
OPT 4
Mudge. 1
Otherwise, 1
PT_MASK) 1
Phenomenon” 1
Programmer’s 2
Python, 2
On 21
OSSpinLock 2
Or, 7
Once 41
Warburg 1
Runs? 1
In, 2
Obtaining 1
PT: 2
Policy 6
Producer/Consumer 5
No-eXecute), 1
TLBs 10
OAD 1
Standard 2
Signals; 1
PD_MASK) 1
Short, 2
VMS), 1
Sometimes, 9
ONDITION 1
PACE 21
Sood, 2
OOK 1
RPACI 154
PC 16
Multics” 1
P6 1
Ph.D. 3
Play 1
Protected 1
Quarterman. 1
P=0 1
Scalable 10
P1, 2
Ott. 1
Win, 2
S09]. 2
Inputs 1
O’Hallaron 2
Peterson. 2
Portland, 1
Purify 1
OFFSET_MASK 7
Ta 3
OK: 1
Steinberg. 1
Smotherman. 1
PTHREAD 4
Shortest 6
Va4 2
Sun, 2
ONG 1
PDE 8
Special 1
OPERATING 42
Ranganathan, 1
PINNING 2
NDETERMINATE 1
PID) 1
Physics), 1
Processes” 2
Pthread_mutex_unlock(&mutex); 8
Quote 1
PAGE 6
Shared 2
PFN) 2
PAT 1
X/macOS 1
SHIFT) 8
Issue: 3
O’Reilly 3
Peterson’s 6
Problem” 3
Quantitative 2
OOT 1
Tuning 1
ONSIDER 1
Strachey. 1
Smotherman’s 1
Paperbacks, 1
Space 20
Was 1
T. 14
OPERATIONS 1
PIECES 38
Stanford 1
OSTS 1
Ready: 1
POSIX 20
NUMPAGES 2
PPROPRIATE 1
Now, 26
Pthread_create(&p1, 5
Quanta 1
Random) 1
PID 5
Sleeping 3
Parallel 3
PDE, 1
X11 1
Secure 1
Keeping 2
PTE.PFN 1
Placing 1
Process1 9
RAIDs, 1
OPT? 1
Types 1
O_CREAT|O_WRONLY|O_TRUNC, 1
Strachey’s 1
Signaling 2
Pilot 5
Thomas 3
Windows 10
OU 1
Page-Reference 1
Starts 1
TLB 173
Relocation” 1
Operating 38
PPLICATION 1
Policies 3
Page-Fault 2
OLICY 4
R.H. 1
RAM. 1
Recognized 1
PM 4
Software-based 1
Page 39
PageTableBaseRegister 1
Yuanyuan 2
Semantics 3
Kernighan, 1
PWT 1
Problems: 1
Protection) 1
ROP. 1
Open 2
O_WRONLY|O_CREAT|O_TRUNC, 1
Structure 3
Silas 3
Prentice-Hall 1
Pretty 8
Turner, 1
Woodlands 1
OWERFUL 1
Patt 1
State 12
TORAGE 1
Remember 5
O’Hallaron. 2
O’Reilly. 2
Principles” 2
Physical) 1
ONCURRENT 16
R4000 5
RANSLATIONS 15
Relocation: 2
Peanut 2
Solution: 1
Pal 1
Patt, 1
[AC97]. 1
September 13
Kilburn, 4
Perfection, 1
Pthread_cond_signal(&cond); 6
Python. 1
RUX 33
PCs, 2
Organization” 1
Synchronization” 2
Simpler 2
U 89
Pthread 11
UK, 2
Write 11
Operations 3
Pieces 2
Student: 36
Tb, 1
Repeatedly 1
PTE.ProtectBits) 3
PTEs). 1
Program 20
Processor-Memory 1
OOPERATION 1
RINCIPLE 2
README 20
S). 2
Power 1
Sorin, 1
Pathfinder/Authoritative 2
Persistence 1
[B+18], 1
Shedler 1
LW 1
Pioneered 1
Pthread_mutex_init(&c->lock, 2
Q1. 1
Recall, 1
Paul 3
Overflow 1
System, 2
Solaris” 1
VMM-level 1
Pthread_cond_wait(&empty, 2
Unfortunately, 37
Yale 1
P4 1
Pillay. 1
Supervisor” 1
Times 1
Replacement” 1
PLDI 3
Pathfinder. 2
Pthread_create(&c, 2
Perhaps 15
OR’d 1
Raiders, 2
ROM 2
SDS 2
Pthread_join(p2, 5
Spin(), 1
Physical 13
Prof. 1
[B89, 2
Star.” 1
Language” 2
Probably 11
R.P. 1
RR, 1
Record 1
Performance 11
PD 2
T1, 12
Sounds 6
WAIT 1
Q7 1
Unknown.. 1
[3] 1
PDP 1
Portable 1
Symbiosis” 1
To? 1
Response 3
PTE 17
Protection” 1
Queue_Init(queue_t 2
Phoebe 1
Orleans, 1
RaiseException(PROTECTION_FAULT) 9
Recovery” 1
SER 1
Publishers, 1
Spin(1); 2
Processing 5
Pthread_create(&p, 5
[CP78] 1
Steve 4
Letters 3
Pthread_join(p, 4
R10k 1
Randell. 1
Responsibility” 1
Pollack, 1
PDEAddr 2
TOOLS 1
Staelin, 1
Wait 1
REASON 1
Unlock 2
[B89] 2
Press, 7
PFN 43
Systems.’ 1
Together 1
Rings, 1
PTHREAD_COND_INITIALIZER; 3
Q5 1
Queues 4
Pointed 2
P0 4
Recollections 1
Remove 2
SHIFT, 1
RDLK 2
Stephen 4
Q4 1
Professor: 37
[D97]. 1
Surprisingly, 1
M83]. 1
RACE 1
ROPORTIONALLY 1
Relocation 1
Right! 1
Positive? 2
PID). 1
TRUCTURES 17
Stallman 1
XCLUSION 1
RITICAL 1
Until 3
[D+13] 2
Process: 2
PT 2
THE 9
Translations 2
Round-Robin 1
Page, 1
Rather 1
R/W 1
Positive 1
Parts”.) 2
Ritchie. 1
Return-into-libc 2
Shan 2
RR) 1
Support: 1
Queue 8
Programming: 3
[Free] 1
Swap-Based 1
MLFQs 1
RANSLATION 15
Randomization” 1
Replacement 6
S, 6
Protocol 3
Phipps 1
TeX 1
Support” 1
Zel-dovich 1
Rajimwale, 1
VAX-11/780 1
[E95] 1
Producer/Consumer: 3
PTEAddr 6
TLBs, 6
Trevor 1
Run: 2
PageTable[39] 1
Redell. 1
Raging 1
Proceedings 2
Patterson 2
SSD, 1
Robert 9
Simple 29
RUNNING, 1
Switzerland 1
RAND 5
Pthread_cond_signal(&c); 4
[J91]. 1
T3 8
Maintenance 1
ROGRAMS 1
Reboots 1
STACK: 2
SCHEDULER 1
Queue_Dequeue(queue_t 2
Prentice-Hall, 7
Tell 1
T1). 4
Zonkey), 1
Report, 2
Va5 3
[H74] 1
Put 4
Patel. 1
TM 2
UIDELINES 1
SJCC, 1
Pass(A) 1
Redell’s 1
Redell 2
Redirection 1
Perry. 1
Schedulability 1
SIGINT 2
Smaalders. 2
Random, 5
Systems” 7
REMATURE 1
Pthread_cond_wait(&cond, 6
[LL82] 4
TCB. 2
McGraw-Hill, 2
Race 2
Review, 3
STCF 8
SEFUL 2
Queues: 2
Priority(A) 4
Texas, 1
TLB: 2
[B+79] 1
Resource 4
Virtually 5
[HP06]), 1
ROCEDURE 1
Pennsylvania, 2
Personal 2
SJF, 4
Perspective” 5
SPINNING 1
Recall 9
Reduce 1
Peter 5
Search 2
SIGTSTP 1
Spider-Man: 2
Readings 1
TLBWR, 1
Red-Black 2
Pthread_mutex_lock(&lock); 6
[M07]. 1
TILIZATION 1
Models” 1
Resources 2
S+03] 1
Shah, 2
SEG 2
R 21
Proc 14
That 14
Thesis, 1
[B94]. 1
Responsibilities 1
Wulf. 1
[J09] 1
ROPORTIONAL 13
The 821
University 6
Plus 1
Save 2
Processing, 1
SSDs) 1
Relocated 2
Reeves. 2
Pons 1
Server” 1
SOMETHING 1
Spurious 1
Reprinted 1
Thanks. 1
Register 8
RISC, 2
[R97] 2
TIP: 9
Most 9
Running: 1
SHIFT 8
Sharedmemory 1
SPARCv9). 1
RIORITY 1
Pthread_cond_wait(&c); 1
Tomlinson. 2
Traiger. 1
[C93]. 1
Round 3
[4] 1
[M06] 1
RTFM 2
Through 1
Upon 3
Presumably 1
Scan-resistant 1
Proportional 2
Same 2
Registers 1
Poor 1
Simple, 1
Schwarz, 1
Stallman. 2
Research 3
There? 1
Reuter. 2
RaiseException(SEGMENTATION_FAULT) 5
[S+04] 1
TS 1
NDERSTAND 1
Scott. 4
SN_SHIFT 1
Short 1
S 379
Scheduler 5
RR. 2
Read-Write 2
Tools 1
Turns 2
[HJ92] 2
Saving 1
[AC97] 1
[M15] 4
Relocation) 2
Timer 1
VAX/VMS. 1
Problems 1
Should 4
Proportional-Share 3
Sanjay 1
Represent 1
PowerPC 1
Sometimes 9
Segmentation 3
Structuring 1
Running, 1
Tickets 1
Reclaim 1
SIDE 40
[SHW11]. 1
Table? 1
Segregated 1
NTERLUDE 35
STCF. 1
Single-Threaded 2
SEG_MASK) 2
Seg 1
Randal 1
Reese 1
Uman 3
USENIX 8
[J16], 1
Second, 31
[B,C 2
[W95]. 1
Research, 2
Underlying 3
VAXen 1
Pthread_mutex_unlock(&m); 6
Stoica, 1
Proportional-share 1
Scheduling 12
Rule 14
Prints 1
Spectre 3
Separating 1
Susan 1
Russ 1
Trap 2
Restoring 1
SOSP 9
[Y+18]), 1
Third, 5
Sequential 2
Oh, 1
Saint-Exupery 1
Smaller 1
Saavedra-Barrera 1
Showing 1
Rather, 4
Ritchie, 1
VM. 1
UST 1
[K+61] 2
Segmentation: 1
[BH73] 2
a[2] 2
Restartable 1
Unsafe” 2
VMS, 1
Q3 1
Subsequent 1
Pthread_cond_signal(&empty); 2
Science, 1
SE 11
Probability” 1
Stack 14
She’s 1
Switches 1
Say 2
U/S 1
Resulting 4
SPARC, 3
__lock_t 8
Turning 2
Size 10
Orwell. 2
Scheduler” 2
Stored? 1
Segment 10
Soon 2
Results 1
River, 1
VPN_SHIFT 1
WITH 1
[LL82]; 1
Space-time 1
[C03]. 1
accounting 4
Restricted 1
VPN=0 1
VPN. 1
Queues, 2
Then 17
Q8 1
Segments 2
SS+10]) 1
Pthread_cond_wait(&fill, 2
Stan 1
Sizes 1
Synthesis 1
Schroeder. 1
USA. 1
Richard 9
Saltzer 1
abstraction 15
Typically, 2
State: 2
Orwell’s 1
Simply 3
Structure” 1
Share 4
Spaces 3
SWITCH 6
Seward. 1
Wei, 1
Wales 1
[MM03] 1
Stevens 6
[CD85] 1
accuracy 1
Roscoe. 1
Working 2
VPNs; 1
RR 14
Though 5
ROVIDE 1
Time 29
SSD. 1
Pthread_mutex_unlock(&lock); 6
Sun 5
Slutz, 1
TV 1
Scott 10
VA 1
SUPPORT 1
Scheduling” 1
accessed? 1
UNSW-CSE-TR-0321, 1
Strategies 2
P3 1
Smotherman 1
Switching 4
South 1
Streams 1
SYNCHRONIZATION 1
Single-Queue 1
Xiong, 2
Some 25
Still 5
Summary: 2
We 166
across 30
Routines 3
Wrapper 2
Vegas, 1
RSS, 2
Shasha. 1
Rago 1
Today’s 1
Published 1
SYSTEMS 42
Tb 2
So, 1
Thread2 6
Segmentation” 1
VAX-11/750. 1
Secker 2
Server. 1
accessible, 1
VPNs 5
Supporting 1
PCD, 1
Splitting 1
TLB. 13
Spectrum 1
System: 1
Schedulers 1
[MS96]. 1
Yes 1
Sopena. 1
[D97] 1
Sumner. 4
Whew! 1
adjust 1
S.J. 1
YNAMIC 1
What’s 4
Real 3
Specific 1
Raiders” 2
Torvalds 1
Security 2
R. 33
Threading 2
Sriram 2
Threads? 2
Specification, 1
Valgrind 2
Singh, 1
See 43
acquire/release 2
Va0 3
Swaminathan 2
PTE: 1
Staelin. 1
TLBs; 1
Student, 1
TOPLAS, 2
Such 16
[O11], 1
York, 6
States 1
[G85] 1
TABLE 2
Wilson 2
advantage 14
SIZESORT-) 1
YPES 2
[A90] 1
Referring 1
Spin-based 1
Really 3
Trace 9
Self-Tuning, 1
RAID 1
Tickets? 1
Start 5
Threads” 6
Stanford, 1
W 17
Slow 1
Seems 1
acquired, 2
Virtual 12
Swap 4
Problems” 1
Status: 1
TLB’s 1
Seward, 1
Tc1). 1
T3, 4
[TTG95] 1
[A91]. 1
[B72]. 1
[H93] 4
Table 18
alloc 1
With 82
SPARC 9
[B+10]; 2
[B94]; 1
Region 1
Spinning 4
RetryInstruction() 4
Translation 5
Spending 1
RAM 5
Trans. 2
Store-Conditional 2
Tim 2
Store-Conditional” 2
WITCHES 1
Shared-Memory 4
System 37
actual 15
T1 30
Swift. 2
Processes, 1
Stick 1
TestAndSet() 6
Sorry3 1
That’s 6
THER 1
[W06] 1
Stevens, 2
[BC05, 2
[J91] 1
Tc1 9
alright 1
Word 1
STCF) 2
[B+79], 1
[BC05] 3
Requirements 3
Support) 1
SOLATION 1
Trials 1
Stack11 2
Reese, 1
Tricky 2
Store-conditional 2
Tony 1
Sun). 1
Watch 4
Shared-memory 1
WORST)? 1
advocates 1
TAKE 1
T2), 2
Professor 5
Structures: 1
Speaking 1
Try 11
Texas. 2
[W15] 1
Storage” 1
Thus, 206
[D70]. 1
[M07] 1
Thrashing 1
amortize 2
Worried 1
Sleep 40
[BS+09] 1
[BC91]; 1
Rewritten 2
Systems. 1
Sadly, 2
Undoubtedly 1
Stodolsky, 1
Ronald 1
Typical 1
Summary 30
UPPORT 2
Surveys, 1
Whether 4
Shavit. 2
Waciuma 1
affinity 8
TOCS, 3
TABLES 15
Programming 15
Superpages” 1
Sploitfun. 1
ULTIPLE 2
Time-Shared 1
__hash_t 2
StoreConditional(int 2
Tom 2
[G04]. 1
[SHW11] 1
Time-Sharing 8
amt) 2
Worse, 3
Small 2
[C06] 2
[BH00] 1
Runtime 1
Scientists 1
T2 38
VAX 5
SunOS 1
SPINNING: 1
UCB/CSD-92-684, 1
Survey 3
VERLAP 1
Swift 2
Why? 5
Shavit’s 4
Weihl. 1
again: 2
Take 2
TPDS 1
Q2 9
THINK 1
Sun.. 2
URSE 1
Tracking 1
a4 1
Tp, 1
[K68] 1
[SN05]. 1
Tracing 8
analogy 1
XD 1
Study 8
[C54,PV56] 1
[CK68]. 1
SQMS 7
Served 1
TR 1
VM, 3
Systems 18
Scheduling: 6
T 378
TLB, 21
Va3 2
System/370” 1
Wikipedia 3
USSEAU 154
Solaris 18
Wood. 1
algorithms 26
Tarrival 3
Tables 9
RISC-like 3
TLBP, 1
Sweden, 2
User 14
USTERHOUT 1
about: 1
Tree 1
[MB91] 1
a[3] 1
Unlike 5
answer; 3
ZFS) 1
Summer 1
[CD85]), 1
[JS94] 1
STRUCTURES 16
Servers” 1
Technique 1
VPN; 2
TD 2
Sleeping) 1
T2. 4
TLBWI, 1
Wanjohi: 1
TestAndSet(flag, 4
Workstations” 1
Understanding 2
Solution 5
Y. 1
annotate 2
Test-and-set, 2
Then, 19
RR? 1
TLB_Insert(VPN, 3
Switch 3
Vol. 5
V.A. 1
achieve 12
Tricks 1
[P81] 2
above? 3
VLDB 2
approximate! 2
[B+18]. 1
Swift, 1
[L78]. 2
[M11]; 1
Scotland, 2
Solaris, 7
Thompson. 1
Vasileios 2
THREAD 12
Sorry! 1
Tc1, 2
Tcompletion 2
Weaver 1
ULL 1
Yield 2
V 31
Soyeon 2
[AC97]; 1
anymore? 1
Up 2
Therein, 1
RUNNABLE, 1
TLBs) 1
Synchronization 8
WITCH 1
Von 2
acquisition, 2
UNIX-based 1
[P90] 1
access: 1
VPN_MASK) 7
approximation 1
[BB+72], 1
Techniques 2
[P+95] 1
[MS91] 2
Sound 2
Specifically, 52
Time-to-Completion 2
Wait: 1
Spinning: 2
THREE 37
Tel-Aviv, 1
Time” 1
Weiwei 2
URL: 1
Zorn. 1
VICT 1
Stretch 1
[B94] 1
approach, 25
VPN=42. 1
Things. 1
Recommended 1
TR-95-22, 1
Systems: 6
WORST 1
WAITING 1
activities 3
VALID 3
[RK68]. 1
accomplished 9
Va1 2
architectural 2
[CV65] 2
Terminology 1
[O49]. 1
[VERSION 42
Sundararaman, 4
Spectre. 1
Tix:250 1
Stanley 1
We’ll 38
Takes 2
Tix:50 1
Timothy 1
Wilson. 1
USE 3
[B+13]. 1
VMS 16
Subramanian, 3
[BC05,G04]. 1
arose 5
Van 4
Third 1
Repair 1
TRUCTURE 3
T2, 4
Worst 2
add, 3
Values 2
[S15] 1
accuracy/performance 2
WWW. 166
Virtualizing 2
array, 7
[GR92] 2
Test-And-Set 2
[SR05] 6
Swapping 1
Springer-Verlag, 1
Transformers 1
Stockholm, 2
Whereas 3
Techni-cal 1
U.C. 2
Tudor 2
Wilson’s 1
Use 35
[C95]. 1
W.C. 1
Suli 1
[BC91] 1
array; 1
Vancouver, 5
TimeSharing 1
Replacements 1
Technische 2
Tc2) 2
YNCHRONIZATION 1
addl 2
Waldspurger 6
accurate); 2
Wahbe, 1
Waiting-Line 1
array-based 2
[K65]. 1
Test-and-set 4
[WG00], 1
Tc2 7
Stan. 1
[V 166
Tturnaround 3
Sure! 1
William 3
Techniques” 2
UEUE 11
UILD 3
Wisconsin—Madison, 1
User’s 4
[E95], 1
WAPPING 1
Support 9
[C93] 1
asleep 3
Virtualization 5
Tp). 1
SJF 21
Think 12
TestAndSet(int 2
Yes. 1
addresses). 1
X-windows 1
action. 1
Waiting 8
Warehouse-scale 1
ask, 1
[L09, 2
These 24
[virtual 5
Thanks 5
Structures 6
[W02] 2
ULE 2
TEST 2
XECUTION 15
US, 1
There 42
University, 2
Worse: 2
VirtualAddress 7
[H74], 1
Weaver, 2
TLB; 1
[CK+08]. 1
assume, 2
Visually, 1
Traditional 2
SLEEPING, 1
Traffic” 1
Too 3
Zero” 1
affinity; 1
Yandong 3
addition 13
Were 2
Wilson, 2
assert(tmp 2
[LM+89, 1
Transactions 3
a[i] 1
Trace: 4
Sun. 2
[stack 1
Using 19
TLBR, 1
YOUR 1
Unused 2
VPN: 1
a 3927
[2] 2
WRONG 1
[J09], 1
Wikipedia? 2
This 201
TeX, 2
[CSG99] 1
batches 1
W. 18
UMMARY 3
STDOUT 1
Transitions 1
Transparent 2
[CG68, 1
algorithm. 2
Yes? 1
addresses. 4
Which 12
Wouldn’t 1
atomic. 2
[M83], 1
Turing 5
abbreviated) 1
Trigonakis. 2
Sun’s 1
__counter_t 6
VERY 1
TLB_Lookup(VPN) 4
Your 1
Useful 1
We’re 1
about-to-be-run 4
[B97] 2
Waiting: 2
[M+70] 1
Wiley, 1
Thompson 1
Theodorus 2
[CV65,DD68]) 1
Weihl, 2
been 100
UPERUSER 1
Sequin. 1
ULTI 11
U.S.S.R; 1
[FP89] 1
allocated, 2
You’ll 3
advice 4
Within 4
XITS 1
attacks 5
[MS04] 2
UNESCO, 1
abilities, 1
True) 9
Systems, 3
a+b,b+c,c+d,c+e,c-. 1
Variable 2
Tc2). 1
You’re 2
VAX/VMS 11
Who 4
accesses). 1
[BNS69] 1
Wakeup 2
[M06], 1
Woke 1
TlbEntry) 4
[D65] 2
Thread 95
Whichever 1
bit; 1
Usually, 3
Shacham. 2
ULTIPROCESSOR 12
Undefined 1
[K68]. 1
anon) 1
Zeedonk 1
again, 31
Yupu 2
XXX 2
attempt, 2
[O16]. 1
Uncontrolled 2
above), 3
Turn 1
System” 22
a:100:100,b:100:50,c:100:50) 1
Version 4
Technique: 1
[B+19] 1
[AD03]. 1
VPN 69
actively 4
WWW.OSTEP.ORG 42
YBRIDS 1
[MS98]. 2
Xerox 2
Tolerance 1
[G62] 1
Three 4
While, 1
break), 1
Valley. 1
Steinberg 1
Unfairness 1
Users 2
[KL88] 1
applications. 12
[BB+72] 1
amazingly 3
[C69]) 1
Zeldovich 1
backward, 1
[O45], 1
VARIABLES 18
abused. 2
USA 1
TENEX 3
a[8] 1
Very 2
Times?” 2
[C06]. 2
[B+18] 1
[C+04] 1
adapted. 1
Well 1
[BJ81] 1
[SS74]. 1
Zeldovich. 2
Uh 2
[H61] 1
Time) 2
Wikipedia. 1
buffer 43
Vyssotsky, 1
Stoica 1
VAX-11 4
VMware 1
[MB91]. 1
aren’t 5
[BH00]. 2
another; 1
[CSG99], 1
[B86] 1
basic) 1
[O72], 1
Variables 3
address-translation 4
UT 1
This, 2
actions 18
Virtual” 1
Tix:100 1
[D70], 1
[B+72] 2
[C69] 1
address; 3
Werthman. 1
[FLR98] 1
[W17] 2
[C69], 1
VAX’s 1
[M+63]. 2
Transactions” 2
bugs) 1
We’d 1
Structures” 2
VLSI 1
Visualization 1
YSTEMS 203
[N+02], 1
arg; 7
[BS+09, 1
anti-gaming 1
[D72]. 1
[CM00] 1
become 32
[X+10] 2
WHILE 2
advanced, 2
VAX/VMS), 1
Thus 24
activate 1
Warburg, 1
True 1
[H87] 1
[C+62] 2
[D68] 7
addresses): 1
[FP89]. 1
[W95]: 1
[CM00]. 1
VPN=39 1
[M11] 2
What 214
Two-Phase 2
building, 1
Where 7
TO 26
Waldspurger. 2
Warm-start 1
[B+00] 2
[P81]. 2
arises. 2
[CG68] 1
appealing; 1
[L+13] 2
[CV65], 1
beginning: 1
a; 4
Weihl 1
advantageous 1
VS 1
Ticket 3
ago: 1
Weighting 1
UNUSED, 1
[L83] 2
[DD68] 1
[DV66], 1
administrator 2
[HP06]). 1
__Node_t 2
[H61, 1
Value 1
[MS96] 2
Without 15
Two-phase 2
bx 2
Volume 35
Tamil, 1
Waldspurger’s 1
We’ve 2
[D65,D68] 2
[RL81] 1
around, 4
[M65] 1
appears 1
[L78] 3
[K+61,L78], 1
behave 12
accessible. 2
While 31
advent 1
Va2 2
Tiny 1
albeit 2
Wiggins. 1
Unfortunately 1
[M28] 1
[JM98]. 1
[G83] 1
adopted 1
[K64] 1
__node_t 10
[HP06] 2
Vyssotsky. 2
[NM92]) 2
XIST, 1
Wish 2
c->global; 2
Voorhis. 1
Tc, 1
Wanjohi. 1
[D68]; 1
[W02]. 1
When 122
art. 1
[M83] 1
approaching 1
[M11], 1
[LL82]. 3
benchmark 3
active 13
Winter 1
age), 2
Virtual-Storage 1
Torrellas, 1
algorithms). 1
Wiggins’s 1
VAX/VMS, 2
[M82] 2
[JS94], 1
[GR92]. 2
affordable; 1
[KL88]. 1
accounting, 1
[W+95]. 2
Wilkes. 1
[anon 1
Zebra 1
Yang, 1
c->local[i] 2
Why 28
Those 2
When, 1
[D72] 1
[WW94], 1
YSTEM 2
[MS91]. 2
appropriately 3
[N+02] 1
[LM+89]; 1
benefit. 1
actuality, 1
Y 3
algorithm; 2
Wow, 2
Tp 3
along 10
Windows; 1
VMWare’s 1
[S+04]), 1
[K65] 1
at 576
[H91] 2
afterwards. 1
[L09] 4
accrued 1
[WG00] 3
Wisconsin 1
about, 2
Zuckerberg 1
Yet) 1
Will 6
calling 55
Wow! 1
[G83]; 1
a:100:100,b:100:50,c:100:50). 1
Yet 2
To 152
[O45] 1
assembly, 3
[N+07]; 1
[MS04], 2
bit, 10
adds 24
[CK+08] 1
all) 1
Write-back 1
ULLER 1
alternately, 2
X. 1
VPN, 2
[S+11]). 2
[M28]? 1
attributes. 2
[I09] 4
ahead. 1
[L81] 4
accumulates 1
__queue_t 2
Workshop 2
acceptance 2
[B+96] 2
Zhiqiang 2
Wood-lands 1
capacity, 1
[C03] 1
[KR88] 2
absolute 6
Zhou, 2
Trees 1
[O72] 1
attempts: 2
[WW94] 1
[S59, 1
block 22
adios, 1
[D+13]. 2
allocators. 3
[1] 2
UNIX 7
ZOMBIE 1
always 53
Well, 27
[S04] 1
[O16] 1
axis 4
[K+61,L78]. 1
alas 1
[LM+89] 1
acquisition. 4
a[1], 1
YOU 2
accessed, 12
[B75]. 1
[BJ81]. 1
X 3
card 1
[CS97] 2
[M+70]. 1
accesses), 1
[A79]) 1
Tresponse 1
[O90] 1
badly 1
a2 1
[W+95] 4
affairs 1
book 47
[E95]. 1
already 28
[A79] 1
Unix 1
V. 3
VMS. 2
Whenever 2
Why, 1
[SR05], 3
a[5] 1
[KE+62, 1
[L60] 1
[LR80], 1
active; 2
abilities 1
Yes, 9
achieved. 3
[CK68] 1
adding 35
Zelenka. 1
chan 1
[DV66] 3
[Y+18] 1
actions. 1
[BOH10] 3
Tron 1
[S05] 2
behaves. 5
affords. 1
[X+10], 2
affects 2
born: 1
[H74]. 2
amazingly!), 1
[B+13] 1
Zwaenepoel, 1
[AD03] 1
[V+65,BH70]. 1
another 105
X, 1
bad. 7
ability 11
algorithm: 2
[Low 1
[MS04]. 8
addr:20 2
about; 3
[CS94] 1
[D82]. 1
You 89
address! 1
[AD00]; 1
chapters 14
[E06]; 1
accesses; 1
actively-used 1
[C63]. 1
VM 18
a[7] 2
behaviors) 1
ahead 8
above; 7
allotment, 1
bottleneck 1
[LR80]; 1
amount. 2
[BH70] 2
[B+10] 3
[G+17]. 1
[VPN 11
answer! 1
Xerox. 1
bandwidth 3
accessible 3
allocator 26
[M62] 1
[S04]; 1
advisors, 1
above) 6
[EF78]) 1
[D91]. 2
[AD00] 1
admission 1
[BH70, 1
choosing 2
[LR80] 1
achieved, 1
actually 38
[EF78] 1
VMMs 1
about), 1
bits: 1
algorithm, 8
abstraction. 1
although 15
[M+63] 2
bounds 48
ancient 2
[BOH10]). 1
[B66] 2
[JM98] 1
[NS07] 1
[S07]. 1
Years 4
base/bounds 5
achieving 7
altered 1
[P10]); 1
[SS+10] 1
ago 1
accesses, 4
[FLR98]. 1
[K+15] 1
[B+19]. 1
advertise 1
[BH73], 2
chunks. 3
[M65]. 2
ad 3
additions 1
[G+17] 1
WARY 4
abuse 1
blocks. 2
algorithmic 1
accessibility 1
an- 1
[R69] 1
brk, 1
anticipate 1
[C95] 1
[B75] 1
a[6] 1
answers. 2
[W03]. 1
Zhang, 4
basics 13
acquired 15
amortization 1
[RL81]. 2
a:30:200 1
agreed-upon 1
addr:10 1
[High 1
[L11]. 1
[D01] 1
affecting 1
[BNS69]. 1
clean). 1
[NM92] 2
addr:0 4
address-space 5
[MM00] 2
Wanted 2
accept 2
book! 1
allocate(100), 1
accidental 1
answer, 8
[S+03] 1
anyhow, 2
[CS94]. 1
[D82] 1
accommodated. 1
arbitrarily, 1
[WL+93]. 1
[C54] 1
but 288
be. 11
again. 24
anything? 3
__list_t 2
a[1] 1
allocated. 5
advanced 7
[K64]. 1
[O49] 1
[H87]. 1
against 9
[C+04]. 1
clears 5
[O90]. 1
address? 1
again? 2
[PS81]. 1
Work 1
accessed), 1
books. 1
allocate. 1
accumulated 1
approach. 8
[S+68]), 1
anything 17
[J16] 1
[D91] 2
accordingly 1
architecture. 4
access. 8
[C63] 1
byte). 1
begin\n"); 5
all), 1
arises: 1
a[4] 1
anytime 1
appearing 1
approach) 1
[KE+62] 2
[L+75] 1
[K+96] 2
[S15], 1
[D01]; 1
code? 9
[S07], 1
[SN05] 1
ahead, 3
[S07] 2
Workload 11
accessing 36
both? 2
alternates 1
accurate 2
argc/argv 1
[S05]) 2
[S59] 2
[KE+62]. 1
[G+95]. 1
address) 2
architectures; 2
address: 8
[DV66,V+65]. 1
c->value 4
books). 1
am 16
assumes 14
assumption. 2
above 50
abstractions 7
approached 1
arrives; 1
[L+93] 2
[L83], 1
[W95] 1
[D68]. 2
codes, 2
advances 1
a:0,b:1,c:1 1
allegorical 1
[W03] 1
Yield, 4
accom-plish 1
bottom). 2
alternatives! 1
accustomed 1
arrives 4
application. 4
[S68] 1
[L+75]. 1
[L11] 1
addressed 2
argument. 2
affected. 1
[HP06]. 3
cache). 1
boost. 1
answering 1
accesses 47
atomic_increment 2
allowed. 1
access; 1
[R69]; 1
articles 2
ain’t 2
[M82], 4
] 2
[D70]), 1
commonplace, 3
all, 17
access, 9
allow 22
[WL+93] 1
[B72] 1
address>, 1
bowels 1
amazing, 2
achieves 7
assigned. 1
architectures, 1
[SN05]; 1
[L+93]. 2
[LL82], 1
above, 39
arguments; 1
[PS81] 1
again 58
candidates; 1
bottom 10
anything, 5
according 3
attain 3
altering 1
accidentally 12
[S09] 2
[W+95], 1
algorithm 34
[PP03] 2
a[i]; 1
[G+95] 1
compares 1
all-too-trusting 1
action 15
always. 1
a1 1
[CP78]) 1
administer 1
buffers? 1
active, 2
assistance. 1
arguments, 5
[M04] 2
admit 1
[QI15]. 1
abundant, 1
arrival 1
[SB92], 1
alternate 5
cast 4
bouncing 1
appeared, 1
attainable, 1
acquire 57
arcane, 1
account 6
asking: 3
a3 1
all. 9
[R97]! 2
accommodate 4
[G85], 1
completes. 4
allocate 31
added, 1
and, 5
a[9] 1
[D70] 1
aforementioned 2
business 1
activity; 1
available; 1
arise. 3
[MS98] 2
adversely 1
[R+89] 1
achieved 1
avoiding 16
[V+65] 1
alternatives. 2
box, 1
certainly 32
applies 1
author. 1
active. 1
architectures 2
activity 3
assembly). 1
amazing 9
able 59
[SA96] 1
accordingly. 3
[H91]. 2
completion 4
allocate(10). 1
additionally 1
another. 6
[E06] 1
aggressive 3
bye, 1
access 133
affinity. 4
avoided 2
arriving 2
[O11] 1
agent 1
[W09]. 2
additional 15
awesome 2
about) 1
and 2770
amazed. 1
buffer; 6
choice 8
authors’ 1
actively) 1
approach 138
arguments 23
alas, 3
assume) 1
amounts 7
address. 21
a:100:100,b:100:50, 1
address 561
[H93], 3
complexity, 1
conceptualized 1
applied 5
addresses 42
[G04] 1
allotment 2
check. 4
accesses)? 1
accesses?) 1
battle 1
attackers 2
[P10] 1
alas. 4
addresses; 4
above). 7
back 65
ap-proaches 1
analyses 1
bytes. 3
class), 2
available 31
adapt 1
archive, 1
astute 2
allocator, 5
assured 1
anti-hero 1
administrators 2
acquires 8
a[9]) 2
affinity, 1
[I09]. 2
alternately 1
concerns? 2
appreciation 1
adoption 1
[I11] 2
about 294
choices. 1
age; 1
added 12
behavior, 3
attention, 3
[PV56] 1
all!), 3
advantage. 1
accumulate 1
beginning 15
applications, 6
apparently 1
c2 10
classmates; 1
avoid. 3
address); 1
assigned 7
attention 10
anyhow). 1
attacks, 3
any? 1
alike. 1
actions, 1
algorithms, 3
[N+07] 1
animals 1
condition3 1
arguments) 1
advantages 5
almost 13
[MM03]. 1
above. 20
chosen, 1
algorithms. 5
address, 7
believe 5
authors.. 4
[RT74] 1
allocator. 2
age-old 1
address> 1
behaviors. 2
arise? 3
approaches: 1
caches. 1
client, 2
back-and-forth 1
addresses, 3
award-winning 1
applicable 2
assume 80
avoided; 2
anymore, 1
all; 4
address(es). 1
allocation 24
[P+95]). 1
answered, 1
conditions 9
algorithm). 1
array 46
alone! 1
[RK68] 1
accessed 42
chucking 2
allowed 8
address-based 1
bigger, 2
base/bound 1
[SA96]. 1
allocators; 1
analysis 5
big? 1
arises, 4
arise, 4
carved 1
clustered 1
all 247
barest 1
again!) 1
beguiling 1
approach? 3
automate. 1
awake. 1
applications 29
allocation. 7
address). 1
applications? 1
[Page 2
approach). 4
constructed, 1
alloc()/free() 1
ask 12
amplifying 1
[TTG95]. 1
accident 1
chunks 13
advance 1
billions 1
[SS74] 1
alone 6
anyhow. 2
big” 1
any 171
basic 94
arranges 1
arrange 4
caused 2
command, 4
allocations 8
basi-cally 1
aims 1
beware 1
args 8
background. 2
best-case 1
appropriate 3
allocators 9
addresses? 1
amount 37
[QI15] 1
approaches? 1
consume 5
allocating 19
assembly? 2
answer 29
[W06]. 1
accomplishes 1
cleaned 1
affected 1
bounce 1
a1). 1
architectures. 1
binary, 1
appetite, 1
batch 7
array[1000]; 1
arrangement, 1
also 213
centralized 1
companies, 1
alternating 2
be: 2
answer: 2
beyond), 1
array. 4
bases 2
bitwise 1
area. 1
apply 1
alive, 1
approaches 31
[S+11] 2
arbitrarily 2
consumer. 2
answers; 2
attaining 1
anything. 1
[W15]. 1
account. 1
clearly 17
brag 4
after 54
a:100:100,b:100:100,c:100:100) 1
are, 4
bits? 1
applicable; 1
behalf 2
aspects 10
array[i] 1
am! 1
chances 4
compared 7
amt>0) 2
beautiful 9
anyone 3
bit). 3
array’s 1
best 31
block, 2
arena 1
an-THREE 1
allocation). 2
are. 4
[SB92] 1
args->a, 4
contents, 1
appreciate 1
attempt 14
appropriate) 1
accomplish 9
activity. 2
clock 11
build, 2
alike, 1
a[0] 2
argued, 1
born 4
approach: 5
below) 3
assumption 10
aside: 1
amount; 3
chapter. 25
completes? 1
answer) 1
before. 7
approximate 20
bodies 2
arrived 6
body 2
book, 18
arises 21
analyze 3
allowed), 1
arg, 2
[W09] 2
assign 3
contrast, 10
appropriately-named 1
away.” 1
arbitrary 13
achieves; 1
addr 2
close(fd); 1
bx=1000,bx=1000 2
allocation, 2
about. 6
arguments. 4
break, 1
arg. 2
array) 3
atomic_decrement 2
aspect 15
characterize 1
computers) 2
answered 1
begs 2
approximation? 1
both) 1
assertion), 1
bounds”); 1
bounds, 5
art 1
application 29
allowing 22
arise2 1
a:30:200. 1
assignment, 3
an 545
control-c) 1
approximations 2
axes. 2
architectures: 2
acquiring 22
address), 1
cloud), 1
bytes), 3
abusing 1
allows 37
arranged 1
bugs 6
beneficial 1
asked 2
atomicity 8
assembly 13
children, 3
concepts, 1
appear 4
beyond 20
architects 4
brutal, 1
assumption: 1
branch 3
but, 1
assuming 25
approaches. 2
always, 5
arose, 1
a[1]. 1
assumptions? 1
anomalous 1
costs. 1
arg); 8
back-to-back 1
arguments: 3
ago, 5
addressed, 1
clustering, 1
c->value++; 4
accessed. 4
alternatives 4
arrive; 1
busy. 1
blocked. 2
assume: 1
author 2
associated 18
circular 1
concurrency 36
are! 3
blame 3
arithmetic 2
bus, 1
available, 11
buffer[fill_ptr] 1
c4 6
attr, 4
arg: 1
amortized. 1
arrive] 2
a[3], 1
automatically, 2
answer? 3
count++; 1
args->b); 4
back. 2
argv 3
akin 2
admit, 1
cmpl 1
achievement 1
among 14
article 3
call), 1
book). 5
attempted 2
call 230
awful! 1
avoid 50
class? 2
condition); 1
area 5
boring 1
arrives. 2
bus-based 1
away; 1
call; 2
building 41
attributes 4
argue 1
amt; 2
aside 4
a[6]) 2
auxw 1
answers, 2
counter: 1
argument; 2
backward 1
array.c 2
all... 1
again; 3
co-exist 1
acquisition 6
and? 1
asleep... 1
called, 10
both), 1
avoided, 1
care! 2
background 15
base-and-bounds 4
clear. 2
construction 7
array.c) 1
bottom, 2
assert(p 1
butter 1
beautiful, 1
careful), 1
built. 1
automatic 2
argv[1]; 1
another, 12
asleep, 1
accesses. 5
awoken 3
application; 1
course) 1
arrays, 2
base); 1
aware 2
analysis” 1
al. 5
co-workers 1
approaches, 1
assert(fd 1
add 82
catastrophic, 1
bounds). 1
bad! 1
base-and-bound 3
case 62
bash), 1
code: 7
consumers, 2
array: 1
bounded 8
assists 1
c3 10
big; 1
case; 3
burden. 1
bad 31
arise 12
approximates 1
assumptions 14
accused 1
barons 1
approximately 1
credentials, 1
arrive), 1
based 17
basics; 1
answers 3
also, 1
code/stack/heap? 1
are: 2
attention. 1
affect 10
cause 24
breed 1
before), 2
big. 3
caught 8
be, 2
common, 1
contiguous; 1
asides 1
boxes 2
atomically; 2
call: 2
bit. 5
certainly, 1
buying 2
base, 1
arose: 1
argc 1
authors 8
act 3
begin 32
architecture, 4
cycles). 2
ask? 2
before, 7
behalf. 1
anywhere 6
altogether, 1
coherence 3
arrays 5
avenue 1
again) 3
challenge. 4
bytes; 2
biased 2
bit! 1
chagrin 1
communicate 2
correctness 9
ask: 2
attacks. 3
bragging 2
attained 1
came 12
chips 3
cache: 1
both 87
arrangement 1
argument: 2
auto-matically 1
addition, 4
argument, 11
being 54
asks, 1
bidding. 1
behavior 35
approach), 2
anticipating 1
collection 3
aside, 2
balanced: 1
al-though 1
chapters). 2
cache. 9
checks 25
bits. 2
data 252
challenging 6
compact. 1
costs? 1
before 130
auto-magically 1
brilliant!” 1
avoided. 2
case: 4
be 785
choice, 2
calculate 5
briefly 7
array), 1
asking 4
avoids 5
addr:21 1
arise; 1
below, 2
atomics. 2
below). 3
approximating 1
architecture 18
bit 93
com- 1
asks 4
because, 1
al.’s 2
bit) 1
caches; 1
chores.” 1
blocked, 3
datacenters, 1
chapter), 1
comparison: 1
cover, 2
before!” 1
automatically 6
broken 1
balanced 6
cen-tral 1
below. 13
critical 140
caller; 2
broadly 1
aspiring 1
balance 15
advice, 1
assert(rc 5
better? 1
attempts, 3
benefits 5
arising. 2
argument 22
bits”. 1
come–great 1
assert 3
becoming 2
blank 1
calamity. 1
allocated 46
community, 1
book), 2
daunting 1
characteristics 2
completion; 5
begin. 3
ax 4
c2, 1
bash, 1
chains 1
chosen). 1
bits), 2
currency 4
capacity 2
broken, 2
association 1
as 1029
be? 9
alas). 1
atomically 16
biggest 4
baby 2
bigger 19
associative 1
arrive: 1
bombs, 1
commands: 1
assumed 12
begin” 6
bounded-buffer 1
cannot? 1
also: 1
complicated, 1
boolean 2
decision, 4
checking 6
complications 1
belt, 1
ax=0,ax=1 2
calculates 1
beauty 2
challenges 2
cloud 2
boost 8
days: 2
careful, 3
buffers 6
atomic 25
asked, 1
begins. 1
all? 8
attacker 4
billions) 1
baby!” 2
bolts, 1
atomically, 2
assert(count 2
born. 1
commonly-used 2
assumptions, 6
behaving 1
brief 4
careful 16
always!). 3
concerned 5
break; 5
defense 3
co-authors). 1
comprises 1
better.” 1
ax=1,ax=0 2
calculations? 2
behave? 4
behaves, 1
cofounded 1
boots 2
define 9
cares 2
c:100:50 1
atomically. 2
assumptions. 2
allocate(int 1
available. 14
better 88
binary 14
backwards, 1
boosted 3
attacker, 1
assigning 1
boundary; 1
completes 6
atoi(argv[1]); 1
borrowed 1
broad 4
carefully; 1
analogous 1
concurrently) 1
describing 4
built 19
codes. 2
condition. 8
binary. 1
balances 1
caller. 2
changed, 3
behavior: 1
comes 14
brand 2
deliver 8
cases? 2
caching 9
attacks2 1
attempting 1
allocates 11
award 4
black) 1
bookshelves 2
base/bounds) 2
broadcast(), 1
attr 2
avalanche 1
break: 1
concept 9
attack: 1
bother 1
buffer. 6
challenges, 1
anonymous 4
configurable 1
design 22
c->value--; 4
commercial 3
cache, 11
boost, 1
boots, 1
caller’s 1
class 12
company 1
behind 31
builder 1
descriptor, 2
chaos 2
call1 1
camp, 1
awesome, 3
alter 2
backing 1
book; 1
break 5
becomes 18
browser, 1
average 16
basics. 1
brk 1
concurrent) 2
attempts 4
breath. 1
bx=1 2
chance 4
anymore. 1
consulted 1
desktop 4
conditionals. 2
complexity. 2
call); 1
bed. 2
break. 1
can’t 30
cleans 2
compare-and-exchange 2
benefits: 1
device; 1
bytes 41
chosen. 1
atop 1
clean-page 2
b; 4
amazingly, 1
battles 2
bounds; 2
brings 1
behaves 11
avoided? 1
behaviors 2
broader 1
confusing 2
consider-ably 1
consisted 1
consumer 26
contain 6
continuing. 2
correct: 1
costly. 3
average). 1
browser 1
call, 19
chapter; 1
build 118
context, 2
argc, 23
detector 1
conditions; 2
around 42
campaign 1
begins! 2
broadcast 1
caused, 1
close 11
competitive. 1
difference 18
caches 16
citations 1
between 79
attains 1
clever, 1
back, 4
analyzed 2
begin... 1
broadcasts 1
c6, 1
behavior. 4
background; 1
bits1 1
buggy! 2
costs 8
away 12
built-in 1
canonical 3
chooses. 2
bunch 6
continue, 1
devices). 1
constructed. 1
confines 1
arrive 21
can. 3
behave. 2
btrees. 1
center 2
code; 3
computers), 2
call-ing 1
classic, 1
disk 54
blocks, 1
attentive 1
client. 1
became 21
apologize. 1
behaved 1
bucks. 1
call) 1
behaviors; 1
breaking 1
bugs. 11
counter, 15
base 66
awesome! 1
c->threshold) 2
carefully! 2
class, 3
burst 3
control-c 1
differentiate 2
contention; 2
considering 6
associative. 1
case); 2
behind-thescenes 1
buffer[MAX]; 1
choose 5
combat 2
concurrency, 10
care, 2
clustering. 1
carefully 17
book? 1
attribute 2
client’s 2
began 4
append 2
behavior? 2
buffer, 11
benefits. 1
builds 1
bx=100). 2
coverage 2
called 111
bet 2
backwards 1
c5, 1
classic 26
buy 6
correct? 3
case, 105
difficult 10
contents. 2
contiguously 2
atomically: 2
categories: 1
below 11
bytes, 10
cleaning 1
combining 7
cond_t 5
disrupt 1
codes 2
change! 2
bounds? 1
authors. 1
cocoon, 1
begin\n", 2
better) 1
bytes? 1
best-fit 7
c->global 4
cycles) 1
case) 1
bits) 1
before? 2
causes 5
clear; 1
bytes) 3
c 177
counter++; 1
challenging, 1
dismantling 1
context-switches 1
convince 1
attachment 1
cell 1
binaries, 1
cache? 2
clear: 6
communication 2
configurations, 1
distinguish 2
column 5
changes. 1
brutal 1
balance. 1
command. 2
beginning, 1
beyond. 1
c->value; 4
bible 2
caller, 4
date. 1
changes, 1
borrow 2
begins: 1
cheaper, 1
close, 1
caches) 1
c4, 1
counter1 1
chapter! 1
documentation 3
copy! 1
cooked 1
average. 1
centers, 1
block. 3
caches, 5
book. 23
compiler; 2
confused 1
commonly 13
bug, 1
chapter 37
are 870
basically 6
commands; 1
begun, 1
bizarre 3
calls). 1
big!”, 1
does 256
calloc() 1
debugging 1
cheat 2
both. 4
better, 14
cluster 2
capability. 1
child 59
cannot 21
course 20
chapters. 6
dominant 4
cores 1
core, 5
awake 1
chosen 5
clever 5
call). 5
both, 1
computing 16
commonplace 1
consider 26
bus 3
cheapskate. 1
assertion 2
basing 1
compaction 3
behavioral 1
brilliant. 1
cases). 1
big, 3
doing: 1
cause. 1
decreased, 1
choice: 1
breathe 2
cold 3
big 44
careful. 1
chip 1
caused. 1
crash 2
characteristics, 1
dread: 1
counts 4
crashes, 3
base. 1
circumvent 1
close(STDOUT_FILENO); 1
called. 4
bottleneck. 2
caller 14
communicating 3
continuous 1
bx=3 2
chunk. 4
attack 9
batch-like 1
compete 1
benefit 1
broken. 3
cast; 1
bits, 7
domains 1
changing 9
degree 3
chunk, 3
broaden 2
comfortably 3
chance. 2
coalescing, 4
chain 2
bits 70
create(), 2
checking, 1
drive 5
crime, 1
cream.” 1
best; 1
clustering 3
coalescing) 1
concurrently-running 1
bounds. 5
carefully, 6
company). 1
core. 2
c;, 1
chunks; 1
call. 17
below; 1
compiled 6
better-than-expected 1
brutally 1
certain 26
blocks 9
easy-to-read 1
client 5
depicts 1
cite 2
broadly. 1
compiling 1
child, 8
coarse-grained 2
challenge 5
born! 1
cycles. 4
closer 2
ease-of-use 1
critically, 1
bet. 2
creation 20
cmp 1
columns 1
concurrently. 1
bug; 2
caution 1
compilers 1
corollary 2
avoidance. 2
clear 12
can’t) 1
better. 7
con- 1
bind 1
buffer), 1
chanced 1
books 21
ebx, 1
coalesce 2
desired, 1
clearing 2
client/server 1
complete) 1
chip, 2
code) 3
chapters) 1
bring 4
danger 2
code.” 2
eat 6
crux: 5
bits). 4
data; 1
combina-tion 1
combined 1
consists 8
c->local[cpu] 4
chapter, 16
complexity 10
correctly 19
badly, 1
clock; 1
case. 3
bit), 1
conclude 2
bitmap 2
buffer[use_ptr]; 1
botte 1
enabled 4
change 55
code); 2
detects 1
brought 10
clues) 1
comprise 3
chunk). 1
colleagues 3
cheating 1
browser. 1
data). 1
communicates 1
ebx; 1
curr 6
blocking 2
database 13
comparing 5
complete?) 2
controlled 8
c6 6
clear, 5
computation; 2
correctness, 4
causing 3
black). 1
code, 73
blocked 16
black 3
because 93
cache; 2
bucket 2
enact 1
chapter? 9
colleagues’ 1
diagram). 1
built; 2
co-authors 5
compromised 1
coarse-grained, 1
come 9
child? 2
bumping 1
days 4
completion. 2
edition. 1
datacenters. 2
cabinets 1
deal? 2
complementary 1
complicate 1
correctly? 3
changes 20
close(), 1
computers, 1
costing 1
challenging. 1
consumers. 1
collector 2
boot 11
born, 1
begins 13
calculation 1
buffer); 1
engineering 2
chapters, 9
color 1
differences. 2
bx=0,bx=1 2
community 3
computers 7
code), 4
complex, 4
chopped 5
bytesLeft 3
decides 11
computing2 1
effective) 2
decision. 2
calculation: 1
debug. 1
components: 3
computation. 2
corruptions. 1
channel 1
combination 11
conceptual 4
changed 18
consumes 2
commandline 1
bounds) 1
could 137
bugs, 2
below? 1
call3 1
bug 4
ensuring 14
clarity. 1
command 12
directly, 5
company’s 1
computing, 4
combines 1
computing. 1
chunks). 1
calculated 1
deeply. 2
concern 5
efficacy 2
decrease 2
calls: 3
decreasing 1
concludes 1
computed 1
curious, 1
check; 1
community. 1
concert 2
charge 7
contention, 2
compact 3
byte 15
count. 2
byte) 2
blocked); 2
buggy 1
equals 3
cleverness, 1
commentary 1
dirty 11
calls 88
compile-time 1
concurrency). 1
compacted 1
concise 7
clean 9
default, 2
concurrently 9
emphasis 1
by 705
enables 23
casting 1
deeper 5
concurrency), 1
condition: 1
currently-running 9
choice. 1
deal 16
confidence 2
children! 1
control, 4
compare 6
c->local[cpu]; 2
counterpart 1
cache) 1
blocks: 1
build. 2
errors. 1
can 699
collect 1
commonlyused 1
disappears 2
complete, 7
cases 29
configure 5
complete). 1
cond 17
cloud-based 1
descrip-tion 1
conditions. 5
defeats 1
c->threshold 2
enterprising 2
central 7
defense; 1
considered 10
cons. 1
complain 2
demand-zero 1
chunk 44
confirm 6
chop 5
convenience 2
comparison, 3
c1 10
crazy. 2
calls. 5
bold). 1
bx=2,bx=2 2
especially 13
child. 2
combinations 3
companies 6
every 52
complicated 13
challenge, 1
confusion. 1
compromised. 1
constraints, 1
company, 2
devices. 4
consult 2
demands 2
caching. 1
entirely. 4
checkbook 1
depth 2
constituent 1
contention 4
complete: 1
descriptor). 1
claims 2
constructed 4
co-advisors 1
contents 28
cool 17
critical, 2
candidate 3
bookstore 1
bytes). 3
cache 86
chip’s 1
compare? 1
disassemble 2
compiled(!) 1
example? 2
concatenate 2
closing 2
context-switching 2
computers. 1
context-switch 4
concern; 1
dictates 1
continuously, 1
desire 7
calculation, 1
entries 22
children 1
diagram 10
context; 1
complicated. 4
determining 4
control 79
compete, 1
compiler, 2
concurrency? 1
contrast 7
correct; 1
cyclic 2
carts 1
bound 4
c; 3
cake 4
chocolate 2
competing 6
disassembler. 2
complicated: 2
examples, 3
concurrency: 2
cold- 1
conventions, 1
conclusions 1
contexts, 1
did 22
control-z 1
concurrent 80
destination: 1
call? 4
citation. 2
exactly 39
directory 18
continue; 2
component 5
developments 1
cooperative 5
compiled, 1
complete. 6
constant 1
controversy 1
creating 9
deadlock 5
cases. 3
breaks 2
can, 4
centers 1
chose 1
completion, 2
disposal.” 1
computation, 2
excess 1
consider. 2
collected 1
couldn’t. 2
condition) 1
convenience). 1
dies, 2
couple 10
concurrently; 1
detailed 8
calls, 3
cited 2
examines 3
dirty) 2
control? 3
computation 2
died 1
creation, 6
complete 23
complex-instruction 1
containing 4
counter. 12
curr->stride; 1
deciding 5
challenge: 9
buddy 11
casts 1
cesses. 1
coalesces 2
complex. 2
doing; 1
concepts 7
exercises 4
constitutes 1
collectively 2
counting; 2
connection 1
counter); 6
different: 2
course). 1
connections 1
device, 1
can) 1
closes 3
example. 31
discipline1 1
control” 2
conceptually 2
dirty-page 2
criteria. 2
concurrency. 7
concurrently? 2
converted 1
counter_t; 6
decisions, 2
decodes 1
child/parent 1
buffering 1
chapter). 3
change. 6
coined 2
components 1
doubt. 1
concrete, 1
existing 14
construct 5
columns. 1
crux 3
contiguous 13
created, 14
digit 1
covered 2
consist 2
differ, 2
canceled, 1
examples; 2
code. 44
discrepancy 1
cooperative? 1
concrete 1
discusses 1
curr->next; 4
construction. 1
cooking 1
counter’s 2
condition 81
definitely 4
dedicated 2
chops 1
byte(s) 1
char 35
changes; 3
commands 2
comprised 3
driver 1
cond; 2
exit() 6
compare-and-swap 10
curse 3
context 70
copyon-write 1
creativity 1
cpu 4
constructing 3
doing 76
differently 1
care 10
exclusion 21
collaboration 1
discussed. 1
correct. 2
condition, 7
display 2
currently-executing 2
convenience, 1
cores. 1
darned 1
confusing; 1
delaying 2
deleted 1
closest 1
c5 5
chooses 3
check 46
common) 1
computations 1
dummy 4
considerably 1
experts 1
completion), 1
dark 3
continue 10
computer 59
dangling 1
current->next; 1
contributed 1
dollars 2
direction; 1
case? 5
executing. 1
divide 6
common 61
confuse 1
eax=51), 2
deallocates 1
convenient 1
counter 116
corre-sponding 1
deadlock). 2
conspired 1
deploy 1
demand. 1
coarse 1
cached 3
classically 1
child: 1
completed), 2
concept: 2
ease. 1
consumers 9
extents 2
deallocations 2
correcting 1
converse 2
concurrent, 2
decade. 2
currently 27
convention 2
dominate 3
discussing 4
cases, 27
execvp(myargs[0], 2
drop 4
competitive 1
connected 4
effectively 5
decisions 7
converge 1
create(); 1
costly, 6
deallocate 1
const 3
deployment, 1
demise 1
cold-start 2
cat 3
command-line 2
circuitry 2
completing 1
concluding 1
easy: 2
consumption 1
famous 21
decided 6
craft 2
correctly-working 1
constantly 3
decimal), 1
currently-pointed 1
copies 12
doubts 1
do) 1
catches 1
exit 13
eagerly, 1
compile 11
consuming 3
efficient) 1
delight 1
cool, 1
create, 2
coupling) 2
decision 15
consumer; 1
designs 1
desktops 1
combine 7
century. 1
commonalities 1
clean; 2
conception 2
concurrency; 2
eax. 5
features, 2
contains 32
dedication. 1
crazier 1
correctly. 8
contention. 2
default? 1
dangerous 5
correctly, 3
don’t, 2
character. 1
explained 2
easily. 3
completed, 2
context. 2
element, 2
deployable 1
coolest 2
curr); 1
crazy! 1
decreases? 1
cope 1
each 340
dependence, 1
dest_buffer[100]; 1
coming 7
changes? 2
complete; 5
commands, 1
conflict 2
condition3, 1
effect” 1
felt 3
counters, 6
demoted 1
creation; 1
correctness: 2
control. 1
defaults, 2
data. 9
could, 1
downsides, 1
citation 1
extreme 4
efficiency 8
compulsory, 1
continue. 7
employ 4
describe 14
copying 4
current->tickets; 1
cross 1
depending 12
copy, 1
eases 1
dependent 1
developing 7
completed 5
chopping 1
components. 1
completely 6
consideration 2
condition? 1
elapsed. 1
few) 1
course. 4
depicted 2
creator 1
cost, 5
creation: 1
deployed. 1
databases 5
creators 1
draw. 1
closing, 2
failing 3
else, 7
concurrentlyrunning 1
contributions 1
end” 8
detail. 12
correctness. 3
deadlock) 2
curious 3
dequeue 5
copying. 1
eater 2
desired). 1
differentiates 1
completes1 1
chunks, 4
concern, 3
completion); 1
consistency 3
conference. 1
end), 1
find!) 1
cover 11
crash. 1
cyclic-sequential 1
day! 1
criterion 2
cycles, 3
decay-usage 2
crucial 2
drawn 1
fast, 6
enable. 2
confront 1
correct-ness; 1
error, 3
details; 3
decisions? 1
cost 49
date, 2
desired. 9
cost. 1
effective 12
details1 1
code 391
direction, 4
compulsory 5
clarify. 1
concurrently, 1
concatenating 1
corn 1
configured 1
energy-efficiency 1
flaws. 3
depressing. 1
cycle 4
countermeasures 1
days. 1
description 9
data), 1
decides). 1
ctxt 1
dreams 1
faulting 2
ending 1
constants, 1
cost: 4
etc., 1
deter- 1
deletion, 1
costly; 2
day, 2
despite 6
counting 7
efficiently? 5
detecting 1
columns: 2
disabling 5
compute 12
clean), 1
conditional 1
condition). 1
corner-case 4
confined 1
entirely 4
flexible 9
destination 2
declare 4
create() 11
delete, 2
designers 9
decayed 1
deep... 1
culprit 1
dx 2
file: 1
entries; 2
contending 14
counters 14
example... 1
determined 9
descriptors. 1
court, 1
deep, 1
detail; 1
eight 1
creates 34
difference, 4
compare-and-swap, 2
disaster. 1
computer. 1
coalescing 6
consumers), 1
congratulations! 1
confuses 1
correct 42
equivalent. 2
flushed 1
fly 1
delve 5
cruces 1
depiction 2
destroy()) 2
decimal 2
definite 1
easy-to-use 2
current 37
fills 3
enum 2
continued 1
counting, 2
exec() 13
developer; 2
cpu.c 2
desired 52
demands. 1
didn’t 11
encountering 1
customized 1
enters 21
do: 2
concerned, 2
coherence, 2
controls 5
consumed 2
continues. 6
different 196
correctly; 1
errant 3
deterministic. 2
following: 8
depend 3
daemon1 1
derive 1
developments. 1
decisions. 2
demand? 1
edx; 1
cycles 11
environment 4
copy-on-write, 1
flag 73
counting-based 1
existed 1
diagram, 6
currency. 2
destruction, 1
demonstrated 2
digest. 1
comparison 7
datacenter, 1
entries). 2
drives 2
concurrently), 2
complete? 3
converts 2
continuing 4
cooperatively 1
differently; 1
count) 3
est 1
devices? 1
form). 1
depends.” 1
darn 1
descriptor 1
deviously 1
decreases 3
demand” 1
encountered 1
data) 2
events 5
copy. 1
flash-based 2
crude 2
expectations? 2
direction 1
dairy 1
deterministic, 2
desire. 1
directly. 3
debug 1
compiler 26
entry? 1
dynamically-allocated 1
configure; 1
completed; 1
cost; 4
convention; 1
counterbalance 1
disciplines 2
covers 4
directions. 3
formed. 1
description, 1
debate 2
detail, 6
digested; 1
example 131
defined 5
descheduled. 1
entering 9
data[100] 1
eventually, 1
core 8
forever! 2
customer! 1
eyes 2
directory, 8
darker 1
directly 8
destroy 1
dividing 6
definitive 1
computational-overhead 1
exec(); 1
earlier) 1
connects 2
completely: 1
couldn’t 2
convoy 2
created. 3
create 49
crazy) 1
disk). 3
former 5
designers, 1
debugger 6
did. 2
discipline 1
exceeding 1
delay 2
design. 2
errorprone. 1
declares 2
evolved 1
count 25
forgets 1
debug, 2
facets 2
diving 1
data? 1
disciplines) 1
details); 2
do; 2
degenerates 2
computer, 3
existed; 2
easy; 1
constants 2
completes, 9
copy-onwrite. 1
disk, 14
critical; 2
currency) 6
customer 2
distinct 2
destination. 1
frame 40
default 7
different-size 1
discredited 1
executed), 2
deployment. 2
desire, 1
errors? 2
deeper. 1
exact 26
counter) 1
forth). 1
dedicate 1
failure. 1
do. 18
defensive 1
disk), 2
diagnose 1
double-click 1
demanding 3
concerns 3
exit). 2
edi; 1
consulted, 1
complex 22
correct, 2
does, 6
critique 2
daemon 8
deallocated 4
does). 1
determines 17
free) 5
do, 11
described 36
discussion 17
executing 26
descheduling 2
desktop. 1
esi; 1
deeply 1
example) 10
crashes 2
game 4
deeply-nested 1
fashion. 3
done; 1
demonstrates 3
distribution 1
differently. 3
draw 2
desk 1
confections 1
expected? 2
effect 4
convoys, 1
comprehensive 2
costly 7
domains, 1
currency; 1
dealing 2
data, 18
d’un 1
device 11
free-list 1
document 1
device), 1
double) 1
exists, 3
describe. 1
destroying 1
estimate 2
depends 5
executing) 1
crazy 3
get: 4
destroyed 1
fetch, 2
dump”, 2
designs, 1
does), 1
discuss, 1
eax=50. 2
details! 1
confining 1
explain 1
efficient 19
copy-on-write 5
configuration 2
count--; 1
dramatically 2
decrement(counter_t 4
declared 1
declaration 5
effectively, 1
differ 2
friends 3
doesn’t). 2
difference: 4
down, 1
exits? 2
desires 1
diagrams 1
exceptional 5
design) 1
exit; 1
create()); 2
getpid(), 2
detail 26
finish), 1
efficiency, 3
design” 1
easy. 3
disk-access 1
endless 4
developers. 2
consults 1
discussed 24
efficiently; 1
corresponding 10
confusing, 2
curr->pass 1
dream. 1
demanded 2
degenerate 1
defaults. 2
embarrassment. 1
directory; 1
from). 2
doing. 3
different. 2
driver8 1
expected: 2
details) 1
differently, 1
exciting! 1
designed 9
exited2 1
datacenter. 1
globally-shared 1
detour 1
finished, 10
desirable. 1
either 49
eax=50 2
disk? 2
etc.); 1
extended 5
consume! 1
doesn’t? 1
emptying 1
counter1, 1
constant. 1
cycle. 1
dynamically 1
descriptors 5
delivered 2
defend 2
enforcement, 1
disappear). 1
func(). 1
doubt! 1
disciplines. 1
dx=3,dx=3 4
fact. 2
deterministically) 1
difficult. 3
execvp() 1
development 13
expect, 2
de 1
gracefully, 1
developed; 1
first-out) 1
detect 5
encounter. 1
effects 1
disks, 1
failed, 1
control: 1
done! 3
emulate 2
even 148
constraints 2
dandy. 1
ele-ment 1
course, 73
designers. 2
depressing 1
defense, 1
event 3
discipline, 1
generate 28
drivers 1
does: 2
earlier 18
feature 5
develop 12
discovered 4
expects 3
devices 15
explicitly. 2
declaring 1
granting 1
difficulty 4
first. 10
developers 12
enough; 1
efficiently. 1
eax, 3
fancy 7
element 14
double-ing! 1
entry; 2
evicts 3
consumer, 6
date 2
employs. 1
covering 7
destructive 1
depths, 1
defer 2
exceptions 3
disconnection 1
each. 4
give 30
done? 1
eaters 2
file, 9
devices, 2
dive 4
fail 13
different-sized 1
exploration 1
defeat 1
grasshopper, 1
disabled; 3
fits 9
diagram); 1
environment, 2
enabling 15
conundrum 1
fares 1
copy 18
drops? 1
essentially 11
execl(), 1
contexts 2
day 5
en-us/um/people/mbj/Mars 2
crash, 1
details, 4
describes 6
deletes 1
exec(), 6
discussion, 1
earlier; 2
glock; 2
downfall. 2
effectively. 3
first-in 2
differ? 1
divides 6
fast. 5
differs 1
exports 1
definition 6
grow; 1
discussed, 1
formula 2
digging 1
epic 1
enacted, 1
ends 4
faster, 6
correct) 1
easier. 1
everyone 1
executable, 3
continues 7
decide 23
enabled, 4
current: 1
developer, 1
design: 1
demonstrate 5
executable 13
doing? 2
eaters; 1
google’s 1
dramatic 2
elsewhere 3
free-page 1
direction. 3
do), 1
fault 12
directory. 6
facility 3
delving 1
handle. 1
forward! 1
directing 1
equation; 1
engineers 2
error 17
first) 1
counter; 2
easily 17
examples. 3
execution: 1
correctly! 2
deep 7
do 328
days, 6
end 46
die 1
designate 1
dereference. 2
execution. 17
economist. 1
explicit 22
don’t 81
dx) 4
empty), 1
fullness 1
directory: 1
documented 1
feel 8
distributed 7
doesn’t 51
demand 11
happening 1
fourteen. 1
disappear 1
etc.). 1
entry. 10
etc. 5
flag). 2
create()6 1
editor 2
excuse 1
exists. 4
costs, 1
descriptor? 1
driving 1
decimal. 1
estimator? 1
directed. 1
destruction 2
derivatives 1
grouping 4
effective. 3
fair 19
earlier, 3
dynamic 20
end”. 1
fully 8
disk); 1
fewest-possible 1
fact). 1
efficiency. 3
drive. 2
deschedules 3
hard-and-fast 1
fraction 5
disk. 14
eviction 3
examining 4
exam? 1
creature 1
following 55
enable 24
exhibit 3
expires. 1
coverage, 2
descriptors, 2
editor, 1
defined. 1
evaluate 6
directives 1
detail10 1
descheduled, 1
grow, 1
employed 4
fair-share 7
efficiency; 1
e 1
ensued 1
further, 2
done) 1
files) 1
failed\n"); 4
end, 5
driven 1
die). 1
hardware, 15
free(rvals); 2
dissertation 6
example), 10
execution, 8
exception; 2
credit 3
forgot 2
end\n"); 5
exist 11
exploited 2
created 22
device. 1
encounter 7
deletion) 1
executed 17
discussion. 1
design, 1
details. 34
guesses, 1
endlessly, 2
family 5
elsewhere, 1
easier, 1
envisager 1
futex 16
draconian 1
fill_ptr 2
fairshare 1
environment. 4
else? 2
difficulties. 1
hardware-based 5
future; 1
divided 8
exceeds 8
exhibits 2
execvp(). 1
datacenter 1
fork(). 2
endeavors 1
exits 3
extracts 3
curious. 1
die, 1
endlessly 2
design-ers, 1
exit(1); 6
disk-drive 1
desk? 2
deterministic 8
harmless, 1
establish 3
far) 2
evicted, 1
end. 1
equal, 2
general. 1
eax=51. 4
finegrained 1
fanatics, 2
escalation 1
email 2
displays 1
heavy-handed, 1
gcc) 1
does. 1
exceptionally 2
exists 3
experimentation. 1
days... 1
forth. 10
enough! 1
expected; 3
fair, 1
debugging, 1
differences 2
entered, 2
designer, 1
exiting? 1
diverse 1
despairing 1
deterministically. 1
held. 16
examples 21
fetches 10
evil 1
enjoy 3
era, 1
generalpurpose 2
either. 1
fixed-sized 11
faulty 1
esp; 1
embracing 1
double. 1
hide 1
gdb) 1
doivent 1
experiment 5
expand 1
express 1
de-queue 1
fully-developed 1
experiment, 1
entire 46
fast 19
decide: 1
disassembler 2
entirety? 1
details). 4
expect. 2
do? 9
developer. 2
details 46
hierarchy, 1
excellent; 2
excellent, 4
ensures 14
errantly-freed 1
few 102
generation 1
empty 14
flag[self] 4
fetch-ing 1
evidence 1
emptied 1
downside, 1
hierarchy; 1
generalized, 1
downwards 1
family? 2
expected. 4
deallocation, 1
fact, 28
get() 7
fancifully 1
entirely; 2
fetches, 2
defaults 3
establishment 1
discuss 53
expectations 1
determine 34
done, 6
disable 3
developed. 1
homeworks, 3
execute, 2
exec(): 1
entities 5
evicted 3
get(); 5
figure 35
eviction. 1
followed 5
figures 4
example). 3
entries. 3
dream 1
high: 1
gettid()); 4
drives, 1
figures, 1
exporting 1
decrees 1
fail. 2
fast” 1
entry), 1
global 56
few, 2
dereference 1
etc.) 11
discussion: 1
expensive 3
did, 1
downward, 1
discretion 1
developer 2
hot 1
explore 5
fair. 1
error; 1
global; 2
excellent 42
fill; 2
exception 15
file), 1
exchange 2
essential 3
found 84
during 29
hit), 4
globally 4
dustbin 2
files. 1
failed; 2
deleted); 1
families 1
features. 2
grande 1
examine 36
fewer), 1
designated 2
evenly 3
disks 4
exploring? 1
disk-like 1
earlier. 2
disk) 3
did), 2
https://gruss.cc/files/kaiser.pdf 1
extremely 3
family. 1
essay 1
globally-allocated 2
exec(). 2
fine 7
excessive 3
fill. 1
excluding 1
exclusion. 6
four 52
hoc 2
else 45
dynamically-allocated, 1
go 37
familiar; 1
dense, 1
fault. 7
find 86
fg 1
graphics 2
exist: 1
fewest 2
designing 3
execle(), 2
documents, 1
fault; 2
doing, 3
doesn’t, 3
disk; 4
easy 50
implement 30
factor 8
famously 3
evermore 1
grand 1
exist). 1
fit? 1
execvpe(). 2
fitting 3
executed, 5
execvp(), 2
free()) 1
employs 3
holds 38
earliest 13
goals 15
faster; 1
designs. 1
favor, 1
finish 13
finish, 2
green 1
explicitly 12
figure, 15
developed 23
doing.” 1
execute 29
fellow. 1
downward). 1
done. 10
ebp; 1
imply 2
done 72
fall 5
fancy? 1
everything 12
grows: 1
existed. 2
fits, 1
exit), 1
fix. 1
exited 1
exert 2
free(void 4
emulator 1
honorable 1
easier 19
good”. 1
favorite 8
destroy() 2
fd 1
for: 1
first-level 2
grows? 2
fairly 9
file. 2
dirty, 2
done\n", 2
down 25
few), 2
each, 1
double-precision 1
efficiently 10
increases. 5
double-check 1
fashion). 1
few. 1
evolution 3
hallmark 1
expect; 1
flag)? 1
expensive!). 1
flag; 6
expect: 4
exist; 2
generalization 5
enacting 1
hope. 1
efficient, 5
habits; 1
fetch-and-add 8
develop, 2
forget: 1
fetch 29
flags 10
handlers 5
fairness, 2
file.txt 2
execution” 1
don’t. 1
download 2
fields 2
downward. 3
egomaniac. 1
early 68
inform 4
down-wards 1
features 17
field, 2
exec 2
hand-over-hand 8
expert, 1
flag[0] 2
face 4
focused, 1
expensive, 6
existence 3
ghastly 1
entity, 3
how, 1
efforts 2
happen: 1
fight. 1
differentiation 1
fork()ing 1
fork; 1
handling, 1
final 51
far-reaching 1
file’s 2
expressed 2
doubt 2
drink 2
figure), 1
duty. 1
elsewhere. 2
effective, 2
initializing 1
downward 1
fetch), 2
filled 6
executed. 1
handle 17
explains 2
floor 1
fails 5
for. 3
explanation 1
exit. 5
github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
entry). 1
however: 1
eip; 1
harder 4
difficulties 2
formal 2
formal, 1
file 95
havoc 2
finished 14
far. 1
fine, 1
far: 2
downsides. 1
dynamics 1
flexible, 1
e.g., 8
enough, 5
efficiencies 1
instruction) 9
drive, 2
files, 3
fine. 2
expensive. 2
handler. 2
extra 18
flush 5
fault3 1
forefront 2
explored 2
exits; 2
grab 11
error-prone. 1
http://www.sparc.org/standards/SPARCV9.pdf. 2
en.wikipedia.org/wiki/LoadLink/Store-Conditional. 2
haul, 1
digest; 1
forms: 1
fought 1
flexibility; 1
hit, 28
five 8
fascinating 9
focus. 1
faster. 6
due 19
eating 1
frankly 3
emailing. 1
ensure 34
elements 8
duration 2
finding 15
fixed 13
exploit 1
handlers; 1
fastpath) 2
forces 2
faults 3
fork.py, 1
external 10
int 260
intellectually 1
grabbing 2
error? 2
hypervisors, 1
enabled. 1
http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 1
direct 14
discussion). 1
free(): 1
flushing 1
honest 1
flavor 2
flight, 1
fragmentation? 1
fetched 5
ease 4
electrical 1
free), 2
enacted 1
entity), 1
else-where, 1
edit 2
flag[2]; 2
for) 1
failed 8
havoc’ 1
field 15
form. 2
finally 27
forward 4
failure; 2
experience 9
interface: 1
gray) 3
etc.? 2
iMac 4
encapsulated 2
i.e., 29
four-level 1
dives 1
frequency; 1
focus 21
hurts; 2
fewer. 1
foil 2
framework 3
files 10
easy, 1
element. 1
eax 20
enough. 2
empty. 1
editor? 1
entry 55
flexibility: 2
free. 13
familiar 2
heap. 10
file.txt|wc 1
forms; 1
find. 1
free(ptr), 1
fashion; 1
extend 2
eventually 15
guarantee 21
illegal 11
it. 68
encourage 3
i=0 1
fprintf(stderr, 6
documents/R4400 1
frequently-used 1
follows: 21
ice 1
fill 11
found. 2
free, 5
follow 2
friends, 2
elements; 1
ecosphere 1
entirety 2
encouraged 1
effort 3
etc.)? 1
flexibly 1
funny 1
far, 13
helgrind? 2
finally), 1
formula, 1
fine-tuned 1
frees 6
feeble 2
failure 21
evict. 3
guessed, 5
itself); 1
imagine 41
engineering. 1
ignored. 1
fragmentation2 1
double 3
funky 1
form, 6
impacts 1
finishes. 1
fragmentation; 1
full; 2
for, 2
friend” 1
enjoys 1
efficiently, 1
entries: 1
end-of-string 1
encounters 2
ever 19
folks 1
guessed 1
faster 16
hidden 4
first-fit, 1
finish. 2
frequencies; 2
fell 2
fashion 4
except 6
guide. 1
free 187
implications. 1
it’s 33
entitled 2
illegally). 1
free(). 6
earlier). 1
gcc 10
formally: 1
in-use 1
first” 1
frequent 4
getpid() 1
forced 2
fully-operational 2
enlisted 1
excessively 1
enter 32
enemy? 2
engineering; 1
everywhere, 1
follow, 1
handled 4
fault) 1
high, 4
foo 4
fit, 2
frightening 1
fields, 1
fault, 7
execution), 3
handled, 1
freedom 1
inc 1
kernel-owned 1
equivalent; 1
improvement 3
free? 4
ecx; 1
gdb 5
forthcoming 3
in: 1
fix 3
frequently; 1
gettimeofday(); 1
forget, 1
functionality. 3
enqueue 4
exchange1 1
entries); 1
enormously 1
evicted. 2
enough 32
forest, 1
happy. 4
faulting”, 1
highest 20
foreground) 1
five-level 1
functionality, 2
field” 1
faulting. 1
expect 15
happen 15
from. 5
increased, 1
kicked 2
et 7
in? 2
freed; 1
effect. 1
globallyshared 1
free(10), 1
inaccessible, 3
flag=0 2
full). 2
goes 27
free() 8
good. 6
entity; 1
entry, 8
execution 48
equally 1
executes, 3
entries, 5
forward-growing 1
have, 1
feedback 5
homework 9
format; 2
hope 13
furthest 5
fine! 1
fetching 4
eyes...) 1
hardware. 10
go, 2
incremented, 1
kindly 1
evicting 1
incrementalism; 1
frustration 1
eight-page 1
graduate 9
freeing 6
incurring 1
flags: 9
general, 18
grep 7
freely, 1
hardware) 3
ever, 1
equal 19
exit()) 1
errors 9
expected 7
equation 1
free(), 2
heavily-used 1
filling 1
flag), 2
fortuitous 1
goals? 2
however, 49
first; 6
failures. 2
hardware’s 1
goals, 1
indicating 8
know, 5
exactly? 2
indexing 1
fundamen-tally 1
emails 1
group 12
from, 3
inducing 1
init(), 2
generalized 1
groups. 2
head->next; 1
full 33
execlp(), 2
era 7
experiments 3
evil.” 2
faint 1
era. 1
free(tmp); 3
finishes, 1
flexibility 2
force 2
foundational 2
good, 2
http://www.multicians.org/history.html. 1
fairness. 6
fit 27
going. 1
inseparably 1
knowing. 1
exclusion? 2
exist, 1
gadget), 1
empty, 3
grow. 1
fully-associative, 1
first 278
for 1176
gettimeofday()). 1
guard; 2
header. 1
functions: 1
expected, 4
exam- 1
expose 1
exception. 1
field. 1
example: 8
full, 6
here, 22
has 348
forever, 6
fork(), 9
friend, 2
growth: 1
idiom: 1
fantastic, 1
flag) 5
greater-than 1
integer, 4
infinite 6
exit? 1
glibc 3
large 93
ence 1
flag. 13
inputs. 1
further 31
forever. 1
forewarned: 1
glance 1
guide 1
header_t; 1
futex_wake 2
fact 20
far; 1
exchange1) 1
file-system 1
excited 2
functional, 1
herein), 1
executes 23
functions, 1
forth, 4
generating 2
gruesome. 1
important. 5
example, 262
fast; 1
flag[1] 2
happy 5
intensively 1
influential; 1
exits, 2
great. 1
far 21
enough), 2
flag’s 2
inquiry 2
fusion, 1
had 57
forget 8
gnu 2
hacker 2
held: 2
gaming 2
field: 1
fashion, 1
excludes 2
files” 1
fundamentalist 1
head->next 1
heuristic 2
exhaustive 3
garbage-collected 2
fragmentation 13
giving 15
guy 3
info 1
executing, 2
feasible. 1
execv(), 2
fork() 25
interact 15
initialization. 3
larger. 1
initialized 8
few). 1
entry) 1
footnote: 1
forcing 1
futex_wait 2
hard-andfast 1
forms 3
good! 2
hands 4
help. 1
gently 1
filled. 1
higher 24
finds 10
findings 2
gadgets 1
header_t 1
https://quoteinvestigator.com/2015/07/23/great-power. 1
exiting. 1
getrandom(0, 1
free(16500) 1
goals. 2
hacking 1
inserted. 1
harsh, 2
feature-filled 1
exercise 4
forth 3
interesting. 2
greater). 1
insight 1
left 21
fewer 13
evict 9
interface 16
foreman 1
gains. 1
hard-working 1
freely 2
happens? 2
got 16
execl, 1
fit; 1
focusing 2
fork(); 4
first, 20
fork 7
headers 2
gain 16
hybrid. 1
exploits. 1
government 3
freed) 1
hair 4
handler). 1
instructions). 1
hate 1
fellow 1
exiting 2
interesting 46
intergalactic 2
grew, 1
instead. 4
length) 1
fine). 1
exception, 3
interval, 1
fork()/exec() 1
gates, 1
generality, 1
future, 5
greater 4
extension 1
historically 2
gets 51
forth; 1
floating 1
formally, 1
helpful, 1
gaming, 1
improve. 1
figured 2
graphs 1
hardware 263
frequently 7
handed 4
hates 1
heap); 1
fine-grained 3
frees. 1
expert 3
interrupts, 4
hackers 1
integers), 1
levels 9
finishes 6
exhibit. 1
found, 2
introduced 25
hard. 1
general) 1
guarantee. 1
fail! 2
horrible 1
gettimeofday() 5
forwarded 1
follows. 4
free()? 1
get 126
into 339
helps 5
generalizing 1
indefinitely, 1
flag, 14
hack. 1
high. 3
from; 1
functioned 1
head->value; 1
heart. 1
fingertips. 1
gave 3
exploring 2
intro 3
hardware-interpreted 2
intense 2
libcrypt-2.23.so 1
fires 1
exist. 5
gained 1
is), 1
hardware? 1
generator 2
handler, 3
failure), 1
imperatives. 1
giant 1
frames 5
forays 1
frequency 5
graph. 1
introduces: 1
higher-level 1
generations 1
indexes 1
follows 6
handling 14
harder. 1
fundamental 18
header, 4
highlyfragmented 1
flag.s. 2
exposed 1
generally 28
kill 10
hardware-specific 1
goal 19
hack, 1
flag? 3
exits. 4
good? 1
isolate 1
he 20
how 441
grammar 1
happen. 2
falling 1
implement, 1
gray 3
forever; 2
general 41
friend: 1
greedy 3
invention 1
hinted 3
get? 1
inefficient, 2
for? 2
happened 5
hardly 3
hash 17
heap). 1
hybrid 10
focused 3
extent 1
killed). 1
interrupted 14
haven’t 4
libraries. 2
hand-over-hand). 2
hard-hitting 1
have? 2
guest 1
keyboard 2
kmalloc. 1
hugely 3
gruesome 1
happens; 2
guess 8
impossible 1
generates 10
gives 15
great 79
form 46
groups 3
invocation 1
history... 2
gigabytes 1
inflation, 1
forget-ting 1
hardware). 3
generally, 7
help, 1
identifiers, 1
forcefully. 1
fact: 3
knowledge, 3
is: 9
highlighted 1
flags, 1
expected) 4
local 56
header: 2
guide: 1
head; 2
large-memory 1
helgrind 16
fantastic 1
harddisk 1
hand, 3
function, 3
goofs 1
getpid()); 9
gettid() 2
getting 33
graph 11
grows 16
hash_t; 2
have. 3
head 39
heavily 2
held), 7
help) 1
helped 2
here. 11
here’s 1
hey, 1
historical 14
grossly 1
guard 14
grows. 1
job? 1
hit). 1
great, 1
initiating 1
fragmented) 1
heavyweight 1
highest-order 1
generated 12
illusions 1
formulae. 1
fetch. 2
latter 5
iterations/threads: 2
http://linux.die.net/man/3/pthread 1
forever 6
extract 7
locates 2
headway 1
habit 2
hybrid, 1
laugh 1
here) 4
farmer 1
has. 1
hand-coded 1
have 487
granularity, 2
history 16
freed. 3
guess, 3
guaranteed 1
http://books.google.com/ngrams). 1
jobs, 14
greater), 1
free(50). 1
input 20
here! 1
http://en.wikipedia.org/wiki/You 1
goal, 1
immediately. 2
fortunately, 2
finished. 2
layout. 1
kernel), 1
http://www.ostep.org/Citations/notes-solaris.pdf. 1
in 2103
fail? 1
includes 13
heavilyused 1
happen, 2
idea; 1
learn? 1
hides 1
fine; 2
handle; 1
heap, 22
headaches. 1
graph, 6
honor, 1
handling. 1
hacked 1
http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD329.PDF 1
jumping 2
greatest 1
free(x); 1
input/output 3
hex 4
http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html. 1
grabs 16
improve 17
fragmentation: 1
first-fit 3
life, 3
forewarned, 2
hurting 2
lead 50
long; 1
fails, 3
incorrect. 1
help: 1
from 443
hardware-managed 9
hence 20
libtinfo.so.5.9 1
hierarchy. 2
fire). 1
hardwaremanaged, 1
hexadecimal), 1
heard 1
grows, 4
idea? 2
has). 2
happened; 1
imbalance 3
kill. 1
grow 18
freed 3
insert; 2
high-level 6
humans) 1
highly 7
inadvisable 1
fragmented, 2
flavor. 1
lightweight, 1
forgetting 2
imaginary 1
line. 1
ls, 1
failures 1
m->guard 10
fully-associative 1
illusions, 1
hardware: 3
here? 3
like, 3
history; 1
flaws 1
head), 1
hood 1
halted, 1
ideas, 3
here 46
heyday 1
header). 1
in-between. 3
laid 4
guesses 3
inspiration 1
function 41
grade, 1
hybrids 1
highly-networked 1
industry 2
front 10
linking 3
flow 14
frames; 1
incur 1
list: 3
incurred; 1
fairness 7
management. 3
function. 2
immense 1
harm 3
implementation)” 2
list), 1
in-between 5
formed 3
heap) 2
http://www.unix.org/version3/. 1
hand-controlled 1
hundred 7
heap), 1
high-end 4
handler 24
hang 1
his 37
incorrectly. 1
lations 1
handles 14
game, 1
ground 1
hard 51
icon, 1
inefficiencies. 1
hit 32
load, 3
holding 12
focuses 3
hear 1
frustrating 1
hello, 8
initiate 3
familiarity 2
mark 6
functions; 1
heuristics 1
has, 1
homeworks. 1
lives. 1
increased 3
fragmentation. 6
helping 2
implementation, 2
idle, 1
hierarchies, 1
have: 2
hits, 2
increased. 5
learned? 1
generalize 1
instruction. 22
guarantees 6
hardware/OS 2
implement!) 1
inherently 2
fun 20
hoping 6
locations 11
forth), 1
indexed 3
load/store: 1
indicate 15
insidious 1
high 36
fault? 1
matching 1
fundamentally 3
historically, 1
headers, 1
http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF. 1
long-lived 3
incremented 4
fragmented 3
herein, 1
importance 8
imbalance. 1
in; 2
head, 1
hopefully, 3
indicated). 1
len:10 6
goodness); 1
instructions; 2
guts, 1
here; 4
important). 1
functionality 2
hypervisors). 1
loops? 1
fourth 4
functions 7
locks: 3
ineffec1 1
insights. 2
instruction 130
history. 3
faults, 2
measuring 5
gates 1
historically-based 1
hire 1
idea: 1
longrunning 1
independent 4
free; 5
hierarchies 2
hint 4
impact, 3
inconclusive 1
house 2
inner 1
libc 2
harming 2
heap 76
interchangeably 1
hackers. 1
hierarchy 2
impressive. 1
future. 9
ideas? 1
lowest. 4
fragmented; 1
gcc, 1
lottery.py, 1
infinitum. 1
install 1
intend 2
hit; 1
feasible 1
meet 5
hostility: 1
hole 1
going 29
identical 6
lower-half 1
inexpensive 1
frequently. 1
hit. 5
hold 27
important, 7
incremental 1
http://cag.csail.mit.edu/raw/documents/R4400 2
input, 1
lie 1
head_lock, 2
hearing 3
interfaces, 1
happen?4 1
high-performance 1
improves 4
garbage 2
idioms 1
machinery, 1
friend 3
gdb, 2
love 2
infrastructure 1
integer) 2
interrupt), 1
interested 11
figuring 1
memory-like 1
huh?? 1
how: 1
heap-allocated 1
indefinitely) 2
m;) 1
init: 2
friendly 5
hold, 1
http://ftp.gnu.org/gnu/glibc. 2
incorporated 4
indefinitely. 2
http://history-computer.com/Library/AltoUsersHandbook.pdf. 1
life: 1
inside 30
held) 1
here: 10
invoked 2
homeworks 5
indeed, 11
gone 5
implementations, 1
main-race.c. 2
greater. 1
happens 78
general-purpose 8
lwarx/stwcx 2
insparable 1
honor: 1
interrupted, 3
interposition 2
file; 1
misses). 1
hurt 3
heart 2
i++) 18
inspires 2
machines) 1
inodes, 1
from) 2
humorously, 1
humorously 1
increase 20
index: 1
http://www.ibm.com/developerworks/linux/library/l-solar/. 2
listing 4
instruction: 1
higher-priority 2
him 1
it3 1
hopes 1
indeterminate, 2
in-kernel 5
majors 1
greatly 4
hence, 3
generalizes 1
machines. 6
good 99
gum 1
however 1
introduction 17
involvement 1
finally, 8
multiprocessor 19
identifier 3
importantly 1
in, 6
illegal. 2
instant, 1
made: 3
insert(queue, 1
func() 4
imag-ine 1
initial 5
indivisible 2
https://github.com/mit-pdos/xv6-public. 1
locations. 1
idea 92
intricacies. 2
hints 4
history, 3
hours. 1
insert 12
in. 11
make. 1
hand-assembled 1
high-priority 2
main() 11
halt 5
given 80
instant 3
http://ostep.org/Citations/inside-cfs.pdf. 1
intuition? 1
irstrun 1
flag.s 2
near-term 1
its 295
held). 2
imbalance, 1
increasing 10
integers, 2
main(); 1
gaining 5
instruction, 19
impetus 1
initiates 4
inefficient. 4
i; 16
imagining 1
lock() 38
inverse 1
hit! 1
hogging; 1
how-to-generate-a-random-number-from-within-a-range. 1
installing 1
inability 1
maliciously! 2
handle, 1
hits). 1
main-race) 2
hand. 3
gods, 1
instruction? 3
http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF. 5
issuing 6
is; 3
items 9
nearly 9
itself) 1
hello 5
included 4
interludes. 1
incrementing 12
mainstream 1
general? 1
integer 17
implementations. 4
input: 1
information, 6
ideally 1
immensely 1
logic, 1
involving 1
hits. 1
holder 2
https://lwn.net/Articles/170003. 2
instance 3
inaccessible 2
manual. 4
hands-on 1
hy-brid 1
main.c 6
handed-out 1
happening? 1
instructions, 10
hung. 2
flags. 2
issue. 3
iterations 4
necessitates 1
it’ll 1
himself, 1
increasingly 6
inefficient? 2
maintain 4
generated. 1
interrupt 77
interest 3
important) 1
ins 1
ignore 5
initialize 15
implemented? 1
lookup 12
implies 7
host 2
idea, 7
incentive 1
mapping 13
head->size 1
instructions 78
identifier, 2
many! 1
happens: 5
heap; 2
integers 4
immediately, 4
forcefully 2
it: 4
itself; 3
next, 1
jars 1
honor. 1
initialization 8
innocently 1
generic 4
introduce 12
makes 57
introduction, 1
interesting; 2
installs 2
improvement. 1
installation 1
intent 5
interposing 1
intervals: 4
isolation 3
it), 4
job). 1
inaccessible. 1
hour 1
loop 41
ideal 4
incredibly 8
mask 1
heap: 2
insufficient. 2
measured 2
hardware; 2
helgrind, 2
intelligence. 1
implicitly 2
found? 1
jobs) 1
kick 8
nice, 3
join 12
http://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1303.PDF. 1
instances 2
inopportune 2
goal: 1
isolation; 3
malloc(strlen(src) 1
inventory 1
interrupt: 4
instructions), 1
in- 1
if 483
hold? 2
jobs); 1
inactive 4
key) 16
independently 8
idle! 1
master 4
increment 14
held; 2
interconnected 1
memorymanagement 1
mind. 1
here), 2
hog; 1
in) 2
fragmentation, 6
juggling 1
last. 1
non-practical 1
killed; 1
http://www.intel.com/products/processor/manuals. 3
inputs 2
growing 5
issued 7
manuals 2
iterations, 1
instead 95
invalid 8
interactive, 1
incarnation. 1
holds, 2
illusion 20
hptr 1
loved 1
main-deadlock.c 2
indicated. 1
illegally 3
matter? 3
incrementally. 1
highlight 3
interesting) 1
header 15
miss: 1
intensive, 1
https://events.static.linuxfound.org/sites/events/files/slides/elc 1
increment(counter_t 4
free-space 4
jump; 1
leap 3
none-too-subtle 1
laborious 1
hundreds). 1
insert. 2
guarantees. 2
jobs? 3
maps 7
interact. 1
involved 9
investigating. 2
honor 1
include 18
immediate 2
http://www-formal.stanford.edu/jmc/ 1
jobs 102
kind, 1
memory! 2
installations. 1
imbalanced? 1
matters, 2
indicated 4
invalid. 2
hits 13
heavy, 2
homework, 9
is 2736
interactions. 2
human 4
issues 26
frequently, 3
kids, 1
least) 1
not: 3
laptop 2
idea! 1
instructions. 5
handlers, 3
join(), 7
measure? 2
interest: 2
isn’t. 3
is. 7
inefficient 4
immediately; 7
ideas 36
importantly, 9
l/stl 2
mention 1
knows 18
intelligence 1
independently, 2
mem- 1
init() 6
involved. 2
mistakes), 1
held, 6
hopefully 6
intervals) 2
indicative 1
identical, 1
it? 11
fringe 1
languages 4
left). 2
numer-ous 1
latency 9
intensive. 1
immediately 23
happens. 3
kernel, 7
message, 2
interleaving 4
isses 1
isolating 1
infinite. 1
https://birrell.org/andrew/papers/035-Threads.pdf 2
illegal, 1
init(counter_t 6
leftmost 1
mid 1
language. 3
interactions 4
instantaneously. 1
memory-allocation 10
initializes 5
isolated 2
modification 2
http://en.wikipedia.org/wiki/ 1
help 38
invalidate 1
informed, 1
implement. 5
itself), 3
large, 7
future 21
legends 2
old, 1
leaks 1
intricate 3
implementation. 4
hard-to-find 1
key); 4
messy 2
interrupt; 1
it!) 2
it.” 1
inflation 2
i5 2
imagine, 4
initially 3
length, 1
missing 4
larger), 1
interval. 1
integrity 1
meta-level 1
innovation 2
issue, 3
modified), 1
https://en.wikipedia.org/wiki/Buffer_overflow 1
herein. 5
inversely 1
init(); 2
implementations 4
it’d 1
laws 2
gather 1
length 16
oldest 1
learning 2
on. 9
implemented 10
harmful. 1
know. 3
miss), 3
it... 1
mode, 13
item; 1
informative 3
ideal? 1
implementation 7
inode 3
lesson: 2
mmap(NULL, 1
larger-scale 1
intervention. 1
intelligent 2
minimally 1
integer). 2
modularity, 1
itself. 19
humans, 1
home 3
inverted 4
innovator 1
implication 1
it” 1
left, 6
generated, 1
line: 2
less 29
letter 3
one) 4
inclusion 1
having 29
is, 22
model 8
kernel) 2
known 90
itself 32
initializer 2
idle 5
improved 6
instructions: 2
life. 2
mode), 1
largest 2
invalid, 8
interface. 4
minus 5
interval 8
monolithic 1
joke, 1
increments 7
http://cag.csail.mit.edu/raw/ 1
iterations? 1
installed 1
important; 4
jobs. 7
get(counter_t 6
intuition 3
lingo) 1
letting 6
library; 1
one-word 2
live 12
heap? 3
jobs: 2
most. 1
killing 2
la 3
innovations, 1
job, 19
interfaces 17
incl 1
interactivity 2
incorporate 7
naming 1
ld-2.23.so 1
invited 1
interrupted) 1
monopolize 6
intervention 1
most-recently 1
key, 2
index 20
huge 20
join() 9
int), 2
in-depth 1
join, 2
grocery 2
investigate 1
listens 2
lifeless 1
independently! 1
other) 1
load-linked, 2
heavy 5
judiciousness 1
myret 4
landmark 3
later), 1
impact 5
known: 1
interfere 2
like) 2
iss 6
index. 1
nary 1
involved, 6
interruption, 2
ms, 5
learn 65
intrinsically 1
neat. 1
kicks 2
indirection 3
multiple 95
i 22
interaction 13
incorporates 2
jokes 1
growth 1
junctures 1
lost 4
keeping 14
indicates 3
output: 4
locale 2
known; 1
held 25
nearly-complete 1
least-recently-used 4
latest 8
implements 6
leave 13
interrupted. 2
link 6
it1! 1
info: 1
next; 4
it!), 1
investigator 1
len:9 1
invisible 1
networking. 2
kidding; 1
k-stack(B) 2
inheritance. 2
multiprocessors. 4
illusion: 2
influence 1
interrupts 33
habits 1
jump 22
kernel; 2
larger? 1
lots 12
inefficiencies 1
outs 1
lie. 1
hogs, 1
necessitating 1
lest2 1
long 68
lags 2
importance, 1
lies 4
issue; 1
list-like 1
item 9
non-executable 1
itself, 8
kernel?” 1
limits 6
information 57
isn’t, 2
new, 1
killed 2
init(lock_t 4
mythread. 2
illustrate 5
instrument 1
interval’ 1
kernel 123
half 8
link) 1
killer 1
later); 1
main(), 1
information. 9
owner 4
limit) 1
http://stackoverflow.com/questions/2509679/ 1
needed, 7
lost. 2
lawyers 1
likely 73
limitations 1
job) 3
important 63
join(). 2
noted 3
killall. 1
kills 2
literally 1
infrequently 1
it?) 1
little 103
new_head; 2
knew 5
inkernel 1
natively 1
implementing 8
interpose 1
intriguing 1
keystroke 1
hand 6
linked 18
languages, 2
ldl 2
len:30 1
libc-2.23.so 1
not 449
informed 3
ownership, 1
limited 17
humble 2
line 14
learned, 1
limits; 1
list. 21
journalism 1
in-terface 1
judicious 1
nuance 1
kinds: 1
lock) 4
inherits 1
know 71
join()); 1
load. 2
nonetheless. 1
least-significant 1
innovations 2
necessarily!) 2
implying 1
interrupt, 4
introduces 6
lazily, 1
happen? 8
list; 4
library. 10
managed), 1
nothing”; 2
init 4
objdump 8
list 103
lot! 1
hundreds 5
lessons 5
list, 26
locality, 8
list_t; 2
key; 6
in/out 1
jumps 7
observed 1
l/stq 2
locked 7
injected 2
knowledge? 1
jump) 1
lock(&mutex); 2
led 8
inode) 2
note 27
neighboring 1
improbable, 2
interrupt-based 2
k-stack(A) 1
ldq 2
happening! 1
loader 4
libtinfo, 1
managing 9
p; 7
input); 1
objectoriented 1
load/store 3
luck! 1
located 13
lines, 1
lock? 10
lock(&m) 1
list’s 1
known). 1
informs 1
language 8
old; 4
launches 2
looking? 1
innovations. 1
left-shifted 2
jumped 1
lock->flag 6
lengths 5
insisting 1
noticeable 2
nondeterminism 1
increase? 2
kernel” 1
isn’t 26
length? 1
happens, 4
lives 7
memory) 5
packages, 1
instead, 5
lock. 64
once, 9
illusion. 2
machine; 2
lock_t 2
location. 3
locks, 22
lock(lock_t 14
located. 2
kernel. 6
innocent 1
later, 5
once), 3
low 10
instruction(s) 2
like: 3
let’s 73
logic 7
libcrypt, 1
interacting 1
keep 48
obliged 1
not; 1
increases, 2
kicking 1
journaling 3
lengths, 1
hardwaremanaged 1
long-term. 1
methods. 3
instrumentation 1
page. 21
lock_t; 8
ongoing 1
imbalances. 1
mainframe 2
locked; 2
lookups 1
locks 79
locks. 6
looks 39
kernel’s 4
inserted 2
law 2
onelevel 1
lower-case 3
intervals. 1
limit 6
like. 6
lost, 3
interested! 1
languages. 2
library 47
observe 6
notion), 1
incremented; 2
kind: 1
kinds 5
library, 10
harmful, 1
loop) 2
migrating 2
int) 2
pages; 9
lock’s 2
online, 2
important? 1
malfeasance 1
locking 34
loops 18
long, 5
make, 2
lookup. 3
kind) 1
inspired 1
ldrex/strex 2
operator. 3
lowered 1
into, 1
load” 1
list). 2
machinery. 3
interesting, 4
learns 1
lively 1
off; 2
null.c 1
know! 1
indeed 26
know: 2
lifesaver 1
has? 2
lying 2
minimize 11
interleaving, 2
pairs, 1
low-level 16
in-memory 2
operation 20
malloc(sizeof(int)); 2
longer 17
lowest-priority 1
lowers 1
manifests 2
loop. 8
laptops, 1
installation, 1
level, 3
opposed 3
m->flag 6
intricacy 1
ls 1
lists[BUCKETS]; 2
market... 1
interlude, 2
least, 7
older 13
object), 1
lock, 61
knowledge 14
indeterminate 2
known, 2
likely). 1
headed 3
machine. 9
machines; 1
invent 3
papers 8
lowly 2
optimal; 2
manipulate 2
including 51
lowering 1
ls. 1
magic; 1
manual, 2
loops; 13
laughing 2
instructions) 2
likes, 1
optimizations 1
macro 1
introducing 5
macOS, 1
llock[NUMCPUS]; 2
matters. 3
interpretation 1
legal 6
optimal 20
observation 5
locking. 3
large-scale 1
individual 3
large. 3
links 3
helgrind. 2
misses. 7
made, 5
it). 3
parameters). 1
optimize 4
made 23
materials. 1
increases 6
lowest-order 1
m 1
main-two-cvs-while.c 1
masking 4
lucky 3
lengths: 1
intact; 1
linear) 1
options. 3
maintains. 1
intuitively 1
machinery? 1
mature 1
loads 19
intervals 6
legitimate 1
obviously 5
logs 1
last, 1
informally, 1
latency) 1
literature 1
herein 3
modification, 2
mail 1
judiciously 1
our 230
park(), 2
order), 1
mem.c 2
influenced 2
manager, 3
making 63
main.c). 2
mainframe, 1
math 4
m; 1
lifetime 1
interactive 20
load-linked 14
ordering 9
malicious, 1
invocation, 1
machines). 1
maybe 4
locking, 2
it; 14
occurring 3
let 36
longer-running 1
lazy 5
informing 1
laughably 1
locality 18
holes 1
motivating 1
manipulates 2
kept 12
over-written 1
pdflush), 1
orphaned 1
memory). 6
inherent 5
marvel 1
malloc(). 4
malloc()); 1
malloc(3) 1
mathematical 1
list_t 2
machines 21
isolation, 2
lock; 24
originally 2
me 6
it) 5
main-one-cv-while.c. 1
memory), 5
logarithmic 3
jumps) 1
offset=04); 1
levels: 1
lean 1
interleavings. 2
lay-out. 1
loss 2
however; 2
movement). 1
manually 1
look 121
kind. 1
overheads), 1
physical. 1
otherwise). 1
men-tioned 1
inject 2
malloc’d 3
managed 6
malloc(strlen(s) 1
maximum, 1
lists 13
may 123
main-deadlock.c. 2
it! 14
logically-different 1
otherwise 14
it?!) 1
measure 21
main: 12
memoryintensive 1
longer, 1
keeps 13
operator 3
left), 1
internet 1
lays 1
lottery. 1
http://portal.acm.org/citation.cfm?id=540365. 2
multi.py 2
many. 5
loop; 2
large) 1
overseas. 1
like 215
points. 1
merest 1
output 36
inputs: 2
malloc” 1
manner, 11
microcode), 1
man 21
lives, 2
mem.pdf 1
matter; 1
jacket, 1
longlived 1
overhead, 1
itself? 1
memory-mapping 1
makes. 1
merely 1
looking 13
large-file 1
optimality 1
legal; 1
intervening 3
low-priority 1
least 35
if, 4
multiplexing 2
mechanisms; 1
machine 34
last 37
linker 1
paging 28
portion 20
merge 2
p4.output. 1
instead), 1
manages; 1
mappings. 3
migration 5
manages 9
locality. 4
memory-related 1
join. 2
mechanisms 32
main(). 1
overwrites 1
mentioning: 1
mappings 8
microkernels 3
last); 1
lottery 24
options 3
levels), 1
invented, 1
machine, 8
length). 2
illusion, 2
necessarily 8
memory-management 2
main-signal-cv.c. 2
leading 9
list) 5
just 304
paging-policy.py, 1
practice 4
meters 1
kind 54
instruction; 3
mapped 14
match 12
minicomputer. 1
manner; 1
lock()), 2
knows, 1
memoryreference 1
main-signal-cv. 2
p3). 1
metric. 4
memory. 103
masks 2
mirrors 1
last-in 1
malloc; 2
others). 1
life 22
inversion, 4
magic 7
lmbench 4
implicit 1
newly-freed 1
memory?”, 1
malloc(), 3
left) 1
listed 1
pain. 1
precise 4
pageable 1
metric, 2
late 4
interactivity. 2
metrics 7
matter 13
minimum. 2
memory): 1
latency. 1
lot 35
microprocessor. 1
maintains 1
page-replacement 6
mighty 4
millions 3
meaning 3
miss-handling 2
message. 1
output; 1
later 36
lightweight 1
malloc(10 2
issue 33
local-to-global 2
improving 4
nitty-gritty: 1
mentioned 7
malloc(strlen(src)); 1
library” 1
location, 6
paragraph 1
predict 16
part: 4
modifies 1
later. 9
miss; 1
internal 12
mem. 1
miss. 9
micro-instructions 1
layout 2
luck 5
mind 5
manipulations 2
park(); 4
milliseconds, 2
mind-blowing 1
mem 10
mistake 3
metal 1
over-designed 1
latter, 2
like; 2
manner 7
matters! 1
nodes) 2
it, 68
location 39
line, 7
locks) 3
parallel) 2
predictors, 2
patterns 4
modulo 1
leaked 2
mmap(); 1
most 130
interposed 1
memories, 1
mistakes) 1
mines 1
learn, 1
magic. 1
many 252
miss, 10
maximize 2
park, 2
more? 1
minimal 7
more, 6
mix 1
millisecond 1
p3) 1
lets 10
limits. 1
influential 4
mean 6
nonsolution: 1
job. 8
long-list 1
lived 1
macros 1
patient! 1
pressing 1
pauses 1
moment 5
least- 1
modifications. 2
much?). 1
interpret 1
mesh 1
mocked). 1
minicomputer 5
library) 5
main-signal.c. 2
marking, 1
modify 3
memory-bug 1
participated 1
misbehaves 1
most-significant 1
mode) 9
mov 33
miss). 1
package 4
level 23
initially, 2
load 35
mechanism, 2
note, 5
job’s 2
lookup? 1
location; 2
made. 2
periods 4
previously) 1
people, 1
monopolized 1
least-frequentlyused 1
multilevel 2
move 31
invented 5
microkernel-like 1
more). 1
minimum 2
limits, 1
maintaining 1
mathematician 2
money 1
memory-user.c. 1
partition 1
mitigates 1
multiples 1
move). 1
must-read 3
mlfq.py, 1
light 1
pair 21
initiated 1
lock). 10
megabytes 3
loop? 1
notice 34
key 28
looping-race-nolock.s 8
magnificently; 2
persistently 1
primitives? 2
percent 6
moving 13
leaving 3
munication, 1
ms). 3
inversion 6
misbehaved), 1
moves 15
loading 6
manner. 7
miss 32
meant 1
mostly 4
metric 5
perfectly, 1
much: 1
multiprocessing). 2
ms. 5
nanoseconds). 1
mocked 1
likes 1
passed, 1
insertion 2
lock_init(lock_t 4
memories 4
loops, 4
now. 7
knowing, 1
lucky, 2
perspective, 1
printing 3
performance? 3
muck 1
main 66
level. 7
notes: 2
much... 1
is! 2
misbehaving 2
multiprocessorbased 1
lock), 2
long-running 15
mmap() 7
looked 8
low, 3
microsecond. 1
perform? 1
nanoseconds, 2
mutex, 4
multiprogramming 8
nearest 1
mode. 4
lives), 1
patent 1
interleavings 4
logically 6
mental 2
mentor, 2
metadata 1
method 8
machine? 2
pipeline 1
priority) 1
performance” 1
matches 1
privileged 24
multi-level 30
occurred, 4
multiprocessor, 2
multiprocessors, 2
material 8
much; 1
mode). 1
mechanism 18
lowered, 1
much 135
min 3
phone 1
numbering 1
mutual-exclusion 2
more 470
negatives, 2
locate 3
pattern. 2
intermediate 1
looping-race-nolock.s, 2
occasions 1
major 28
labeled 3
millisecond. 1
machines, 5
play 4
permit 1
libc, 1
measurements, 1
probes 1
nanoseconds), 1
odd, 1
problem: 25
mythread, 14
meltdownattack.com 1
multiprocessing 1
more) 1
memory-reference 1
lowest 9
name, 4
mini-computer; 1
physics). 1
obvious 12
mutex; 6
myret_t; 2
mutex 17
nicely. 2
locations, 1
performance: 4
interrupt. 4
looping-sequential 3
omitted, 1
malloc(100e6)); 1
larger, 2
milliseconds; 1
main-two-cvs-while-extra-unlock.c. 1
persistence, 1
point, 30
libraries) 1
measures 2
newlyrunning 1
odd-sized 1
of. 1
need. 2
memories. 1
naturally, 1
multiprogramming. 1
process, 51
microseconds, 2
it 1299
machine) 2
napping 1
models 2
picks 5
oddity: 2
myarg_t; 4
negative, 3
myarg_t 8
nightmares 1
lock->ticket 2
lock-free 3
looping 1
next 101
is? 2
low. 1
managed, 2
laser-like 1
mistakes 3
maliciously) 1
persistent 4
pointier, 1
lifted. 1
next-to-last 1
myargs); 2
offerings 2
natural 9
memory-add 2
memory, 124
neat 8
myargs[1] 2
processing. 1
mid-instruction, 2
item. 1
madvise), 1
neatly 4
mode” 1
pipe, 2
off, 3
n 4
naive 3
node, 1
permanently-valid 1
low-cost 1
nice 34
machinery 10
not. 14
matter, 3
laziness 2
modified 15
malloc(20);. 1
persistently; 1
possession 2
locally-allocated 2
noble 1
job 144
needs; 1
one! 1
newly-opened 1
method. 3
memory-user 4
necessary; 1
message 10
producing 1
minimal. 2
iteration. 1
magnitude 1
necessary 9
modification. 2
please 3
pmap, 1
offset 42
now-standard 1
needed. 11
pesky 1
lower-priority 2
one 500
main-two-cvs-if.c. 1
main(int 23
measurements 4
leads 13
more. 14
many” 2
phase 3
marked 11
location.” 2
none 3
known. 1
negative). 1
ones. 3
news: 2
middle 11
name; 1
need, 1
minutes 1
minimizes 2
jne 3
next. 10
multiplex 1
nearly-infinite 1
pool 1
oops.x 2
programs 85
ocean, 1
olden 1
open 7
operations. 8
out-of-bounds 1
outputs. 2
page), 2
page-table 31
pagedirectory 1
paper: 1
performance 91
person; 1
piece, 1
pioneer 2
plots 3
policies: 2
politely 1
pretend 5
problematic 2
memory 568
practice! 1
malloc(sizeof(double)); 1
of... 3
make 214
malloc 8
leak, 1
music 2
pressed 2
physics. 1
marriage, 1
place, 9
not? 2
lack 4
network 2
only 202
open() 6
notes. 1
modified. 1
naturally 4
networking 3
miss) 1
misses! 1
just-finished 1
notes); 1
myret_t 6
nonconcurrent 1
populated, 1
optimization 6
properly. 1
needless 2
problems. 11
mess! 1
precision 2
manner? 1
malloc(sizeof(node_t)); 8
mapping, 1
legality. 1
old 60
mutex. 1
printed 6
lock(), 8
platform, 1
poorly, 1
note: 4
launch 2
network-connected 1
oops! 1
operates 4
nothing 5
mother 2
non-contiguous 2
missed 2
ms), 4
keyboard, 1
nuances 3
needed? 6
normally 2
power.” 1
need 152
overflows 4
provided. 2
processes; 7
pseudocode 7
preferably 2
manufacturers 1
mandated 1
massive 4
liked 1
online: 1
printf("%lld\n", 2
name 22
lookup, 2
means 31
popular. 1
might 218
notice. 1
lazy; 2
open()? 1
organization. 1
notion 12
mythread() 2
norm, 2
must, 1
mode 23
new 140
kill() 1
occurs?” 1
knowing 6
notice, 3
pre-configured 1
needed). 2
overwrite 4
negative 14
processes’ 1
pthread_mutex_init(&c->llock[i], 2
produce 9
memory-constrained 1
master, 1
manual 13
linear. 1
operation. 5
printf("location 3
pro-cessor) 1
loop, 10
measurement. 1
possibilities. 1
models), 2
num 1
leaking 3
optimal, 5
ours: 1
number. 2
myturn 2
occur, 2
naturally-occurring 1
non-ASLR 1
nicely 1
ones!). 1
now: 1
predictable; 1
larger 23
modern 90
no? 8
owns 2
new) 4
purify, 2
putting 17
other 303
memory-failing 2
math. 1
map 7
opposite, 1
loaded 17
nearby 2
process). 2
main-deadlock-global.c. 2
powerhouse 1
much, 1
memory; 19
obvious) 2
learned 13
outdated) 1
object 10
name. 4
often, 7
newlyfreed 1
noticeably 4
non-performant. 1
oops, 1
on-chip 4
preferred; 2
leak 2
n). 1
none, 1
p1.c), 1
no?). 2
preserve 1
quantum 5
producer. 2
overflow. 1
message; 1
measurements? 1
marks 4
optimal) 1
local[NUMCPUS]; 2
negatively) 3
processes? 3
malicious 14
printf("child\n"); 3
methods 4
off), 2
multi-threaded 44
life; 1
overall. 1
occurred 3
nasty 1
oops.y 2
notes, 3
nuclear 1
non-zero, 1
opposite: 1
primitive! 2
one, 26
primitives. 8
named 8
pages). 3
numbers 12
now? 7
primitives 15
questions 13
program: 6
own. 2
methods, 1
megabytes). 1
marvelous 1
organize 1
newer 2
processes” 5
malloc. 1
printf("hello 3
million 17
offending 10
multiplied 3
multiprogrammed 3
nears 2
next: 9
node_t 24
non-cooperative 2
non-preemptive 2
non-stop; 1
notably 5
occurs)! 2
overhead), 2
occurrence. 1
nature 8
optimizations. 1
notices 2
nuts 1
occurs), 1
or, 5
libraries 3
other, 5
process; 13
pause) 1
protections 4
numbers). 1
problem; 2
needed 44
randomization, 1
prone. 2
lock 370
p2 7
miss); 1
memory-access 1
maximum 8
output. 2
non-blocking 2
produced 2
manifesto 1
mind, 4
offset=000000, 1
problem 121
lifetime, 1
processes: 4
p3 5
odd 6
order, 5
now! 1
needs 32
objects 5
odds: 1
orderings 2
limiting 1
outcomes? 4
oblivious 1
peaches. 1
pthread_join(pthread_t 2
obscure 1
problematic: 1
new; 8
processor, 13
protocol 3
logical. 1
paging, 4
lower 13
memory? 9
mem-access 1
overcome? 1
notice? 1
professors 3
mapping: 1
once”, 1
misses 21
omit 2
professor. 2
p4.output 1
linear 34
offender. 1
lines 14
number, 4
newly 3
occasion; 1
once? 2
otool 2
lists. 1
overcome. 2
occur 9
pthread_mutex_unlock(&c->llock[cpu]); 2
obvious, 2
per 57
re-enable 2
newly-allocated 2
program-debug 1
providing 16
misses, 8
parameters. 2
lowlevellock.h 2
memory” 1
mem? 1
overzealous 1
obvious: 2
profilers 2
masses: 1
month. 1
one. 24
one). 1
programmer), 1
part, 2
ordering. 2
oh 2
list? 1
particular, 28
newly-fetched 1
occur. 3
out-of-bounds; 1
operations 26
ll/sc 2
overhead 12
oddly 1
pthread_mutex_unlock(pthread_mutex_t 2
offset, 2
perform, 1
read-only 1
nothing. 2
program4 1
pthread_mutex_lock(&c->glock); 4
mode; 2
parentheses 2
machinery) 1
mesmerizing. 1
metric: 1
ownership 1
occasionally 3
projects, 1
max 1
more! 1
open-source 2
open("/tmp/file", 1
programming. 5
origin 2
order; 1
obvious. 2
lists, 7
peeking 1
non-scalable 2
occurs; 3
p1, 5
optimal. 1
loathe 1
oversubscribed, 1
offset), 1
purpose, 1
once. 5
performance), 1
read-write). 1
numbers) 1
object. 1
offers 1
movie 1
perror("malloc"); 4
persistently, 1
mess 1
moment. 1
page-directory 5
offset: 1
proverbial 1
meaningful 5
multicore 6
operations, 3
option 1
property, 2
ory. 1
ority 1
load; 1
people.cs.clemson.edu/ 1
nor 1
odds 1
pagereplacement 1
optimizes 4
lock->turn 8
luck. 1
queue), 1
one-quarter 1
performant) 2
rearrangement 1
often 69
prove 5
quest 3
question: 7
omniscient, 1
main); 1
physically 2
messages 1
microcosm, 1
park() 4
one-to-one 1
pthread_mutex_trylock(pthread_mutex_t 2
meanwhile, 1
names 1
original; 2
out! 1
ps. 1
ourselves 3
out? 1
locality: 2
period 8
o 2
one-third 1
paging). 1
parameters: 1
out, 27
maintain, 1
races, 4
operate): 1
reboot 6
pick 15
once). 1
provides 30
ms 14
queues: 1
pipeline, 2
rather, 11
malloc() 32
migration. 1
patterns. 2
one? 1
once 60
measurement 3
ptr 16
networking, 1
other. 8
overcoming 2
ptr; 2
over, 1
overview 12
phrase 2
logical 15
obey 1
open("./p4.output", 1
pairs. 1
park 6
paths. 2
perfectly 2
randomness 6
opposite 5
reduced-instruction 1
pieces. 1
one: 3
pseudo-random. 1
much-improved 1
mouse), 1
ponder: 1
ratios 1
million); 1
percentages. 1
manage 19
ones, 2
online 6
messages. 2
query 1
new->next 4
others; 1
overlap 6
quantify 3
packed 4
page: 1
physics 1
lookaside 4
observing 1
opinions; 1
parallel 6
p4 7
makes, 2
rate. 3
readied, 1
management 29
material. 3
performs 21
pleases: 1
oops; 2
pushl 1
multi-CPU 3
power-of-two-sized 1
readers, 1
movl 28
mobile 1
perhaps, 1
management, 1
one” 1
opens 4
met 1
questioning 1
newly-created 3
other’s 1
overly-large 1
pain 1
queue, 17
papers, 6
popular 7
lookups. 1
optimizing 2
parameter, 4
occurs 19
paging. 4
opt 1
reading 21
reduces 9
maximizing 1
pipe 8
pmap 5
previously, 1
put(int 2
multiply 2
powerful. 3
really) 2
multiple-queue 1
modes 2
pipe() 2
manager. 4
oops 2
opportunities 1
mild 1
read/write 1
nice), 1
p 1
overwhelm 1
patches 2
re-use 1
parallelization, 1
porting 2
loop.s 6
others), 3
park(). 2
outcome. 6
paper, 3
optimization, 3
reality 7
relocation; 1
memcheck 1
pressure. 2
opinion 1
priority, 7
myarg 2
needed; 1
prerequisite 1
recently, 1
multiprocessors 5
modified). 1
multi-processor 4
marking 2
opposite. 1
option, 2
milliseconds 6
reason. 3
node. 1
p1–p3). 1
pages) 3
paying 3
read), 1
parcel 1
preemption 2
loops. 1
onnv/onnv-gate/usr/src/lib/libc/port/threads/synch.c. 2
path 8
over. 1
parallelism. 2
out; 1
recommend 2
replacement; 1
memory); 2
primitive. 6
priority-based 1
puts 19
order 80
never 38
preventing 3
reclaimed, 1
mutex_unlock 2
played 1
mutex->flag 6
meeting 1
ordered 4
minute?), 1
receives 4
node_t; 5
packaged 2
papers. 4
parallel, 2
path, 2
peaches 2
or 469
receive. 1
prior). 1
lovely 1
open(), 1
peach, 3
overload. 1
part 52
paralleliza-tion, 1
outlines 6
recursion 1
represents 4
memory-mapped 3
primitives; 2
proceeding. 1
rate 27
outcome 4
nothing) 4
previously 3
records 1
new->key 4
pouvoir”, 1
microseconds 2
mutual 29
out.” 1
modes. 2
recollections 1
node’s 4
performing 14
orderly 1
organization, 1
pro2 1
of 3668
magic: 7
opinions 2
peanut 1
pages 195
picture, 5
p: 18
parent: 2
own? 1
recycles 1
require. 1
milliseconds). 1
printf("Final 1
particular 60
processor. 9
programmed 1
noticed: 2
redirect 2
new_head->value; 2
priority 61
predictors 1
over 90
migrate 1
myturn) 2
overlap, 1
modifying 2
recover 1
pieces 19
recommended. 1
original, 1
proceed! 1
offset. 6
malloc.py, 1
opposing 2
performance; 5
pals 1
pointing 2
pages: 2
partially-ordered 1
p2.c 1
register), 1
requirement: 2
minicomputers. 1
printf("Initial 1
now 184
re-referencing 1
proportionally 1
region. 1
now, 18
pass 54
nptl 4
proceed 6
preferred 2
overhead. 1
migration? 1
name). 1
p5 5
module 1
regain 1
placement 1
recursion). 2
other? 1
process); 1
on-disk 5
manager 3
orders 2
permissible. 1
patch 5
preparing 1
painful; 2
past, 4
page-number 1
relaxing 1
respectively, 1
moglie 1
releasing 16
old_ptr 4
reached 1
pthread_cond_signal(pthread_cond_t 3
regular 2
now-extinct 1
pausing 2
number), 1
processes”, 2
presenting 1
overheads; 1
miniscule 1
necessity! 2
pages), 1
monitoring 3
representing 2
player, 1
reducing 6
others, 4
ones 8
processes, 31
manner: 1
out). 1
phones 3
performance-minded 2
performance2 1
paging-multilevel-translate.py; 1
pretty 26
response-time 1
parent 44
private, 3
mother. 2
privilege 8
on). 1
realize 5
purpose 9
removed 6
once; 4
requested 8
produced, 1
onto 17
preserves 1
page? 1
misses), 1
needlessly 3
pages, 26
mutex_t 5
requiring 11
plural) 2
register, 6
overall, 1
optimization. 1
producers, 1
match. 1
outcomes 1
phrase... 1
performed, 2
performed 11
paradigm. 1
process) 6
result, 12
parts 19
reliability 2
multi-queue 4
probabilistic 1
otherwise: 2
regardless 2
put(i); 5
perceived 3
researchers/engineers, 1
numerous 12
professor? 1
open. 2
prio_to_weight[40] 1
mobility 1
pagetable 4
network. 2
paging-linear-translate.py, 1
my 6
resource. 2
policy) 1
regs 3
ordering; 1
overheads 14
professor 2
matter. 2
overheads. 4
piena 1
physically-indexed 1
personal 1
parent) 1
processed 2
ret 1
pause, 1
remaining 13
pay 12
properties: 1
overflow 3
remote 1
q->head 4
perfect. 2
results 17
of) 3
professors, 1
out-of-memory 1
molecules 1
problem. 26
paradigm 1
new. 3
parameter; 2
namely 5
resources; 2
pool? 1
replete 1
organization 2
overlays, 1
programming 7
memory-intensive 1
own; 3
pipes, 2
pioneering 6
phases 2
password 1
professionals 3
reverts 1
policy 50
reporting 2
peep 1
protection 22
responsibility, 1
queue) 1
person 3
returned) 2
on! 2
prompt 4
overcome 3
own 72
monster! 1
parent; 1
newfile.txt 2
paranoid. 1
near 13
respect 2
popularity 1
reset. 2
overly 3
original 19
p1 8
mid-execution 1
painful 7
player 1
place? 1
penalties. 1
programmer, 1
right.” 1
multitude 1
possess 1
resources? 1
potential 12
pthread_mutex_init(&L->lock, 4
rest. 2
quote 7
phenomenon 1
review 2
on-going 4
process 403
protection; 2
overheads? 1
p); 1
motivate 1
part. 1
non-synchronized 2
park. 2
nearly-endless 1
restored. 1
potentially-starving) 1
resistance 1
progress. 3
page(s) 1
others 14
middle, 1
passes 5
pointer, 10
planet 1
possible, 14
properties; 1
rip 1
myargs[2] 2
percentage, 1
rolls. 1
precisely 2
quoting 1
returning. 1
races 4
placed. 1
road, 1
open, 1
processors, 9
role 11
overwriting 2
p3.c 3
moustache 1
peaches, 1
non-zero 3
newfile.txt. 1
retains 1
node 12
pressure 5
resource) 2
project, 2
paged 1
our-selves 1
minds 1
peach. 6
people. 1
plus 11
power 8
policies, 7
rules 6
mystery 1
perl). 1
says: 1
preempts 1
r-x-rw--r-x-r-x-r-x-r-x-rw--- 1
revenge 1
raises 8
policies? 1
operational 1
pthread_mutex_lock(&q->tail_lock); 2
producer/consumer 9
roused 2
own, 3
page). 1
peek 1
nondeterminism, 1
particularly 27
retry 6
not), 3
primarily 3
results? 2
ps 2
parameter 6
minimizing 1
overall 9
perfection 1
must 152
per-process 12
proportion, 1
precautions 2
poorly? 1
rvals->x 2
news 2
permanent 1
scales? 2
previously. 2
re-acquire 1
right. 5
reac-quiring 1
practice, 1
others) 2
ptr, 3
producer; 1
routine, 10
p1.c. 1
pages); 1
pending 1
noticeably. 2
partner 1
running), 1
noticed 5
primitive 9
resume 8
re-referenced, 1
peach 4
miss? 1
overlays 1
periodic 1
n; 1
perfect... 2
preemptive, 1
positivity 1
satisfies 1
pthread 57
persons 1
scheduler; 2
printf(), 1
reads” 1
rvals->y 2
reasons, 6
prevents 3
no 140
out"); 1
quite 114
promise 1
rule: 2
p3.c, 1
parameters 9
now-sleeping 2
people 28
per-CPU 5
runs. 11
observed, 1
principles 5
revolutionary. 1
reach 2
periodically 9
mjtsai.com/blog/2015/12/16/osspinlock 2
owns. 1
periodically. 1
nanoseconds. 3
present, 2
prac-tice, 1
perhaps 39
saw 12
perspective 8
scope 2
priority. 8
referenced; 1
say? 1
received 3
printf("(%d) 2
refers 9
python 1
p. 1
quote: 2
prone; 2
runnable; 2
parameters, 5
peaches; 1
objects. 1
persistence 1
performs. 2
rw- 1
obtained 1
priority). 1
ruins 2
ready. 1
pigs. 1
monitors 5
p4.c 2
philosophy 1
networks, 1
prevented 5
prefer 2
persistence. 2
saying 4
pessimal, 1
scorned, 1
problem? 2
references, 1
says, 1
none.” 2
procedure. 1
relocation.py 1
quickly 21
randomness. 1
pages. 28
proportionality 1
rw45 1
part) 1
piece. 3
obviously, 1
picking 6
permissions 1
scale. 1
ocean 1
probabilistically 2
run-time 7
receive 11
pipes 4
moreover, 1
page-frame 1
pointer. 3
no, 1
presumably 4
print 25
place. 16
scheduler, 20
segmentation, 4
problems, 12
register) 2
scheduled; 1
point 39
not, 14
removing 8
randomly-generated 3
range; 1
paid 1
proves 1
same, 3
processes 107
passed 18
plain 2
oh! 1
pieces, 5
picture 5
scientist 1
on) 1
proc-struct(B) 1
safer 2
recommended 1
ple 1
moved 6
panacea, 1
pop 1
non-computer-types 1
prevent 8
printf("%s\n", 3
ploticus 1
second-chance 1
pointed 15
problem” 1
rele-vant 1
screen, 1
pre-initialized 1
sense. 11
requesting 1
re-check 3
re-initialized. 1
pattern 5
purify 1
saved? 2
producers 3
paths 4
pointers 5
on; 1
piece” 1
plenty 3
operation), 2
search 20
process: 2
scalability 2
regions, 2
pleasure 1
much. 6
passing 12
popular, 1
normal 11
primary 9
sensitive 1
secretly 3
pointers? 2
process. 69
producer, 2
relocated; 1
obey. 1
precious 2
sequences 5
resources, 4
reacts 1
read, 7
pause 2
rage 3
sbrk 3
program? 6
peach? 1
postulates 1
operator, 2
set 146
pmap. 1
opposites 1
second: 1
scanning 3
programs. 25
scheduled 11
multipro-gramming 1
patience, 1
popular-sized 1
notes 5
printf() 1
pointer 55
sent 3
see. 4
policies; 1
out 181
process’s 18
remove 10
obtain 10
presented 8
restricted. 1
realization 1
reap 1
percentage 5
randomization 3
schedulers 14
programmer; 4
per-futex 2
pioneers 4
powerful 21
set-top 1
optimizations, 3
policy, 12
sections. 4
regs(A) 3
proliferation; 1
scoff 1
mutex_lock 2
placed, 1
now), 1
possible. 14
prioritizes 1
positively) 3
sequential” 1
pthread_mutex_init(&lock, 2
poorly. 2
outrage! 1
seen 31
replies: 1
properties 8
obviates 1
prevention 2
return-oriented 1
reason: 3
performance, 14
rates 1
reason 32
scheduling, 15
programs, 16
performance. 35
pre-WWII 1
optional 2
place 46
sharing 30
possible; 2
semaphores” 1
repair 3
promotes 2
scratched 2
myargs[0] 2
possibly 1
null-pointer 2
pragmatists 1
set. 2
possible 31
problems 55
process-run.py, 1
positive 4
packet 3
series 9
responds 2
occurs. 3
printf("%p\n", 1
pthread_mutex_t 22
returning) 2
recourse: 2
period; 1
re-accessed 1
rechecks 2
seasoned 1
project 4
place; 1
preferring 1
ordering, 2
placement, 1
out. 11
possibly-failing 2
semi-nal 1
replacements 2
proofs 1
segmenting 1
mythread(), 2
potentially 7
null. 2
precisely? 1
sharing. 3
preemptive 2
q->tail->next 2
produced. 1
practical 8
page; 5
set” 2
responsive 1
priorities 5
pthread_mutex_unlock(&q->head_lock); 4
right) 1
placing 7
reader, 1
references 28
recorded 3
secretary 2
pthread_mutex_lock(&c->llock[cpu]); 2
players 1
presents 7
shouldn’t 5
poorly 3
p6 5
posterity) 2
separation 5
reset 3
senses 1
nanoseconds 1
provide 65
premature 2
preemption, 2
shouldn’t. 2
quickly. 5
producer 26
prepared 1
present 36
shooting 1
restricting 1
programmer. 5
queue_init(m->q); 2
routines. 1
plans 1
realizes 3
relinquishing 2
recourse 1
paper 85
security: 1
pthread_mutex_lock(pthread_mutex_t 2
number 198
pointer? 1
presumes 1
poor 10
on 719
predate 1
page) 4
precisely, 1
servers, 2
resource; 1
serve, 1
nature, 2
pthread_create(..., 4
premise 1
prefetching 2
presence 11
radical 2
professor! 2
processors 16
printf("parent: 6
simplest: 2
return. 1
progressed, 2
rage. 1
runaway 1
policy. 4
recall, 1
remembers 2
redoing 2
parent. 4
segment? 1
pthread_mutex_unlock(&L->lock); 12
segments, 5
signal. 3
principle. 1
powerful, 2
operation, 9
preserving 1
page-fault 3
prematurely-optimized 1
similarly 3
restricts 1
simple, 9
necessary. 1
sidebar 2
prepare 1
put 41
printf("this 1
rc; 4
production, 1
priorityadjustment 1
simplifying 3
rewrite, 2
program, 58
prohibitively 2
raising 3
runs? 2
portions 7
rechecking, 2
remove_min(queue); 1
referencing 1
past 6
objectives; 1
questions, 3
services. 1
signals; 1
privileged) 2
powers 1
opportunity 1
pressure, 2
paper. 1
printf("main: 8
service 11
retain 1
size; 6
needs, 2
signal/wakeup 1
primer 1
question! 1
priori 3
readable 1
productive. 1
probability 2
sketched 1
scare 1
proofing 1
projects 3
ran, 1
sane 2
preserved. 2
record 6
responsiveness; 1
regards 2
penalize 1
observes 2
r-x 5
several 1
simulator, 1
proc 5
pre-specified 2
order! 1
pretends 1
par-allel, 1
problem”, 1
settle 1
revolutionized 1
slowly, 4
non-concurrent 1
simultaneously, 1
printf("%s: 4
questions. 3
proceeds 4
real, 2
program; 3
processors. 3
slight 2
scorned 1
pros 1
promoted 1
random, 1
scenarios 2
printf("%d\n", 7
referenced, 1
retry, 1
reliability. 2
person! 1
occurs: 1
re-referenced 2
since 7
sleeps 4
proc_state 2
output, 2
primitive, 2
prints 41
partition, 1
short-lived 2
programmer 12
rightly 2
proportion 5
noticing 1
sizes, 2
product. 1
read(), 1
professional 1
realized 8
prohibitive. 3
product 1
slightly; 1
screen. 3
pursue 1
protected 4
randomized 2
sched 7
privacy 1
regained 2
rewrite 8
relocating 1
perspective. 2
off. 1
read-only, 2
on, 11
process), 3
outside 4
priorities; 1
proactively. 1
patterns), 1
sign 3
someone 3
routine1, 1
provisions 1
null 2
slumber 2
professor, 1
real-world 2
progress 8
rearranging 1
protection, 2
program) 1
sneaky 2
searches 3
space 278
question, 1
specified 8
range 7
schedule: 2
problematic, 1
region; 1
right); 2
request? 1
pid; 1
really. 1
size). 2
once); 1
profit 1
overstate 1
proceeding 1
processes. 22
phone, 1
produces 7
pure 2
run. 22
obtaining 4
small! 1
program). 2
reboot. 1
programmers 13
sometimes 73
reasonably 3
question; 1
progress, 1
segment; 4
software 17
pthread_mutex_lock(&q->head_lock); 2
queue? 1
split 9
rarely-used 1
scream, 2
problems: 2
relaxed: 1
rogue 1
requests, 2
places 6
rearrange 2
skip-ping 1
pthread_mutex_lock(&L->lock); 8
oversubscribed; 1
processes) 1
signals 13
property 10
purpose. 2
piece 36
runs; 3
occur? 2
operating 151
something, 2
proportional-share, 1
recognizes 1
programming, 2
sooner 1
reclaims 1
queue. 12
protect 11
segmentation 26
solution. 8
pthread_mutex_timedlock(pthread_mutex_t 2
src); 3
queues, 12
read() 1
seconds!). 2
process? 4
remedied 2
research; 1
saves 9
platforms 2
reassurance; 1
sleep-ing. 1
publicized) 1
p2; 5
processor 28
prot 8
queue). 5
place! 2
rv; 2
similar 45
occurs, 14
p3.c), 1
protection. 3
reduction, 1
proportions 1
space-management 1
space. 45
references. 2
queue_t; 2
pthread_mutex_lock(mutex); 2
sensed, 2
soon, 1
put() 4
stack-allocated 2
raised, 2
reader: 2
secure 3
protocol, 1
remind 1
reside, 1
say), 2
point. 7
reboot, 1
slogan. 1
quantum) 1
packing 2
programs5 1
protective 1
quote. 4
platforms. 1
rvals; 2
similarly; 2
satisfy 9
refine 3
off 30
provably 1
page, 28
spaces). 1
sparse, 1
region, 5
queues; 1
purely 1
share; 1
sorry, 1
puzzle 2
starting 14
recent, 1
semantics 8
pthread.h 2
real 53
repeating 1
resource 14
scale: 1
pointer). 2
regions 11
sounded 1
rabbit 1
protocols 2
ran; 1
prompt> 37
pleasant. 1
pthread_attr_t 2
simplest 13
sbrk() 1
rent 1
offered 1
question). 1
page-not-present 1
spawn() 1
relates 3
re-reads 1
purposes 2
reader 7
stack 79
space? 6
queue_add(m->q, 4
starve). 1
reduction 2
sequence. 2
pthread_cond_t 3
recall1 1
resort 1
restored 4
scary 1
points; 1
relaxation 1
space-efficient, 1
raise 10
pthread_cond_wait(pthread_cond_t 3
reason, 8
protocol. 4
policies. 7
pthread_mutex_init(&q->tail_lock, 2
sinister 1
scheduler); 2
replacement) 1
often? 1
ran. 1
page-sized 4
species. 1
relocation 6
short-circuiting 2
ran 15
realloc() 4
stack”! 1
spaces, 5
rare 2
stems 1
region) 1
short). 1
pthread_create(pthread_t 2
redirection, 1
responsabilit 1
resulted 2
scenario. 4
reload 1
speeds. 1
policies 35
random; 1
pthread_create(&p, 2
recently. 2
protocols; 1
preempted 4
pthread_mutex_unlock(&c->glock); 4
sizeof(PDE)). 1
school; 1
research, 4
page 635
restricted 7
random. 1
pal, 2
spend 10
shortcomings. 1
replacement 30
referenced 6
straightforward; 1
random 37
space” 1
re3 1
strdup("wc"); 2
registers), 2
shorter 6
pushing 2
referring 2
returns), 1
result 30
region 25
remainder 1
spinning, 2
pollutes 1
randomizes 1
pthread_mutex_init(&c->glock, 2
pthread_mutex_unlock(&lock); 2
refer 27
principle 6
releases 14
slow, 8
section. 34
painful. 1
opened 1
result: 2
rarely 1
parameterize 1
simulator. 2
register. 4
requires 25
stuck, 1
spin 79
rc, 3
stack), 2
read. 6
stream 7
relegated 2
signaled 1
race): 2
reused 1
scheduler.py, 1
return? 2
register? 2
request. 7
state1 1
pragmatic 1
randomly-accessed. 1
pthread_mutex_unlock(&q->tail_lock); 2
published 4
publishing 2
printf("%d 4
reliably 3
snippet. 1
sections; 4
passion 1
operating-system 3
returning; 1
rarely-taken 2
parent? 1
simultaneously 11
registers; 4
root, 1
subset 3
spin-waiting 4
re-acquires 4
starvation 3
readability 1
structure; 2
readily 5
similarity 1
readable. 1
ridiculously 1
school: 2
returns, 7
registers, 10
requests; 1
stop, 1
predates 1
push 2
rapidly 1
printf("returned 4
queue 55
resource, 4
soon-to-be-running 1
sentence. 2
pays 1
read 91
origins 1
right; 1
react 1
patience 2
routines 41
relatively-slow 1
rude 1
released. 6
stand 1
relocated 6
statistics 4
repeat, 1
talk 10
ready), 2
simplicity 7
readonly 1
rights). 1
scientist, 1
reveal 1
regs(B) 3
researchers 8
strike 1
pri- 1
queue; 5
rate) 2
privileged; 2
realizing 1
restored, 1
sorted 1
separa-tion 1
penalty 2
reasonable 9
outcome? 5
reads 10
perfect 7
sincerely 1
run-and-yield 2
substantial, 2
run; 1
re-energized 1
store-conditional, 4
renders 1
stopped, 1
repeating. 1
testand-set 1
reasonable. 3
singlequeue 1
reasonably. 1
round 2
seamlessly 1
rid 1
relies 1
resizing, 2
primitives, 3
structures. 22
random-access 1
rc 13
red-black 4
reused, 1
program. 46
server, 1
source 23
performance”, 1
reduced 5
p1.c) 1
permission 1
single, 1
sad! 1
surprising 7
runtime, 2
reaching 1
reference 57
stream. 2
representation 1
streams, 1
reproduced 1
themselves, 1
recall). 1
size, 12
reboots 1
shells). 1
robust 9
relinquish 5
restores 4
priorities. 1
studied 5
runs 83
ranges 1
rc_wait, 2
redirects 1
routine. 2
programs; 3
server-based 2
sparsely-used 2
perspectives 1
speed 12
pains 1
persists, 1
situation. 2
say, 5
switches, 2
rvals->y); 2
ready, 3
structure) 1
referred 27
reside). 1
stride 17
required, 3
think. 2
recognized 1
sizeof(int); 1
relatively-short 1
shipping 2
rwrw- 1
request; 1
return-to-libc 1
proc-struct(A) 1
sub-job 3
rv 4
rdtsc 3
re-checks 4
reflect 4
rudimentary 4
program’s 9
serviced. 2
references: 1
peterson.s, 2
register 75
phase, 4
personally 2
sizes 8
sense; 5
swtch(struct 1
section; 2
symbol 3
sees 4
relevant. 2
struction 1
tickets), 1
research 18
reduced. 2
returns 61
sleep. 8
relocation. 2
shrinks 1
rw— 2
requirements 1
returned. 2
process-run.py 1
subjunctive 1
sat 2
realistic 3
reaction 2
run? 8
promote 1
sits 3
register). 1
src) 1
passive 2
relaxed 2
photos 1
physical, 1
sleeping). 1
students 3
sequence 24
recent 16
system1 1
services, 1
relocate 5
structure: 2
time-slice 5
suffer 8
register-level 1
rise 2
sleeping/waking 2
replacement. 4
similarly, 3
safe 6
researcher 2
returnsfrom-trap, 1
processing; 1
subsections 1
saves/restores 1
rebooted, 1
pulled 1
ready 33
sizeof(PDE)) 1
runs, 21
relative 3
stack; 3
relax 10
relinquishes 1
standard 22
slowed 1
success! 4
setpark(). 2
refer- 1
table. 26
remains 11
research.microsoft.com/ 2
short 29
tmp; 7
suggested 8
remarkably 1
program 321
slice). 1
physical 236
requested, 2
simplicity; 2
scalability. 1
restore 17
room: 1
suc-cessfully 1
saving 6
reg/PC 1
q->tail 4
really, 4
sketch/review 1
sleeping, 3
path. 3
released 10
relocation, 5
pipe; 1
standards/SPARCV9.pdf. 1
small-scale 1
sure; 1
sets: 2
regard, 2
tables; 1
resize; 2
remember 20
single-threaded 4
to) 1
superpages, 1
routed 3
renewed 1
projects. 1
sloppy 4
points 15
resident 2
scheduled. 2
resumes 5
routine1 1
scale 4
regions) 1
question. 7
replacing 3
satisfaction, 1
switch 62
scheduler 110
remainder. 1
rely 5
single 203
stated, 2
placed 24
perform 70
swap? 1
shmget() 1
registers) 2
thank 2
respectively. 2
so, 37
repeatedly 15
sit 6
too: 2
support. 9
rvalue); 2
requests. 6
proofs” 1
small. 1
preempt 2
rest 18
reuse 1
rules, 1
schemes 5
register; 2
queues. 2
reproduce, 1
scale, 1
slices 10
synchroniza-tions 1
snippet 9
reside) 1
remain 8
sitting 4
plays 2
stored 15
philosophical, 1
system), 3
short) 5
thinking: 2
related 18
result. 11
somehow, 1
replaces 7
sizeof(int)); 2
tool. 1
surprise. 1
reside. 1
saved 11
proper 14
smart 13
previous 19
results, 4
root 3
rvals->x, 2
school 2
release? 2
reliable 6
request, 10
scenario 4
searched 1
solidify 1
synchronization 26
restart 5
replace 9
sketch 3
poorly-programmed) 1
pioneered 4
table2 1
six-level 1
thoughtful, 1
structure 73
relatively 16
rosy 1
reports 2
tragically 2
required. 5
rest, 1
slice 36
scenarios, 2
proponents 1
space; 11
previously; 2
retries 4
runtime 2
rw59 1
science. 2
something 132
raised. 1
repeats, 1
randomly 4
scheduler), 1
solve: 1
segment, 14
system.” 1
return-from-trap 17
replacement, 3
slab 5
pleasure: 1
procedure 12
tables? 1
sleep 30
thoughts 5
sub-jobs, 1
release 23
suspicion. 2
small 61
running, 30
resides 9
resuming 1
scripting 1
slightly 19
provides, 1
spawning 1
printf("hello, 6
safely 3
question 27
returning 27
scratch 3
space-usage 1
requester), 1
replaced 2
ranging 1
scheduling. 9
sometime 1
service. 3
systems: 5
return-to-libc. 1
sets 27
sleep) 1
point1 1
processing, 3
tens 2
threshold) 2
succeeded, 2
switching; 1
relevant 13
transistors 2
snooping, 1
runtimei 1
return-tolibc 1
security; 2
response 31
small). 3
speculation 2
priority; 1
sake 5
saying, 1
queue_t 2
second, 6
sparse 7
residing 2
repository 1
right 42
school, 2
space). 3
rather 29
taken? 1
report 9
road” 1
shape. 1
slot 7
popl 1
properly, 1
test-and-set! 1
tmp->next; 2
successfully, 1
t). 2
removes 1
transparency2 1
so). 1
safe. 2
returning, 2
seemed 1
retrospective 3
stages 1
smaller 14
scheduled3 1
problem, 24
scalable 15
queues 6
sections 6
spatial 7
rethink 1
required? 2
safe? 2
searching 4
spaceshared 1
readers 1
tasks, 1
rough 3
showing 8
small) 1
requests 28
posed 5
proportional 3
test-and-set.s 2
topmost 7
switch? 2
tailor 1
repeat 1
trap), 1
software. 2
said, 10
right, 3
revisited 1
stops. 1
snapshot 1
scourge, 2
segment 56
processing 4
second; 1
rate, 3
seek 2
src.opensolaris.org/source/xref/ 2
returned, 2
reserved 6
scheduler? 5
section? 4
spear-headed 1
reading, 1
tcsh 2
routines, 5
similar. 2
require? 1
possibility 5
possible: 1
them, 20
tricky 10
technical 3
represented 3
traverse 1
somewhere... 1
roam 1
say 29
system, 65
roughly 24
run), 2
se, 2
so. 15
so 197
semantics, 5
programmers. 2
see: 2
re-create 1
segment), 3
rewrites 1
resided 1
schedulers, 1
sections, 2
started, 1
reality, 1
start 58
technique, 2
scalable. 5
size); 2
reserve 4
proportional-share 6
power. 1
tend 7
typical 26
required 15
true, 3
soon-to-be-faulted-in 1
round-robin 11
scaling, 1
they 149
straightforward, 2
table) 2
rvalue; 2
seconds), 3
rx 4
solving 4
sequence: 1
programming: 2
semaphores 1
re-duces 1
sending 1
right). 2
responsibility 6
secondchance 1
see). 1
stash 1
seeds 11
starving 1
technologies. 1
scan 5
skill 2
provided, 2
reside 11
private 18
terms 10
unanswered: 1
probably 32
processor; 5
understanding 19
unallocated 2
uncommon 2
understandable 2
undertaken; 1
unfortunately, 14
uniform, 1
unlock 13
run: 3
scenes, 2
strdup("p4.c"); 1
running. 23
solutions 11
security, 1
thing 38
second. 5
somebody 5
setassociativity; 1
pronounced 1
server 11
recommending 2
shorter! 2
responsibility!” 1
see! 2
statement. 2
reasoning 1
sense 26
states: 1
scheduling? 1
software4 1
q->head; 2
responsive. 1
this: 49
running; 3
properties. 1
undo 4
than 149
specifics 1
student 3
schedule 14
take, 3
run 374
spin-lock 2
until 52
stack: 3
semaphore 1
timespec 2
section), 2
somehow 6
seem 7
properly 15
share 36
recursive 1
provided 20
result! 2
storage. 1
segments. 3
recently 6
setting 15
store-conditional 7
segmentation). 2
some_function(char 1
segmentation.py 5
resumed, 1
thousand, 1
satisfactory 1
proportions, 1
unimaginatively 1
pthread_t 14
spins, 2
study. 2
technology-driven 1
scheduler. 10
scenarios. 1
save 27
update) 1
tell 28
services 1
transforming 3
setaffinity() 1
sometimes, 2
send 13
she’ll 2
shortest, 1
redirection 2
pthread_mutex_init(&q->head_lock, 2
results. 6
string, 2
ship 1
refers? 1
shift 1
stores. 1
queued 1
sometimes) 2
self; 2
retaining 3
three: 1
satisfied 1
that: 3
pthreads 8
stale 1
stuff? 1
updates 33
scheduler’s 1
schedule(curr); 1
scaling. 1
standpoint, 1
upper 1
tennis 1
set-it-to-1 2
transistors. 1
stack, 18
sense, 6
simple) 1
sibling 1
reduce 15
pthread_mutex_lock(&lock); 2
shared 67
structures? 1
shoppers 1
registers. 3
short-running 4
successful. 1
quick, 1
sequence, 8
soon 25
returns. 3
ticket. 2
scaling; 2
purchase 1
starvation. 7
success. 3
us. 4
secretary; 1
return 169
scheme 6
seconds 9
starve; 1
urging 1
text, 2
shell, 5
transparency 1
states. 1
threads 197
serious 10
simplicity, 16
similarly-named 2
reference) 1
registers 48
shells, 1
strung 1
remaining, 1
remedy 2
successfully) 1
qu’une 1
serve 2
sorry 1
shows 94
risen 2
tickets; 1
scenarios), 1
starved 1
race 28
surprisingly, 6
usability 1
seemingly 12
routinecalling 1
script 2
seed. 1
stored? 1
used; 2
structures, 13
statistics). 1
tick 1
servers 1
simulation. 1
simpler, 2
pull 2
represent 5
shuts 1
sudden 1
short. 3
reply: 1
summary 5
race. 4
two 241
shade 1
source. 1
single-queue 4
run, 24
steal 3
range. 1
suspect 1
too 85
second 78
use) 10
segment: 10
runnable) 1
seeds; 1
shown), 1
users: 1
subject 4
store), 3
section 55
simple: 39
servicing 5
situations 3
simulated 1
queuingbased 1
required). 1
single-CPU 2
susceptible 3
shot 2
responsible 6
superuser 3
ravages 1
two-fold. 1
survey 16
spaces 20
six 3
store, 2
re-awaken 1
swath 1
toolbars, 1
see? 6
usual, 3
segmentation? 1
running? 4
sentence: 1
valuable 3
subsystems. 1
strcpy(dest_buffer, 1
tick-by-tick 1
times) 1
simulate 3
setting, 1
sizeof(PTE)) 7
slower, 1
quick 4
restarts 1
skip 5
switch() 3
running 227
rich 2
signal 28
rc_wait 3
shared. 1
ubiquitous 2
swaps 3
spectrum, 1
sleep; 4
strict 1
reaches 2
t(B) 1
topics 5
segmentation. 3
v 2
segmentation” 1
sage 1
virtually 9
sufficient 2
strdup 1
semantics. 2
topic, 4
size) 5
severe 3
that 1398
slow. 3
solve? 1
quickly; 3
restricted? 1
sleeping 5
swtch: 1
rwx 4
robin, 2
re-place 1
side 4
unexpectedly 1
system) 1
should 274
speeds; 1
software) 2
simply 128
stride. 1
react, 1
table? 3
trade-off: 1
segmented 4
valgrind? 1
sets. 2
says 2
waiter 2
summarizes 1
strengths 2
sensible 4
trade-offs 5
slides 1
showed 4
things); 1
slowly) 1
sort 6
rarely. 2
return-fromtrap 3
so), 1
table; 5
said 43
simulation 7
unless 1
routine 60
really 52
system-call 5
splits 1
solution). 1
shown 35
slice. 1
read? 2
tables, 8
transaction, 2
study 52
self)) 2
varies, 2
show, 1
sbrk. 1
web. 1
supports 5
strongly 5
sentence 1
tradeoff 1
slow? 1
signal, 1
thinks 7
small: 3
spaces) 1
rears 1
revert 1
software, 4
teaching 1
satisfying 2
sleep, 13
unlock. 4
sad. 3
reasons. 10
task; 3
spread 9
shudder 1
slices; 2
signal() 4
talents, 1
translated 3
success 9
shifting 1
wasted. 3
simplify 1
scenario, 3
worked 6
strut 2
switching 17
separate 17
transition 6
small/random; 2
signaling. 1
threadID, 2
sparsely 1
sparc/ 2
specify 10
rule 4
software-based 1
them), 2
scaling 2
sleeping. 4
unmapped 1
recency 1
thankfully, 1
stack) 7
stipulated 1
stopped 2
smarter 1
significant 4
target 6
transparent 4
suggested. 1
short, 3
weird; 1
same 145
size=100); 1
schedulers. 5
written? 2
subsystems 1
tables), 1
serviced 4
treasure 1
snuck 1
tickets: 1
reclaim 3
spin-waiting. 2
speculation, 2
running). 2
solution: 1
scheduling; 4
some 505
slice), 2
used) 1
regains 3
those 84
stored. 1
solutions. 4
simple 196
single-processor 5
tcsh), 1
trap; 2
suitable 2
shortest 2
them 99
reasons 6
willing 3
saying; 1
sizeof(), 1
schedules 4
x[10]; 1
suggest 3
targeted 1
shortly 1
trickier. 1
sources 6
tmp 8
recursively 1
spin. 4
spring 1
sad 4
solve. 1
scheme, 1
soon-to-be-exec’d 1
slow 15
user; 3
remains: 2
strategy, 2
thought 17
sources: 1
simpler. 1
splitting 3
team 2
turn) 2
switching) 1
shutdown 1
then? 2
reclaiming 1
woke 1
snooping 1
screen 1
yet: 2
supervisor 1
tell? 2
simplicity. 3
trouble. 3
scheduling 102
to. 4
specifically, 13
reference. 8
tools 16
step). 1
sanity 1
sploitfun.wordpress.com/ 1
scientific 1
slowly; 1
sophisticated 13
v); 2
remember: 1
streams 2
tickets, 4
site: 2
simply, 4
stance 1
ten 7
tandem 5
side). 2
thr 7
turnaround 30
redirected 2
solved 2
wonderful 11
seeds, 2
yourself2! 1
surprising, 1
textbook 1
site 1
twenty 1
scribble 2
speeds 4
stateful 2
refined 5
too” 1
strategy 6
scans 1
sprawling 1
second-level 3
small, 7
soup.” 1
victim. 1
reproduce 1
timeline, 1
structure. 16
slices, 2
skimmed 1
strictly 2
test-and-set. 4
signal?? 1
techniques 24
thr_join() 3
turned 2
reference, 2
soon. 1
segments: 1
workloads 14
zero, 3
surround 2
that? 7
type) 1
size: 16
se. 1
speedup. 1
statements 1
refuses 1
stack. 17
reject 4
static 21
security 21
step, 5
section, 24
specific. 1
vmalloc, 1
structures; 2
vruntime 10
smaller? 1
skips 1
stringent 1
want 50
terrible 3
signaling 17
thumb. 1
understand: 1
region). 1
sorry. 1
select 4
zeroing. 2
suspend 2
thesis 1
works 54
unasked 1
sizeof(node_t); 1
seconds). 1
transparent” 1
standpoint 1
sptr. 1
relate 1
small-sized 1
sense: 2
segment. 8
serves 6
style. 1
request 35
somewhere 4
slower. 3
theory, 1
structures: 2
still 59
way) 1
simpler 6
test-and-set 15
tight. 1
remain? 1
space! 2
silently, 2
spaces. 7
specialized 4
simulator 16
’03. 1
strdup() 1
t. 2
thorough 2
world. 3
uncaught, 1
slabs 1
security. 1
truth: 2
status 5
remains. 1
repeatedly. 2
smallest 5
require 10
segments; 1
set, 3
subdirectory 2
resources. 5
speeding 2
thermodynamics 1
slowly 12
stub 1
strategy), 2
simplicity), 1
wc 11
test-and-set.s? 2
time? 9
remains, 1
times, 10
spends 1
situation 9
’Approximate’, 2
student, 3
table: 3
thread-local 2
under- 1
slots 7
undergraduate 4
segments 22
started 11
typedef 33
sneaks 2
spinning. 2
software-managed 5
segment’s 1
severe. 1
— 131
restrictions 1
splintering 1
think) 1
sockets. 2
suffers 5
stuff 8
sure 56
sizes. 3
winning 7
there! 1
users 27
remembering. 2
value), 3
spins 11
sixteen 1
“010101”, 1
succeeded. 1
terminating 5
thread-safe, 2
space) 4
strcpy(dst, 4
underlies 2
selection 1
starvation, 1
unfair, 1
resides. 3
stage 3
soon-to-be-run 1
spans 1
sharing, 3
’94. 1
returned 15
spuriously 2
third, 2
software? 1
supports. 1
subtract 1
system: 6
slice, 7
worked. 1
together, 3
repeatedly, 3
variable, 8
splits. 1
variable-sized 7
“Guide 2
success: 2
terminology) 1
stacks, 3
stronghold 1
unit”, 2
thus, 54
sense?) 1
stealing 1
structures 59
restoring 5
serviced, 1
states 15
stays 4
shell 12
’Precise’), 2
right”, 1
starve: 1
threats, 1
sounds. 1
surfing 1
suddenly 2
table). 3
these 222
slower 6
they? 2
tolerate. 1
replace? 3
skills. 2
such 274
vectors, 1
“Hoare” 1
thread!) 2
starting) 1
unlock? 2
ticket, 2
setpark(); 2
store-conditional) 1
uniformly, 1
subtleties 2
speculative 1
show 24
resulting 24
stopping 4
shrink) 1
“Evaluation 1
rw 6
state. 10
three-instruction 3
sparked 3
switch, 8
spent 7
taken, 5
worker 6
smaller, 1
things, 6
trace? 2
report? 4
slow; 2
stack). 4
supposed 4
view). 1
“She’s 1
threads). 2
starve 2
user, 3
time! 2
sharing: 1
stride, 1
unlock(&mutex); 2
unpark 2
starvation: 1
simplified; 1
reusing 1
strange 8
“Man-Computer 1
simple. 10
scales. 1
steps 3
timeout 4
sz; 1
swpd 1
spurious 2
talks 1
working-set 1
solutions, 3
thing” 1
requests? 2
software), 1
some, 2
stands 1
symbiotic 1
visualization 1
“Survey 1
throughput?) 1
thrown 1
valid; 1
times. 7
shells; 1
times 40
swapoff. 1
unrealistic. 1
stated 2
single-entry 2
richer 1
right? 8
struct 49
simulations 4
scientists 4
stitch 1
timing? 1
taking 11
storeconditional) 1
task, 5
wrap 2
solves 7
this! 2
thousands 10
translate 19
spell 1
starts, 3
“hello”; 1
statement 3
table 175
tirelessly 2
value. 12
together. 5
shrink). 1
string 12
tn 2
symbol. 1
up, 12
situations. 1
stride) 1
room 17
“Program 1
stuck; 3
slip 1
void 153
scream. 1
storeconditional. 1
tip: 1
tcsh, 2
streaming 2
tends 5
wreak 1
something. 2
research. 1
translations, 6
states, 1
threads. 19
“second-system 1
state, 13
stolen 1
tempting 4
system. 57
vi, 1
traces. 2
similar), 1
studying 9
to? 2
system? 4
update. 1
sizeof() 7
slots, 3
rotational 1
“There 1
study, 3
slowly. 2
vulnerabilities 2
strange; 1
see, 15
tough 2
test? 2
strings 1
testing 2
wrote) 1
stuck 16
resides, 1
resources 6
think 66
stores 16
“walk” 1
step-by-step 2
terminal, 1
storage 12
systems; 9
straightforward: 6
track; 1
simplified 2
super-linear 1
together 12
upper-level 2
stronger 2
snatch 1
systems, 49
seconds. 3
“Volume 4
studying. 1
softwaremanaged 1
studies. 1
wait(), 6
segmentation; 2
translated), 2
thanked 1
soon-to-be-executing 4
x-axis 1
succeed. 3
to 4068
threshold, 2
true. 3
respond 1
those; 1
string) 2
test-and-set.s. 2
vmstat, 1
store 24
system’s 3
stringing 1
translations. 6
software; 1
surface. 1
traces 3
stronglytyped, 1
so? 5
system” 1
“Why 2
succeeded 4
solely 1
warm-start 1
seminal 1
waste. 7
served 3
that. 9
sounds 6
y-axis? 1
suite 1
together! 1
tuned. 2
throughout 13
return; 10
thus: 1
used 175
subsequently, 1
tests), 1
streams. 1
see 272
strlen(), 1
trapped 2
taken 16
somewhere). 1
surprise: 1
stuff, 1
space), 4
translations 22
tables) 2
“looping 1
success, 5
solution; 1
successfully 5
subsequent 24
way! 1
space, 50
that’s 8
special; 1
yourself! 3
touch 4
switches 14
type, 4
times). 2
root). 1
to; 1
was 188
user-mode 3
substituted 1
thing. 2
successful 5
seems 12
suffering, 1
tread 1
takes; 1
sorting 1
tree 15
subsequently 4
trapframe 1
special 22
take? 2
“out 1
traversals 2
suffice 3
subsystem 4
ways. 11
shaded 1
species, 1
the?? 1
spin-wait 10
× 1
translations! 1
tail 5
typeset 2
tip, 4
routine), 4
too, 2
way: 5
v; 2
sub-microsecond 1
things; 3
surrounding 2
sends 3
suggests 2
systems? 2
space: 2
task 16
tricks 2
tests 5
specification 1
trust 14
takes, 1
“real-world” 2
suit 1
subtle 1
simultaneous 1
size. 7
we’ve 21
specifically 6
ticket; 2
start. 1
’d’ 1
trap, 3
talking 5
trees 4
tmp->value 2
running: 1
while2 1
tool 15
variablesized, 1
supply 1
thinking, 2
survive, 1
sense? 1
setup, 2
terminate. 3
specific 21
terms, 3
tricky: 1
them) 1
tech 1
themselves). 1
“steal” 1
“tried 1
succeeds 3
tries 41
turning 9
sizes; 2
specified, 1
tlb.c, 1
state; 2
“Exterminator: 1
underneath 2
task). 2
underly 1
transactions 1
runs...) 1
tracked 2
variants) 1
sure. 2
thrashing 2
switch. 4
sum 3
short-lived, 1
spin, 2
type. 1
text. 1
starts 25
tells 11
there? 4
subverted 1
this? 5
super 2
type 73
typing, 1
sloth” 1
speed-of-light 1
step 2
topic 18
“Inside 3
undoes 1
technology. 1
undertake 1
translations). 1
sampling 2
tract 1
virtualization, 7
surely) 1
threat 1
synchronized 10
surprising? 2
should. 1
when 480
surprisingly!) 1
understanding: 2
spinning 27
theme 6
temporal 7
would 200
success; 1
thread? 2
surprised. 2
state 73
unmasks 2
unpark(threadID) 2
solid-state 1
spending 3
store-conditional. 3
totaltickets); 1
“Intel 4
uniform. 1
termination 4
units; 4
type). 1
savings 9
translated, 1
systems), 1
threshold; 4
system; 8
swapping, 1
signal(). 1
woken. 2
way 97
switches; 1
unified, 1
spot 2
there; 5
terrific, 1
wreak1 1
survive 2
systems). 1
t; 2
threads, 38
unpack 2
updated 8
solution, 10
splitting: 1
sub-sequent 1
“Is 1
unexpected. 2
then; 1
upon, 1
understand! 2
say. 2
treating 2
try 64
tail_lock; 2
t, 2
time-sharing 7
target. 1
signals, 2
www.gnu.org/gnu/manifesto.html. 1
x86, 8
switching), 1
unknown 1
thereby 1
there, 2
stop 21
statement, 1
swapped 12
stay 3
thread” 1
write 63
unpark() 2
valid). 1
sponse 1
solve 20
substitute 3
“Segmented 1
unrealistic 2
therein; 2
uses. 3
variables), 1
sbrk) 1
tree. 5
two-level 7
taken: 2
tension 3
time-space 2
target’s 2
simulating 1
weighted 1
xv6. 1
synchronizations 1
unlock(&m) 1
thr_exit(); 1
therefore 2
storing 1
strdup("p3.c"); 1
switching); 1
storage, 2
storeconditional 1
unrealistic? 1
tickets 30
unsafe 4
timeline 3
times), 1
someday). 1
succeed 2
“With 1
think, 2
uninitialized 1
virtualized; 1
universal 1
update 54
trees; 1
usage. 4
trends. 1
test 7
timing 5
test-and-test-and-set.s. 2
sitting; 1
weighti 2
years. 4
unlock(lock_t 10
thread; 7
therein), 2
telling 1
stream: 2
wrote: 1
t 10
strategy. 1
unused. 2
values). 2
staring 1
totals 2
variables. 13
sufficient, 1
“owned” 1
though; 4
scales 6
schedulers) 1
units, 2
use, 15
task: 1
then 227
system 363
under 18
themselves 4
tomes 1
thanks, 1
sizeof(x)); 2
yes! 1
unmodified, 1
work. 24
threadID. 2
workload. 6
take 97
yes: 3
studies 4
upcoming 1
table, 26
stateless 1
sound 5
transformation 2
vice 1
support? 4
thoughtful 1
visible 2
→ 17
seconds, 2
seeing 1
segfault 1
segmentation.” 1
segregated 3
sequential 8
used. 15
taught?! 2
val 2
there). 1
unfairness 4
timer? 3
top), 1
thing; 1
slowdown 2
unnecessary 1
yet 20
thing... 1
ticket.s. 2
system! 2
works; 1
teach 1
you. 8
such. 1
tackle 4
stdlib.h 1
upon 40
specialize 1
translation-lookaside 1
view, 1
switching, 2
threads? 4
walling 1
user-managed 1
seriously, 3
terminated 2
vastly 1
therein 1
unrealistic; 1
timers, 2
tracing 6
user 117
tmp); 5
utilizing 4
updated) 1
upon. 1
thirty 1
tidbits 2
worry. 3
yourself2 1
techniques, 7
sum, 1
tasks. 1
systems. 64
stream, 2
use_ptr 2
splay 1
transparently 3
synchronize 2
three-queue 1
system). 4
utilizes 1
time; 16
terribly 1
vice-versa. 1
those, 1
update(counter_t 2
tips 2
tracks 8
snippet: 3
vector, 1
young 3
track 27
usage; 1
time-shared 2
worse! 1
virtual 253
this, 32
text 9
© 21
sun.com/solaris/articles/atomic 2
technique. 1
t(A) 1
strings. 1
useful. 10
sptr 2
watermark 2
tables! 1
shown, 2
trap 52
tool, 6
variables 33
testand-set! 1
voo-doo 2
update; 1
tolerate 1
though 29
treasure-trove 1
so; 2
violations). 1
’83, 1
trans- 1
used? 1
time-slicing. 1
wrote 10
waitpid()); 1
them). 2
’04, 2
surprised 2
thread, 48
terms) 1
targets, 1
support; 4
variables) 1
stacks 4
well-known 4
tasked 1
unblocked 2
trace; 1
vary). 1
them? 3
vruntimei 2
users, 1
too. 6
threads); 2
trylock 4
virtualized, 1
twice, 5
“Informed 1
solution 44
transparency; 1
trusts 4
told 2
www.cs.tau.ac.il/˜shanir/concurrent-data-structures.pdf. 2
wake? 1
these, 4
’13, 5
systems) 4
three, 3
theoretical 1
tasks 2
survived 1
variants: 1
stood 1
technique 29
technology 7
undesirable) 2
transcript 1
versions 8
time 306
val; 2
traditionally 1
things 46
size 124
virtue 2
two. 3
“Nonblocking 2
somewhere. 3
user/supervisor 1
tuning 1
too! 2
www.sparc.org/ 1
weaknesses. 1
thousands, 1
“Efficient 2
top 32
thing: 4
swapon 2
vary 4
we’re 3
store-conditional; 2
there. 6
terminal 4
unique 7
translation; 1
wait. 2
viewing 2
waitpid() 2
valid. 2
transferred 4
thread), 2
treat 4
vmstat 2
uber-engineer 1
“Policy/mechanism 1
sounds! 1
twins!” 1
’19, 1
while. 2
valid 51
threadID 2
taken. 1
“He 1
toughest 1
threads) 1
switches. 1
virtualizes 3
straightforward. 2
there’s 1
terminates 1
unqualified 1
traps 5
who 41
time-share 1
visually 1
wanted 3
values. 1
slicek 1
threshold 11
treatment, 2
waiters 4
unsuspecting 1
waiting, 5
source, 1
two-thirds 1
“Aspects 1
winter. 1
wondering: 4
task. 7
thus 486
“OS”, 1
tracking 2
throw 6
values 75
swoop 1
walks 1
strategies. 1
thing, 6
text). 2
untimely 6
tricks: 1
timer. 1
valgrind 15
to, 13
wakeup, 1
variety: 1
wary 7
slower? 1
through, 1
“What 5
true 14
wake(address) 2
space1 1
“Before 1
types 33
tickets. 5
work-stealing 2
us 84
taste 2
“Parallel 1
transfer. 1
ticket 27
timely 3
vary. 2
strength: 1
thinks), 1
well. 30
textbook, 1
ultimately 1
widely 9
vs. 8
today. 6
today’s 2
their 91
vast 2
water 1
solved. 1
timer, 4
“as 2
systems 185
way. 6
truly 9
specifying, 1
“H”, 2
u 2
tightly 1
world? 1
use; 4
“best” 2
treats 1
time), 4
timing, 3
vulnerable 2
strings? 1
this. 4
what’s 2
understand2 1
win 1
wait-for-me.s. 2
was. 1
trace 24
waited 1
transforms 4
widely), 1
somewhere, 1
tip 2
sorts 9
tackled 2
well-regarded 2
turnaround. 1
stack-smashing 1
“Lottery 2
unaffected 1
time-slicing 1
world” 1
utilization, 1
“emulation” 1
triggers, 1
tracing, 1
wall 1
tiny 21
strong, 1
while) 1
unsurprisingly, 1
thread. 20
within; 2
warm 3
wasteful. 2
them. 16
ways: 2
today, 4
“hello 1
specifies 5
won’t 21
tail. 2
translation 46
which, 4
typesetting 2
statically-initialized 1
“Mach: 1
unlocked 2
time-tested 1
yet), 1
variants 4
twice). 1
traversal 3
way? 1
to! 1
subsystem: 1
work? 7
upside 1
threads; 2
wonder? 1
x86)” 2
weaknesses 1
too; 1
web 10
thinking 23
“ready” 2
spectreattack.com 1
tree? 1
whole 5
uint 1
takes 50
str); 1
“lmbench: 1
strive 5
timeline. 2
yourself. 1
versus 5
units 1
trigger 2
ways, 1
tons 2
subtle: 2
workloads, 1
usable. 2
thread’s 14
warnings. 2
work 150
zero. 11
topic. 1
went 3
three-quarters 1
“what 1
spinning), 2
trees, 4
wine, 1
undefined. 1
techniques? 1
unpacks 1
“pinning 1
strong 2
top-to-bottom 1
zplot. 1
structure, 24
virtualizing 14
two: 1
well-defined 1
suffering 2
total 26
works, 15
usual 2
time). 3
while 170
wastes 10
’05. 1
total) 2
workload 14
when, 3
timedlock 4
work; 6
trials 2
within, 1
unfortunately 4
worst 7
unrealistically 2
“yeah, 1
unreasonably 1
transfer 10
“Electrochemically 1
style, 1
vruntime. 1
underpowered 1
weren’t 1
summarize, 1
towards 3
written), 1
utilization. 1
too4 1
wishing 3
watch 5
’07, 2
traffic. 1
world; 1
stashes 1
timer; 1
workgroup. 1
tweaks 2
temporarily 5
unimaginably 1
years; 2
term 15
transformed 2
up. 7
“I 1
submitted, 1
unlucky) 1
wild 1
waits 36
transfers, 1
“Analysis 1
support, 16
utilized 4
trade-off. 1
workers, 2
“ARC: 1
try. 1
state: 2
top) 1
worse. 6
two-CPU 1
worry 21
writes 21
unit 7
upper-case 1
yell) 1
terrific 4
usage 16
updated, 2
“Operating 2
substrate 1
woken, 2
unused 14
translation), 2
“Towards 1
wake 33
surface 3
valid: 1
transac-tions 1
write. 2
“Alto 1
unlikely 3
step? 1
transform 4
undoubtedly 2
whether 59
yield(); 2
yet, 10
unpacking 2
yes. 3
trap. 1
use?) 1
uplifting! 1
“fault.” 1
summarize 5
wonders. 1
upper-half 1
tried, 1
“Wait-free 2
want. 1
varies 5
swapping 12
transaction 4
written, 1
“Control-c” 1
unsatisfying) 1
straightforward 9
translations: 2
unlock): 2
why? 2
yield, 2
zeroing 4
unused, 1
there 250
“A 15
trapping 3
uses), 1
variable-length 2
“operating 1
upwards. 1
worse 9
turn; 4
“have 1
wasn’t 2
weightB 1
switches? 1
support 110
transfers. 1
wrong, 4
“Evaluating 1
unusable. 1
strangest 1
tree, 4
unmask 1
wikipedia 1
yield-based 2
“01” 1
up; 2
useful, 11
traversing 2
upward 1
variant 3
“response”; 1
us, 2
xv6, 1
unbounded 1
years, 9
wasted 4
which). 1
swtch 1
surprise 2
tremendous 1
x86-version 2
useful 69
unusual 3
strategies 8
stretching 1
unrealistic, 3
update, 1
usually 52
“A” 8
“B” 8
users. 1
truth. 1
useful? 1
utility? 2
vector 1
“modern” 1
“parent: 1
way). 1
winner). 1
table! 1
table), 1
two, 3
“E”, 2
yourself 7
useful2. 1
trend? 1
subproblem 1
windows, 1
’a’, 1
v9 1
“Get 1
“Membrane: 1
ubriaca. 1
vengeance’. 1
understand, 3
virtual, 1
yours. 2
use 317
uses 70
user. 7
worse: 2
tables. 6
writes, 4
useful2 1
“TENEX, 2
zombies 1
user-facing 1
tune 1
succeeds, 2
worker(), 1
“Ad 2
valid? 3
“THE” 2
“OS” 1
unfair 2
violation 2
understanding. 1
virtualization. 4
virtualized 6
utopian 1
user’s 4
tapes 1
tcsh). 1
that, 11
x86); 2
“havoc” 1
up 156
updating) 1
using? 2
valgrind. 1
valid), 1
variables, 5
using. 2
this 1109
supporting 1
write, 3
turns 37
“Dynamic 3
values? 3
“Test 1
“RISC-I: 1
up? 3
weight 1
variable-sized. 1
wait 53
virtual-memory 1
terminate 6
you’ll 37
using 140
then. 1
xchg 2
waiting 94
· 4
variable” 1
utility 3
thr_exit() 3
suppose, 2
x? 1
tweak 1
“Everything 2
vanishes. 1
“hello, 1
useless 2
wherever 2
variable: 2
want; 1
“The 40
virtuallyindexed 1
tested 1
’09, 1
utilize 5
theory-types 2
yields 5
website 2
’current’ 1
vector-like 1
variable. 8
surprisingly 7
twice 5
“Mesa” 1
yield 21
variable) 1
“high 1
user-level 6
whims 2
varying 2
watching 1
“a 1
void; 2
thanks 4
’18, 2
therein. 5
zeroing, 1
value) 13
weightk 1
’c’ 3
version? 2
variable’s 1
thread 449
“Microreboot 1
swap 34
you: 1
versa. 1
“reserved 2
usermode 1
widespread 1
works? 3
“batch” 1
waking, 1
them; 2
’81, 5
think? 1
via 53
’his/their 1
vantage 1
viewpoint 1
“Cooperating 7
type: 1
vengeance’.” 1
“OSSpinLock 2
switched 2
zero). 1
were 76
“running” 2
virtualize 13
variety 3
word, 1
worlds: 1
three 69
“cold” 2
world 26
wants 16
’flag’ 2
thinking! 1
virtualization; 1
“A”, 2
“Improving 1
virtualization 20
updating 13
vruntime: 1
“System 1
syscall 3
’95. 1
when! 2
“starts” 2
wait()) 1
variable 75
viewed 4
world”. 1
time) 4
therein: 2
“free” 1
worst-case 5
welcome! 1
“Animal 1
three-level 1
visualization. 1
“CPU-bound” 1
“Hmm... 1
waste! 1
usable 2
wait(). 3
“Take 1
’a’ 4
“test 2
wait(address, 2
vectors 1
tables 49
virtualization? 1
www.stanford.edu/˜ouster/. 1
tired 1
version 31
“glibc 2
wouldn’t 5
winner: 2
“Performance 1
void. 1
“Multics: 1
volatile 5
watch. 1
utilities 1
weight, 1
“being 1
“Earliest 1
time. 66
wakeup/waiting 2
terminated. 1
visionary 1
visited, 1
yielding 5
to), 1
“lost” 1
wrapping 2
wondering 2
“big 1
“brain 2
very 60
“PThreads 2
vulnerabilities. 1
whichever 4
utilization 5
while, 8
“Jack 1
times; 3
walk 1
themselves; 2
think-ing 1
well 88
then, 16
top-level 2
waste 23
“the 1
write(), 1
which 501
workers 1
“easy 1
vruntime, 1
“cooperating 2
wakeups 2
“commoncase 1
wily 2
valid, 14
“MIPS 3
took 16
watches 2
thr_join(); 1
zero), 1
theory 4
trade-off 4
“wreaked”? 1
written; 1
ways 19
winner 5
worthwhile 2
“too 3
w/ 2
“direct 1
warmed 1
“reliability”, 1
with) 2
value? 2
“Memory 1
tool? 1
wc), 1
thread.c 1
zsh 2
therein, 2
transfers 7
” 4
yeah! 1
whenever 3
what 280
wisdom 1
written 18
“double 1
weirdly 1
“same” 1
wait() 26
well, 15
values, 12
“Purify: 1
tools, 3
well-suited 2
time-efficient 1
things. 7
translation) 1
– 19
yield() 2
why, 1
“fault” 2
wishes 16
wrong 15
write: 1
was; 1
well-meaning 1
virtualization). 1
“Tolerating 1
without 70
well; 1
translation. 10
time: 2
thinking? 1
trees), 1
’93. 1
’10, 4
will, 2
“private 1
zero.” 1
x86” 2
way), 1
when. 2
visible. 2
“all 4
won 3
translations; 1
timings. 1
within 89
tried 4
third 18
’95, 2
“Ah! 1
window, 3
“reasonable” 1
˜mark/syscall.html. 1
we’ll 112
yourself, 2
wc, 3
workings, 2
visualize 1
“uninitialized 1
world!”, 1
trials. 1
too). 2
x; 4
two-phase 6
though, 8
’wreak 2
“Aleph 1
wished 2
’15, 1
whatever) 1
woken 13
websites 1
whereas 14
wait(NULL); 3
world, 6
trick 3
took, 1
yet! 1
threshold. 2
“Cloud 3
“Principled 1
’w’ 1
zombies, 1
work! 3
world\n", 1
understand 112
wonder 3
whatever 15
warmup 1
whose 8
trace: 1
trouble 9
you’ve 6
“Idleness 1
“Profiling 1
“An 9
’c’, 1
workloads. 3
time, 75
wrappers, 2
understandable, 1
won’t, 1
worth 20
why. 2
trading 1
’75, 1
trying 15
“Making 2
“SDS 1
“B”. 2
“Load-Link, 2
timer-interrupt 1
yet. 4
uniprocessor, 2
zero 10
works. 22
wrappers 2
worker, 2
transitioning 4
“1984” 1
unlock() 14
“buddy” 1
“bounds” 1
“Computer 6
“One-Level 2
tmp->next 4
words 2
unlock, 2
’14 1
worry! 2
x86. 1
wreak, 1
treated 6
“A”), 1
unsigned 2
“drum” 1
“got 1
“If 2
“One-level 2
total). 1
unsurprisingly: 1
’new’ 2
work, 23
wreakers 1
y; 2
www.ajwm.net/amayer/papers/B5000.html. 2
trouble, 2
“Machine 1
unused) 1
“the”). 2
“hot” 2
turn 32
“Virtual 8
touches 2
the 8323
’peek 1
workload, 11
yelling 1
x-axis, 2
“Monitors: 1
writing 21
update: 2
“John 1
“privileged” 1
unifying 1
“bad 1
use”, 1
trace, 3
threaded 2
’self’ 2
worst-fit 2
you). 1
x. 2
“Myths 2
written). 1
upsides 1
“OpenSolaris 2
used, 8
uninteresting: 1
“condition 1
usual. 2
three) 1
traditional 11
“21” 2
x86) 1
yourself; 3
“Premature 2
x, 2
x86 23
“ticket-assignment 1
“Perfection 1
using). 2
unit) 1
“discovered” 1
utilized. 1
“Introduction 3
translation, 15
through 56
ˆC 2
’85, 1
xv6 6
x86-64) 1
“TLB”. 1
unlock(), 2
“limited” 1
“One 1
trials, 1
value; 22
“U 1
’92. 1
timer 36
zombie 2
“Time 1
value 233
unpark(queue_remove(m->q)); 2
“ten-items-or-less” 1
“Priority 1
trivial 2
vision 1
“at 1
’94, 2
your 201
times? 2
“100x” 1
years 19
“child”, 1
variable). 1
unpleasant. 1
“Reese’s 1
typically 1
weight0 1
“older” 1
“80-20” 1
tive) 1
“CPU 1
today 7
you’re 18
yield.s, 2
waitFirst 2
utilized? 1
“catch” 1
typing 9
whet 1
“works” 1
“Advanced 4
we 992
“Experience 1
touching 1
’threshold’, 2
’63 3
wary: 1
“crux 1
value, 17
unfortunate 5
while? 1
“Our 1
winner) 2
“Hoard: 1
“Ils 1
“History” 2
’b’, 2
“other 1
way, 20
“Shared-access 1
use. 16
various 27
track, 1
“Pthread 1
“Javascript: 2
“...with 1
why 58
well) 1
“Someone 2
user-defined 2
wait-for-me.s 4
translates 5
“Relocating 1
“Mac 1
“Change 1
which... 1
“Understanding 5
usually, 2
weightA 1
true! 1
“Reminiscences 1
“Run-Time 1
“Extending 1
work: 1
“goodbye”. 1
varied 2
well), 2
ugly 3
“Time-Sharing 1
“Structure 1
“Hints 3
workload: 1
“perfect”. 1
wide 1
view 14
uncommon), 1
“core” 1
“Valgrind: 1
“Information 1
worry: 1
works3 1
underlying 9
wakes 15
“first 1
“correct” 4
“Just 2
x86). 2
workshop, 1
yes, 6
weights 2
“fun” 1
“out-of-bounds” 1
“My 1
units. 3
worlds. 2
weird 3
“lock” 2
we’d 9
urgent, 1
wrangling 1
“loop.s”. 2
“RTFM.” 1
usage, 2
write(fd, 1
“turn” 2
“Transaction 2
“Using 2
x86.py, 4
using; 2
value); 2
with 638
“bad” 3
you, 11
variable; 2
“jemalloc” 1
word 14
younger 1
where 166
vector. 1
“just 3
workflows. 1
will 580
zeroed 1
whom 2
violation, 2
“smart” 1
worried 1
window 3
’02, 2
wired 2
virtual-to-physical 6
worse, 8
wise 1
’11, 2
virtualized. 1
• 69
wondered 1
wish 26
’68 1
wrapper; 2
voluminous 2
worked, 2
with? 1
’e’. 1
wait(); 1
write() 5
writes: 1
words, 5
’mutex’ 2
wait, 4
you? 9
worst-fit, 2
x 12
“But 1
waking 5
yours: 1
worstcase 1
yield.s 2
“It’s 2
weakness 1
worthwhile. 3
you’d 9
you; 1
“first-in” 2
were. 1
wrong. 3
zeroes 2
| 8
“longword” 1
winner. 2
www.takeourword.com/TOW146 1
|| 2
“Fact 1
“prove” 2
within. 1
y-axis 2
}; 8
“Think 1
’89, 1
“baby 1
’98, 1
“demon”, 1
working 28
’b’ 1
“ease 1
wrapper 3
“Algorithms 2
“familial” 1
wreaked?” 1
“Dahm 2
“right 1
www.nds.rub.de/lehre/seminar/SS06/Werthmann 1
“They 2
“yes.” 1
x) 1
← 2
− 7
“Concurrent 2
you 995
“H-Pucks”) 1
yuck! 1
“Multilevel 1
“Programming 7
“foo” 1
“real” 3
{ 281
’ 11
“2Q: 1
} 271
“Atomic 2
’Classic 1
“Cold-start 1
’pedantry’ 1
“It 2
“Bell 1
“KASLR 1
“Converting 1
“On 2
“Observations 2
“Solaris 3
“Practical, 1
“Solution 2
“T”, 2
“Symmetric 1
“daemon”, 1
“You 2
“interrupts” 1
“atomic 2
“main: 14
“implements” 2
“process 1
“interactive” 1
“test” 2
“it 1
“on 1
“page 1
“right” 1
“setting” 2
