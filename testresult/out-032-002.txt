3 1
10 21
12 19
14 14
16 9
18 4
C 16
I 26
M 20
 32628
S 28
! 2
!zero, 2
"A" 1
"A"); 4
"common.h" 7
"common_threads.h" 4
"hello"; 3
"usage: 2
 26
# 16
#2: 2
2 25
20 1
22 1
#include 62
$0x0) 1
$0x0,(%edi,%eax,4) 1
$0x03, 1
$0x03e8,%eax 1
$0x1 2
$0x1, 6
% 8
%bx 2
%d 5
4 23
%d\n", 9
%dx 6
%dx. 2
6 22
%eax 24
%eax, 8
%eax,8049a1c 4
%ecx 1
%ecx, 1
%edi 3
%edi, 1
%esp 1
%esp, 1
%lld\n", 2
%p\n", 4
&; 1
&args); 4
&lock); 2
&m); 3
8 22
&mutex); 8
&rvalue); 2
(-L 2
(-a) 2
(-c) 1
B 13
(-i) 4
F 8
L 17
(-l 4
(-n 1
PAGING 21
(-p 2
(-q) 1
T 10
!= 7
!StoreConditional(&lock->flag, 2
"B"); 4
"fork 4
"hello 1
"wc" 1
"wc"... 1
#1: 2
#3: 1
#define 2
(-s) 3
(-w) 1
(0x200000), 1
$0x1,%eax 4
%ax 4
(0xC0000000 1
(1 1
%d)\n", 4
%eax), 1
%eax). 1
%eax,0x0(%ebx) 1
%ebp 1
%ebp, 1
%ebx 1
%ebx, 1
%edx 1
%edx, 1
%esi 1
%esi, 1
(10 1
& 29
&& 2
(100 4
&oops; 2
&rvals); 2
(1000 1
&stack); 1
&x); 1
(101) 2
( 6
((flag[1-self] 2
(11) 1
(*start_routine)(void 2
(-1KB) 1
(-M 1
(-P) 1
(117 1
(-T). 1
(120−0)+(20−10)+(30−10) 1
(-m 2
(16 3
(-p). 1
(2) 4
(-s 2
(20-ms 1
(212 1
(./x86.py 4
(/tmp/file) 1
(2134) 6
(0, 3
(232 1
(01) 1
(010101), 1
(24114) 5
(0x1) 2
(256 1
(1) 13
(100) 1
(1024). 1
(104) 1
(32 2
(1110) 1
(32-bit 1
(117). 1
(32768) 1
(14th) 1
(15th, 1
(34K) 1
(1e7) 2
(34KB), 1
(20%), 1
(400)2 1
(200 1
(4200) 1
(2012-01-30-1-g1c41342) 1
(4KB 1
(21) 1
(5 1
(22.1) 1
(7.1) 1
(224 1
(7030) 1
(24113) 5
(9.1) 1
(256) 1
(@PFN:101) 1
(26 1
(A 14
(28 1
(A, 5
(28KB) 1
(ARM). 2
(3) 2
(AS) 1
(3764 1
(ASLR). 1
(4 3
(Advanced) 1
(4088 1
(Again) 1
(4096), 1
(Alpha), 2
(512 2
(And 1
(64 1
(Another 1
(7.2) 1
(August, 1
(8 1
(A’s 2
(9.2) 1
(B) 1
(@PFN:100) 1
(Bad 1
(A) 2
(Blocks) 4
(AMAT) 1
(Bounded 1
(APIs) 2
(C 1
(ASID) 1
(As 1
(C, 1
(B 3
(CFS) 2
(BFS)2 1
(CFS), 1
(BKL). 2
(COW 1
(BSD). 1
(CanAccess(PTE.ProtectBits) 4
(B’s 2
(Chapter 2
(C) 1
(CompareAndSwap(&lock->flag, 2
(CPU 2
(C’s 1
(CTSS), 1
(DEC). 1
(CanAccess(TlbEntry.ProtectBits) 4
(DMA) 1
(Code) 8
(Dynamic 2
(D); 1
(EEVDF) 1
(Editors 2
(FCFS). 1
(Figure 45
(FIFO) 2
(G) 2
(Good 1
(G), 1
(HW 1
(Gulps) 1
(Hardware) 1
(Hardware-based) 1
(I/O). 1
(K 1
(KASLR). 1
(LAUER’S 1
(KNUTH’S 1
(LW 1
(L 2
(Lines 6
(LDE) 1
(Linux) 2
(LFU) 1
(London), 1
(LRU) 1
(M 1
(Left) 3
(MFU) 1
(Line 5
(MLFQ) 1
(Linux, 1
(MLFQ). 2
(LoadLinked(&lock->flag) 4
(MMU); 1
(Logical) 1
(MQMS) 1
(MIPS), 2
(MRU). 1
(MMU) 1
(Measurement) 3
(MMU), 1
(NOT 1
(OS 1
(NULL 1
(OS)3 1
(Niceness) 1
(P 1
(No 1
(P); 1
(O 1
(P0 1
(OS). 1
(P1) 3
(Offset 1
(P1), 1
(P). 1
(P=0), 1
(P0) 1
(PA) 3
(P2) 1
(PA), 1
(P2), 1
(PC) 4
(P=1), 1
(PCB), 2
(PCB); 2
(PCB). 1
(PDE.PFN 2
(PD 2
(PDE.Valid 1
(PDE) 2
(PFN) 6
(PDE). 1
(PFN), 2
(PDIndex 3
(PFN). 1
(PFN 2
(PM 2
(PID), 1
(PTE.PFN 2
(PID). 1
(PTE.Valid 4
(PSJF) 1
(PTEs) 1
(PTE) 9
(PWT, 1
(PTE): 1
(Page 1
(PTE.Present 2
(PowerPC), 2
(PTIndex 3
(Process 1
(Pmiss 1
(R) 1
(Proc 2
(R/W) 1
(Q0), 1
(RR) 2
(Q2). 1
(RSS). 1
(R 1
(Ready, 1
(R, 1
(Right) 3
(RDLK) 2
(Run 1
(ROP) 1
(SJF, 1
(S) 3
(SQMS) 1
(S), 1
(STCF) 2
(SJF) 1
(STDOUT 1
(SJF), 1
(September 1
(SN) 1
(StoreConditional(&lock->flag, 2
(SSDs) 1
(Success 4
(Simulation) 16
(Success, 4
(Software) 1
(T1 2
(Spring), 3
(T2) 2
(T1) 4
(T2), 2
(TD 1
(TCBs) 2
(THE), 2
(TM 1
(TLB 16
(Tarrival 1
(TLBs) 1
(Tc1) 2
(Tc1 2
(Tc1), 1
(Tc2) 1
(Tc2 1
(TestAndSet(&m->guard, 4
(TestAndSet(&flag, 2
(This 1
(TestAndSet(&lock->flag, 2
(Thousands) 2
(Third 2
(Thread 2
(Timer 1
(TlbEntry.PFN 4
(Tp) 1
(U/S) 1
(Tp). 1
(VA) 2
(VAX/VMS) 1
(VM) 1
(VPN) 2
(VP 3
(VPN), 2
(VPN 14
(VPN). 1
(VPN=06), 1
(VPN=06, 1
(VPN=08). 1
(VPN=07), 1
(VPN=1, 1
(VPNs 1
(Virtual) 1
(Virtual 1
(Volume 1
(VirtualAddress 9
(With 1
(a 21
(Without 1
(a.k.a. 6
(a) 5
(a.k.a., 2
(a2), 1
(a3). 1
(a[0]) 2
(a[4] 1
(a[3] 1
(a[8] 1
(a[7] 1
(about 1
(above), 1
(all 6
(address 2
(allocated 3
(after 4
(almost) 1
(again 3
(also 7
(again, 3
(an 2
(alas). 2
(always) 1
(among 3
(arbitrarily; 1
(array-based) 2
(and 111
(another 1
(as 49
(approximate) 2
(assert(hptr->magic 1
(argc 2
(assume 2
(assumes 2
(atomic_add_zero 2
(assuming 5
(bash?) 1
(at 12
(because 8
(atomic_bit_test_set 4
(broken) 1
(atomically); 1
(bugs) 1
(available 1
(bytesLeft 1
(average: 1
(c) 3
(b) 5
(c1, 1
(bigger) 1
(c1–c3). 1
(binary 1
(c2), 3
(both 2
(c2). 2
(but 14
(c4), 1
(but, 2
(c4). 1
(by 13
(causing 2
(bytes 2
(char 8
(c->local[cpu] 2
(clearly 1
(c1), 1
(conservatively); 1
(c3) 1
(counter 17
(c3), 1
(cpu.c) 1
(c3). 3
(created 1
(c5), 1
(curr->key 4
(called 9
(current) 1
(cleared), 1
(dare 1
(code, 7
(depending 2
(continue 1
(done 4
(continuing) 1
(due 6
(count 8
(curr) 4
(described 5
(discussed 1
(e.g., 108
(do 5
(easily) 2
(done) 2
(effectively 1
(double 1
(erroneously) 1
(dramatic 1
(even 3
(during 1
(eventually) 2
(each 2
(fill_ptr 1
(either 3
(finally) 1
(emacs 1
(first-in, 1
(especially 2
(flag 4
(evicts) 1
(forever), 1
(flag) 2
(formerly 1
(for 24
(four 1
(free) 21
(free 1
(fun!). 1
(freeing 1
(gadgets, 1
(from 16
(generated 1
(full) 1
(given 1
(gasp) 2
(global 3
(generally) 1
(he 1
(get 1
(hence 1
(hardware 1
(hence, 2
(header_t 1
(hex 2
(highest 1
(highly 1
(hopefully 2
(hint: 6
(horribly) 1
(holding 1
(https://github.com/remzi-arpacidusseau/ostep-projects) 1
(hopefully) 3
(i 19
(i); 1
(i.e., 96
(if 13
(imagine 2
(ignoring 1
(include 2
(implicitly) 2
(incredulous) 1
(implying 2
(instead 1
(int) 10
(in 45
(interrupt) 1
(including 10
(into 4
(indeed, 4
(io.c) 1
(initial) 1
(its 2
(insert 1
(just 5
(int 6
(kernel) 1
(ironically) 1
(large) 2
(it 12
(lazily) 1
(job 2
(ldstub); 2
(kernel 6
(left). 1
(known 1
(limit) 1
(labeled 6
(latter) 2
(ld.so) 1
(line 3
(left 1
(load 1
(let’s 4
(lock-holding) 2
(like 5
(log2 1
(likely) 1
(long 2
(literally) 2
(lots 1
(lock->turn 2
(m->flag 2
(locked). 2
(main) 4
(long) 1
(maliciousness) 1
(lowest), 1
(managing 2
(making 1
(marked 1
(many 4
(max 2
(mem.c) 1
(milliseconds); 1
(mentioned 2
(middle 2
(minus 1
(minimally) 1
(modified), 1
(modern 1
(modulo 1
(more 3
(mutex->flag 2
(most 2
(my 1
(mutex 2
(myarg 2
(mutex); 6
(myturn). 2
(mutex, 8
(namely, 1
(myarg_t 4
(new 7
(myturn 2
(non-paged) 1
(n) 1
(non-restricted) 1
(nearly 2
(normally 1
(new) 1
(notably) 1
(new_head 2
(note 4
(next 1
(note, 1
(nice 1
(note: 2
(no 4
(now 6
(nods) 1
(ns) 1
(non-contiguous) 1
(often 2
(non-toy) 2
(older 1
(one 6
(not 20
(only 5
(of 10
(onto 2
(on 11
(other 1
(once 4
(our 4
(out 3
(p1), 1
(p1– 1
(p2); 1
(p2.c) 1
(p2.c), 1
(or 83
(p4.c) 1
(or, 5
(p5). 1
(original 2
(p6, 1
(p.81).” 1
(particularly 7
(p1.c) 1
(pause 3
(p2), 1
(physical) 1
(p2). 1
(pid:29146) 4
(p3.c) 1
(pid:29267) 1
(p4). 1
(pid:29384) 1
(potentially) 1
(potentially), 2
(page 49
(privileged) 1
(part 2
(probabilistic) 1
(perhaps 7
(probably) 1
(physical 1
(probably), 1
(pid:%d)\n", 9
(pthread_create) 2
(pid:29147) 2
(pthread_join) 2
(pid:29266) 2
(queue_empty(m->q)) 2
(pid:29383) 2
(rather, 1
(pointed 1
(rc_wait:29267) 1
(pointers) 1
(rc_wait:29384) 1
(preempting 2
(read 1
(pretend) 1
(realistically, 2
(probably 1
(reduced 1
(quantum 1
(regardless 2
(quickly) 1
(releasing 1
(quite) 1
(repeat) 8
(rc 8
(requiring 1
(rc_wait:%d) 2
(results 1
(ready 4
(returning 2
(real) 1
(roughly 2
(recall 1
(sadly). 1
(reduction 1
(seconds) 6
(remember, 1
(si 1
(remember: 2
(simple 2
(required 1
(slow) 1
(result: 1
(some 1
(resulting 1
(something 2
(right) 2
(sometimes 10
(roughly) 2
(sometimes, 1
(running 1
(source) 1
(running, 2
(spinning 2
(runtimei 1
(start 2
(said 2
(starting 3
(say 17
(still 1
(say, 11
(stop 1
(sched 1
(stride=100) 1
(scheduling) 1
(stuck 2
(see 12
(studied 1
(shaded 1
(swapd) 1
(shown 5
(switching 1
(similar 3
(t0.c) 2
(simplified) 1
(taking 2
(size 1
(target) 1
(size: 1
(thank 1
(size=200) 1
(there 3
(somewhat) 1
(they 3
(sorry!). 2
(think 5
(specifically). 1
(this 4
(stop) 1
(thread 6
(store 1
(thus 9
(stride=200) 1
(too 1
(stride=40) 1
(too!) 2
(trustingly) 1
(such 25
(turned 1
(t1.c) 2
(upon 1
(thanks 1
(use_ptr 1
(that 5
(using 9
(that, 2
(usually) 2
(that’s 3
(v 2
(v1) 3
(version 1
(via 6
(the 61
(virtual) 3
(though 6
(void 12
(threads.c) 1
(way) 1
(through 1
(we 2
(tiny) 2
(web 2
(tmp 1
(what 4
(to 10
(when 3
(too) 1
(who 2
(total) 1
(turn 2
(with 21
(turning 2
(without 1
(unrealistically 1
(word 3
(untimely?) 2
(worst-case 1
(unused) 6
(write) 1
(use 1
(you’ll 1
(user 3
(“0101”th) 1
(usually 7
); 1
(usually, 1
* 17
(v2) 1
*(*start_routine)(int), 2
(v9 1
**value_ptr); 2
(va.c) 1
*H, 4
(value 2
*L, 8
(virtual 1
*abs_timeout); 2
(vruntime). 1
*arg); 4
(wait 1
(waiting 2
*c) 18
(wc). 1
*child(void 3
(we’ll 2
*cond); 2
(where 12
*cond, 2
(whether 2
*consumer(void 5
*curr 4
(which 39
*d 1
(which, 2
*dst; 1
(xchg). 2
*head 1
(yes, 4
*hptr 1
(yet) 3
*kstack; 1
(you 5
(“Buzz 2
*lock) 20
*m) 6
*malloc(size_t 1
) 46
*mem; 1
). 3
*mutex) 12
*(*start_routine)(void*), 2
*mutex; 2
*) 23
*mythread(void 12
*), 2
*new 4
**) 4
*new); 1
**old, 1
*next; 6
*old_ptr 2
*/ 16
*old_ptr, 2
*H) 2
*p 6
*L) 4
*p); 1
*producer(void 5
*arg) 26
*ptr 9
*args 4
*ptr, 5
*q) 2
*argv[]) 23
*q; 2
*attr, 2
*rvals 2
*c); 1
*src 3
*c, 5
*thread, 2
*chan; 1
*value) 2
*current 1
*worker(void 1
*cwd; 1
*x 3
*dst 2
*x); 1
*head; 4
+1 1
*input) 1
+= 9
*m); 1
, 15
*malloc(size 1
--b0 1
*mutex); 8
--l0 1
*mutex, 2
--leak-check=yes 2
*myargs[3]; 2
--tool=helgrind 2
*new_head 2
--tool=lackey 1
*ofile[NOFILE]; 1
-1); 1
*old_ptr; 2
-1, 1
*parent; 1
-10 1
*ptr) 7
-5 1
*ptr; 6
-= 1
*q, 4
-A 6
*rvals; 2
-C 6
*str 1
-I 6
*tail; 2
-M 15
*tf; 1
-O 1
*tmp 7
*value 2
-S 24
-S, 1
-X) 1
+ 45
+19 1
-a 41
- 25
--b1 1
-c 22
--l1 1
-c. 1
--trace-mem=yes 1
-g 3
-1) 1
-15 1
-i 18
-1; 8
-i. 2
-1KB. 1
-is-unsafe. 2
-20 2
-k 2
-5), 1
-m 3
-5; 1
-m, 1
-> 10
-nw 1
-B 4
-o 9
-p) 1
-pthread; 2
-s 21
-t). 1
-u 6
-D 154
. 53
-F 3
-H 1
-L 18
-P 19
... 84
-R 13
..., 2
-Wall 7
.... 1
-b 3
................ 1
-d 2
./array 1
-f 1
./fork.py 4
-l 19
./main 6
-l, 1
./main-two-cvs-while 2
-l. 1
./mem 5
./p1 2
-n 19
./p3 1
./random 3
-p 44
./x86.py 14
-pthread 5
.EXE 1
-r 5
.globl 1
-t 20
-v 17
...; 1
./cpu 5
./main). 1
./multi.py 4
./p2 1
./p4 1
./process-run.py 2
./thread 3
/ 1
/* 16
/dev/zero 1
/proc 1
/proc/meminfo 1
0% 5
0) 40
0), 1
0). 2
0+1+2 1
0,0,0,0,0,0,1:0,0,0,0,0,0,1:0,0,0,0,0,0,1 1
0,0,0,1,0,0,0:0,0,0,1,0,0,0:0,0,0,1,0,0,0 1
0-9), 1
0-byte 1
0.03 2
0.1 2
0.5. 1
0.9. 1
00000000019d5000 1
00007f4e7d2d0000 1
00007f4e7d932000 1
0001 1
0010 1
// 294
01 2
//acquire 4
01, 2
/bin/ls. 1
0100 1
/proc/meminfo; 1
0111 1
03 1
05 1
07 1
09 1
0; 116
0? 3
0KB 13
0] 4
0th) 1
0x0(%ebx) 1
0x0(%ebx), 2
0x03, 1
0x0DC0. 1
0x100, 1
0x1024 1
0x1096008c0 1
0x30 1
0x300, 1
0x3000, 1
0x37) 1
0x3C00). 1
0x3F80, 1
0x500, 1
0x700, 1
0x7ffd3e55d2b4 1
0x7ffe1033b8f4 1
0x8049a1c). 2
0 384
0x900. 1
0(%eax) 2
0xC0000000 2
0); 8
0xC0000000, 1
0+5+10 1
0xC0000FFF 1
0+ebx 1
0xFFFFFFFF) 1
0, 55
0,0,0,0,0,0,1? 1
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 1
0. 11
0.0 2
0.001), 1
0.1). 1
0.10). 1
0.2 1
0.4 1
0.6 1
0.8 1
00 4
00, 1
0000 14
0000000000400000 1
00007f4e7cf06000 1
00007f4e7d508000 1
00007f4e7d731000 1
0011 1
010000; 1
0101 1
0110 2
02 1
04 2
06 1
08 2
0: 4
0th 2
0x0(%ebx),%eax 1
0x000, 1
0x00000000 1
0x00000000, 1
0x00000FFF, 1
0x03e8, 1
0x068, 1
0x1095afe50 1
0x200, 1
1 461
0x200000 4
1)) 2
0x200000. 1
1); 4
0x400, 1
0x600, 1
0x7ffe45522e94 1
0x7fff691aea64 1
0x800, 1
0x80000000 2
0x80000000)) 2
0x8049a1c 6
0x8049a1c, 8
0x8049a1c. 2
0xBFFFFFFF 1
0xFFF. 1
1% 1
1, 80
1-GB 1
1) 52
1), 5
1). 6
1-byte 1
1-second 1
1. 43
1.0001 1
1.0 1
1.00] 5
1.0, 1
1.0; 1
1.3.37 1
10% 5
10) 2
10), 1
10). 3
10+20+120 1
10+20+30 1
10-byte 1
10-entry 1
10-ms 4
10.1 2
10.1: 1
10.2? 1
1.01] 203
10.3 1
1.2.1) 1
10.3. 1
10.3: 1
10.5 1
10.7 1
100% 5
100%, 1
100%. 1
100) 3
100), 1
100). 2
100+(110−10)+(120−10) 1
10 165
100+110+120 1
10); 1
1000). 1
1000; 1
10, 14
1000s 1
10,000 8
100? 1
10,000,000 2
100K 1
10. 7
100ns 2
10.1), 1
100s 1
10.2 1
10.2: 1
101 4
10.4 1
101. 2
10.6 1
103.33 1
1030 1
1032 1
1036 1
105 6
105-117, 1
100 87
107 1
100%), 1
1074 2
100); 2
108). 1
100, 6
109 1
100,000 1
10; 2
100,000, 1
100-bytes 2
100. 6
1000 10
1000, 5
1000. 2
100000 2
100:100,100:100), 1
100byte 1
1024 10
1024, 1
1024. 3
1028 1
104 1
104. 1
108 11
10:1,10:100). 1
11 110
10ms, 1
11. 3
10th 3
110 2
11). 1
110). 1
110000) 1
1101 2
110, 1
1110 2
1100 3
1110101 1
111). 1
11168, 1
113 4
1111 7
117, 1
112 2
1174 1
1124 2
11:1, 1
115–116, 2
11:5, 2
11916, 1
11–12), 1
12) 1
11–19 1
12). 1
1234567 7
1234567)) 1
128) 1
128-Byte 1
12 89
128-byte 2
12(%eax) 1
128; 1
12(%eax), 1
128KB 1
12(3), 2
12:7, 1
12, 2
12-bit 2
12. 2
120 9
120. 1
12000 1
1224 1
1277, 1
128 13
128, 1
128: 2
12:6, 1
13.1 2
13.1: 1
13.2; 1
13.3 2
13.3: 1
13 93
13.5 1
13); 2
135 2
13, 2
135: 1
13. 2
137, 1
13.1), 1
13–14). 1
13.2 2
13.2, 1
13.2: 1
13.4 1
132 2
132: 1
14 71
137298 1
14, 2
13: 2
14-bit 4
13:2, 1
14. 4
13:4, 2
14.2 1
14). 2
14.4 1
14.1 1
14.6 1
14.3 1
140 2
14.5 1
143,012. 1
14.7 1
143012 1
148K 1
14949, 1
14:7 1
14KB; 1
14KB 2
15) 4
15), 1
15). 1
15.1 2
15.1. 1
15.1: 1
15.3 1
15.3, 1
15.3: 1
15.5 2
15.5: 1
152K 1
15:3, 2
15 96
15:5, 2
15, 7
15KB 7
15. 1
15KB, 1
15.2 3
15.2. 1
15.2: 1
15.4 1
15.4: 1
15.6 2
15.6: 1
150 10
16 92
1586, 1
16(%eax) 1
16), 3
16(%eax), 1
16.1). 1
16-byte 4
16.2 2
16.1 2
16.2: 1
16.1, 2
16.4 1
16.1. 1
16.4: 2
16.1: 1
16.6 3
16.3 2
16.6: 1
16.3: 1
160 2
16.5 1
16KB; 1
16.5. 1
16KB] 5
16.5: 1
17.1 1
16.7 1
17.1: 1
16384 1
17.3 1
16384, 1
17.3. 1
16492 1
17.3: 1
16500 1
17.5 1
16708 2
17.5. 1
16K 1
17.5: 1
17.6). 1
17.7: 1
1780K 1
179–180, 1
17:10, 1
16KB 24
16KB)1 1
16KB, 1
16k 5
18 54
18, 2
18-bit 1
18.2 1
18.2, 3
18.2: 1
18.3). 1
18.4 2
18.4: 1
18.6 2
18.6: 1
184–199. 1
18705, 1
18–21); 1
17 66
19). 2
17, 1
19.1 2
17.1). 1
19.1: 1
17.2 1
19.3 1
17.2. 1
19.3, 1
17.2: 1
19.3: 1
17.4 1
19.5 2
17.4. 1
19.5: 1
17.4: 1
19.7 1
17.6: 1
19221041) 2
17.7). 1
192KB 1
17.8, 1
19384 1
17.8: 1
1945. 1
170 3
1949. 1
170. 1
1950’s 1
172, 1
1954. 1
1792K 1
1956. 1
1793, 1
1961. 1
1963, 1
17: 1
1963. 2
17:4, 1
1965, 1
1965. 6
18). 1
1969. 3
18.1 2
1970 1
18.1: 1
1970. 4
18.3 1
1970’s 2
18.3: 1
1970’s. 1
18.5 2
1972. 5
18.5: 1
1974. 3
18.7 1
1978. 5
18.7: 1
1980s 1
1800s, 1
1980’s; 1
1981. 7
1983. 4
1985. 2
1987. 1
1989. 5
19 58
1990. 2
19.1), 2
19.1). 1
1992. 4
19.2 2
1992.. 1
19.2: 1
1994. 1
19.3), 1
1996 3
19.4 1
1996. 4
19.4. 1
1998 2
19.4: 1
1998. 2
19.6 1
19.8 1
1: 7
1928 1
1KB) 1
19345221) 2
1Note 2
1957 1
1We 1
1957. 1
1959 1
1959. 1
1ms, 1
1960. 1
2) 7
1960’s 5
2), 3
1960’s, 2
1960’s. 1
2). 7
1962 2
2- 1
2.1 2
1962. 7
2.1: 1
1963.” 1
2.3 1
1964 1
2.3: 1
1964. 2
2.4). 1
1966 1
2.5 1
1966. 3
2.5: 1
1968 2
2.7 3
2.9 2
1968. 11
1970; 1
20% 7
1970s 1
20), 1
1971. 1
20-29): 1
1973. 2
20.1 1
1975. 2
20.1); 1
1979. 2
20.1: 1
1980. 1
20.3 2
1980’s, 2
20.3: 1
1982. 7
20.5 3
1986. 1
20.5: 1
1988. 2
20.6). 1
1990). 1
2000) 2
1990s, 1
20000000) 2
1991, 1
2000; 2
2001. 1
2003, 2
1991. 9
2003. 4
1993. 6
2005. 9
1995. 6
2007, 2
2007. 3
1997. 5
2008). 1
1999. 1
1:0,4:100 2
1:0,4:100. 1
1:1, 3
1; 42
1? 1
1Each 1
1K 1
2008–19, 138
1KB 13
1KB, 1
1KB. 1
1MB 1
2008–20, 49
1] 4
2009. 5
1e7; 2
201 4
2010, 2
1k 9
2010. 7
1m 6
2014 1
1” 1
2015). 1
2016 1
2016. 1
2016.. 1
2018, 1
203 1
20KB 2
21 45
21, 4
21-bit 1
21.1), 1
21.2 2
21.2, 1
21.2: 1
21.4 1
21.6 1
214 1
218 1
21: 1
22.1 2
22.10 1
22.12 1
22.1: 1
22.3 1
22.3: 1
22.5 2
22.5: 1
22.7 2
22.7: 1
22.9 1
22.9. 1
22.9: 1
2212 1
22–23), 1
23 37
23, 2
23-bit 1
23.2 2
23.2: 1
2 257
23:2, 1
24113 1
24KB 3
25 33
2, 38
25. 1
2-MB 1
250 5
2-bit 1
250, 1
254 3
254: 1
256 6
26.1 2
2. 29
26.1, 4
2.2 2
26.1: 2
2.2: 1
26.3 2
2.3) 1
26.3, 2
2.4 1
26.3: 2
2.4: 1
26.5 4
2.5). 1
26.5: 2
2.6 3
26.7 4
2.6: 1
26.7: 2
26KB, 1
27 32
27.2 2
27.2, 2
27.2. 2
27.2: 2
27.4 4
27.4: 2
27.6 2
272, 1
28.1 2
28.10 4
20 95
28.10: 2
20(%eax) 1
28.12 2
20(%eax), 1
28.14 2
20); 1
28.16 2
20, 3
28.1: 2
20,000,000. 2
28.2; 2
20-bit 3
28.3 2
20. 1
28.3. 2
20.2 1
28.3: 2
20.2. 1
28.5 2
20.2: 1
28.5. 2
20.4 2
28.5: 2
20.4: 1
28.7 4
20.5). 1
28.7: 2
20.6 1
28.9 4
20.6: 1
28.9, 2
28.9: 2
28K 3
28KB 2
28KB, 1
200 24
200, 3
200,000, 1
29 25
200-MHz 1
29, 3
200. 3
29.10) 2
29.11 2
29.11: 2
2000 15
29.2 4
2000, 1
29.2: 2
29.3). 2
2000. 9
29.4 4
2002. 1
29.4: 2
29.6 2
2004. 7
29.6: 2
29.8 2
2006. 6
29.8: 2
29146; 1
2008–18, 5
29147 2
29154, 1
2011. 7
2:70, 1
2013, 1
2; 5
2013. 4
2Fortunately 1
2015, 1
2K 6
2015. 1
2015/02/10/understanding-glibc-malloc/. 1
2KB 8
2017. 2
2Q 3
2018), 1
2] 2
202 1
2k 1
204 3
2m 1
20th 1
2”. 2
21.1 1
21.1: 1
21.3 3
21.3, 1
21.3: 1
21.5 1
21.7 1
215, 1
21:1, 5
21:10, 1
22 38
22, 1
22.11 1
22.2 1
22.2, 1
22.2: 1
22.3). 1
22.4 2
22.4: 1
22.6 2
22.6: 1
22.8 2
22.8: 1
220 1
3 231
23.1 1
3); 1
23.1. 1
23.1: 1
23.3 1
23254, 1
3, 25
3-GHz 1
24 37
24(%eax) 1
24(%eax), 1
24-bit 1
24. 1
24114 1
24:2, 1
3. 32
25% 1
25%. 1
2501, 1
255 2
256-byte 1
256KB 1
256m 1
30 31
30, 3
26 32
30-bit 1
26, 1
30. 2
26.2 4
30.10): 1
26.2: 2
30.11 1
26.4 4
30.11: 1
26.4: 2
30.13: 1
26.6 4
30.14). 1
26.6: 2
30.15 1
27.1 2
30.15: 1
27.1. 2
30.2 1
27.1: 2
30.2. 1
27.3 4
30.2: 1
27.3: 2
30.3) 1
27.5 2
30.4 1
27KB. 2
30.4: 1
30.5) 1
30.6 1
30.6: 1
28 33
30.8 1
28(%eax) 1
30.8: 1
28(%eax), 1
28.1), 2
300 4
28.11 2
300, 2
28.13 2
28.15 2
300. 3
28.17 2
28.2 2
3000 4
28.2: 2
3000, 1
28.4 2
28.4. 2
31) 4
28.4: 2
3121, 2
28.6 2
28.6. 2
28.6: 2
28.8 4
28.8: 2
28KB1 1
29.1 2
29.1. 2
29.10: 2
32 33
29.1: 2
32, 1
29.3 2
29.3: 2
29.5 6
29.5: 2
32-bit 16
29.7 2
324 1
29.7: 2
32868. 2
29.9 2
32896; 1
29.9: 2
335, 1
29267 1
29384 1
2: 3
2KB), 1
34 12
2KB). 1
3412382, 1
2N 2
2This 1
2github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
2’s 1
36 11
3) 2
36, 1
3), 3
36291, 1
3). 5
372K 1
3): 2
3752 1
3.33). 1
30-byte 1
3764-byte 3
30.1 1
30.1. 1
30.10: 1
38 8
30.12 1
39016, 1
30.12: 1
30.13). 1
3: 3
30.14: 1
3:0,5:100,5:100,5:100 1
30.1: 1
30.3 1
3B: 3
30.3: 1
3One 1
30.4) 1
30.5: 1
4) 2
30.7 1
30.7: 1
4), 2
30.8), 1
30.9 1
30.9: 1
4). 7
300), 1
3000; 1
4-byte 3
4.1 1
4.1: 1
31 21
4.3 1
32-bits 1
4.3: 1
320KB 2
4.5 2
32K 3
4.5: 1
32KB 5
32KB, 1
40% 5
32k 6
40-ms 1
40050 1
33 12
400MB 1
34920. 1
40100 1
34K 3
4088), 1
34KB 1
4096 3
35 12
4096, 2
36.4% 1
40KB 2
36K 1
37 8
41 10
3764 4
4146 1
384KB 1
423, 1
39 11
3906, 1
43 8
3980 3
448KB 1
3:50,3:50 2
3:50,3:50. 1
45 6
3; 3
45, 1
3A 1
47 2
3A: 2
3K 3
48KB 4
3KB 3
49 1
3KB. 2
49).” 1
3KB: 1
3Like 1
49, 2
3] 1
4904, 1
3a); 1
4:1, 1
3” 1
4:10, 1
4:3, 1
4GB 1
4KB 16
4KB, 3
4MB 2
4a 4
4a: 1
4k 1
4m 1
4page 1
4 164
4(%eax) 1
4(%eax), 1
4(%esp), 2
4, 5
4-GB 1
4-KB 3
4-bit 3
4. 27
4.1). 1
4.2 1
4.2. 1
4.2: 1
4.3) 1
4.3). 1
4.3BSD 1
4.4 2
4.4: 1
4.6 1
4.8 1
40 28
40%) 2
40, 2
40. 2
400 1
4000 3
4000, 1
40000 2
4088 1
4088. 1
4096-byte 1
4196 1
42 7
4200 4
5 169
4200, 1
44 6
5, 6
4400 1
44000 1
44:1/2. 1
46273, 1
48 9
4: 2
4:100,1:0. 1
4K) 2
5. 27
4KB). 2
5.1; 1
4MB) 1
5.2 2
4MB), 1
5.2: 1
4b 4
5.3). 1
4b, 1
5.4 2
4b: 1
5.4: 1
5% 3
5.6 1
5(2): 1
5) 3
5), 5
5). 6
5.1 1
5.1: 1
5.3 1
5.3: 1
5.5 1
5.7 1
50) 1
50), 1
50-ms 2
50? 1
50 46
51 18
50, 5
51, 3
50,000 2
51. 4
50. 1
512 9
500 4
549–557, 1
5000, 1
55 1
50th 1
55. 1
512-byte 1
56483, 1
5121024 1
56KB 2
512KB 2
57.1% 1
5:100,5:100. 1
5KB 1
512m 7
5–7), 1
52. 2
526, 1
54.5%. 1
56, 1
59–73, 1
5: 2
5th 1
5→0 2
6) 5
6). 1
6.1 2
6.1: 1
6.2) 1
6.3 1
6.3. 1
6.3: 1
6.5 1
60% 4
6 116
6100, 1
6+5 1
63 3
64). 1
6. 20
64-Byte 1
6.2 1
64-bit) 1
6.2: 1
64-bits); 1
6.4 2
6.4: 1
64-byte 7
60 13
64GB 1
6000, 1
62 2
64KB 9
64 17
64bit 1
64, 1
64k 1
64-bit 10
6= 2
655, 1
6KB 1
68 1
7) 3
7), 3
7). 2
7.1 1
7.1, 1
7.10 1
7.1: 1
7.3 2
7.3: 1
7.5 2
7.5: 1
7.6). 1
7.7 1
7.7: 1
7.8). 1
7.9 1
7.9: 1
70%. 1
7094 1
7232 1
73-96, 1
7353 1
7355 1
75 3
76–86, 1
78-101, 1
7KB 3
7 127
7); 2
7, 2
8 109
8(%eax) 1
7. 16
8(%eax), 1
7.2 1
8(9):569, 2
7.2, 1
8, 1
7.2: 1
8-bit 3
7.4 1
8-page 1
7.4. 1
7.4: 1
8. 12
7.6 1
8.1). 1
7.6: 1
8.2 2
7.7). 1
8.2: 1
7.8 1
8.4 2
7.8: 1
8.4: 1
7.9). 1
8.6 2
70 2
8.6: 1
70, 1
70–76, 1
71755, 1
80 18
7282 1
820, 1
7332 1
846 1
7354 1
86 2
7356 1
88761, 1
74 1
8KB) 1
75% 1
9) 1
76 1
9), 1
7620, 1
9). 1
9.1 1
8) 3
9.1: 1
8), 1
9.3 2
8-byte 1
9.3: 1
8.1 1
9.5 1
8.1: 1
9.5. 1
9.5: 1
8.3 2
9.7 1
8.3: 1
90% 1
90%, 1
8.5 2
93 1
8.5: 1
9548, 1
8.7 1
99 7
8.7: 1
99, 1
99.9% 1
80% 7
9” 4
80-20 4
801, 1
8049a1c,%eax 4
82% 1
83 1
85 1
85.7% 1
87, 1
8:10, 1
8KB 6
8k 1
9 119
: 289
;add 1
9, 6
;store 1
9-bit 2
< 24
9. 9
9.1). 1
<< 9
9.2 2
<assert.h> 4
9.2: 1
9.4 2
<pthread.h> 8
9.4: 1
9.6 1
<stdlib.h> 9
9.8 1
90 1
940 1
96 2
99% 2
991 1
9:2, 1
== 91
> 5
; 25
>> 11
;load 1
<fcntl.h> 2
@ 8
A) 2
A), 2
A1 3
A1’s 1
<stdio.h> 15
A; 2
ABCABCABCABCABC 1
<string.h> 2
ACHING 1
<string>\n"); 1
ACKGROUND 1
<sys/time.h> 1
AIN 1
<sys/types.h> 1
AIX 1
ALGORITHMS 1
<sys/wait.h> 3
ALLS 2
AM 2
<unistd.h> 6
AMD 1
<value>\n"); 1
AMPSON 1
<virtual 2
ANAGE 3
ANAGEMENT 17
ANDLE 1
ANDOMNESS 1
ANY 1
API 62
API, 1
API. 5
ARC 1
ARC, 1
ARDWARE 2
ARM 2
AS 10
ASIDE: 4
ASIDs, 1
ASLR 1
ASPLOS, 1
ASPLOS-IX, 1
ATA 21
ATC 2
ATTACK 1
AUSE 1
AW 5
AZY 1
Abdel-Wahab. 1
Ability 2
Abstraction 2
Abstraction: 3
Access 9
AccessMemory(PDEAddr) 1
AccessMemory(PTEAddr) 4
Accesses 2
Accessing 2
Account.html. 2
Accurate 1
Achieving 2
Act. 1
Addison-Wesley, 11
Address 25
AddressOfPTE 1
Advanced 1
Affinity 1
After 21
Again 2
Again, 3
Alan 3
Aleksey 3
Algorithms 4
Algorithm” 1
Allocated] 2
Allocating 1
Allocation 3
Allocation: 2
Allocators 1
Allocator” 2
Allows 1
Almost 1
Alpha, 2
Alternatives 1
Although 16
Alto 2
Amazing! 1
Amazingly 1
Amazingly, 4
Amazon, 1
Amazon’s 1
Analysis 5
Analysis: 1
And...? 1
Anderson, 2
Anderson. 1
Andreas 2
Android), 1
Animal 1
Answer 1
Antoine 1
Any 3
Anyhow, 1
Anything 1
Apparently 1
Apparently, 2
Appavoo, 1
Apple 3
Apple, 2
= 415
Apple’s 1
Applications” 1
Approach 1
>= 5
Approach: 5
Approaches 1
? 9
Approximate 10
April 10
April, 3
Aq 1
Architectures 4
Architecture” 3
Are 6
ArpaciDusseau. 1
Arrivals 1
Artificial 1
As 158
Aside 1
Ask” 2
Assume 33
Assume, 3
Assumptions 3
Atlas” 1
Atlas”, 1
Austin 3
Austin, 1
Authors: 1
A’s). 1
B 157
B+96, 2
B, 22
B-Trees: 1
B-trees); 2
B-tree” 2
B. 18
B97, 2
B: 12
BAD! 2
BEST 1
BETTER 1
BF 2
BOUT 1
BSD) 1
BUCKETS; 2
BUCKETS], 4
BUILD 1
Baby 2
Baby: 2
Bach. 1
Background: 1
Balakrishnan 1
Baron, 1
Barton 3
Base[SN] 1
Base[Segment] 1
Basic 10
Basically, 5
Batch 1
Battle 1
Baumann, 1
Because 50
Behind 4
Benchmarking” 1
Bertinoro, 1
Best 2
Better 4
Better, 1
Between 2
Beyond” 1
Bhandarkar 1
Big 2
Bigger 1
Birrell. 2
Bits 1
Blasgen, 1
Blocked 4
Blocked: 1
Blumofe, 1
Bone: 2
Boneh. 1
Boot 1
Borg. 1
Bovet 2
Bovet, 1
Bradford 2
Brian 2
Brinch 7
Brooks 1
Brooks. 2
Bryant 4
Buddy 1
Buddy-managed 1
Buffer 9
BufferOverflow.pdf. 1
Build 4
Building 5
Burchfiel, 2
Burnett 1
Bus 1
Butler 3
Butter 2
Buttlar, 2
Buy 1
Bye 1
B’s 8
B’s. 1
C) 3
C), 5
C-callable 2
C-language 1
C.A.R. 1
C9 1
C95]. 1
C; 2
CA, 7
A 728
CACM 1
CACM, 5
A, 16
A. 29
CFS 40
A2 1
A2, 1
CFS, 3
A2’s 1
CHEDULE 2
CHEDULER 1
A: 13
CISC 7
ABOUT 1
CISC, 1
ACE 1
CISC. 1
ACHE 1
CLOCK 2
COND 2
CONDITIONS 1
ACM 11
ACM, 19
ACM. 2
ADD 1
ADDRSORT, 1
AFIPS 4
AKE 1
ALICIOUS 1
ALLOCATED 2
ALWAYS 1
AMAT 4
AMAT, 1
AMAT: 1
AME 1
AN 18
AND 6
ANGRY. 1
APIs 10
APIs, 4
APIs. 1
APPING 1
ARGE 1
ARPACI-DUSSEAU 38
ASID 9
ASID, 1
CPU 255
CPU(s) 1
CPU, 33
CPU-bound; 1
CPU-intensive 4
CPU-optimized, 1
CPU. 31
CPU: 1
CPUbound 1
CPUs) 1
CPUs), 1
CPUs). 4
CPUs; 2
CPUs? 3
CR3 1
CREATE 1
CRUX: 6
ASY 154
CS 1
AT 1
CVs 2
AT&T/Bell 1
ATOMIC 2
AUER 1
Cache 18
AVOID 7
Caching” 1
Calculate 1
About 5
California, 6
Above 3
California. 3
Abstractions 1
Abstract” 1
Call 8
Callers 2
AccessMemory(PhysAddr) 6
Accounting 1
Calling 8
Acta 1
Cambridge, 2
Actually 4
Came 2
Actually, 1
Adam 1
Adaptation 1
Adding 7
Address-space 1
Afraid 2
Ah 1
Can 40
Ah, 2
Canada, 4
Aha! 1
Canada. 2
Ahead 2
Candea, 1
Ajay 2
Canyon 1
Carl 5
Al 8
Case 4
Algorithm 5
Case, 1
Algorithms” 1
Cassandra, 1
Certain 1
Change 4
Chapman 2
All 21
Characteristics 1
Allocate 3
Charles 1
Allocated 9
Check 8
Chemistry, 1
Allocation” 3
Child 1
Allocator 1
Child: 2
Allocator: 1
Christenson. 1
Along 2
Chunks 2
Circuitry 1
Classic 1
Also 10
Clayton 1
Also, 1
Alternately, 2
Clearly, 9
Always 4
Clock 2
Close 2
Clustering 1
Coalescing 2
Coarse-grained 1
Cobham. 1
Cobham’s 1
Coding 1
Coffman 1
Coherence 1
Come 3
Come, 1
Commu-nications 1
An 65
Compacted 3
CompareAndSwap(int 2
Comparing 2
Compatible 1
Compilers 1
Compiling 2
Completely 5
Completion 4
Complex 1
Computers 2
Computers, 3
Computer” 5
Computing 4
Computing, 3
Concept: 1
Concurrency), 1
Concurrency? 1
And 108
Conditions 1
And, 2
Conditions: 1
Conference 1
Andrea 7
Andrew 4
Conference, 7
Anita 1
Considered 2
Annals 1
Consistency 1
Annual 1
Contents 1
Anomaly 2
Contents: 1
Anomaly. 1
Contrast 2
Anoop 2
Conversely, 3
Convoy 1
Corbato 4
Corbato, 5
Corbato. 1
Another 38
Corbato’s 1
Anticipatory 2
Cores 1
Applications 4
Corporation 1
Approach” 3
Corporation, 1
Approximating 1
Corporation. 1
Approximation 2
Correct 4
Correcting 1
Architecture 9
Correspondingly, 1
Architecture. 1
Corwin, 1
Costs 1
Architecture: 4
Aren’t 1
Counter 6
Argument 2
Countermeasures” 2
Arpaci-Dusseau 3
Counters” 2
Cox, 1
Arpaci-Dusseau, 10
Cox. 1
Arpaci-Dusseau. 3
Craft 1
Array 4
Create 3
Art 3
Create: 1
Assign 1
Critically, 1
Assignment 1
Cup 1
Cups” 1
Assuming 10
Custer 1
Custer, 1
Cybertron 1
At 31
Atlas 10
Atlas. 2
Atlas: 3
Atlas”; 1
Atomic 2
Atomically, 2
Atomicity 2
Attacks 1
Attempt 3
Attempt: 4
August 5
August, 1
Automatically 1
Available 8
D 109
D, 2
Available: 29
Average 1
Avere 1
Avoiding 1
Award 2
D. 33
Award. 1
D.H.J. 1
D.R. 1
A’s 7
A’s, 1
B) 3
B). 2
B-tree 2
DATA 16
B-tree, 2
DD 1
B.W. 1
B1 1
DEC 3
B1’s 1
DEKKER’S 1
B5000 4
DOO 1
B5000: 2
DOS 1
B86], 1
DRAM 1
B; 1
DRAM, 1
B? 1
Daggett, 1
Dahm 4
BASED 17
Darago, 1
BE 1
BFS 1
BFS, 2
BFS. 1
Data 13
BIQUITY 1
Data: 2
BSD 3
Dave 3
BSD. 1
BSTRACTION 20
David 19
BUCKETS 2
David, 2
Babaoglu 1
Dead: 1
Babaoglu, 1
Deadline 2
Bad 3
Dealing 1
Bairavasundaram, 1
Death 1
Bart 2
Debugging 2
Base 3
Decay-Usage 1
Base-and-bounds 2
Decepticons1 1
Base/Bounds 1
Decision 1
Base/bounds 2
Dekker, 2
Basu, 1
Bayer. 1
Dekker’s 6
Dennis) 1
Be 5
Department, 1
Became 1
Depending 2
Descheduled 1
Design 3
Design, 1
Before 21
Despite 1
Before, 2
Destroy: 1
Begin 1
Detailed 1
Beginning: 1
Details 1
Determining 1
Being 3
Developer’s 4
Belady 3
Dharmendra 1
Belady, 1
Belady. 1
Dialogue 3
Belady’s 2
Diego, 4
Bell 2
Digital 2
Below 2
Berger 2
Berger, 2
Dijkstra 12
Dijkstra, 4
Berkeley 7
Berkeley, 2
Berkeley. 1
Dijkstra. 9
Bershad, 1
Beth 1
Dijkstra’s 5
Dilemma” 1
Dirty 2
Beyond 14
DisableInterrupts(); 2
Bill 1
Discusses 2
Binary 1
DiskRead(PTE.DiskAddr, 1
Bit 3
Distribution 1
Bit-precision” 1
Distribution, 1
Bits” 1
Doctoral 1
Björn 1
Doesn’t 1
Black 1
Donald 1
Done 1
Donkey. 1
Block 9
Bobrow, 2
Boilen, 2
Boles. 2
Bonwick 3
Don’t 17
Bonwick. 1
Boost 2
Download 4
Bosch, 1
Dr. 1
Boston 1
Druschel, 1
Boston, 3
D′ 2
E) 1
Both 7
E.W. 2
Bottom 1
EAD 1
Bounds[Segment]) 1
EAKED 1
Bouron 1
EAL 1
Bouron, 1
EALING 1
Boyd-Wickizer, 3
EARN 1
Broken 3
EASON 1
Broken: 1
Brother” 1
Bruce 1
Buffer) 1
Buffer” 1
Burroughs 5
Burroughs, 1
EASY 38
EC2 1
ECESSARILY 1
But 49
But, 7
Butenhof. 2
ECHANISM 30
ECHNOLOGIES 1
ECIDE 1
ECTION 1
ECURE 2
EDUCE 1
EE 1
EECS 1
EG 1
EGAIN 2
By 58
EKKER 1
B’s). 1
ELOCATION 2
EMBRYO, 1
EMORY 36
EMORY-M 1
EMORY: 26
END), 1
END? 1
EPARATE 1
EPLACEMENT 2
EPRESENT 1
C 212
C++ 2
C, 12
C. 24
C.H. 1
C.J. 1
C: 2
CCESSES 1
CCS 3
CFS) 1
CFS” 1
CHEDULERS 1
ERSION 166
ERSISTENTLY 1
ESIGN 1
ESX 2
ETERSON 1
ETTER 1
CHEDULING 50
CMU 1
EVEL 11
CODE 2
EXCLUSION 1
COMPCON 1
EY 4
CONCURRENCY 3
Earl 3
Earlier 2
CONCURRENCY: 15
Earth 2
Easton, 1
Easy, 2
CONCURRENT 15
Edition)” 2
Edsger 8
CONDITION 19
Edwards, 4
CONDITION, 1
Effectiveness 1
CONTROL 2
Eindhoven 2
COW 3
Electroanalytical 1
Electronic 2
CPU), 6
Elias 1
CPU). 1
Emacs7 1
CPU-bound 2
Embedded 1
Emery 1
Engineers 1
English 1
CPU; 11
Enough 1
Entry 3
CPU? 11
CPUintensive 1
Environment” 4
EnvyFS” 1
Epema. 1
Epema’s 1
Equipment 2
Era 2
Errors” 1
CPUs 37
Europe(!). 1
Evaluating 4
CPUs, 14
Evaluation 2
CPUs. 7
CPUs: 1
CRITICAL 1
CV 2
Even 20
Cache-Affinity 1
Ever 2
Caches 3
Evolution” 2
Cache” 1
Exactly 1
Caching 1
Exactly. 2
Caching, 1
Calls 4
Candy 1
Capel 2
Example 18
Casting 1
Center, 1
Example: 6
Certainly 1
Examples”. 1
Certainly, 2
Excellent 1
Cesati. 3
Chang, 1
Exclusion 4
Chapter 1
Cheap 1
Chevalley, 1
Execution 8
Chile. 1
Experimental 2
Chou, 1
Extra 1
Chunk 1
Cilk 1
Cilk-5 1
Clark. 1
Class? 2
Claypool 1
Clear 1
Clements, 3
F 36
Cocke 1
Cocke, 1
F. 8
F.H. 4
F.J. 1
Code 24
Code00 2
FAST 7
Code: 2
FAULT 1
Cohen, 1
FFICIENT 1
Coherence” 1
Colorado, 1
Com-puting, 1
Comes 1
Comment 2
Commodity 1
Common 3
FIFO 37
Communications 20
FIFO, 7
Compaction 2
FIFO. 4
Compare-And-Swap 2
FIFO: 1
Compare-and-swap 2
FIFO’s 1
Compared 2
FILENO). 1
Compile 1
FIRST 1
Complete 1
FIRST)? 1
Computations” 3
FLOW 1
Compute 4
FOOLISH 1
Facebook, 1
Facebook. 1
Factors 1
Computer 20
Failing 3
Computer, 6
Failure 4
Computers” 1
Computing; 1
Fair 6
Concepts 2
Conceptually, 2
Concept” 1
False) 10
Concurrency 1
Farm 1
Concurrency. 1
Farrell, 2
Concurrency: 2
Fast 4
Fast, 2
Concurrent 25
Fault 4
Condition 6
Conditions? 2
Conference; 1
February 16
Consider 2
February, 1
Considering 1
Fekete. 2
Context 3
Fellner, 1
Fetch 5
Control 11
Fetch-And-Add 2
Control, 1
FetchAndAdd(&lock->ticket); 2
Control: 1
Controlling 2
Convention. 1
Conway. 1
Cool, 1
Cooperative 1
Copper 1
Copy-on-write 1
Corbet. 2
Core 3
Cores” 2
Corporation” 1
Could 1
Couleur 1
Couleur, 2
Couleur. 1
Counters 8
Counting 2
Covering 2
Creating 2
Creation 6
Creation: 1
Critical 2
Crockford’s 2
Culler, 2
Culler. 1
Culler’s 1
Currency 1
Current 3
Cutler, 1
C’s 1
C’s, 2
D) 3
D.A. 1
D.B.G. 4
DBMS), 1
DDRESS 25
DID 1
DMA). 1
DO 1
DVANCED 13
DVICE 1
Daily 1
Daley 1
Daley. 1
Daniel 3
Database 1
Davis 8
Days 1
DeWitt. 1
December 8
Deciding 1
Declaring 1
Default 1
Definitely 1
Definition 1
Figure 335
Delete 1
File 3
Denning 1
File-System 1
Denning. 2
Denning’s 1
Final 4
FindFreePhysicalPage() 1
Dennis 6
Dennis, 2
Dennis. 1
Design” 4
Detail 1
First 23
Detect 1
Detection 1
Deterministic? 1
Deuterium” 1
Devang 2
Development 2
Development, 1
Dick 2
Dickey. 2
Different 5
Dijkstra; 1
First, 58
Direct 8
Directory 5
Directory, 1
First-in→ 11
Discovering 1
First: 1
Flag 2
Disk 5
Flash-based 1
Dissertation 1
Fleischmann 1
Dissertation, 1
Fleischmann, 1
Distributed 5
Flesh 2
Flow 6
Do 18
Forin, 1
Form 1
Fourth, 1
Framework 1
Francisco, 1
Frankenstein 1
Frans 4
Does 29
Free 8
FreeBSD” 1
Freedom 1
Freeing 2
Doing 23
French 2
Dominion 1
Frequency 1
Douglas 1
Friedman, 1
Dynamic 7
From 23
From: 1
Fujiki, 1
Full? 1
Function 2
Further, 8
Fusion 1
Futex 2
G) 1
G.A. 1
G62]. 1
GAINST 1
GB) 2
GB). 1
GBs 1
GE, 1
GNU 3
Gates 1
Gecsei, 1
Generalized 1
Geometry 2
Germond. 3
Get 5
Getting 1
Gibson, 1
Ginting, 1
Glaser. 1
Glenn 4
Go 4
Goals 2
Goh, 1
Going 1
Golding, 1
Gollum, 1
E 195
Goodness, 1
Gorman. 1
Graham. 2
Grows 2
Gruss, 1
E. 20
Guide 3
EALLY 1
Guide. 1
EASUREMENT 1
EBOOT 1
EC-11, 1
EC-11:2, 1
ECHANISMS 11
EEDBACK 11
EFERENCE 1
H 42
H&P 2
EGMENTATION 12
ELADY 1
END, 1
ENERALITY 1
ERFECT 1
H. 20
ERFORM 1
ERMINOLOGY 1
ERMS 4
ESOURCES 1
HARE 14
ESS 1
HERE 1
ESTRICTED 1
HFE-1:1, 1
ETH 1
HICH 1
ETTING 1
HINK 1
EVELOP 1
HOW 6
HP, 1
HREAD 12
EYOND 27
Each 19
Earliest 1
Early 3
Ed2.pdf 1
Ed2.pdf. 2
Edward 2
Efficiency 2
Efficient 2
Either 4
Electronics, 1
Eligible 2
Elliott 1
Emacs 1
Emacs. 1
Embedding 1
EnableInterrupts(); 2
Engineering 1
Envision 1
Errors 3
Evans 1
Evans. 1
Every 1
Everyone 1
Evict 4
EvictPage() 1
Evolution 1
Examination 1
Examine 9
Examples 3
Exception 1
HREE 154
HTTP 1
Execute 7
Hall/CRC 2
Experiment 1
Handbook 2
Extract 1
Handle 4
Hank 2
Harcourt, 2
FASTER 17
FAULTS 2
FFICIENTLY 2
FIFO; 2
Hardware 18
FIFO? 1
Hardware/Software 1
FILENO 1
Hardware?” 1
FOR 2
Harmful” 2
Facebook) 1
Harper 1
Facebook). 1
Harry 2
Factor 2
Has 1
Fagin. 1
Failed 2
Hash 8
Fairness 2
Hash_Init(hash_t 2
Fall 5
Hash_Lookup(hash_t 2
Far 1
Farm” 1
Faster 2
Feedback 5
Heap 16
Festschrift 1
Heap: 1
FetchAndAdd(int 2
Hear 1
Figures 2
Heart 2
Fill 1
Heinrich. 3
Helen 1
Henry 1
Here 30
Finally, 70
Find 4
Here, 13
Finding 2
Here’s 4
Fine-grained 1
Hershey 1
Finite 1
Hershey. 1
Finnish 1
Hey, 1
Firefox, 1
Hierarchies” 1
High 2
Fit 4
His 3
Flexible 3
Follow-on 1
Historical 4
History 4
History: 1
Hits 2
Hits+M 1
Hive/HDFS, 1
Hmm... 2
Hoc 2
Homework 28
Hopefully 2
Hopefully, 4
House, 1
Hovav 1
For 194
Forget 1
Forgetting 3
Formalizations” 2
Fortunately 2
Fortunately, 9
Fox. 1
Frame 1
Fred 1
Fredkin, 2
Free-Space 1
FreeBSD 3
FreeBSD, 1
Frigo, 1
How 141
Fun 3
How, 1
Future, 1
G 12
G. 9
G.L. 2
GB 7
GHz 2
GUIDELINES 1
Gain 2
Gaming 2
Gandhi, 1
Garner 1
Generally 1
Generally, 1
Generate 2
George 2
Gets 2
Given 15
Golub, 1
Good 8
However, 120
Good, 1
Goodman. 1
Hugh 4
Goodman’s 1
Hybrid 2
Google 2
Hydra 1
Google, 2
Hydra. 1
Gouicem, 1
I! 1
I/O) 2
Gray 6
I/O), 3
Gray, 1
I/O). 3
Gray. 2
I/O; 3
Gray’s 2
I/O? 1
Great 5
I/Os 3
Greenfield. 1
I/Os. 1
Group, 1
IA-32 4
Grove, 3
Growing 1
IALOGUE 4
Guerraoui, 2
Guide” 1
Gupta. 2
IBM 9
HAPTERS 1
IBM, 1
HARES 1
IDs 2
HARING 2
IEEE 7
IF) 1
IGHT 1
IMITED 15
INITIALIZER, 2
INITIALIZER. 2
INTERLUDE: 11
HE 83
INTRODUCTION 15
INUX 1
HEN 4
HINGS 1
HOLD 1
IO 7
HPUX 1
IP) 1
HREADS 1
HW 1
IRE 5
IRIX 1
HY 5
IS 1
ISBEHAVIOR 1
ISCA 4
IST 2
ISTORY 1
IT! 1
HYSICAL 27
ITS 1
Idea1 1
Hall, 5
Handbook” 1
Ideally, 2
Handled) 1
Ideas 2
Handles 1
Hansen. 5
Hansen’s 2
Happened 2
Hard 1
Hash_Insert(hash_t 2
Hastings, 1
Having 4
Hawkins, 1
Imagine 39
Hazelwood, 1
Imagine, 4
He 3
Header 2
Implementation 6
Heap01 2
Inc.. 1
Heavyweight 1
Included 1
Hence 2
Incorrectly 1
Hennessy 3
Increase 1
Herlihy. 2
Hill 1
Hill, 3
Index 11
Hill. 1
Induced 1
Hint: 2
History” 1
Information 6
Initial 3
Initialize 3
Innocent 2
Innovator’s 1
Hit 29
Inserts 2
Hit/Miss? 4
Hoare 4
Hoare. 1
Hochshule 2
Holding 1
Instead 20
Holt. 1
Home 1
Hong-Tai 1
Instead, 7
Horn. 3
Instinct, 1
HotOS 2
Instruction 4
How? 1
Huge 2
Human 1
Intel 10
Humorously, 2
Intel, 2
Hussein 1
Intel. 1
Hydra” 1
Interaction 1
Interactive 1
Interesting 1
Interlude: 4
Internals: 3
International 3
International, 2
Interrupt) 1
Interrupts 2
Interscience, 1
Introduction 8
Intuitively, 1
Ion 2
Is 14
Isolation 1
Israel. 1
Issues 6
Italian, 1
Its 4
It” 1
I’d 1
I’ll 3
I” 1
J 1
I 171
I, 1
I. 1
J. 33
Jackson-Edwards. 1
Jain. 1
Jain’s 1
James 1
January 14
January, 2
Java. 1
Jiaqi 2
Jim 8
Jing 1
Job:A 1
Job:C 1
Jobs 2
I/O 86
Joe 3
I/O, 3
Joe’s, 1
I/O-intensive 2
Johnstone, 2
Joint 5
I/O. 10
Joy 2
Joy, 1
I/O: 4
Joy. 1
IBM” 1
Joyce. 1
ICKETS 1
Jozef 2
Jr., 1
ID 7
Juan 1
Julin, 1
July 4
June 13
June, 1
Just 15
K+96]. 2
KASLR” 1
KB) 3
KB), 1
KB). 1
KB-64 1
KB; 2
KPTI 1
KPTI, 1
Karels, 1
Keeps 2
Ken 2
Kernel” 1
Kleinrock. 2
Knowlton 1
Knowlton. 1
Knuth 6
Knuth. 1
IECES 154
Kuehner. 1
IFIPS 1
IGHER 1
II) 1
IKE 1
IME 2
IMER 1
IMMEDIATE 2
INDETERMINATE, 1
INVERSION 1
IO). 1
L 59
L->head; 8
IP 41
L. 10
L1) 1
IRECT 15
L2 1
L4 3
L4. 1
L60, 1
IRTUAL 19
L78]. 1
LATER 1
IRTUALIZATION 5
LATER, 1
LDE). 1
IRTUALIZE 5
LISP 1
ISN’T 1
LLOCATE 1
ISSES 1
LLUSION 1
IT 3
ITH 4
ITHOUT 2
IZES 1
Idea 2
LOCKS 23
LOW 1
LRU? 2
LWAYS 1
LaTeX, 1
Labs 2
Lampson 6
Lampson, 2
Lampson. 2
Lampson’s 1
Lanigan, 4
Lanyue 4
Larry 1
Las 1
Last 1
Late 1
Later 2
Later, 2
Lavington. 3
Law, 2
Law. 2
Leaks 1
Learn 1
Learning 2
Lee. 1
Leffler, 1
Leiserson, 1
Length 1
If 167
Levin, 1
Levy 1
If, 9
Levy, 5
Implement 4
Levy. 2
Implementation” 1
Library” 2
Implementing 2
Life 1
Lighting 1
Limited 6
Line 3
Linux 107
Linux); 1
Linux, 15
Linux-based 3
Linux. 8
Linux’s 2
List 7
List: 2
List_Init(&H->lists[i]); 2
List_Init(list_t 4
List_Insert(&H->lists[key 2
List_Lookup(list_t 4
Little 2
Liu, 1
Live 1
Load 4
Load-Linked 2
Load-linked 2
LoadLinked(int 2
Loading: 2
Loads/Stores 2
Locks 29
Locks, 1
In 387
Locks: 2
In, 2
Locks”) 2
In-ternational, 1
Long 1
Includes 2
Long-Running 1
Incorporating 1
Long-running 1
Incrementalism, 1
Looping 1
Indeed 1
Looping-Sequential 1
Lots 2
Low 2
Lucco, 1
Indeed, 20
Lynch, 2
Indeed. 1
M.I.T., 1
Influenced 1
M.K. 1
Informatica, 1
MA, 2
Ingo 1
MALICIOUS 1
Inputs 1
MANUAL, 1
Instructions 1
Instrumentation” 1
MASK 3
Intelligence 1
MAX_HEAP_SIZE; 1
Intel’s), 1
MB) 1
Interestingly, 3
MIN 1
Interludes 1
Internet 1
MIT 5
Interposition 1
MIT, 1
Introduced 3
MIT. 1
Introduction), 1
MIT’s 1
Invalid 2
Inverted 1
Investigator. 1
Isn’t 2
Isolation” 1
Issue 4
Issue: 3
MLFQ 32
MLFQ. 2
MLFQ: 3
MMU; 1
MORTIZATION 1
MPLEMENT 1
MQMS 2
MQMS, 1
MRU 2
MUTUAL 1
Ma. 2
Mac! 1
Mac) 1
Machine” 1
Macintosh 2
Make 5
Man 3
Man-Month” 1
Management” 2
Manager” 1
Managing 1
Manchester 3
Mangard. 1
It 92
Manual: 3
Italy. 1
Manuals” 3
It’s 4
Marco 2
Iyer, 1
Markowitz, 1
Markstein. 1
I’m 5
Massachusetts, 1
J.S. 1
Massachusetts. 2
Jack 5
Matteo 1
Jacob, 1
Mattson, 1
Jacqueline 2
Maurice 2
Jason 1
Maurice, 1
Jaswinder 1
Mauro 2
Javascript 2
Maxwell’s 2
Jeff 3
Maybe 1
Jeffrey 1
Mayer. 2
McCall. 2
Job 11
McDougall. 3
Job:B 1
McKinley, 1
McKusick, 1
McVoy 1
John 14
Measure 5
Johnson, 1
Measurement 2
Jonathan 3
Measurement, 1
Jones. 2
Mechanisms 3
Media, 3
Jose, 7
Josep 1
Mellor-Crummey 4
Joseph 1
Meltdown 2
Meltdown, 1
Memory” 1
Journal 7
Journal, 2
Mesa 4
Mesa, 1
K 6
Methods 1
K. 1
Metric: 1
KASLR, 1
Microprocessor 3
Microsoft 4
Microsoft, 1
KB 18
Microsoft’s 1
KB); 1
Microsystems 1
KB, 1
Microsystems, 1
KB-32 2
Microsystems. 1
Mike 2
KB. 4
KB64 1
Minimally, 3
KEY 1
Minimize 2
KNOW 1
Miscellaneous 1
KPTI) 1
Kaashoek, 4
Kanev 1
Kanev, 1
Kathryn 1
Kaufmann, 5
Kawamoto, 1
Miss 29
Kay 1
Mitchell. 1
Keep 4
Modadugu, 1
Keeping 2
Modeling” 1
Keith 1
Mogul, 1
Kenneth 2
MongoDB, 1
Montreal, 1
Kernel 14
Morgan 6
Kernighan, 1
Morgan-Kaufmann, 2
Key 1
Morris, 4
Kilburn, 4
Morse. 1
Kleiman, 2
Moseley, 1
Know 2
Most-Recently-Used 1
Knowing 3
MostFrequently-Used 1
Krieger, 1
Motivating 1
Moving 1
L->head 8
Mozilla 1
Mudge. 1
L1 4
L3 1
Multi-Level 4
L4) 1
LATER? 1
Multi-level 7
LAW) 2
Multics” 1
LDE 1
Multiple 1
LESS 1
Multiprocessing. 2
LEXIBLY 1
Multiprocessors. 2
LGORITHMS 1
Multiprogramming 4
LL/SC 2
Multithreaded 3
LOCK 2
Mutual 4
Mysterious 1
LOCK-BASED 15
LRU 33
N 41
N. 7
LRU, 11
NCE 1
LRU-like 1
NCREMENTALISM 1
LRU. 3
LRU’s 3
ND 10
NDETERMINATE 1
NECESSARILY 1
LRU→ 11
NIX! 1
LW 1
NOMALY 1
LWN 2
Labs” 1
NOW 1
Lacking 1
NPUTS 1
Lamport’s 1
Languages 2
NT 4
Language” 2
NT, 1
NTERLUDES 1
Large 2
NTERPOSITION 1
Laszlo 1
NTERRUPT 1
Lauder. 1
Lauer 2
NULL) 6
Lauer. 2
Lauer’s 2
Lawall, 1
Laziness 2
Least-Frequently-Used 1
Least-RecentlyUsed 1
Leave 1
NULL; 22
Lectures 1
Led 1
NUMCPUS; 4
Leonard 2
NUMPAGES 2
Lepers, 1
NUMPAGES. 1
NVERSION 1
NX 1
Namely, 1
Let 18
National 1
Letters 3
Naval 1
Letters, 2
Neat 1
Need 2
Nemacolin 2
NetBSD, 1
Network 1
Netzer 2
Neumann 2
New 9
Nichols. 2
Nickolai 4
No-eXecute), 1
Node_t; 1
Non-compacted 1
Nope, 1
Let’s 90
Levels 1
Libraries 1
Libraries: 1
Licklider. 3
Like 6
Note 34
Like, 1
Note, 2
Limits) 1
Lindberg, 1
Linear 2
November 10
Linked 8
Linus 1
Linux) 2
Linux). 5
Linux” 1
Lipman 1
Lipman. 4
Lipp, 1
Lisa 1
List_Insert(list_t 4
List_Lookup(&H->lists[key 2
List_Pop() 1
Lists 5
LoadLinked 2
Lock 12
Now 79
Lock-based 2
Locking 2
Locks.” 2
Logistics 1
Longer 1
Look 1
Loops 1
Lord 1
Now, 26
Nuclear 1
Lottery 6
O(n) 1
Louisiana. 1
OAD 1
Low-level 1
OBS 1
Lower 1
Lu, 4
Lu. 2
OCKS 23
ODE 2
OFFS 1
OFFSET_MASK 7
OFTWARE 1
OK 4
OK, 11
OK. 2
OK: 1
OLICIES 16
OLICY 4
OMPILED 1
OMPLETE 19
M 139
ONCURRENCY 3
ONCURRENCY: 15
M. 35
ONCURRENT 16
M.J. 6
ONDITION 1
M62, 1
ONG 1
M83]. 1
ONSIDER 1
MAC 2
ONSTANTS 1
MAC, 1
ONTEXT 2
ONTROL 8
MALLER 15
OO 1
MAP_ANON|MAP_PRIVATE, 1
OOPERATION 1
MAX) 1
OOT 1
MAX; 2
OPERATIONS 1
MB 1
OPT? 1
MB, 1
ORE 2
MBALANCE 1
MEMORY 1
MIN). 1
MIPS 14
MIPS, 2
MIT), 1
MLFQs 1
MM00]. 2
MMU 3
MMU, 1
MMU. 2
MORE 2
MPORTANCE 1
MQMS). 1
MS-DOS 1
MS-DOS. 1
MULATING 1
MUTEX 2
Mac 12
Mac, 1
Mac. 1
Mach 1
Mail. 1
Main 1
Maintenance 1
Making 3
Malcolm 1
Malloc(), 2
Malloc(sizeof(myret_t)); 2
Management 11
Management, 2
Manchester; 1
Manifesto” 1
Manuals 1
Manual” 3
ORG 166
Manual”. 1
ORK 1
OR’d 1
Many 21
Mao, 3
March 14
March, 1
Mark 14
Mars 5
Mars?” 2
Martin 1
Marvin 1
May 11
May, 1
McCarthy 2
McCarthy, 2
McCarthy. 2
McCarthy’s 2
McGee. 1
McGraw-Hill, 2
Measuring 2
Mechanism 1
Mechanism: 2
Meehean. 1
Meehean’s 1
Megiddo 1
Melvin 1
Membrane 1
Memory 58
Memory, 1
Memory-mapped 1
Memory: 3
Menace 1
MenuMeters 1
Merritt, 2
Mesa” 1
Metha 2
Metrics 1
Michael 10
Michael, 2
Microprocessors 1
Microsoft) 1
Miller. 2
Milton 1
Minneapolis, 1
Miss? 1
Mistakes 1
Mitoma, 1
Mixed 1
Models” 1
Modern 3
Modha. 1
Moir 6
Molnar 1
Monitors 1
More 24
Most 9
Mountain, 1
Mr. 1
Much 9
Muller, 1
Multi-Queue 1
Multi-Threaded 2
Multi-threaded 1
Multics 14
Multics, 6
Multics. 1
Multiprocessor 4
Multiprocessors” 5
Multiprogrammed 5
Murphy, 2
Must 2
Mythical 1
NABLES 1
NBA 1
NDERSTAND 1
NE 1
NGINEERS 1
NIX 55
NIX, 2
OS 504
NIX-based 6
NIX. 2
NIX/C 1
NIX: 1
NOT 1
NOWLEDGE 1
NSA? 1
OS, 31
OS-ignorant) 1
NTERLUDE 35
OS. 26
OS: 1
OSTEP! 2
OSes 2
OSes, 1
OSes. 1
OS’s 4
OU 1
OUBT, 1
OUR 2
NTRODUCTION 59
NT” 2
NULL 20
OW 34
OWERFUL 1
O_CREAT|O_WRONLY|O_TRUNC, 1
O_WRONLY|O_CREAT|O_TRUNC, 1
Obviously 1
Occur 1
NULL); 35
October 17
Oddly 1
Often 1
NULL, 20
NULL2 1
NUTH 1
NY, 1
Nancy 2
Narrow 1
Navarro, 1
NeXTStep 1
Needed 1
Neely, 2
Negative-Growth 1
Neither 1
Nelson 1
Nelson, 1
Nethercote, 1
Nethercote. 1
Nevada, 1
Newell, 1
Next 2
Next, 9
Ngram 1
Nice. 1
Nimrod 1
Nir 2
No 10
No, 2
No-Locality 2
No. 6
Nobel-prize 1
Node_t 1
Non-Coalesced 1
Non-Cooperative 1
One 135
Only 10
Oops! 2
Open 2
Not 23
Operations 3
Notes 4
Optimal 3
Nothing 4
Oracle 3
Novark 1
Oregon. 1
Novark, 1
Organick. 1
Now? 2
Organization” 1
Nucleus 2
Orleans, 1
Nucleus. 1
Orran 1
Number 8
Numbering 1
Other 15
Otherwise, 1
Our 25
Ousterhout 3
Ousterhout, 2
Ousterhout. 3
Ousterhout’s 2
Out 2
Over 6
Overflow 1
Overhead 3
O 247
O(1) 4
O(log 1
O. 1
OCALITY 1
OCK 16
ODING 1
OES 1
OESN 1
OF 9
OFFSET 1
OINTER 1
OK! 2
OK; 1
OK? 2
OLUTIONS 1
OMEWORKS 2
OMPARING 1
OMPLEXITY 1
ON 12
ONTENTS 1
OOK 1
OOLS 1
P 280
P. 12
P0 4
OPERATING 42
P1) 1
P2 3
OPT 4
P4 1
OPT. 1
P4, 1
OPTIMIZATION 1
P6 1
ORRECT 2
OS) 2
PACES 8
OS), 2
PAGES 2
OS). 2
PAGESIZE 1
OS; 8
OS? 4
PAGING 22
PCs, 2
OSDI 10
PD 2
OSSIBLE 2
PDBR 2
OSSpinLock 2
PDEAddr 2
PDIndex 1
PDP 1
PDPTA’97, 1
PD_MASK) 1
PEED 1
OSTEP. 166
OSTS 1
OS” 1
Object-Caching 1
Obtaining 1
PERATING 184
PETERSON’S 1
PF 3
Of 70
Offset 15
PFN 43
PFN, 1
Oh 5
PFN_SHIFT) 1
Oh, 1
PID) 1
Old 2
PID). 1
PPROPRIATE 1
PRIORITY 1
PROGRAMMER 1
PT 2
On 21
PT: 2
PTBR 5
PTE.present 1
PTEAddr 6
PTEs 3
PTEs. 1
PTHREAD 4
Once 41
One”. 1
PTHREAD_MUTEX_INITIALIZER; 7
OpenSolaris 1
PTIMIZATION 1
PTIndex 1
PT_MASK) 1
Padegs. 1
Page-Fault 2
PageTable[1] 1
Pages 5
Page” 2
Paging 6
Operating 38
Paging, 1
Operation 1
Paging: 4
Palo 1
Paperbacks, 1
Or 9
Parent 6
Or, 7
Park, 2
Organization 1
Particularly 1
Orr, 1
Parts”.) 2
Orwell. 2
Pass(B) 1
Orwell’s 1
Patel 1
Ott. 1
Patel. 1
Overall, 3
Patent 1
Overflows 1
Patterson 2
Overlap 2
Patterson, 1
Overview 3
Patterson. 2
O’Hallaron 2
Paul 3
O’Hallaron. 2
Pennsylvania, 2
O’Reilly 3
O’Reilly, 2
O’Reilly. 2
Performance 11
P.M. 1
Perry. 1
P0), 1
Personal 2
P1 6
Pesterev, 3
P1, 2
P1’s 1
Peter 5
P3 1
Peterson 2
P=0 1
Peterson. 2
Peterson’s 6
Ph.D. 3
Phenomenon” 1
PACE 21
Phipps 1
Physical) 1
PAGE 6
Physics), 1
PAT 1
PAT, 1
Pilot 5
Placing 1
Play 1
Plenty 1
PC 16
Plus 1
Point 1
PC, 7
Policies 3
PCD 1
PCD, 1
Policy 6
Policy: 2
PDE 8
Pollack, 1
PDE, 1
Pons 1
PDE. 1
Pons. 1
PDP-10” 2
Poor 1
PD_SHIFT 1
Portland, 1
PERATIONS 2
Positive? 2
PFN) 2
PowerPC 1
PFN=55 1
PHit 1
PowerPC, 3
PID 5
Prentice 4
PID. 1
Prentice-Hall 1
Prentice-Hall, 7
Presented 1
Presumably 1
Pretty 8
Previously, 1
Principles” 2
Prints 1
PIECES 38
Priority 4
PINNING 2
Priority(A) 4
PLDI 3
Priority, 1
Probability” 1
PM 4
Problems 1
Problems: 1
Problem” 3
POSIX 20
POSIX, 2
Proc 14
PPLICATION 1
PPN) 1
PREMATURE 1
Process1 9
PROT_READ|PROT_WRITE, 1
Processes” 2
Processor-Memory 1
Professor? 1
PTE 17
PTE, 6
PTE. 3
Program 20
PTE.PFN 1
Programmer’s 2
PTE.PFN, 3
Protected 1
Protection) 1
PTE.ProtectBits) 3
Protection” 1
PTE: 1
PTEs). 1
Protocol 3
PTHREAD_COND_INITIALIZER; 3
Provides 1
PTIMAL 1
PT_SHIFT 1
PWT 1
Pthread 11
Pacific 3
Pthread_cond_signal(&cond); 6
Pthread_cond_wait(&c); 1
Pthread_cond_wait(&c, 3
Pthread_cond_wait(&empty, 2
Pthread_cond_wait(&fill, 2
Pthread_create(&c, 2
Page 39
Pthread_create(&p1, 5
Page, 1
Page-Reference 1
Pthread_join(p1, 5
PageDirBase 1
Pthread_mutex_init(&c->lock, 2
PageTableBaseRegister 1
PageTable[39] 1
Pthread_mutex_unlock(&c->lock); 6
Paged 2
Pal 1
Pthread_mutex_unlock(&lock); 6
Parallel 3
Paranoia 1
Pthread_mutex_unlock(&m); 6
Part 6
Pass(A) 1
Pass(C) 1
Pthread_mutex_unlock(&mutex); 8
Passing 2
Published 1
Pathfinder. 2
Python, 2
Pathfinder/Authoritative 2
Python. 1
Patt 1
Patt, 1
Peanut 2
Per 5
Q1 15
Perfection, 1
Q1. 1
Performance” 1
Q3 1
Q5 1
Q7 1
Quanta 1
Perhaps 15
Quarterman. 1
Perl, 2
Queue_Dequeue(queue_t 2
Persistence 1
Queue_Enqueue(queue_t 2
Perspective” 5
Queue_Init(queue_t 2
Pfaff, 1
Phoebe 1
Queues 4
Queues, 2
PhysAddr 8
Queues: 2
Quote 1
Physical 13
Pick 3
Pieces 2
Pillay. 1
Pioneered 1
R 21
Pioneers, 1
R+89, 1
Plot 1
Pn−1 1
Pointed 2
Portable 1
Positive 1
Power 1
Precise 2
Prediction 1
R. 33
Preemption-safe 2
R.H. 1
Preemptive 1
R.P. 1
Prefetching 1
R/W 1
Pren-tice 1
R10k 1
Present 1
R4000 5
Press, 7
RADE 1
Price. 1
RAID 1
Primer 1
RAM 5
Priority(B), 4
RAM, 1
Priority] 2
RAM. 1
Privileged 3
Probably 11
RANSLATIONS 15
Problem 3
Problem: 6
Problems” 1
Proceedings 2
README 20
README, 1
REASON 1
REAT 3
Process 35
REE 19
RINCIPLE 2
RIORITY 1
Process0 12
RITICAL 1
Process: 2
ROM 2
ROPORTIONALLY 1
ROTECTED 1
Processes 8
Processes, 1
Processes: 1
RR 14
Processing 5
RR, 1
Processing, 1
RR. 2
Processing: 2
RSS, 2
Processor” 1
Raging 1
Raiders, 2
Producer/Consumer 5
RaiseException(PAGE_FAULT) 1
Producer/Consumer: 3
Producers 1
RaiseException(PROTECTION_FAULT) 9
Prof. 1
Rajimwale, 1
Randal 1
Professor 5
Randall. 1
Professor, 1
Randell 1
Randell. 1
Random) 1
Randomization” 1
Rate 4
Rather 1
Rather, 4
Professor: 37
Programmers 4
Programming 15
Read 38
Programming: 3
Read-Execute 1
Programs 4
Read-Write 2
Project 3
Real 3
Proportional 2
Reboots 1
Proportional-Share 3
Recognized 1
Proportional-share 1
Recollections 1
Recovery” 1
Redell 2
Protection 7
Redell. 1
Redell’s 1
Pthread_cond_signal(&c); 4
Redirection 1
Pthread_cond_signal(&empty); 2
Reduce 1
Pthread_cond_signal(&fill); 2
Reduced 2
Reese 1
Pthread_cond_wait(&cond, 6
Reese, 1
Reese’s 1
Pthread_create(&p, 5
Reeves. 2
Pthread_create(&p2, 5
Pthread_join(p, 4
Pthread_join(p2, 5
Pthread_mutex_lock(&c->lock); 6
References 28
Referring 1
Pthread_mutex_lock(&lock); 6
Region 1
Registers 1
Pthread_mutex_lock(&m); 6
Reliability 1
Relocation 1
Relocation: 2
Pthread_mutex_lock(&mutex); 8
Remove 2
Pthread_mutex_lock(pthread_mutex_t 2
Publishers, 1
Purify 1
Replacement 6
Put 4
Report 2
Putting 1
Report, 2
Represent 1
Q 12
Requirements 3
Resource 4
Responsibilities 1
Results 1
Q0 13
Return-into-libc 2
Review, 3
Q2 9
Q4 1
Rewritten 2
Q6 1
Ritchie, 1
Q8 1
Ritchie. 1
Quantitative 2
River, 1
Quarterly, 1
Robert 9
Robin 3
Ronald 1
Round 3
Questions 26
Rudolf 1
Queue 8
Quicksort, 1
Rule 14
RACE 1
Runtime 1
RAIDs, 1
S). 2
S+03] 1
RAND 5
SDS 2
RANSFER 1
SE 11
SEG_SHIFT 1
RANSLATION 15
SER 1
RDLK 2
SET 2
RE 1
REATE 2
REEMPTIVE 1
SHIFT 8
REMATURE 1
SHIFT, 1
SIGINT 2
SIGMETRICS 2
SIGNALING 1
RISC 14
SIGTSTP 1
RISC, 2
SIZESORT+, 1
RISC-like 3
SJF/STCF 1
SN_SHIFT 1
ROBLEM 4
SOMETHING 1
ROCEDURE 1
SPINNING 1
SPINNING: 1
SQMS 7
SS+10]) 1
SSD, 1
SSD. 1
ROCESS 30
SSDs) 1
ROCESSES 1
ROGRAMS 1
STACK: 2
ROP 3
ROP. 1
STCF 8
STCF, 1
STCF. 1
ROPORTIONAL 13
ROVIDE 1
STRUCTURES 16
SWITCH 6
SYNCHRONIZATION 1
SYSTEMS 42
Saint-Exupery 1
Same 2
San 12
Sanjay 1
Santiago, 1
Saving 1
Schedulability 1
Schedulers 1
Schedulers: 1
Scheduler” 2
Scheduling 12
Scheduling: 6
Schwarz, 1
RPACI 154
Science, 1
RR) 1
Scotland, 2
RR? 1
Search 2
RTFM 2
RUN 5
RUNNABLE, 1
RUNNING, 1
Second, 31
Security 2
Segmentation 3
Segmentation: 1
RUX 33
Segments 2
RY 1
Self-Tuning, 1
Race 2
Separating 1
Rachid 2
Server” 1
Rafael 1
Rago 1
Set 6
Rago. 4
Seward, 1
Raiders” 2
Seward. 1
RaiseException(SEGMENTATION_FAULT) 5
Shah, 2
RaiseException(TLB_MISS) 1
Shan 2
Sharedmemory 1
Sharing 12
Random 21
Shasha. 1
She’s 1
Random, 5
Short 1
Ranganathan, 1
Short, 2
Rashid, 1
Ratios” 1
Shortest 6
Readings 1
Signaling 2
Signals; 1
Silas 3
Similarly, 6
Simple 29
Simple, 1
Ready 58
Simpler 2
Ready: 1
Simply 3
Really 3
Single 7
Recall 9
Single-Queue 1
Recall, 1
Single-Threaded 2
Recent 1
Sizes 1
Recheck 1
Slab 1
Reclaim 1
Sleeping) 1
Recommended 1
Slutz, 1
Record 1
Smaalders. 2
Red-Black 2
Smaller 1
Reducing 1
Smotherman 1
Refers 1
Smotherman. 1
Regions 1
Smotherman’s 1
Register 8
Relational 1
Relationships, 1
Relocated 2
Relocation) 2
Relocation” 1
So 30
Remember 5
So, 1
Solaris” 1
Remzi 6
Repair 1
Repeatedly 1
Replacements 1
Replacement” 1
Reprinted 1
Required 1
Some 25
Research 3
Research, 2
Sometimes 9
Resort, 2
Resources 2
Sometimes, 9
Response 3
Sopena. 1
Responsibility” 1
Sorry! 1
Restartable 1
Restoring 1
Sorry3 1
Restricted 1
Resulting 4
Sounds 6
RetryInstruction() 4
Reuter. 2
Review” 2
Revolution 1
Riak. 1
Space 20
Space-time 1
Richard 9
Speaking 1
Right! 1
Specific 1
Rings, 1
Ritchie) 1
River” 1
Roscoe. 1
Round-Robin 1
Routines 3
Rules 5
Specifically, 52
Spectre 3
Spectre. 1
Spend 3
Spending 1
Spider-Man: 2
Spin 7
Spin-based 1
Spin-waiting 2
Run 68
Spinning 4
Run: 2
Spinning: 2
Splitting 1
Sploitfun. 1
Springer-Verlag, 1
Spurious 1
Sriram 2
Running 24
Running, 1
Running: 1
Runs? 1
Stack 14
Russ 1
Stack11 2
Staelin, 1
Staelin. 1
Stallman 1
Stallman. 2
Stan 1
Stan. 1
Stanley 1
Start 5
States 1
Status: 1
Stevens 6
Stevens, 2
Stick 1
Still 5
Stockholm, 2
Stodolsky, 1
Storage” 1
Store-Conditional 2
Store-conditional 2
StoreConditional(int 2
Stored? 1
Structures 6
Structures: 1
Structure” 1
Structuring 1
Success! 1
Sullivan, 1
Summary 30
Summary: 2
Sumner. 4
Sun 5
Sun, 2
Sun. 2
Sun.. 2
SunOS 1
Sun’s 1
Superpages” 1
Support) 1
Support” 1
Sure! 1
Survey 3
Susan 1
Sweden, 2
Switch 3
Switches 1
Switching 4
Synchronization 8
Synthesis 1
Systems 18
Systems, 3
Systems. 1
Systems: 6
System” 22
S 379
S, 6
S. 22
S.J. 1
S.Sahni). 2
S09]. 2
SCHEDULER 1
SECTION, 1
SEFUL 2
SEG 2
SEG_MASK) 2
SGI. 1
SHIFT) 8
SIDE 40
SIZESORT-) 1
SJCC, 1
SJF 21
SJF, 4
SJF. 2
SJF/STCF) 1
SLEEPING, 1
SN 3
SOLATION 1
SOSP 9
SPARC 9
SPARC, 3
SPARCv9). 1
STCF) 2
STDOUT 1
SUPPORT 1
S_IRWXU); 2
Saavedra-Barrera 1
Saavedra-Barrera. 1
Sadly, 2
Said 1
Saltzer 1
Sanzi, 1
Save 2
Say 2
Saying 1
Scalability 3
Scalable 10
Scaling 6
Scan-resistant 1
Scheduled 1
Scheduler 5
Scheduling” 1
Schroeder. 1
Science). 1
Scientific 1
Scientists 1
Scott 10
Scott. 4
Secker 2
Section 1
Secure 1
See 43
Seems 1
Seg 1
Segment 10
Segmentation” 1
Segregated 1
Semantics 3
T 378
September 13
T. 14
Sequential 2
Sequin. 1
T1). 4
Served 1
Server. 1
Servers” 1
Setup 1
Shacham, 1
Shacham. 2
Share 4
Shared 2
Shared-Memory 4
T2 38
Shared-memory 1
Sharing” 1
T2, 4
Shavit. 2
Shavit’s 4
T2. 4
Shedler 1
TABLE 2
Shedler. 1
TD 2
Shortly, 1
TENEX 3
Should 4
TEST 2
Showing 1
THINK 1
Silicon 1
Similar 3
Simulation, 1
THREAD 12
Singh, 1
Sitaram 1
Size 10
THREE 37
Sleep 40
Sleeping 3
Slow 1
Small 2
Software 7
Software-based 1
Solaris 18
Solaris, 7
Solomon. 2
Solution 5
Solution: 1
Sood, 2
Soon 2
Sorin, 1
Sorry, 1
Sound 2
South 1
Soyeon 2
Spaces 3
Special 1
Specification, 1
Spectrum 1
Spin(), 1
Spin(1); 2
Stack? 1
Stalin 2
Standard 2
Stanford 1
Stanford, 1
Star.” 1
Starts 1
State 12
State: 2
Statement 1
Steinberg 1
Steinberg. 1
Stephen 4
TLB 173
Steve 4
Steven 1
Stoica 1
Stoica, 1
Storage 10
TLB, 21
Store-Conditional” 2
Strachey. 1
Strachey’s 1
Strategies 2
TLB. 13
Streams 1
TLB: 2
Stretch 1
TLBP, 1
Stride 4
TLBR, 1
TLBWI, 1
Structure 3
Structures” 2
TLB_Insert(VPN, 3
Student, 1
TLB_Lookup(VPN) 4
TLBs) 1
TLBs; 1
TLB’s 1
TORAGE 1
TORE 1
TR 1
TR-95-22, 1
TRUCTURE 3
Student: 36
TV 1
Study 8
Subramanian, 3
Subsequent 1
Table 18
Takes 2
Tb 2
Tb, 1
Such 16
Suli 1
Summer 1
Tc1 9
Sun). 1
Tc1, 2
Sundararaman, 4
Tc2) 2
Supervisor” 1
Tc2). 1
Tcompletion 2
Techni-cal 1
Support 9
Technique 1
Support: 1
Technique: 1
Supporting 1
Techniques” 2
Surprisingly, 1
Technische 2
Surveys, 1
Tel-Aviv, 1
Swaminathan 2
TestAndSet() 6
Swap 4
Swap-Based 1
TestAndSet(int 2
Swapping 1
Tf 1
Swapping, 1
Swift 2
Swift, 1
Swift. 2
Switzerland 1
Symbiosis” 1
Synchronization” 2
There 42
Thesis, 1
They 5
System 37
System, 2
System/370” 1
Think 12
System: 1
Systems.’ 1
Systems” 7
T1 30
T1, 12
T2), 2
T3 8
T3, 4
TABLES 15
TAKE 1
TCB. 2
TECHNICAL 1
TERMS 1
THE 9
THER 1
THREADS 1
TILIZATION 1
TIP: 9
TLB) 3
TLB-miss 1
TLB; 1
TLBWR, 1
TLBs 10
TLBs, 6
TM 2
This 201
This, 2
TO 26
Thomas 3
TOCS, 3
Thompson 1
TOOLS 1
Thompson. 1
TOPLAS, 2
Thrashing 1
TPDS 1
TRUCTURES 17
TS 1
Ta 3
Table? 1
Tables 9
Take 2
Tamil, 1
Tarrival 3
Tc, 1
Tc1). 1
Tc2 7
TeX 1
TeX, 2
Technical 4
Techniques 2
Tell 1
Terminology 1
Test-And-Set 2
Test-and-set 4
Test-and-set, 2
Thread 95
TestAndSet(flag, 4
Texas, 1
Thread2 6
Texas. 2
Than 1
Threading 2
Threads? 2
Thanks 5
Thanks. 1
Threads” 6
Three 4
That 14
That’s 6
Thus 24
Thus, 206
Ticket 3
Tickets? 1
Tim 2
Time) 2
Time-Sharing 8
Time-to-Completion 2
Times 1
Times?” 2
Time” 1
Timothy 1
Tiny 1
Tix:100 1
Tix:250 1
Tix:50 1
To? 1
Together 1
Tom 2
Tony 1
Too 3
Torrellas, 1
Tp 3
Tp, 1
Tracing 8
Traffic” 1
Traiger. 1
Trans. 2
Transactions” 2
Transformers 1
Transforming 1
Transitions 1
Translations 2
Transparent 2
Tree 1
Trevor 1
Tricks 1
Tricky 2
True 1
Tturnaround 3
Tucker, 1
Tudor 2
Turner, 1
Turns 2
Two 11
Two-Phase 2
Two-phase 2
Typical 1
U.C. 2
U.S.S.R; 1
UCB/CSD-92-684, 1
UEUE 11
UIDELINES 1
UILD 3
UK, 2
ULE 2
ULLER 1
ULTI 11
ULTIPROCESSOR 12
UNIX 7
UNIX-based 1
UNUSED, 1
UPPORT 2
US, 1
USENIX 8
USSEAU 154
UST 1
Undefined 1
Understanding 2
Unfairness 1
Unfortunately 1
The 821
Then 17
Unfortunately, 37
University 6
Then, 19
University, 2
Theodorus 2
Unix 1
There? 1
Unknown.. 1
Therein, 1
Unlike 5
Unlock 2
Until 3
Unused 2
Upon 3
These 24
Useful 1
Things. 1
Users 2
Third 1
Third, 5
Those 2
Though 5
Using 19
Threads 5
Through 1
Tickets 1
V 31
V. 3
Time 29
VALID 3
Time-Shared 1
TimeSharing 1
VAX-11 4
Timer 1
VAX-11/780 1
TlbEntry) 4
VAX/VMS 11
VAX/VMS, 2
VAX/VMS. 1
VAXen 1
VERLAP 1
VERY 1
VICT 1
VLDB 2
VLSI 1
VMS 16
VMS, 1
VMS. 2
VMWare’s 1
VMware 1
VPN 69
VPN, 2
VPN. 1
VPN: 1
VPN_MASK) 7
VPNs; 1
Va1 2
Va3 2
To 152
Today’s 1
Va5 3
Tolerance 1
Values 2
Tomlinson. 2
Variable 2
Tools 1
Vegas, 1
Torvalds 1
Tp). 1
Version 4
Very 2
Trace 9
Virtualizing 2
Trace: 4
Tracking 1
Virtually 5
Traditional 2
Virtual” 1
Visualization 1
Transactions 3
Translation 5
Trap 2
Trees 1
Tresponse 1
Trials 1
Trigonakis. 2
Tron 1
Volume 35
True) 9
Voorhis. 1
W.C. 1
WAPPING 1
WITH 1
Try 11
Tuning 1
Turing 5
Turn 1
Turning 2
Types 1
Typically, 2
WWW.OSTEP.ORG 42
Waiting-Line 1
Waldspurger 6
Waldspurger. 2
Waldspurger’s 1
Wales 1
Wanjohi. 1
Wanjohi: 1
Warburg 1
Warburg, 1
Warehouse-scale 1
Warm-start 1
U 89
U/S 1
ULL 1
ULTIPLE 2
UMMARY 3
UNESCO, 1
UNSW-CSE-TR-0321, 1
UPERUSER 1
URL: 1
URSE 1
USA 1
USA. 1
USE 3
USTERHOUT 1
UT 1
UTUAL 1
Uh 2
Uman 3
Uncontrolled 2
Underlying 3
Undoubtedly 1
Unsafe” 2
Up 2
Use 35
User 14
User’s 4
Usually, 3
V.A. 1
VA 1
We 166
Weaver 1
Weaver, 2
VARIABLES 18
Weighting 1
Weiwei 2
VAX 5
Well 1
VAX-11/750. 1
VAX/VMS), 1
VAX’s 1
Well, 27
VM 18
Werthman. 1
VM, 3
We’re 1
VM. 1
We’ve 2
VMM-level 1
VMMs 1
VMS), 1
VPN; 2
VPN=0 1
VPN=39 1
VPN=42. 1
VPN_SHIFT 1
VPNs 5
VS 1
Va0 3
Va2 2
Va4 2
Valgrind 2
Valley. 1
Value 1
Van 4
Vancouver, 5
Variables 3
Vasileios 2
Virtual 12
Virtual-Storage 1
VirtualAddress 7
Virtualization 5
Visually, 1
Vol. 5
Von 2
Vyssotsky, 1
Vyssotsky. 2
W 17
W. 18
WAIT 1
WAITING 1
WARY 4
WHILE 2
WITCH 1
WITCHES 1
What 214
WORST 1
WORST)? 1
What’s 4
WRONG 1
When 122
When, 1
Whenever 2
Whew! 1
Who 4
WWW. 166
Waciuma 1
Wahbe, 1
Wait 1
Wait: 1
Why 28
Why, 1
Waiting 8
Wiggins. 1
Waiting: 2
Wiggins’s 1
Wakeup 2
Wikipedia? 2
Wanted 2
Wiley, 1
Was 1
Will 6
Watch 4
Wei, 1
Wilson 2
Weihl 1
Wilson, 2
Weihl, 2
Wilson. 1
Weihl. 1
Wilson’s 1
Were 2
Win, 2
We’d 1
Windows; 1
Wisconsin—Madison, 1
We’ll 38
Where 7
Whereas 3
Whether 4
Which 12
Whichever 1
With 82
Without 15
While 31
Woke 1
While, 1
Wood-lands 1
Word 1
Why? 5
Worried 1
Wikipedia 3
Worse, 3
Wikipedia. 1
Worse: 2
Wilkes. 1
Wouldn’t 1
Wow! 1
William 3
Wulf. 1
X 3
X, 1
Windows 10
X-windows 1
Winter 1
X. 1
Wisconsin 1
X/macOS 1
Wish 2
X11 1
XD 1
Within 4
XIST, 1
Wood. 1
XITS 1
Woodlands 1
XXX 2
Work 1
Xerox 2
Working 2
Xerox. 1
YSTEM 2
Yandong 3
Workload 11
Workshop 2
Years 4
Workstations” 1
Yes? 1
Worst 2
Yet 2
Wow, 2
You’ll 3
Wrapper 2
Yuanyuan 2
ZFS) 1
ZOMBIE 1
Zebra 1
Zeedonk 1
Write 11
Zeldovich 1
Write-back 1
XCLUSION 1
Zeldovich. 2
Zelenka. 1
Zhang, 4
Zhou, 2
XECUTION 15
Zuckerberg 1
Xiong, 2
Zwaenepoel, 1
Y 3
[2] 2
Y. 1
YBRIDS 1
[4] 1
YNAMIC 1
[A79]) 1
YNCHRONIZATION 1
YOU 2
[A90] 1
YOUR 1
[AC97] 1
YPES 2
[AC97]. 1
[AD00]; 1
[AD03] 1
[AD03]. 1
[B+10] 3
[B+18] 1
[B+18], 1
[B+18]. 1
[B+72] 2
[B+96] 2
[B,C 2
[B66] 2
[B75] 1
[B75]. 1
[B86] 1
[B89, 2
[B94]; 1
[B97] 2
[BB+72] 1
[BB+72], 1
[BC05] 3
[BC91]; 1
[BH00] 1
[BH00]. 2
[BH70, 1
[BH73] 2
[BH73], 2
[BNS69] 1
[BNS69]. 1
[BOH10] 3
[BS+09, 1
[C+04] 1
[C+04]. 1
[C+62] 2
[C03] 1
[C03]. 1
[C54] 1
[C63] 1
[C63]. 1
[C69] 1
[C69], 1
[CD85] 1
[CG68] 1
[CK68] 1
[CK68]. 1
[CM00] 1
[CM00]. 1
[CP78] 1
[CS97] 2
[CV65] 2
[CV65], 1
[D01]; 1
[D68] 7
[D68]. 2
[D70]), 1
YSTEMS 203
[D82] 1
Yale 1
[D82]. 1
Yang, 1
[D91] 2
Yes 1
[D91]. 2
[D97] 1
[D97]. 1
[DD68] 1
Yes, 9
[DV66,V+65]. 1
Yes. 1
Yet) 1
[DV66] 3
Yield 2
[DV66], 1
[E06]; 1
Yield, 4
[EF78] 1
[Free] 1
York, 6
[G+17] 1
[G+17]. 1
[G+95] 1
[G+95]. 1
[G83] 1
[G85] 1
[G85], 1
[GR92] 2
[GR92]. 2
[H61, 1
[H91] 2
[H91]. 2
[H93] 4
[H93], 3
[HP06] 2
[HP06]. 3
[I09] 4
[I09]. 2
[J91] 1
[J91]. 1
[JM98] 1
You 89
[JM98]. 1
Your 1
[JS94] 1
You’re 2
[JS94], 1
[K+15] 1
Yupu 2
[K+61,L78], 1
Zel-dovich 1
[K+61,L78]. 1
Zero” 1
[K65] 1
Zhiqiang 2
[K65]. 1
Zonkey), 1
[KE+62, 1
Zorn. 1
[L09, 2
[1] 2
[L11] 1
[3] 1
[L11]. 1
[A79] 1
[L60] 1
[A91]. 1
[AC97]; 1
[AD00] 1
[LL82] 4
[B+00] 2
[LL82], 1
[B+10]; 2
[LL82]. 3
[B+13] 1
[LM+89, 1
[B+13]. 1
[LM+89]; 1
[B+19] 1
[LR80] 1
[B+19]. 1
[LR80], 1
[B+79] 1
[M07] 1
[B+79], 1
[M07]. 1
[B72] 1
[M11]; 1
[B72]. 1
[M28]? 1
[B89] 2
[M65] 1
[B94] 1
[B94]. 1
[M65]. 2
[BC05, 2
[M83] 1
[BC05,G04]. 1
[M83], 1
[BC91] 1
[MM00] 2
[BH70] 2
[MS04] 2
[BJ81] 1
[BJ81]. 1
[MS04], 2
[BOH10]). 1
[BS+09] 1
[C06] 2
[MS04]. 8
[C06]. 2
[MS91] 2
[C54,PV56] 1
[MS91]. 2
[C69]) 1
[N+07] 1
[C93] 1
[NM92] 2
[C93]. 1
[NS07] 1
[C95] 1
[O16] 1
[C95]. 1
[O16]. 1
[CD85]), 1
[O45] 1
[CG68, 1
[O45], 1
[CK+08] 1
[O49] 1
[CK+08]. 1
[O49]. 1
[CP78]) 1
[O72] 1
[CS94] 1
[O72], 1
[CS94]. 1
[O90] 1
[CSG99] 1
[O90]. 1
[CSG99], 1
[P+95]). 1
[CV65,DD68]) 1
[PS81] 1
[D+13] 2
[PS81]. 1
[D+13]. 2
[Page 2
[D01] 1
[QI15] 1
[D65,D68] 2
[QI15]. 1
[D65] 2
[R+89] 1
[D68]; 1
[R69]; 1
[D70] 1
[R97] 2
[D70], 1
[S+04] 1
[D70]. 1
[S+11] 2
[D72] 1
[S04]; 1
[D72]. 1
[E06] 1
[S05] 2
[E95] 1
[E95], 1
[S07] 2
[E95]. 1
[S07], 1
[EF78]) 1
[S07]. 1
[FLR98] 1
[S09] 2
[FLR98]. 1
[S59, 1
[FP89] 1
[SB92] 1
[FP89]. 1
[SB92], 1
[G04] 1
[SHW11] 1
[G04]. 1
[SHW11]. 1
[G62] 1
[SN05] 1
[G83]; 1
[SN05]. 1
[H61] 1
[H74] 1
[H74], 1
[SR05] 6
[H74]. 2
[SR05], 3
[H87] 1
[SS+10] 1
[H87]. 1
[V+65] 1
[HJ92] 2
[HP06]), 1
[W+95] 4
[HP06]). 1
[W+95], 1
[High 1
[W+95]. 2
[I11] 2
[W03] 1
[J09] 1
[W03]. 1
[J09], 1
[W09] 2
[J16] 1
[J16], 1
[W09]. 2
[K+61] 2
[WG00] 3
[K+96] 2
[WG00], 1
[K64] 1
[WL+93] 1
[K64]. 1
[WL+93]. 1
[K68] 1
[X+10] 2
[K68]. 1
[KE+62] 2
[X+10], 2
[KE+62]. 1
[Y+18]), 1
[KL88] 1
[KL88]. 1
[virtual 5
[KR88] 2
[L+13] 2
[L+75] 1
__lock_t 8
[L+75]. 1
__queue_t 2
[L+93] 2
a1 1
[L+93]. 2
a3 1
a:0,b:1,c:1 1
[L09] 4
a:30:200 1
[L78] 3
a:30:200. 1
[L78]. 2
a; 4
a[1] 1
[L81] 4
a[1], 1
[L83] 2
a[1]. 1
[L83], 1
a[3] 1
[LL82]; 1
a[3], 1
[LM+89] 1
a[5] 1
[LR80]; 1
a[6]) 2
[Low 1
a[7] 2
[M+63] 2
a[9] 1
[M+63]. 2
a[i] 1
[M+70] 1
abbreviated) 1
[M+70]. 1
abilities 1
[M04] 2
abilities, 1
[M06] 1
[M06], 1
[M11] 2
[M11], 1
ability 11
[M15] 4
[M28] 1
[M62] 1
[M82] 2
[M82], 4
[MB91] 1
[MB91]. 1
[MM03] 1
[MM03]. 1
[MS96] 2
[MS96]. 1
[MS98] 2
[MS98]. 2
[N+02] 1
[N+02], 1
[N+07]; 1
[NM92]) 2
[O11] 1
[O11], 1
[P+95] 1
[P10] 1
able 59
[P10]); 1
about) 1
[P81] 2
about), 1
[P81]. 2
about; 3
[P90] 1
[PP03] 2
[PV56] 1
above) 6
[R69] 1
above), 3
[R97]! 2
[RK68] 1
[RK68]. 1
above). 7
[RL81] 1
[RL81]. 2
[RT74] 1
above; 7
[S+03] 1
[S+04]), 1
above? 3
[S+11]). 2
[S+68]), 1
[S04] 1
[S05]) 2
abstraction 15
[S15] 1
abstraction. 1
[S15], 1
abuse 1
[S59] 2
abused. 2
[S68] 1
accept 2
[SA96] 1
[SA96]. 1
[SN05]; 1
[SS74] 1
[SS74]. 1
[TTG95] 1
[TTG95]. 1
access 133
access, 9
access. 8
access: 1
accessed), 1
accessed? 1
[V 166
[V+65,BH70]. 1
accesses 47
accesses)? 1
[VERSION 42
accesses, 4
accesses. 5
[VPN 11
accesses?) 1
[W02] 2
accessibility 1
[W02]. 1
[W06] 1
accessible 3
[W06]. 1
accessible, 1
[W15] 1
accessible. 2
[W15]. 1
[W17] 2
[W95] 1
[W95]. 1
[W95]: 1
[WW94] 1
[WW94], 1
[Y+18] 1
[anon 1
[stack 1
accessing 36
] 2
accidental 1
__Node_t 2
accom-plish 1
__counter_t 6
__hash_t 2
accomplished 9
__list_t 2
according 3
accumulate 1
accumulated 1
accuracy/performance 2
__node_t 10
accurate 2
accurate); 2
accused 1
accustomed 1
achieves 7
achieving 7
acquire 57
acquire/release 2
acquired 15
acquired, 2
act 3
action 15
action. 1
active 13
active, 2
active. 1
actively) 1
activity; 1
actual 15
actuality, 1
adapt 1
added 12
added, 1
addition 13
addition, 4
additionally 1
addr:10 1
addr:21 1
address 561
address); 1
address, 7
address-based 1
address-translation 4
address. 21
address: 8
address> 1
address>, 1
addresses 42
addresses, 3
addresses. 4
adds 24
adios, 1
administer 1
administrators 2
adoption 1
advance 1
advanced 7
advanced, 2
advantageous 1
advantages 5
advent 1
advice 4
advice, 1
advocates 1
affairs 1
affected 1
affected. 1
affects 2
affinity 8
affinity, 1
affinity. 4
aforementioned 2
after 54
again 58
again!) 1
again, 31
again. 24
again: 2
age), 2
age; 1
aggressive 3
aims 1
alas). 1
algorithm). 1
algorithm; 2
algorithms 26
algorithms, 3
algorithms. 5
alike, 1
alike. 1
all) 1
all), 1
all; 4
all? 8
alloc()/free() 1
allocate(int 1
allocates 11
allocating 19
allocation 24
allocation, 2
allocation. 7
allocators 9
allocators. 3
allotment 2
allotment, 1
allowed 8
allowed. 1
allows 37
almost 13
alone! 1
already 28
alter 2
altering 1
alternate 5
alternatives 4
alternatives. 2
although 15
am 16
amazed. 1
amazingly 3
amazingly!), 1
amazingly, 1
among 14
amount 37
amount. 2
amplifying 1
an- 1
an-THREE 1
analyses 1
analysis 5
analyze 3
analyzed 2
ancient 2
and? 1
annotate 2
another; 1
answer 29
answer, 8
answer: 2
answering 1
answers; 2
anti-gaming 1
anticipate 1
any 171
anyhow, 2
anyhow. 2
anymore? 1
anyone 3
anything 17
anything, 5
anything. 1
apologize. 1
apparently 1
appealing; 1
appeared, 1
appears 1
append 2
appetite, 1
applicable; 1
application 29
application. 4
applications? 1
applies 1
apply 1
appreciate 1
approach 138
approach, 25
approach. 8
approach: 5
approaches 31
approaches, 1
approaches. 2
approaches: 1
approaching 1
appropriate) 1
appropriately 3
appropriately-named 1
approximate 20
approximation? 1
approximations 2
arbitrary 13
arcane, 1
architects 4
architectures 2
architectures, 1
architectures. 1
architectures: 2
archive, 1
are 870
are, 4
are. 4
are: 2
arg); 8
arg, 2
arg. 2
arg: 1
argc/argv 1
args->b); 4
argue 1
argued, 1
argument; 2
arguments 23
arguments, 5
arguments. 4
arguments: 3
argv 3
argv[1]; 1
arise 12
arise, 4
arise. 3
arise2 1
arithmetic 2
arose 5
arose, 1
arose: 1
arrange 4
arranged 1
arrangement 1
arrangement, 1
array) 3
array), 1
array.c 2
array; 1
array[i] 1
arrays 5
arrays, 2
arrive), 1
arrive; 1
arrive] 2
arrives 4
arrives. 2
arriving 2
article 3
a 3927
a+b,b+c,c+d,c+e,c-. 1
a1). 1
a2 1
a4 1
a:100:100,b:100:100,c:100:100) 1
a:100:100,b:100:50, 1
a:100:100,b:100:50,c:100:50) 1
a:100:100,b:100:50,c:100:50). 1
a[0] 2
a[2] 2
a[4] 1
a[6] 1
a[8] 1
a[9]) 2
a[i]; 1
about 294
about, 2
about-to-be-run 4
about. 6
about: 1
above 50
above, 39
above. 20
absolute 6
abstractions 7
abundant, 1
abusing 1
acceptance 2
access; 1
accessed 42
accessed, 12
accessed. 4
accesses), 1
accesses). 1
accesses; 1
accident 1
accidentally 12
accommodate 4
accommodated. 1
accomplish 9
accomplishes 1
accordingly 1
accordingly. 3
account 6
account. 1
accounting 4
accounting, 1
accrued 1
accumulates 1
accuracy 1
achieve 12
achieved 1
achieved, 1
achieved. 3
achievement 1
achieves; 1
acquires 8
acquiring 22
acquisition 6
acquisition, 2
acquisition. 4
across 30
actions 18
actions, 1
actions. 1
activate 1
active; 2
actively 4
actively-used 1
activities 3
as 1029
activity 3
aside 4
activity. 2
aside, 2
aside: 1
ask? 2
asked 2
asked, 1
asks 4
asks, 1
asleep 3
asleep, 1
asleep... 1
aspect 15
actually 38
ad 3
assembly 13
adapted. 1
assembly, 3
assert 3
assert(fd 1
assert(p 1
assertion 2
assigned 7
assigned. 1
assistance. 1
assists 1
associated 18
assume 80
assume, 2
add 82
assume: 1
add, 3
assumed 12
assumptions 14
assumptions, 6
assumptions. 2
astute 2
atoi(argv[1]); 1
atomically; 2
atomics. 2
atop 1
adding 35
attack 9
attack: 1
attackers 2
attained 1
attains 1
attempted 2
additional 15
attempts 4
additions 1
attempts, 3
addl 2
attempts: 2
addr 2
addr:0 4
addr:20 2
attention 10
address! 1
address(es). 1
attention, 3
address) 2
attention. 1
address), 1
attentive 1
address). 1
attribute 2
address-space 5
address; 3
authors 8
address? 1
authors. 1
addressed 2
addressed, 1
authors.. 4
addresses). 1
auto-matically 1
addresses): 1
automate. 1
available; 1
addresses; 4
avenue 1
addresses? 1
average). 1
adjust 1
avoidance. 2
administrator 2
avoided 2
admission 1
avoided, 1
admit 1
admit, 1
avoided. 2
adopted 1
advances 1
avoids 5
award-winning 1
aware 2
advantage 14
advantage. 1
adversely 1
advertise 1
away 12
advisors, 1
awesome! 1
awful! 1
baby 2
baby!” 2
affect 10
affecting 1
affinity; 1
affordable; 1
affords. 1
afterwards. 1
background 15
again) 3
background. 2
again; 3
backwards 1
again? 2
backwards, 1
bad! 1
badly 1
badly, 1
against 9
age-old 1
agent 1
ago 1
ago, 5
balance 15
ago: 1
balance. 1
agreed-upon 1
balanced 6
ahead 8
balanced: 1
ahead, 3
base-and-bound 3
ahead. 1
base/bound 1
ain’t 2
base/bounds) 2
akin 2
bases 2
al-though 1
bash, 1
al. 5
al.’s 2
alas 1
alas, 3
alas. 4
albeit 2
algorithm 34
algorithm, 8
algorithm. 2
algorithm: 2
algorithmic 1
algorithms). 1
alive, 1
basic 94
basically 6
basics; 1
basing 1
batch 7
batch-like 1
batches 1
battle 1
be? 9
beauty 2
because 93
because, 1
becomes 18
becoming 2
all 247
all!), 3
all, 17
all-too-trusting 1
all. 9
all... 1
allegorical 1
alloc 1
been 100
before), 2
before? 2
allocate 31
allocate(10). 1
allocate(100), 1
allocate. 1
begins 13
begins. 1
begins: 1
begin” 6
beguiling 1
behalf 2
behalf. 1
behave? 4
allocated 46
behaves 11
allocated, 2
behaves, 1
allocated. 5
behaves. 5
allocation). 2
behaving 1
allocations 8
allocator 26
behavior 35
allocator, 5
behavior, 3
allocator. 2
allocators; 1
behavior. 4
behavior: 1
behaviors) 1
behaviors; 1
allow 22
allowed), 1
behind 31
allowing 22
believe 5
below) 3
alone 6
below). 3
below; 1
below? 1
beneficial 1
along 10
alright 1
benefits 5
benefits. 1
benefits: 1
best 31
best-fit 7
better 88
better, 14
better. 7
also 213
also, 1
also: 1
altered 1
alternately 1
alternately, 2
alternates 1
alternating 2
alternatives! 1
altogether, 1
always 53
always!). 3
between 79
always, 5
beware 1
always. 1
beyond), 1
am! 1
biased 2
bible 2
amazing 9
amazing, 2
amortization 1
amortize 2
amortized. 1
amount; 3
amounts 7
amt) 2
amt; 2
amt>0) 2
big 44
big!”, 1
big, 3
big. 3
bigger 19
bigger, 2
billions 1
bit! 1
bit) 1
bit), 1
bit). 3
bit; 1
bits 70
bits, 7
bits. 2
bits: 1
black) 1
black). 1
blank 1
blocked 16
blocked); 2
blocked, 3
blocked. 2
blocks 9
blocks, 1
blocks. 2
blocks: 1
bodies 2
body 2
bold). 1
bolts, 1
book! 1
book), 2
book). 5
book; 1
book? 1
books 21
books. 1
bookstore 1
boolean 2
boosted 3
boot 11
born! 1
borrowed 1
both) 1
both), 1
both? 2
bother 1
botte 1
bottom). 2
bounce 1
bound 4
bounded-buffer 1
bounds) 1
bounds). 1
bounds; 2
bounds? 1
bounds”); 1
bowels 1
brag 4
branch 3
break), 1
break; 5
breaks 2
breath. 1
breed 1
brief 4
an 545
analogous 1
bring 4
analogy 1
analysis” 1
broad 4
broadcast(), 1
broadcasts 1
browser 1
browser, 1
browser. 1
brutal 1
brutal, 1
bucket 2
bucks. 1
buddy 11
buffer 43
buffer); 1
buffer, 11
buffer. 6
buffer[fill_ptr] 1
buffering 1
buffers? 1
bug 4
bug, 1
buggy 1
bugs) 1
build 118
build, 2
build. 2
building 41
building, 1
built 19
built-in 1
built. 1
bumping 1
bunch 6
burden. 1
burst 3
bus 3
bus, 1
bus-based 1
business 1
butter 1
buy 6
buying 2
bx 2
bx=1 2
bx=1000,bx=1000 2
bx=2,bx=2 2
bx=3 2
bye, 1
byte 15
byte(s) 1
bytes) 3
bytes), 3
bytes). 3
bytes; 2
bytes? 1
bytesLeft 3
c->global; 2
c->local[cpu]; 2
c->local[i] 2
c->threshold) 2
c->value++; 4
c->value--; 4
c->value; 4
c1 10
c3 10
c5 5
c5, 1
c; 3
c;, 1
cache 86
cache, 11
cache. 9
cache: 1
cached 3
caches) 1
caches; 1
cake 4
calamity. 1
calculate 5
calculated 1
call 230
call); 1
call, 19
call. 17
call: 2
caller; 2
calling 55
calls). 1
came 12
campaign 1
can 699
can, 4
can. 3
cannot? 1
canonical 3
can’t) 1
capability. 1
capacity 2
capacity, 1
card 1
care! 2
careful 16
careful, 3
careful. 1
carefully! 2
carefully; 1
cares 2
case 62
case); 2
case, 105
case. 3
case: 4
cases). 1
cases? 2
cast; 1
casts 1
cat 3
categories: 1
caught 8
causes 5
causing 3
cell 1
cen-tral 1
centers 1
centers, 1
century. 1
and 2770
and, 5
animals 1
anomalous 1
anon) 1
certain 26
anonymous 4
cesses. 1
chagrin 1
chains 1
challenges 2
challenges, 1
challenging 6
challenging, 1
challenging. 1
chan 1
chance 4
chance. 2
chanced 1
another 105
another, 12
another. 6
answer! 1
answer) 1
answer; 3
answer? 3
answered 1
answered, 1
answers 3
answers, 2
answers. 2
anti-hero 1
anticipating 1
any? 1
change 55
anyhow). 1
anymore, 1
anymore. 1
anything? 3
change. 6
anytime 1
anywhere 6
ap-proaches 1
appear 4
appearing 1
applicable 2
application; 1
changed 18
changed, 3
applications 29
changes; 3
applications, 6
changes? 2
chaos 2
applications. 12
chapter! 1
applied 5
chapter), 1
appreciation 1
approach) 1
approach), 2
chapter). 3
approach). 4
chapter; 1
approach? 3
approached 1
approaches? 1
appropriate 3
approximate! 2
chapter? 9
approximately 1
approximates 1
approximating 1
approximation 1
arbitrarily 2
arbitrarily, 1
architectural 2
chapters 14
architecture 18
architecture, 4
chapters, 9
architecture. 4
architectures; 2
are! 3
chapters. 6
area 5
area. 1
arena 1
aren’t 5
arg; 7
argc 1
argc, 23
args 8
args->a, 4
char 35
characteristics 2
characteristics, 1
argument 22
charge 7
argument, 11
cheaper, 1
argument. 2
argument: 2
arguments) 1
arguments; 1
arise; 1
arise? 3
arises 21
arises, 4
arises. 2
check 46
arises: 1
arising. 2
check. 4
checking 6
checking, 1
around 42
around, 4
arranges 1
child 59
array 46
child, 8
child. 2
child: 1
array, 7
children! 1
array-based 2
chip 1
chip, 2
array. 4
chip’s 1
array.c) 1
array: 1
chocolate 2
array[1000]; 1
choices. 1
array’s 1
arrival 1
chooses 3
chooses. 2
choosing 2
chop 5
chopping 1
arrive 21
chose 1
arrive: 1
chosen 5
chosen, 1
arrived 6
chosen. 1
arrives; 1
chucking 2
art 1
chunk). 1
art. 1
articles 2
asides 1
chunks 13
chunks, 4
ask 12
chunks. 3
ask, 1
circuitry 2
ask: 2
circumvent 1
citations 1
asking 4
clarify. 1
clarity. 1
asking: 3
aspects 10
class 12
aspiring 1
class, 3
assembly). 1
assembly? 2
assert(count 2
assert(rc 5
assert(tmp 2
assertion), 1
assign 3
assigning 1
classic 26
classic, 1
assignment, 3
classically 1
association 1
clean), 1
associative 1
clean). 1
associative. 1
clean; 2
assume) 1
cleaned 1
cleans 2
clear; 1
assumes 14
clearly 17
clears 5
cleverness, 1
assuming 25
clock 11
assumption 10
assumption. 2
close 11
assumption: 1
close(fd); 1
assumptions? 1
close, 1
assured 1
closer 2
cloud), 1
cluster 2
clustering 3
clustering, 1
clustering. 1
cmp 1
cmpl 1
co-advisors 1
co-authors). 1
co-exist 1
co-workers 1
coalesces 2
coalescing 6
coalescing, 4
coarse-grained 2
coarse-grained, 1
code) 3
code), 4
code.” 2
code/stack/heap? 1
code; 3
code? 9
codes 2
codes, 2
codes. 2
coherence 3
coherence, 2
coined 2
cold 3
colleagues 3
collect 1
collection 3
column 5
com- 1
combat 2
combina-tion 1
combinations 3
combines 1
combining 7
come 9
come–great 1
comfortably 3
command-line 2
commands 2
commands, 1
commands: 1
commercial 3
common) 1
commonalities 1
commonly 13
commonly-used 2
commonplace 1
commonplace, 3
communicates 1
communicating 3
communication 2
compacted 1
company). 1
compare? 1
compares 1
comparing 5
competing 6
compiler; 2
compilers 1
compiling 1
complementary 1
complete) 1
complete). 1
complete; 5
complete? 3
completed), 2
completed; 1
completely 6
completely: 1
completes 6
completes, 9
completes. 4
completing 1
completion 4
completion); 1
completion, 2
completion. 2
complex 22
complex, 4
complex. 2
complexity 10
complexity, 1
complexity. 2
components 1
components. 1
components: 3
comprehensive 2
comprise 3
comprised 3
compromised 1
compromised. 1
computation; 2
computations 1
computers 7
computers, 1
computers. 1
computing 16
computing, 4
computing. 1
computing2 1
concatenating 1
concept 9
concept: 2
conception 2
conceptual 4
conceptualized 1
concern 5
concern, 3
concerns? 2
concert 2
concise 7
concludes 1
concluding 1
conclusions 1
concurrency), 1
concurrency). 1
concurrency; 2
concurrency? 1
concurrent) 2
concurrently 9
at 576
concurrently, 1
concurrently-running 1
concurrently. 1
atomic 25
cond 17
atomic. 2
condition) 1
atomic_decrement 2
condition). 1
condition3 1
atomic_increment 2
condition3, 1
condition? 1
conditional 1
atomically 16
atomically, 2
conditions 9
atomically. 2
conditions. 5
atomically: 2
conference. 1
confidence 2
atomicity 8
configuration 2
attachment 1
attacker 4
configure 5
attacker, 1
configured 1
confined 1
attacks 5
attacks, 3
confirm 6
attacks. 3
conflict 2
attacks2 1
confuses 1
confusing 2
attain 3
attainable, 1
confusing, 2
attaining 1
confusion. 1
congratulations! 1
connection 1
consider-ably 1
attempt 14
consideration 2
attempt, 2
attempting 1
attr 2
attr, 4
considered 10
consisted 1
attributes 4
attributes. 2
consistency 3
author 2
author. 1
authors’ 1
auto-magically 1
consists 8
automatic 2
constant 1
constant. 1
constituent 1
automatically 6
constraints 2
automatically, 2
constraints, 1
auxw 1
constructed 4
constructed, 1
constructed. 1
consult 2
consume 5
consumed 2
available 31
available, 11
consumer 26
available. 14
avalanche 1
consumer, 6
consumer. 2
consumers), 1
average 16
contain 6
average. 1
containing 4
contention; 2
contents 28
contents, 1
contents. 2
avoid 50
avoid. 3
context-switch 4
avoided; 2
context-switches 1
avoided? 1
context-switching 2
context; 1
contexts 2
contexts, 1
avoiding 16
awake 1
awake. 1
award 4
contiguous 13
away.” 1
away; 1
continue; 2
awesome 2
awesome, 3
continues 7
awoken 3
ax 4
continues. 6
ax=0,ax=1 2
ax=1,ax=0 2
continuing 4
axes. 2
continuing. 2
continuously, 1
axis 4
b; 4
contrast 7
contrast, 10
control-c) 1
control-z 1
control? 3
controlled 8
controls 5
control” 2
controversy 1
back 65
convenience). 1
convention; 1
back, 4
conventions, 1
back-and-forth 1
converted 1
back-to-back 1
converts 2
back. 2
convoy 2
background; 1
cooking 1
backing 1
cooperative? 1
backward 1
cooperatively 1
backward, 1
copy! 1
copy-onwrite. 1
copyon-write 1
cores 1
cores. 1
corn 1
corner-case 4
corre-sponding 1
bad 31
bad. 7
balances 1
bandwidth 3
barest 1
barons 1
correct 42
correct, 2
correct. 2
correct: 1
correcting 1
correctly! 2
base 66
correctly; 1
base); 1
base, 1
correctly? 3
corruptions. 1
base-and-bounds 4
base. 1
cost; 4
base/bounds 5
costly 7
costly, 6
based 17
bash), 1
costly. 3
basi-cally 1
basic) 1
costs 8
costs, 1
costs. 1
basics 13
couldn’t 2
basics. 1
couldn’t. 2
battles 2
count) 3
count++; 1
count--; 1
counter 116
counter); 6
counter, 15
counter. 12
counter: 1
counter_t; 6
counterbalance 1
counter’s 2
counting; 2
counts 4
couple 10
coupling) 2
course) 1
course). 1
coverage 2
coverage, 2
covered 2
covers 4
cpu 4
craft 2
crazier 1
crazy! 1
crazy) 1
create 49
create(); 1
create, 2
created 22
created, 14
created. 3
creation; 1
creativity 1
creator 1
credentials, 1
crime, 1
critical; 2
critically, 1
critique 2
cross 1
crux 3
crux: 5
curious 3
curious, 1
curious. 1
curr 6
curr); 1
curr->pass 1
currency) 6
currency; 1
current->next; 1
current->tickets; 1
currently 27
currently-pointed 1
currently-running 9
curse 3
customer 2
cycle 4
cycle. 1
cycles) 1
cycles). 2
daemon 8
dandy. 1
dangerous 5
dangling 1
dark 3
darned 1
be 785
be, 2
be. 11
be: 2
beautiful 9
beautiful, 1
became 21
become 32
bed. 2
data 252
data, 18
data. 9
databases 5
datacenters, 1
datacenters. 2
date 2
date, 2
date. 1
daunting 1
before 130
before!” 1
day 5
before, 7
day, 2
deadlock) 2
before. 7
deadlock). 2
began 4
deal 16
dealing 2
deallocate 1
deallocated 4
begin 32
deallocations 2
begin. 3
debugging 1
begin... 1
debugging, 1
begin\n"); 5
decade. 2
begin\n", 2
decay-usage 2
beginning 15
beginning, 1
beginning: 1
begins! 2
decide 23
begs 2
decide: 1
begun, 1
decided 6
decides). 1
decimal), 1
behave 12
behave. 2
behaved 1
behavior? 2
behavioral 1
behaviors 2
decision 15
behaviors. 2
behind-thescenes 1
decision, 4
decision. 2
decisions? 1
declaration 5
declare 4
declared 1
decrease 2
decreased, 1
decreases? 1
decrement(counter_t 4
dedication. 1
deep 7
being 54
deep, 1
deep... 1
default? 1
below 11
defaults 3
below, 2
defaults, 2
defaults. 2
defeats 1
below. 13
defend 2
belt, 1
benchmark 3
defense 3
benefit 1
defense, 1
benefit. 1
best-case 1
defer 2
best; 1
definite 1
bet 2
degenerate 1
bet. 2
better) 1
degree 3
better-than-expected 1
deletes 1
better.” 1
deletion, 1
better? 1
delivered 2
delve 5
demand-zero 1
demand? 1
demanded 2
beyond 20
beyond. 1
demands 2
bidding. 1
demands. 1
big; 1
demand” 1
big? 1
biggest 4
demonstrate 5
big” 1
demonstrated 2
billions) 1
demoted 1
binaries, 1
depend 3
binary 14
binary, 1
binary. 1
depending 12
bind 1
depends.” 1
depicted 2
depicts 1
deployed. 1
depressing 1
depressing. 1
depths, 1
dequeue 5
dereference 1
dereference. 2
derivatives 1
descheduled, 1
descheduled. 1
describes 6
describing 4
description 9
description, 1
descriptor). 1
bit 93
descriptor? 1
descriptors 5
bit, 10
descriptors, 2
bit. 5
descriptors. 1
bitmap 2
bits) 1
bits), 2
bits). 4
bits1 1
bits? 1
bits”. 1
bitwise 1
design 22
design, 1
bizarre 3
design. 2
black 3
design: 1
blame 3
designate 1
designated 2
designers 9
designers, 1
block 22
block, 2
designers. 2
block. 3
designing 3
blocking 2
bombs, 1
desire 7
desire, 1
desire. 1
book 47
book, 18
desired 52
desired, 1
desired. 9
desk? 2
book. 23
books). 1
desktop 4
bookshelves 2
desktop. 1
despairing 1
boost 8
boost, 1
despite 6
boost. 1
destination 2
boots 2
destination. 1
boots, 1
destination: 1
boring 1
destroy 1
born 4
destroy()) 2
born, 1
destroying 1
born. 1
born: 1
destruction 2
borrow 2
destruction, 1
destructive 1
detail10 1
detail; 1
detailed 8
details 46
both 87
both, 1
details); 2
both. 4
details, 4
bottleneck 1
bottleneck. 2
bottom 10
bottom, 2
bouncing 1
boundary; 1
bounded 8
details. 34
detector 1
detects 1
determines 17
determining 4
bounds 48
bounds, 5
deterministic 8
deterministic, 2
bounds. 5
deterministic. 2
box, 1
deterministically. 1
boxes 2
bragging 2
brand 2
break 5
break, 1
break. 1
break: 1
breaking 1
developed 23
breathe 2
developed. 1
developer 2
briefly 7
developer, 1
brilliant!” 1
brilliant. 1
developer. 2
brings 1
developments 1
brk 1
developments. 1
brk, 1
broadcast 1
broaden 2
broader 1
broadly 1
device 11
broadly. 1
device, 1
broken 1
device. 1
broken, 2
devices). 1
devices? 1
broken. 3
deviously 1
diagnose 1
diagram). 1
diagrams 1
brought 10
brutally 1
did), 2
btrees. 1
buffer), 1
buffer; 6
didn’t 11
buffer[MAX]; 1
die 1
buffer[use_ptr]; 1
die, 1
died 1
buffers 6
differ 2
bug; 2
differ, 2
buggy! 2
differences 2
differences. 2
bugs 6
differentiate 2
bugs, 2
differently 1
differently, 1
differently. 3
bugs. 11
builder 1
builds 1
built; 2
difficult 10
busy. 1
difficult. 3
digest. 1
digested; 1
directed. 1
direction; 1
directions. 3
directives 1
directly 8
directly, 5
directly. 3
directory; 1
dirty 11
dirty, 2
dirty-page 2
disable 3
disappear). 1
disappears 2
disassemble 2
disassembler 2
disassembler. 2
discipline 1
discipline, 1
disciplines) 1
disconnection 1
discovered 4
discredited 1
discretion 1
discuss 53
discuss, 1
discusses 1
discussing 4
discussion 17
discussion, 1
discussion. 1
discussion: 1
disk) 3
disk), 2
disk). 3
disk-access 1
disk-drive 1
disk; 4
but 288
disk? 2
but, 1
bx=0,bx=1 2
disks 4
bx=100). 2
disks, 1
dismantling 1
display 2
disposal.” 1
distinct 2
distribution 1
dive 4
diverse 1
divides 6
dividing 6
do) 1
do), 1
do; 2
do? 9
documentation 3
documented 1
documents, 1
does), 1
does). 1
doesn’t 51
doesn’t, 3
doing.” 1
doing; 1
doing? 2
dominant 4
done 72
done, 6
done. 10
done\n", 2
don’t 81
don’t, 2
don’t. 1
double) 1
double-check 1
double-click 1
double-precision 1
doubt 2
doubt. 1
down 25
down, 1
down-wards 1
download 2
downsides, 1
downsides. 1
downward 1
downward, 1
downward. 3
draw 2
draw. 1
drawn 1
dread: 1
dreams 1
drink 2
drive 5
drive, 2
drive. 2
driven 1
driver 1
driver8 1
due 19
dummy 4
duration 2
duty. 1
dx 2
dx=3,dx=3 4
dynamics 1
d’un 1
e.g., 8
earlier 18
earlier, 3
earlier. 2
ease 4
ease-of-use 1
ease. 1
easy 50
easy, 1
easy-to-use 2
easy. 3
easy: 2
eat 6
eaters 2
eating 1
eax 20
eax, 3
eax. 5
eax=50 2
eax=50. 2
eax=51), 2
ebp; 1
ebx; 1
by 705
ecosphere 1
byte) 2
edit 2
byte). 1
edition. 1
editor? 1
edx; 1
effective) 2
effectively 5
effectively, 1
effectively. 3
effects 1
effect” 1
efficacy 2
bytes 41
efficiency; 1
efficient) 1
bytes, 10
bytes. 3
efficiently 10
efficiently, 1
efficiently. 1
effort 3
egomaniac. 1
elapsed. 1
electrical 1
element 14
element, 2
element. 1
elements; 1
else? 2
elsewhere 3
elsewhere, 1
elsewhere. 2
email 2
emailing. 1
embarrassment. 1
embracing 1
emphasis 1
employ 4
emptied 1
empty), 1
enables 23
enabling 15
enacted 1
c 177
enacted, 1
c->global 4
encountered 1
c->local[cpu] 4
encounters 2
c->threshold 2
end), 1
c->value 4
endless 4
ends 4
c2 10
c2, 1
end” 8
c4 6
end”. 1
c4, 1
energy-efficiency 1
enforcement, 1
c6 6
engineering; 1
c6, 1
engineers 2
c:100:50 1
enjoys 1
cabinets 1
enlisted 1
cache) 1
cache). 1
cache; 2
cache? 2
caches 16
caches, 5
caches. 1
caching 9
enough 32
caching. 1
calculates 1
calculation 1
enough, 5
calculation, 1
calculation: 1
enough. 2
calculations? 2
call) 1
enqueue 4
call), 1
ensued 1
call). 5
call-ing 1
call1 1
call3 1
call; 2
call? 4
ensure 34
enter 32
entering 9
enterprising 2
entirely 4
entirely. 4
entirety 2
entity), 1
entity; 1
called 111
called, 10
called. 4
entries 22
entries); 1
caller 14
entries, 5
caller, 4
entries. 3
caller. 2
entries: 1
caller’s 1
calloc() 1
entry 55
entry, 8
entry. 10
envisager 1
calls 88
equal 19
calls, 3
equal, 2
equation 1
calls. 5
equivalent. 2
calls: 3
camp, 1
can) 1
era 7
canceled, 1
era, 1
candidate 3
era. 1
candidates; 1
errant 3
errantly-freed 1
cannot 21
error 17
error, 3
errorprone. 1
errors? 2
esi; 1
essential 3
can’t 30
est 1
estimate 2
care 10
etc. 5
care, 2
etc.); 1
careful), 1
etc.)? 1
etc., 1
carefully 17
carefully, 6
carts 1
carved 1
case) 1
case; 3
case? 5
cases 29
cases, 27
cases. 3
cast 4
casting 1
catastrophic, 1
catches 1
cause 24
cause. 1
caused 2
caused, 1
caused. 1
caution 1
center 2
central 7
centralized 1
even 148
event 3
certainly 32
ever 19
certainly, 1
ever, 1
chain 2
everywhere, 1
challenge 5
evicted 3
challenge, 1
evicted, 1
challenge. 4
evicted. 2
evicts 3
challenge: 9
evil 1
chances 4
change! 2
changes 20
changes, 1
changes. 1
changing 9
exactly 39
channel 1
exam- 1
exam? 1
examines 3
examining 4
chapter 37
chapter, 16
chapter. 25
chapters) 1
chapters). 2
character. 1
characterize 1
cheapskate. 1
cheat 2
cheating 1
check; 1
checkbook 1
checks 25
child/parent 1
child? 2
children 1
children, 3
chips 3
choice 8
choice, 2
choice. 1
choice: 1
choose 5
chopped 5
example 131
chops 1
chores.” 1
chosen). 1
chunk 44
chunk, 3
chunk. 4
chunks). 1
chunks; 1
circular 1
citation 1
citation. 2
cite 2
cited 2
claims 2
class), 2
class? 2
classmates; 1
clean 9
clean-page 2
cleaning 1
clear 12
clear, 5
clear. 2
clear: 6
clearing 2
clever 5
clever, 1
client 5
client, 2
client. 1
client/server 1
client’s 2
clock; 1
close(), 1
close(STDOUT_FILENO); 1
closes 3
closest 1
closing 2
closing, 2
cloud 2
cloud-based 1
clues) 1
clustered 1
co-authors 5
coalesce 2
coalescing) 1
coarse 1
cocoon, 1
example, 262
example. 31
example... 1
example: 8
examples; 2
exceeding 1
excellent 42
excellent, 4
exception; 2
exceptional 5
exceptions 3
excessively 1
exchange1 1
excited 2
exciting! 1
exclusion 21
exclusion. 6
exec() 13
exec(), 6
exec(). 2
exec(): 1
execl(), 1
execlp(), 2
executable 13
executable, 3
executed), 2
executes 23
executes, 3
code 391
code); 2
executing 26
executing, 2
executing. 1
code, 73
execution 48
execution, 8
code. 44
execution. 17
execution: 1
code: 7
cofounded 1
execv(), 2
cold- 1
execvp() 1
cold-start 2
execvp(), 2
collaboration 1
execvp(). 1
colleagues’ 1
collected 1
execvp(myargs[0], 2
collectively 2
collector 2
exercise 4
color 1
columns 1
exert 2
columns. 1
columns: 2
exhaustive 3
exhibits 2
exist). 1
combination 11
exist; 2
existed 1
combine 7
combined 1
existed. 2
existence 3
comes 14
exists 3
exists, 3
coming 7
exists. 4
command 12
command, 4
command. 2
exit 13
commandline 1
exit()) 1
commands; 1
commentary 1
exit. 5
exiting 2
exiting. 1
exits; 2
exits? 2
expand 1
expect; 1
expectations? 2
expected 7
expected, 4
common 61
common, 1
expected. 4
commonlyused 1
expected: 2
communicate 2
community 3
expects 3
community, 1
community. 1
compact 3
compact. 1
experience 9
compaction 3
experimentation. 1
experiments 3
companies 6
companies, 1
company 1
expert 3
company, 2
expert, 1
company’s 1
expires. 1
explained 2
compare 6
compare-and-exchange 2
explains 2
compare-and-swap 10
compare-and-swap, 2
compared 7
explicit 22
exploited 2
comparison 7
exploits. 1
comparison, 3
exploring 2
comparison: 1
exporting 1
compete 1
expose 1
compete, 1
exposed 1
competitive 1
express 1
competitive. 1
extend 2
extent 1
compile 11
compile-time 1
compiled 6
compiled(!) 1
compiled, 1
extra 18
extracts 3
extreme 4
eyes 2
facets 2
compiler 26
compiler, 2
complain 2
fact 20
complete 23
complete, 7
complete. 6
complete: 1
complete?) 2
completed 5
fact, 28
completed, 2
fact. 2
completes1 1
completes? 1
completion), 1
fact: 3
completion; 5
complex-instruction 1
complicate 1
fail 13
fail. 2
complicated 13
failed; 2
complicated, 1
failing 3
complicated. 4
complicated: 2
complications 1
component 5
comprises 1
compulsory 5
compulsory, 1
failure 21
computation 2
failure. 1
computation, 2
faint 1
computation. 2
computational-overhead 1
compute 12
computed 1
fair 19
fair, 1
fair-share 7
fair. 1
familiar; 1
families 1
family 5
family. 1
famously 3
fancy? 1
computer 59
far) 2
computer, 3
far; 1
computer. 1
computers) 2
fashion 4
fashion, 1
computers), 2
fashion. 3
con- 1
concatenate 2
concepts 7
concepts, 1
conceptually 2
fast 19
concern; 1
concerned 5
fast, 6
concerned, 2
fast. 5
concerns 3
faster; 1
conclude 2
concrete 1
fastpath) 2
concrete, 1
fault 12
fault, 7
fault. 7
concurrency 36
faulting 2
faulting. 1
concurrency, 10
favor, 1
concurrency. 7
concurrency: 2
favorite 8
fd 1
feature 5
feel 8
fetch 29
fetch, 2
fetch-and-add 8
concurrent 80
fetch. 2
concurrent, 2
concurrently) 1
concurrently), 2
concurrently; 1
concurrently? 2
fetches 10
concurrentlyrunning 1
cond; 2
fetches, 2
cond_t 5
fetching 4
condition 81
condition); 1
condition, 7
condition. 8
condition: 1
conditionals. 2
conditions; 2
confections 1
configurable 1
configurations, 1
few 102
configure; 1
confines 1
few, 2
confining 1
few. 1
confront 1
confuse 1
fewer), 1
confused 1
confusing; 1
fewest 2
fewest-possible 1
connected 4
connections 1
connects 2
cons. 1
field 15
field, 2
field. 1
field: 1
consider 26
fight. 1
consider. 2
considerably 1
considering 6
consist 2
conspired 1
const 3
constantly 3
constants 2
constants, 1
constitutes 1
construct 5
constructing 3
figure 35
construction 7
construction. 1
consulted 1
consulted, 1
consults 1
figure, 15
consume! 1
consumer; 1
figured 2
consumers 9
consumers, 2
consumers. 1
consumes 2
consuming 3
consumption 1
contains 32
contending 14
contention 4
contention, 2
contention. 2
file 95
file, 9
file-system 1
file. 2
file.txt 2
file.txt|wc 1
file: 1
context 70
files) 1
context, 2
files” 1
context. 2
file’s 2
contiguous; 1
contiguously 2
fill; 2
fill_ptr 2
continue 10
continue, 1
filled 6
filled. 1
continue. 7
fills 3
continued 1
continuous 1
contributed 1
contributions 1
final 51
finally), 1
findings 2
finds 10
fine 7
fine, 1
control 79
fine. 2
finegrained 1
control, 4
control-c 1
finish), 1
control. 1
control: 1
conundrum 1
convenience 2
convenience, 1
convenient 1
finished 14
convention 2
converge 1
converse 2
convince 1
convoys, 1
finished, 10
cooked 1
finished. 2
cool 17
cool, 1
coolest 2
cooperative 5
cope 1
copies 12
copy 18
copy, 1
copy-on-write 5
copy-on-write, 1
copy. 1
copying 4
copying. 1
core 8
core, 5
core. 2
corollary 2
correct) 1
correct-ness; 1
correct; 1
correct? 3
correctly 19
correctly, 3
correctly-working 1
correctly. 8
correctness 9
correctness, 4
correctness. 3
correctness: 2
corresponding 10
cost 49
cost, 5
cost. 1
cost: 4
costing 1
costly; 2
costs? 1
first 278
first, 20
first-fit 3
first-fit, 1
first-in 2
first-out) 1
first. 10
fit; 1
fit? 1
fits 9
fits, 1
five 8
could 137
could, 1
fixed 13
count 25
count. 2
counter) 1
fixed-sized 11
counter++; 1
counter1 1
counter1, 1
counter; 2
countermeasures 1
counterpart 1
counters 14
counters, 6
counting 7
counting, 2
counting-based 1
course 20
flag 73
flag)? 1
flag, 14
flag. 13
flag[0] 2
flag[self] 4
course, 73
flag’s 2
flash-based 2
course. 4
court, 1
flavor 2
flavor. 1
flexibility; 1
flight, 1
cover 11
floating 1
cover, 2
floor 1
covering 7
cpu.c 2
crash 2
crash, 1
crash. 1
flow 14
crashes 2
crashes, 3
crazy 3
flush 5
crazy. 2
flushing 1
cream.” 1
create() 11
create()); 2
create(), 2
create()6 1
focus 21
focus. 1
focuses 3
focusing 2
foil 2
followed 5
creates 34
follows 6
creating 9
follows. 4
creation 20
follows: 21
creation, 6
creation: 1
creators 1
foo 4
creature 1
footnote: 1
credit 3
for) 1
criteria. 2
for? 2
criterion 2
forays 1
forces 2
forcing 1
foreground) 1
foreman 1
forever! 2
forever; 2
forget-ting 1
forgets 1
fork 7
fork()/exec() 1
fork(); 4
form 46
form, 6
form. 2
formally, 1
formally: 1
critical 140
format; 2
critical, 2
cruces 1
forms; 1
crucial 2
formula 2
crude 2
formula, 1
ctxt 1
forth), 1
culprit 1
forth). 1
curr->next; 4
forth; 1
curr->stride; 1
currency 4
forthcoming 3
currency. 2
fortuitous 1
forward! 1
forwarded 1
current 37
current: 1
currently-executing 2
customer! 1
customized 1
cycles 11
cycles, 3
cycles. 4
cyclic 2
cyclic-sequential 1
daemon1 1
dairy 1
danger 2
darker 1
darn 1
data) 2
data), 1
data). 1
data; 1
data? 1
data[100] 1
found 84
found, 2
database 13
datacenter 1
found. 2
datacenter, 1
datacenter. 1
foundational 2
day! 1
days 4
days, 6
days. 1
days... 1
days: 2
de 1
de-queue 1
deadlock 5
deal? 2
deallocates 1
deallocation, 1
debate 2
debug 1
debug, 2
debug. 1
debugger 6
decayed 1
four 52
fourteen. 1
decides 11
fourth 4
deciding 5
decimal 2
fraction 5
decimal. 1
fragmentation; 1
fragmentation? 1
decisions 7
fragmented) 1
decisions, 2
fragmented; 1
decisions. 2
declares 2
declaring 1
frames 5
decodes 1
decreases 3
framework 3
decreasing 1
decrees 1
dedicate 1
dedicated 2
deeper 5
deeper. 1
deeply 1
deeply-nested 1
deeply. 2
default 7
default, 2
defeat 1
defense; 1
defensive 1
define 9
defined 5
defined. 1
definitely 4
definition 6
definitive 1
degenerates 2
delay 2
delaying 2
delete, 2
deleted 1
deleted); 1
deletion) 1
delight 1
deliver 8
delving 1
demand 11
demand. 1
demanding 3
demise 1
demonstrates 3
dense, 1
dependence, 1
dependent 1
depends 5
depiction 2
deploy 1
deployable 1
deployment, 1
deployment. 2
depth 2
derive 1
deschedules 3
descheduling 2
describe 14
describe. 1
free 187
free()) 1
free()? 1
free(10), 1
free(50). 1
free(rvals); 2
free(void 4
free(x); 1
described 36
descrip-tion 1
free, 5
descriptor 1
free-page 1
descriptor, 2
design) 1
design-ers, 1
free. 13
designed 9
designer, 1
freed 3
designs 1
designs, 1
freed. 3
designs. 1
freedom 1
design” 1
desirable. 1
desired). 1
desires 1
freeing 6
desk 1
desktops 1
dest_buffer[100]; 1
frequency 5
destroy() 2
destroyed 1
frequent 4
frequently; 1
friend 3
friend, 2
friend: 1
detail 26
detail, 6
detail. 12
details! 1
details) 1
details). 4
details1 1
details; 3
detect 5
detecting 1
deter- 1
determine 34
determined 9
deterministically) 1
detour 1
develop 12
develop, 2
developed; 1
developer; 2
developers 12
developers. 2
developing 7
development 13
device), 1
device; 1
devices 15
devices, 2
devices. 4
diagram 10
diagram); 1
diagram, 6
dictates 1
did 22
did, 1
did. 2
die). 1
dies, 2
differ? 1
difference 18
difference, 4
difference: 4
from 443
from, 3
from. 5
different 196
different-size 1
full). 2
different-sized 1
full; 2
different. 2
fullness 1
different: 2
differentiates 1
differentiation 1
differently; 1
fully 8
differs 1
fully-associative 1
difficulties 2
fully-associative, 1
difficulties. 1
difficulty 4
digest; 1
digging 1
digit 1
direct 14
directing 1
direction 1
direction, 4
direction. 3
function 41
function, 3
function. 2
functions; 1
directory 18
fundamentally 3
funny 1
directory, 8
directory. 6
directory: 1
dirty) 2
disabled; 3
disabling 5
disappear 1
disaster. 1
discipline1 1
disciplines 2
disciplines. 1
discrepancy 1
further 31
further, 2
fusion, 1
discussed 24
discussed, 1
discussed. 1
futex 16
discussion). 1
futex_wait 2
future; 1
gained 1
gains. 1
game 4
game, 1
gates 1
gates, 1
gcc) 1
gdb) 1
disk 54
disk); 1
disk, 14
disk-like 1
general 41
disk. 14
displays 1
disrupt 1
dissertation 6
distinguish 2
general, 18
general. 1
distributed 7
generality, 1
dives 1
generalization 5
divide 6
generalize 1
generalized 1
generalized, 1
divided 8
diving 1
generalpurpose 2
generates 10
generating 2
generation 1
get 126
get(); 5
get: 4
getpid() 1
getpid()); 9
getpid(), 2
gettid() 2
gettid()); 4
gettimeofday()). 1
gettimeofday(); 1
getting 33
ghastly 1
github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks 1
gives 15
do 328
giving 15
glance 1
global; 2
do, 11
globally 4
globally-allocated 2
globally-shared 1
gnu 2
do. 18
do: 2
document 1
documents/R4400 1
go 37
go, 2
goals 15
goals, 1
goals. 2
goes 27
going 29
going. 1
good! 2
good? 1
goodness); 1
good”. 1
goofs 1
got 16
grab 11
grabbing 2
gracefully, 1
grand 1
granting 1
granularity, 2
graph 11
does 256
graph, 6
does, 6
graph. 1
does. 1
grasshopper, 1
does: 2
doesn’t). 2
gray) 3
doesn’t? 1
greater 4
greater-than 1
greater. 1
greatly 4
greedy 3
grep 7
groups 3
groups. 2
grow; 1
grows 16
doing 76
grows, 4
doing, 3
grows. 1
grows: 1
doing. 3
doing: 1
doivent 1
dollars 2
domains 1
domains, 1
dominate 3
done! 3
done) 1
guarantee 21
done; 1
guarantee. 1
done? 1
guaranteed 1
double 3
double-ing! 1
guard; 2
double. 1
guessed 1
doubt! 1
doubts 1
guessed, 5
downfall. 2
guest 1
downside, 1
downward). 1
guide 1
downwards 1
guide. 1
draconian 1
guide: 1
dramatic 2
habit 2
dramatically 2
habits; 1
dream 1
hacked 1
dream. 1
drivers 1
hacker 2
drives 2
drives, 1
driving 1
hair 4
hallmark 1
drop 4
halted, 1
drops? 1
hand-assembled 1
dump”, 2
hand-controlled 1
hand-over-hand 8
handed 4
during 29
dustbin 2
handle 17
handle, 1
dx) 4
handle. 1
handled 4
handled, 1
dynamic 20
dynamically 1
dynamically-allocated 1
dynamically-allocated, 1
e 1
handler 24
handler, 3
handler. 2
handlers; 1
hands 4
hands-on 1
hang 1
happen 15
happen, 2
happen. 2
happen: 1
happened; 1
happening 1
happens; 2
happens? 2
happy 5
happy. 4
hard-and-fast 1
harddisk 1
harder 4
harder. 1
hardly 3
each 340
each, 1
each. 4
eagerly, 1
earlier) 1
earlier). 1
earlier; 2
earliest 13
hardware 263
hardware, 15
early 68
eases 1
hardware-based 5
hardware-managed 9
easier 19
hardware. 10
easier, 1
easier. 1
hardware: 3
hardware’s 1
harm 3
harming 2
harsh, 2
easily 17
easily. 3
easy-to-read 1
easy; 1
eater 2
eaters; 1
eax=51. 4
ebx, 1
economist. 1
ecx; 1
edi; 1
editor 2
editor, 1
effect 4
effect. 1
effective 12
effective, 2
effective. 3
efficiencies 1
efficiency 8
efficiency, 3
efficiency. 3
efficient 19
efficient, 5
efficiently; 1
efficiently? 5
efforts 2
eight 1
eight-page 1
eip; 1
either 49
either. 1
ele-ment 1
elements 8
else 45
else, 7
else-where, 1
emails 1
employed 4
employs 3
employs. 1
empty 14
empty, 3
empty. 1
emptying 1
emulate 2
emulator 1
en-us/um/people/mbj/Mars 2
en.wikipedia.org/wiki/LoadLink/Store-Conditional. 2
enable 24
enable. 2
has 348
enabled 4
has, 1
enabled, 4
has. 1
enabled. 1
enact 1
enacting 1
encapsulated 2
ence 1
encounter 7
encounter. 1
encountering 1
hash 17
encourage 3
hash_t; 2
encouraged 1
hate 1
haul, 1
end 46
end, 5
end-of-string 1
end. 1
end\n"); 5
endeavors 1
ending 1
endlessly 2
endlessly, 2
enemy? 2
engineering 2
engineering. 1
enjoy 3
enormously 1
enough! 1
enough), 2
enough; 1
ensures 14
ensuring 14
entered, 2
enters 21
entire 46
entirely; 2
entirety? 1
entities 5
entitled 2
entity, 3
entries). 2
entries; 2
entry) 1
entry), 1
entry). 1
entry; 2
entry? 1
enum 2
environment 4
environment, 2
environment. 4
epic 1
equally 1
equals 3
equation; 1
equivalent; 1
error-prone. 1
error; 1
error? 2
errors 9
errors. 1
escalation 1
esp; 1
especially 13
essay 1
essentially 11
establish 3
establishment 1
estimator? 1
et 7
etc.) 11
etc.). 1
etc.? 2
evaluate 6
evenly 3
events 5
eventually 15
eventually, 1
evermore 1
have 487
have, 1
have. 3
have: 2
havoc’ 1
every 52
everyone 1
everything 12
evict 9
head 39
head, 1
evict. 3
head->next 1
evicting 1
head->size 1
head_lock, 2
eviction 3
headaches. 1
eviction. 1
header). 1
evidence 1
header_t 1
evil.” 2
headers 2
headers, 1
evolution 3
evolved 1
exact 26
exactly? 2
heap 76
examine 36
heap); 1
example) 10
heap, 22
heap-allocated 1
example), 10
example). 3
example? 2
heap. 10
heap: 2
hear 1
heard 1
hearing 3
heart 2
heart. 1
heavily 2
examples 21
heavily-used 1
examples, 3
heavy-handed, 1
held) 1
examples. 3
held), 7
exceeds 8
held). 2
excellent; 2
held; 2
helgrind? 2
except 6
hello 5
hello, 8
help) 1
exception 15
helped 2
exception, 3
helpful, 1
exception. 1
helps 5
exceptionally 2
excess 1
excessive 3
exchange 2
exchange1) 1
excludes 2
excluding 1
exclusion? 2
excuse 1
exec 2
exec(); 1
execl, 1
execle(), 2
here 46
here, 22
execute 29
execute, 2
here. 11
executed 17
here: 10
herein), 1
here’s 1
executed, 5
executed. 1
heuristic 2
executing) 1
hexadecimal), 1
hey, 1
execution), 3
heyday 1
execution” 1
execvpe(). 2
hidden 4
hide 1
exercises 4
hierarchy; 1
exhibit 3
exhibit. 1
exist 11
exist, 1
exist. 5
exist: 1
high 36
existed; 2
high, 4
high-end 4
high. 3
high: 1
existing 14
higher-level 1
higher-priority 2
exit() 6
exit(1); 6
exit), 1
exit). 2
exit; 1
highest 20
exit? 1
highlight 3
exited 1
highlyfragmented 1
exited2 1
him 1
exiting? 1
himself, 1
exits 3
hinted 3
exits, 2
hints 4
hire 1
exits. 4
expect 15
expect, 2
expect. 2
expect: 4
expectations 1
his 37
expected) 4
expected; 3
expected? 2
expensive 3
historical 14
expensive!). 1
expensive, 6
expensive. 2
history 16
experiment 5
history, 3
experiment, 1
history. 3
experts 1
explain 1
history... 2
explanation 1
hit! 1
hit), 4
hit). 1
hit; 1
explicitly 12
explicitly. 2
exploit 1
exploration 1
hits 13
hits, 2
hits. 1
explore 5
hoc 2
explored 2
hogging; 1
exploring? 1
hold? 2
exports 1
holder 2
expressed 2
extended 5
extension 1
extents 2
external 10
extract 7
holds 38
holds, 2
extremely 3
hole 1
eyes...) 1
face 4
homework 9
facility 3
fact). 1
homework, 9
honor 1
factor 8
honor, 1
honor. 1
fail! 2
honor: 1
fail? 1
honorable 1
hood 1
failed 8
failed, 1
hope 13
failed\n"); 4
hope. 1
fails 5
hopefully 6
fails, 3
hopefully, 3
failure), 1
host 2
failure; 2
hour 1
failures 1
house 2
failures. 2
fairly 9
fairness 7
fairness, 2
fairness. 6
fairshare 1
fall 5
falling 1
familiar 2
familiarity 2
family? 2
famous 21
fanatics, 2
fancifully 1
fancy 7
fantastic 1
fantastic, 1
far 21
far, 13
far-reaching 1
far. 1
far: 2
fares 1
farmer 1
fascinating 9
fashion). 1
fashion; 1
fast; 1
faster 16
faster, 6
faster. 6
fast” 1
fault) 1
fault3 1
fault; 2
fault? 1
faulting”, 1
faults 3
faults, 2
faulty 1
feasible 1
feasible. 1
feature-filled 1
features 17
features, 2
features. 2
feeble 2
feedback 5
fell 2
fellow 1
fellow. 1
felt 3
fetch), 2
fetch-ing 1
fetched 5
few) 1
few), 2
few). 1
fewer 13
fewer. 1
fg 1
fields 2
fields, 1
field” 1
figure), 1
figures 4
figures, 1
figuring 1
file), 1
file; 1
files 10
files, 3
files. 1
fill 11
fill. 1
how 441
filling 1
how, 1
how: 1
however 1
finally 27
finally, 8
however, 49
however: 1
hptr 1
http://books.google.com/ngrams). 1
http://cag.csail.mit.edu/raw/documents/R4400 2
http://en.wikipedia.org/wiki/ 1
http://history-computer.com/Library/AltoUsersHandbook.pdf. 1
http://ostep.org/Citations/inside-cfs.pdf. 1
http://people.freebsd.org/˜jasone/jemalloc/bsdcan2006/jemalloc.pdf. 1
http://www-formal.stanford.edu/jmc/ 1
http://www.cs.utexas.edu/users/EWD/ewd01xx/EWD123.PDF. 5
http://www.cs.utexas.edu/users/EWD/ewd03xx/EWD329.PDF 1
http://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1303.PDF. 1
http://www.ibm.com/developerworks/linux/library/l-solar/. 2
http://www.intel.com/products/processor/manuals. 3
http://www.multicians.org/history.html. 1
http://www.sparc.org/standards/SPARCV9.pdf. 2
http://www.unix.org/version3/. 1
https://birrell.org/andrew/papers/035-Threads.pdf 2
https://en.wikipedia.org/wiki/Buffer_overflow 1
https://github.com/mit-pdos/xv6-public. 1
https://quoteinvestigator.com/2015/07/23/great-power. 1
hugely 3
humans, 1
find 86
find!) 1
hundred 7
find. 1
hundreds). 1
hung. 2
finding 15
fine! 1
hybrid 10
fine). 1
hybrid, 1
hybrid. 1
fine-grained 3
hypervisors, 1
fine-tuned 1
fine; 2
fingertips. 1
i++) 18
finish 13
finish, 2
finish. 2
finishes 6
finishes, 1
finishes. 1
fire). 1
i.e., 29
fires 1
first) 1
i5 2
first-level 2
first; 6
first” 1
i; 16
i=0 1
iMac 4
idea! 1
idea; 1
idea? 2
ideal? 1
fit 27
ideally 1
fit, 2
fitting 3
five-level 1
fix 3
fix. 1
flag) 5
flag), 2
flag). 2
flag.s 2
ideas 36
flag.s. 2
ideas, 3
identifiers, 1
flag; 6
idiom: 1
flag=0 2
idle 5
flag? 3
idle, 1
flag[1] 2
flag[2]; 2
ignore 5
ignored. 1
flags 10
flags, 1
illegal 11
flags. 2
illegal, 1
illegal. 2
illegally). 1
flags: 9
flaws 1
illusions 1
illusions, 1
flaws. 3
flexibility 2
flexibility: 2
flexible 9
flexible, 1
flexibly 1
flushed 1
fly 1
focused 3
focused, 1
folks 1
follow 2
follow, 1
imagine 41
imagine, 4
imbalance 3
imbalance, 1
imbalance. 1
immediately 23
immediately, 4
immediately. 2
immense 1
impact 5
following 55
impact, 3
following: 8
implementation 7
implementation)” 2
implementation, 2
implementation. 4
implemented 10
implements 6
implications. 1
implicitly 2
importance 8
importance, 1
important 63
important, 7
important. 5
improve 17
improve. 1
improved 6
improvement 3
improvement. 1
in) 2
in- 1
in-between 5
in-between. 3
in-terface 1
in/out 1
in; 2
in? 2
inadvisable 1
inc 1
incarnation. 1
incl 1
include 18
included 4
inclusion 1
inconclusive 1
incorporate 7
incorporated 4
incorrectly. 1
increase 20
increased 3
increased, 1
increased. 5
increasingly 6
increment(counter_t 4
incremental 1
incrementalism; 1
incremented 4
incremented, 1
increments 7
indefinitely, 1
indefinitely. 2
independent 4
independently! 1
index 20
index. 1
index: 1
indexes 1
indexing 1
indicated). 1
indicates 3
indicating 8
indicative 1
indirection 3
indivisible 2
industry 2
inefficiencies 1
inefficiencies. 1
inefficient 4
inefficient, 2
inefficient. 4
inexpensive 1
infinite 6
infinite. 1
inflation 2
inflation, 1
influential; 1
info 1
info: 1
information 57
information, 6
information. 9
informative 3
informed 3
informed, 1
informs 1
infrequently 1
inherently 2
inheritance. 2
inherits 1
init 4
init(); 2
init(lock_t 4
init: 2
initial 5
initialization 8
initialization. 3
initialize 15
initialized 8
initializer 2
initiates 4
initiating 1
injected 2
inkernel 1
inner 1
innocent 1
innovations 2
innovations, 1
innovations. 1
innovator 1
inode) 2
inodes, 1
input 20
input); 1
input, 1
input/output 3
input: 1
ins 1
inseparably 1
insert(queue, 1
insert; 2
inserted 2
inserted. 1
inside 30
insight 1
insisting 1
inspiration 1
inspired 1
installation 1
installation, 1
installed 1
installs 2
instances 2
instead 95
instead, 5
instead. 4
for 1176
for, 2
for. 3
for: 1
force 2
forced 2
forcefully 2
forcefully. 1
forefront 2
instruction 130
forest, 1
instruction(s) 2
forever 6
forever, 6
forever. 1
forewarned, 2
instruction, 19
forewarned: 1
forget 8
forget, 1
forget: 1
forgetting 2
instruction. 22
forgot 2
instruction: 1
instructions) 2
instructions), 1
instructions). 1
instructions; 2
instrumentation 1
int) 2
int), 2
fork() 25
intact; 1
fork(), 9
fork(). 2
fork()ing 1
integer 17
fork.py, 1
fork; 1
integer, 4
form). 1
integers), 1
formal 2
intend 2
formal, 1
intense 2
intensively 1
formed 3
formed. 1
intent 5
former 5
forms 3
forms: 1
formulae. 1
interact 15
interact. 1
forth 3
interacting 1
forth, 4
interaction 13
forth. 10
fortunately, 2
forward 4
forward-growing 1
fought 1
found? 1
interactive 20
four-level 1
interactive, 1
interchangeably 1
interest 3
fprintf(stderr, 6
interest: 2
interested! 1
fragmentation 13
fragmentation, 6
fragmentation. 6
fragmentation2 1
fragmentation: 1
fragmented 3
fragmented, 2
interesting 46
interesting, 4
interesting. 2
interfaces 17
interfaces, 1
interfere 2
frame 40
intergalactic 2
frames; 1
interleaving 4
frankly 3
interleaving, 2
interlude, 2
interposing 1
free() 8
interpretation 1
free(), 2
interrupt), 1
interrupt; 1
free(). 6
free(): 1
free(16500) 1
free(ptr), 1
interrupted 14
free(tmp); 3
interrupted, 3
free) 5
interrupted. 2
free), 2
free-list 1
free-space 4
free; 5
free? 4
freed) 1
freed; 1
freely 2
interrupts 33
freely, 1
interrupts, 4
frees 6
frees. 1
intervals 6
frequencies; 2
intervals. 1
frequency; 1
intervals: 4
interval’ 1
frequently 7
frequently, 3
frequently-used 1
frequently. 1
friendly 5
friends 3
friends, 2
friend” 1
frightening 1
fringe 1
from) 2
from). 2
from; 1
front 10
frustrating 1
frustration 1
full 33
full, 6
fully-developed 1
fully-operational 2
fun 20
func() 4
func(). 1
functional, 1
functionality 2
functionality, 2
functionality. 3
functioned 1
functions 7
functions, 1
functions: 1
fundamen-tally 1
fundamental 18
fundamentalist 1
funky 1
furthest 5
futex_wake 2
future 21
future, 5
future. 9
gadget), 1
gadgets 1
gain 16
gaining 5
gaming 2
gaming, 1
garbage 2
garbage-collected 2
gather 1
gave 3
into 339
into, 1
intricacies. 2
intricacy 1
gcc 10
intriguing 1
gcc, 1
intro 3
gdb 5
introduces 6
gdb, 2
introduces: 1
general) 1
introducing 5
general-purpose 8
general? 1
generalizes 1
generalizing 1
introduction 17
introduction, 1
intuition? 1
intuitively 1
invent 3
invention 1
inventory 1
generally 28
inverse 1
investigating. 2
generally, 7
invocation 1
invocation, 1
invoked 2
involving 1
generate 28
generated 12
generated, 1
generated. 1
generations 1
generator 2
generic 4
gently 1
get() 7
get(counter_t 6
get? 1
getrandom(0, 1
gets 51
gettimeofday() 5
giant 1
gigabytes 1
give 30
given 80
glibc 3
global 56
globallyshared 1
glock; 2
goal 19
goal, 1
goal: 1
goals? 2
gods, 1
gone 5
good 99
good, 2
good. 6
google’s 1
government 3
grabs 16
grade, 1
graduate 9
grammar 1
grande 1
graphics 2
graphs 1
gray 3
great 79
great, 1
great. 1
greater), 1
greater). 1
greatest 1
green 1
grew, 1
grocery 2
grossly 1
ground 1
group 12
grouping 4
grow 18
grow, 1
grow. 1
growing 5
grows? 2
growth 1
growth: 1
gruesome 1
gruesome. 1
guarantees 6
guarantees. 2
guard 14
guess 8
guess, 3
guesses 3
guesses, 1
gum 1
guts, 1
guy 3
habits 1
hack, 1
hack. 1
hackers 1
hackers. 1
hacking 1
had 57
half 8
halt 5
hand 6
hand, 3
hand-coded 1
hand-over-hand). 2
hand. 3
handed-out 1
handle; 1
handler). 1
handlers 5
handlers, 3
handles 14
handling 14
handling, 1
handling. 1
happen? 8
happen?4 1
happened 5
happening! 1
happening? 1
happens 78
happens, 4
happens. 3
happens: 5
hard 51
hard-andfast 1
hard-hitting 1
hard-to-find 1
hard-working 1
hard. 1
hardware) 3
hardware). 3
hardware-interpreted 2
hardware-specific 1
hardware/OS 2
hardware; 2
hardware? 1
hardwaremanaged 1
hardwaremanaged, 1
harmful, 1
harmful. 1
harmless, 1
has). 2
has? 2
hates 1
have? 2
haven’t 4
having 29
havoc 2
he 20
head), 1
head->next; 1
head->value; 1
head; 2
headed 3
header 15
header, 4
header. 1
header: 2
header_t; 1
headway 1
heap) 2
heap), 1
heap). 1
heap; 2
heap? 3
heavilyused 1
heavy 5
heavy, 2
heavyweight 1
held 25
held, 6
held. 16
held: 2
helgrind 16
helgrind, 2
helgrind. 2
help 38
help, 1
help. 1
help: 1
helping 2
hence 20
hence, 3
here! 1
here) 4
here), 2
here; 4
here? 3
herein 3
herein, 1
herein. 5
heuristics 1
hex 4
hides 1
hierarchies 2
hierarchies, 1
hierarchy 2
hierarchy, 1
hierarchy. 2
high-level 6
high-performance 1
high-priority 2
higher 24
highest-order 1
highlighted 1
highly 7
highly-networked 1
hint 4
historically 2
historically, 1
historically-based 1
history; 1
hit 32
hit, 28
hit. 5
hits). 1
hog; 1
hogs, 1
hold 27
hold, 1
holding 12
holes 1
home 3
homeworks 5
homeworks, 3
homeworks. 1
honest 1
hopes 1
hoping 6
horrible 1
hostility: 1
hot 1
hours. 1
how-to-generate-a-random-number-from-within-a-range. 1
however; 2
http://cag.csail.mit.edu/raw/ 1
http://en.wikipedia.org/wiki/You 1
http://ftp.gnu.org/gnu/glibc. 2
http://linux.die.net/man/3/pthread 1
http://portal.acm.org/citation.cfm?id=540365. 2
http://stackoverflow.com/questions/2509679/ 1
http://www-formal.stanford.edu/jmc/history/timesharing/timesharing.html. 1
http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF. 1
http://www.ostep.org/Citations/notes-solaris.pdf. 1
https://events.static.linuxfound.org/sites/events/files/slides/elc 1
https://gruss.cc/files/kaiser.pdf 1
https://lwn.net/Articles/170003. 2
huge 20
huh?? 1
human 4
humans) 1
humble 2
humorously 1
humorously, 1
hundreds 5
hurt 3
hurting 2
hurts; 2
hy-brid 1
hybrids 1
hypervisors). 1
i 22
ice 1
icon, 1
idea 92
idea, 7
idea: 1
ideal 4
ideas? 1
identical 6
identical, 1
identifier 3
identifier, 2
idioms 1
idle! 1
if 483
if, 4
illegally 3
illusion 20
illusion, 2
illusion. 2
illusion: 2
illustrate 5
imag-ine 1
imaginary 1
imagining 1
imbalanced? 1
imbalances. 1
immediate 2
immediately; 7
immensely 1
impacts 1
imperatives. 1
impetus 1
implement 30
implement!) 1
implement, 1
implement. 5
implementations 4
implementations, 1
implementations. 4
implemented? 1
implementing 8
implication 1
implicit 1
implies 7
imply 2
implying 1
is 2736
important) 1
important). 1
important; 4
important? 1
importantly 1
is, 22
importantly, 9
is. 7
impossible 1
impressive. 1
improbable, 2
is: 9
improves 4
isolating 1
isolation 3
improving 4
isolation, 2
issue; 1
issues 26
issuing 6
it! 14
it) 5
it), 4
it). 3
it.” 1
it3 1
it; 14
it? 11
it?!) 1
item; 1
items 9
iterations 4
iterations, 1
iterations/threads: 2
its 295
itself) 1
itself), 3
itself; 3
itself? 1
it’d 1
it’ll 1
it” 1
jacket, 1
jars 1
job) 3
job). 1
job? 1
jobs 102
jobs); 1
jobs, 14
jobs. 7
jobs: 2
join 12
join, 2
join. 2
jokes 1
journalism 1
judiciously 1
judiciousness 1
jump 22
jumping 2
jumps) 1
just 304
k-stack(A) 1
keeps 13
kept 12
kernel) 2
kernel), 1
kernel; 2
kernel” 1
key) 16
key; 6
kick 8
kicking 1
kill 10
kill. 1
killed). 1
killed; 1
killing 2
kind 54
kind, 1
kind. 1
kind: 1
know! 1
knowledge 14
knowledge, 3
known). 1
known; 1
knows 18
knows, 1
l/stl 2
laborious 1
laid 4
landmark 3
language 8
language. 3
laptop 2
large) 1
large-file 1
large-scale 1
larger), 1
larger-scale 1
larger? 1
largest 2
last 37
last); 1
last, 1
last-in 1
last. 1
late 4
latency 9
latency. 1
later 36
later); 1
later, 5
later. 9
lations 1
latter 5
latter, 2
law 2
layout 2
layout. 1
lazy 5
ld-2.23.so 1
ldl 2
ldrex/strex 2
lead 50
leading 9
leaked 2
leaks 1
lean 1
leap 3
learn 65
learn, 1
learned? 1
learning 2
least) 1
least- 1
least-frequentlyused 1
least-recently-used 4
leaving 3
left) 1
left), 1
left). 2
leftmost 1
legal; 1
legends 2
len:10 6
len:30 1
len:9 1
length 16
length, 1
lesson: 2
lest2 1
lets 10
letter 3
level 23
level, 3
level. 7
levels), 1
libc 2
libc, 1
libc-2.23.so 1
libraries) 1
library) 5
library; 1
library” 1
lie 1
lie. 1
life 22
life, 3
life. 2
life: 1
lifted. 1
light 1
lightweight 1
lightweight, 1
like) 2
like; 2
in 2103
likely 73
in, 6
likes 1
in-depth 1
likes, 1
limit) 1
in-kernel 5
in-memory 2
in-use 1
limited 17
in. 11
in: 1
inability 1
inaccessible 2
limits 6
inaccessible, 3
limits, 1
inaccessible. 1
limits. 1
inactive 4
incentive 1
line 14
includes 13
line, 7
line. 1
line: 2
linear) 1
lingo) 1
link 6
linking 3
including 51
incorporates 2
incorrect. 1
increase? 2
increases 6
increases, 2
increases. 5
increasing 10
incredibly 8
increment 14
incrementally. 1
incremented; 2
list 103
incrementing 12
incur 1
incurred; 1
incurring 1
list, 26
list-like 1
indeed 26
indeed, 11
list. 21
indefinitely) 2
list: 3
list_t; 2
independently 8
listens 2
independently, 2
listing 4
indeterminate 2
list’s 1
indeterminate, 2
literally 1
indexed 3
indicate 15
indicated 4
indicated. 1
individual 3
inducing 1
ineffec1 1
inefficient? 2
infinitum. 1
influence 1
influenced 2
influential 4
inform 4
informally, 1
informing 1
infrastructure 1
inherent 5
init() 6
init(), 2
init(counter_t 6
little 103
initializes 5
initializing 1
initially 3
initially, 2
live 12
initiate 3
lived 1
initiated 1
lives), 1
inject 2
innocently 1
innovation 2
inode 3
inopportune 2
inputs 2
inputs. 1
inputs: 2
inquiry 2
load 35
insert 12
load, 3
insert. 2
insertion 2
insidious 1
insights. 2
insparable 1
inspires 2
load-linked 14
install 1
load-linked, 2
installations. 1
installing 1
load. 2
instance 3
load/store 3
load/store: 1
instant 3
instant, 1
loading 6
instantaneously. 1
instead), 1
locale 2
locally-allocated 2
locate 3
instruction) 9
instruction; 3
instruction? 3
located 13
located. 2
location.” 2
location; 2
locations 11
locations, 1
locations. 1
lock(&mutex); 2
lock() 38
instructions 78
lock(), 8
lock) 4
instructions, 10
lock), 2
instructions. 5
instructions: 2
lock). 10
instrument 1
insufficient. 2
lock->flag 6
lock->ticket 2
lock-free 3
lock; 24
lock? 10
lock_init(lock_t 4
lock_t 2
locked 7
locks 79
locks, 22
locks. 6
locks: 3
logic 7
logic, 1
logically 6
logically-different 1
long 68
long, 5
int 260
integer) 2
integer). 2
long-running 15
integers 4
longlived 1
integers, 2
integrity 1
intellectually 1
looked 8
intelligence 1
looking? 1
intelligence. 1
intelligent 2
intensive, 1
intensive. 1
interactions 4
interactions. 2
interactivity 2
interactivity. 2
interconnected 1
interested 11
interesting) 1
looks 39
interesting; 2
lookup 12
lookup, 2
lookup. 3
interface 16
interface. 4
interface: 1
interleavings 4
interleavings. 2
interludes. 1
intermediate 1
loop 41
internal 12
internet 1
interpose 1
interposed 1
loop, 10
interposition 2
interpret 1
loop. 8
looping 1
looping-race-nolock.s 8
looping-race-nolock.s, 2
looping-sequential 3
loops; 13
loops? 1
lost 4
lost, 3
lost. 2
lot! 1
interrupt 77
lots 12
lottery.py, 1
interrupt, 4
love 2
interrupt-based 2
loved 1
interrupt. 4
interrupt: 4
low 10
interrupted) 1
low, 3
interruption, 2
low-cost 1
low. 1
interval 8
lower-case 3
interval, 1
lower-priority 2
interval. 1
lowered 1
intervals) 2
lowered, 1
lowers 1
intervening 3
intervention 1
intervention. 1
lowest 9
intricate 3
intrinsically 1
lowest. 4
luck! 1
lucky 3
introduce 12
lucky, 2
lwarx/stwcx 2
m->flag 6
m; 1
machine) 2
machine; 2
machine? 2
introduced 25
intuition 3
machinery 10
machinery, 1
invalid 8
machinery. 3
invalid, 8
invalid. 2
invalidate 1
invented 5
invented, 1
machines 21
inversely 1
machines, 5
inversion 6
machines. 6
inversion, 4
macro 1
madvise), 1
inverted 4
magic; 1
investigate 1
magnitude 1
investigator 1
invisible 1
invited 1
main() 11
main(), 1
involved 9
main(). 1
involved, 6
involved. 2
involvement 1
irstrun 1
is! 2
is), 1
main(int 23
is; 3
main-deadlock-global.c. 2
is? 2
main-deadlock.c 2
main-deadlock.c. 2
main-race) 2
main-race.c. 2
main-signal-cv. 2
main-two-cvs-if.c. 1
main-two-cvs-while-extra-unlock.c. 1
main-two-cvs-while.c 1
isn’t 26
isn’t, 2
main.c 6
isn’t. 3
mainframe 2
isolate 1
mainframe, 1
isolated 2
maintains 1
maintains. 1
isolation; 3
majors 1
iss 6
isses 1
issue 33
issue, 3
issue. 3
issued 7
make 214
make, 2
make. 1
malfeasance 1
malicious 14
malicious, 1
maliciously! 2
maliciously) 1
malloc 8
malloc(20);. 1
malloc(3) 1
malloc(sizeof(double)); 1
malloc(sizeof(int)); 2
malloc(sizeof(node_t)); 8
malloc(strlen(s) 1
malloc. 1
man 21
managed), 1
manages 9
managing 9
mandated 1
manifesto 1
manifests 2
manipulate 2
manipulations 2
manner; 1
manner? 1
manual 13
manual, 2
manual. 4
manufacturers 1
many! 1
many” 2
map 7
mapping 13
mapping, 1
mapping: 1
marked 11
market... 1
marks 4
marriage, 1
marvelous 1
mask 1
masking 4
masses: 1
massive 4
master 4
master, 1
materials. 1
math 4
math. 1
mathematical 1
matter; 1
matter? 3
matters, 2
matters. 3
mature 1
max 1
maximize 2
maximum 8
maximum, 1
maybe 4
me 6
meaningful 5
means 31
meanwhile, 1
measure 21
measured 2
measurement 3
measurement. 1
measurements? 1
mechanisms 32
megabytes). 1
mem- 1
mem-access 1
mem.c 2
mem? 1
memory! 2
memory) 5
memory), 5
memory). 6
memory): 1
memory-access 1
memory-allocation 10
memory-bug 1
memory-constrained 1
memory-failing 2
memory-mapping 1
memory-user.c. 1
memory; 19
memory? 9
memoryintensive 1
memorymanagement 1
memoryreference 1
memory” 1
men-tioned 1
mention 1
mentioning: 1
merely 1
merest 1
merge 2
mesmerizing. 1
mess 1
message; 1
messages 1
messages. 2
met 1
meta-level 1
meters 1
methods 4
methods, 1
methods. 3
metric 5
metric, 2
metric. 4
metric: 1
micro-instructions 1
microcode), 1
microcosm, 1
microkernels 3
microprocessor. 1
microsecond. 1
mid 1
mighty 4
migrating 2
migration 5
migration. 1
mild 1
million 17
million); 1
milliseconds 6
milliseconds, 2
min 3
mind 5
mind, 4
mind. 1
mines 1
mini-computer; 1
minicomputer 5
minicomputer. 1
minimally 1
minimize 11
minimum 2
minimum. 2
minus 5
minute?), 1
mirrors 1
miss 32
miss); 1
miss, 10
miss-handling 2
miss. 9
miss: 1
misses 21
misses, 8
misses. 7
missing 4
mistake 3
mistakes) 1
mistakes), 1
mix 1
mmap() 7
mmap(NULL, 1
mobile 1
mocked). 1
mode) 9
mode), 1
mode). 1
mode; 2
models 2
modes 2
modes. 2
mode” 1
modification 2
modification, 2
modification. 2
modified), 1
modified). 1
modifies 1
modify 3
modifying 2
modularity, 1
module 1
modulo 1
moment 5
moment. 1
money 1
it 1299
it!) 2
monitoring 3
it!), 1
monolithic 1
monopolize 6
monopolized 1
month. 1
more! 1
more) 1
more). 1
more? 1
most-recently 1
mostly 4
motivating 1
mouse), 1
it, 68
mov 33
move). 1
movement). 1
moves 15
movie 1
moving 13
it. 68
it... 1
it1! 1
movl 28
it: 4
it?) 1
ms 14
ms, 5
item 9
item. 1
ms. 5
iteration. 1
much-improved 1
iterations? 1
much; 1
muck 1
multi-CPU 3
itself 32
itself); 1
multi-level 30
multi-processor 4
itself, 8
multi.py 2
multicore 6
itself. 19
it’s 33
jne 3
multiple 95
multiple-queue 1
multiplex 1
multiplexing 2
multiply 2
multiprocessing 1
multiprocessorbased 1
multiprocessors 5
multiprocessors, 2
multiprocessors. 4
multiprogramming 8
multiprogramming. 1
must-read 3
mutex->flag 6
mutex; 6
mutex_t 5
mutex_unlock 2
mutual 29
job 144
my 6
myarg 2
myarg_t; 4
job, 19
myargs[1] 2
job. 8
myret_t 6
jobs) 1
jobs? 3
job’s 2
mythread, 14
mythread. 2
myturn) 2
join() 9
join()); 1
n 4
name). 1
name; 1
join(), 7
join(). 2
joke, 1
namely 5
names 1
journaling 3
naming 1
judicious 1
nanoseconds), 1
juggling 1
nanoseconds). 1
jump) 1
nary 1
jump; 1
natively 1
jumped 1
naturally 4
naturally, 1
jumps 7
junctures 1
just-finished 1
k-stack(B) 2
near 13
nearest 1
nearly-endless 1
nearly-infinite 1
neat 8
neat. 1
necessarily 8
necessarily!) 2
necessary; 1
necessity! 2
keep 48
keeping 14
need 152
need, 1
need. 2
needed). 2
kernel 123
needed; 1
kernel, 7
needed? 6
kernel-owned 1
needlessly 3
needs; 1
negative). 1
kernel. 6
kernel?” 1
negatives, 2
neighboring 1
kernel’s 4
network 2
network-connected 1
network. 2
networking 3
networking, 1
networking. 2
key 28
key); 4
key, 2
keyboard 2
keyboard, 1
keystroke 1
kicked 2
kicks 2
kidding; 1
never 38
kids, 1
kill() 1
killall. 1
killed 2
killer 1
kills 2
kind) 1
kindly 1
kinds 5
kinds: 1
kmalloc. 1
knew 5
know 71
know, 5
know. 3
know: 2
knowing 6
knowing, 1
knowing. 1
knowledge? 1
new 140
new, 1
new->key 4
new->next 4
new. 3
new_head->value; 2
new_head; 2
newfile.txt 2
newfile.txt. 1
newly-created 3
newly-freed 1
newlyrunning 1
next-to-last 1
next; 4
nice), 1
nicely 1
known 90
nicely. 2
known, 2
known. 1
nightmares 1
known: 1
nitty-gritty: 1
l/stq 2
la 3
labeled 3
no? 8
noble 1
lack 4
lags 2
languages 4
languages, 2
node 12
languages. 2
node, 1
laptops, 1
node. 1
node_t; 5
nodes) 2
node’s 4
non-ASLR 1
non-contiguous 2
non-executable 1
non-performant. 1
non-synchronized 2
non-zero 3
non-zero, 1
nonconcurrent 1
nondeterminism 1
nondeterminism, 1
none 3
none, 1
nonetheless. 1
nonsolution: 1
norm, 2
normally 2
not), 3
large 93
not; 1
not? 2
large, 7
large-memory 1
large. 3
larger 23
note 27
larger, 2
larger. 1
laser-like 1
note, 5
latency) 1
later), 1
note: 4
noted 3
latest 8
laugh 1
laughably 1
nothing) 4
laughing 2
launch 2
launches 2
laws 2
lawyers 1
lay-out. 1
lays 1
lazily, 1
laziness 2
lazy; 2
ldq 2
notice 34
notice, 3
leads 13
notice. 1
leak 2
noticeable 2
leak, 1
noticeably 4
leaking 3
learn? 1
noticeably. 2
noticed 5
noticed: 2
notion), 1
learned 13
learned, 1
learns 1
least 35
least, 7
least-significant 1
leave 13
led 8
left 21
left, 6
left-shifted 2
legal 6
legality. 1
legitimate 1
length) 1
length). 2
length? 1
lengths 5
lengths, 1
lengths: 1
less 29
lessons 5
let 36
letting 6
now 184
now, 18
now-extinct 1
now-sleeping 2
now-standard 1
let’s 73
now. 7
now: 1
levels 9
levels: 1
nptl 4
libcrypt, 1
libcrypt-2.23.so 1
nuance 1
nuclear 1
libraries 3
null.c 1
libraries. 2
num 1
number), 1
numbers 12
numerous 12
nuts 1
object), 1
objects 5
objects. 1
obliged 1
library 47
oblivious 1
observation 5
library, 10
observe 6
observed 1
library. 10
observed, 1
libtinfo, 1
obtained 1
libtinfo.so.5.9 1
obvious) 2
lies 4
life; 1
lifeless 1
obviously 5
lifesaver 1
obviously, 1
lifetime 1
occasion; 1
lifetime, 1
occasions 1
occur 9
occur, 2
occur. 3
occurring 3
occurs), 1
occurs; 3
ocean 1
ocean, 1
oddly 1
odds 1
odds: 1
of) 3
off), 2
off; 2
offending 10
offset), 1
offset=000000, 1
offset=04); 1
often 69
often, 7
oh! 1
old; 4
old_ptr 4
olden 1
older 13
like 215
omitted, 1
on! 2
like, 3
on) 1
on). 1
like. 6
on-chip 4
like: 3
liked 1
on-going 4
likely). 1
on; 1
limit 6
once), 3
limitations 1
once). 1
limiting 1
limits; 1
once; 4
once? 2
once”, 1
linear 34
linear. 1
lines 14
lines, 1
link) 1
linked 18
linker 1
links 3
list) 5
list), 1
list). 2
list; 4
list? 1
list_t 2
listed 1
lists 13
lists, 7
lists. 1
lists[BUCKETS]; 2
literature 1
lively 1
lives 7
lives, 2
lives. 1
ll/sc 2
llock[NUMCPUS]; 2
lmbench 4
load; 1
loaded 17
loader 4
loads 19
load” 1
loathe 1
local 56
local-to-global 2
local[NUMCPUS]; 2
locality 18
locality, 8
locality. 4
locality: 2
locates 2
location 39
location, 6
location. 3
one 500
one, 26
one-third 1
one. 24
one: 3
onelevel 1
lock 370
lock(&m) 1
lock()), 2
lock(lock_t 14
lock, 61
lock->turn 8
only 202
onto 17
oops! 1
oops.y 2
oops; 2
lock. 64
open 7
open("./p4.output", 1
open()? 1
lock_t; 8
open, 1
locked; 2
open-source 2
open. 2
operation), 2
operational 1
locking 34
locking, 2
locking. 3
operations 26
locks) 3
operations, 3
lock’s 2
logarithmic 3
operations. 8
operator 3
logical 15
operator, 2
logical. 1
logs 1
long-list 1
operator. 3
opinion 1
long-lived 3
long-term. 1
opinions; 1
long; 1
opposed 3
opposites 1
longer 17
longer, 1
longer-running 1
longrunning 1
optimal 20
optimal, 5
optimal. 1
optimality 1
optimizations 1
optimizations, 3
optimizations. 1
optimizes 4
optimizing 2
optional 2
options 3
options. 3
look 121
lookaside 4
looking 13
lookup? 1
lookups 1
lookups. 1
loop) 2
loop.s 6
order 80
loop; 2
loop? 1
order, 5
ordering 9
loops 18
ordering, 2
ordering. 2
loops, 4
loops. 1
origin 2
loss 2
original; 2
originally 2
ory. 1
lot 35
lottery 24
lottery. 1
lovely 1
low-level 16
low-priority 1
lower 13
lower-half 1
lowering 1
lowest-order 1
lowest-priority 1
lowlevellock.h 2
lowly 2
ls 1
ls, 1
ls. 1
luck 5
luck. 1
lying 2
m 1
m->guard 10
m;) 1
macOS, 1
machine 34
machine, 8
machine. 9
machinery) 1
machinery? 1
machines) 1
machines). 1
machines; 1
macros 1
made 23
made, 5
made. 2
made: 3
magic 7
magic. 1
magic: 7
magnificently; 2
mail 1
other 303
other, 5
main 66
main(); 1
main); 1
main-one-cv-while.c. 1
other. 8
main-signal-cv.c. 2
others) 2
main-signal.c. 2
others), 3
main.c). 2
others). 1
others; 1
main: 12
mainstream 1
maintain 4
otherwise 14
maintain, 1
otherwise: 2
maintaining 1
other’s 1
major 28
makes 57
makes, 2
makes. 1
making 63
malloc() 32
malloc()); 1
malloc(), 3
malloc(). 4
malloc(10 2
malloc(100e6)); 1
malloc(strlen(src) 1
malloc(strlen(src)); 1
malloc.py, 1
malloc; 2
malloc’d 3
malloc” 1
our 230
ourselves 3
manage 19
managed 6
managed, 2
management 29
management, 1
management. 3
manager 3
manager, 3
manager. 4
manages; 1
manipulates 2
manner 7
manner, 11
manner. 7
manner: 1
manually 1
manuals 2
out 181
out"); 1
out, 27
out-of-bounds 1
out-of-memory 1
out. 11
outcome 4
outcome. 6
outcomes? 4
output; 1
outputs. 2
outrage! 1
many 252
many. 5
mapped 14
mappings 8
mappings. 3
over 90
over, 1
maps 7
over-designed 1
over-written 1
mark 6
over. 1
marking 2
marking, 1
overcome 3
marvel 1
overcome. 2
masks 2
overflow 3
overflow. 1
match 12
match. 1
matches 1
matching 1
overhead 12
overhead, 1
material 8
overhead. 1
overheads), 1
material. 3
overheads; 1
mathematician 2
overheads? 1
overload. 1
overseas. 1
oversubscribed, 1
matter 13
overwrites 1
matter, 3
overwriting 2
matter. 2
matters! 1
maximizing 1
own 72
own, 3
own. 2
p 1
p); 1
p. 1
p1.c. 1
p1–p3). 1
p2 7
p3) 1
p3). 1
p3.c 3
p3.c, 1
p4 7
p6 5
may 123
mean 6
meaning 3
meant 1
measure? 2
p: 18
measurements 4
measurements, 1
package 4
measures 2
packaged 2
measuring 5
packed 4
packet 3
page) 4
mechanism 18
page), 2
mechanism, 2
mechanisms; 1
page). 1
page-fault 3
meet 5
meeting 1
page-replacement 6
megabytes 3
meltdownattack.com 1
mem 10
mem. 1
mem.pdf 1
memcheck 1
memories 4
memories, 1
memories. 1
page-table 31
page; 5
page? 1
pagedirectory 1
pages 195
pages); 1
pages, 26
pages. 28
pages: 2
paging 28
paging, 4
paging-linear-translate.py, 1
paging-policy.py, 1
paging. 4
paid 1
pain 1
pain. 1
painful; 2
pair 21
pals 1
memory 568
memory); 2
paper 85
paper, 3
paper. 1
paper: 1
par-allel, 1
paragraph 1
parallel) 2
parallelism. 2
paralleliza-tion, 1
parameter; 2
parameters 9
parameters, 5
parameters. 2
parameters: 1
paranoid. 1
memory, 124
memory-add 2
memory-intensive 1
memory-like 1
memory-management 2
memory-mapped 3
memory-reference 1
memory-related 1
parent 44
memory-user 4
parent. 4
parent: 2
parentheses 2
park 6
park(); 4
park, 2
park. 2
part) 1
partially-ordered 1
participated 1
particularly 27
partition 1
partition, 1
partner 1
memory. 103
memory?”, 1
mental 2
parts 19
mentioned 7
mentor, 2
mesh 1
mess! 1
passed 18
passed, 1
message 10
message, 2
past 6
message. 1
messy 2
past, 4
metadata 1
metal 1
patch 5
method 8
patches 2
patent 1
method. 3
paths 4
metrics 7
microkernel-like 1
paths. 2
microseconds 2
patient! 1
microseconds, 2
mid-execution 1
pattern 5
mid-instruction, 2
pattern. 2
patterns), 1
middle 11
pause 2
middle, 1
pause, 1
pay 12
paying 3
peach? 1
peaches; 1
peep 1
penalize 1
per-CPU 5
per-futex 2
percentage 5
percentage, 1
perfectly 2
perfectly, 1
perform? 1
performance 91
performance, 14
performance-minded 2
might 218
migrate 1
migration? 1
millions 3
millisecond 1
millisecond. 1
milliseconds). 1
milliseconds; 1
mind-blowing 1
performance. 35
minds 1
performance2 1
minicomputers. 1
performance: 4
minimal 7
minimal. 2
minimizes 2
minimizing 1
miniscule 1
performed 11
minutes 1
misbehaved), 1
performed, 2
misbehaves 1
misbehaving 2
miss) 1
miss), 3
miss). 1
miss; 1
miss? 1
missed 2
misses! 1
misses), 1
performs 21
misses). 1
performs. 2
mistakes 3
period; 1
mitigates 1
mjtsai.com/blog/2015/12/16/osspinlock 2
periods 4
mlfq.py, 1
mmap(); 1
perl). 1
mobility 1
permanent 1
mocked 1
permanently-valid 1
permissions 1
perror("malloc"); 4
persistently 1
persistently, 1
person! 1
mode 23
person; 1
personal 1
persons 1
mode, 13
perspective 8
perspective, 1
mode. 4
perspective. 2
pesky 1
pessimal, 1
model 8
models), 2
phases 2
phone 1
phone, 1
physically 2
physically-indexed 1
physics). 1
picks 5
picture 5
picture, 5
pid; 1
piece 36
piece, 1
piece. 3
pioneer 2
modern 90
pioneering 6
modifications. 2
pipe 8
pipe, 2
pipeline 1
modified 15
pipeline, 2
modified. 1
moglie 1
place! 2
molecules 1
place; 1
place? 1
monitors 5
monster! 1
places 6
placing 7
plain 2
planet 1
plans 1
platforms 2
platforms. 1
play 4
players 1
pleasant. 1
please 3
plenty 3
plots 3
plus 11
pmap 5
pmap, 1
pmap. 1
point 39
point, 30
point. 7
pointer). 2
pointer? 1
pointers 5
pointier, 1
pointing 2
points; 1
policies 35
policies, 7
policies. 7
policies: 2
policy 50
policy, 12
policy. 4
politely 1
pollutes 1
ponder: 1
pool 1
poor 10
poorly? 1
populated, 1
portions 7
positivity 1
possess 1
possession 2
more 470
possible; 2
more, 6
possibly-failing 2
posterity) 2
postulates 1
more. 14
moreover, 1
potential 12
power-of-two-sized 1
power.” 1
powerful 21
powerful, 2
powerful. 3
powers 1
prac-tice, 1
practice! 1
pragmatic 1
pre-WWII 1
pre-configured 1
pre-initialized 1
pre-specified 2
precious 2
precisely 2
precisely, 1
precision 2
predates 1
predictable; 1
preempted 4
preempts 1
prefer 2
preferably 2
preferred; 2
preferring 1
prematurely-optimized 1
preparing 1
prerequisite 1
most 130
most-significant 1
most. 1
mother 2
presented 8
mother. 2
motivate 1
moustache 1
presents 7
preserve 1
preserved. 2
pressed 2
presumably 4
presumes 1
pretend 5
move 31
moved 6
ms), 4
ms). 3
pretty 26
prevent 8
preventing 3
prevention 2
previously 3
previously, 1
previously. 2
pri- 1
primary 9
primitive! 2
primitives 15
primitives, 3
primitives. 8
principle 6
principle. 1
printed 6
printf("%d 4
much 135
much, 1
printf("%d\n", 7
printf("%lld\n", 2
much. 6
printf("%p\n", 1
much... 1
much: 1
printf("location 3
much?). 1
multi-queue 4
printf("main: 8
printf("returned 4
printf() 1
printf(), 1
multi-threaded 44
multilevel 2
multiples 1
multiplied 3
multipro-gramming 1
multiprocessing). 2
prints 41
priorities 5
priorities. 1
multiprocessor 19
prioritizes 1
multiprocessor, 2
multiprogrammed 3
multitude 1
munication, 1
music 2
priority 61
priority, 7
priority-based 1
priority. 8
privacy 1
privileged) 2
privileged; 2
pro-cessor) 1
proactively. 1
problem; 2
problem? 2
problematic 2
problematic, 1
problematic: 1
must 152
must, 1
mutex 17
mutex, 4
mutex. 1
mutex_lock 2
mutual-exclusion 2
myarg_t 8
myargs); 2
problems 55
myargs[0] 2
myargs[2] 2
myret 4
myret_t; 2
problems, 12
mystery 1
mythread() 2
mythread(), 2
myturn 2
n). 1
problems. 11
n; 1
problems: 2
naive 3
problem” 1
problem”, 1
proc 5
proc-struct(A) 1
proc_state 2
name 22
name, 4
proceed 6
proceeding 1
name. 4
proceeding. 1
named 8
process) 6
nanoseconds 1
nanoseconds, 2
process), 3
process). 2
nanoseconds. 3
process-run.py 1
napping 1
process-run.py, 1
nasty 1
natural 9
naturally-occurring 1
process; 13
process? 4
nature 8
processed 2
nature, 2
processes) 1
near-term 1
nearby 2
processes; 7
processes? 3
nearly 9
processes’ 1
nearly-complete 1
nears 2
processes” 5
neatly 4
processes”, 2
processing; 1
necessary 9
necessary. 1
necessitates 1
necessitating 1
processor 28
processor, 13
processor. 9
needed 44
produce 9
produced 2
produced, 1
needed, 7
produced. 1
needed. 11
needless 2
producer 26
producer, 2
producer. 2
professionals 3
professor! 2
professor? 1
professors 3
professors, 1
needs 32
profilers 2
needs, 2
profit 1
negative 14
negative, 3
negatively) 3
networks, 1
new) 4
new; 8
newer 2
newly 3
newly-allocated 2
newly-fetched 1
newly-opened 1
newlyfreed 1
news 2
news: 2
next 101
next, 1
next. 10
next: 9
nice 34
nice, 3
program 321
no 140
program, 58
no, 1
program-debug 1
no?). 2
node_t 24
non-blocking 2
non-computer-types 1
non-concurrent 1
non-cooperative 2
non-practical 1
program. 46
non-preemptive 2
program4 1
non-scalable 2
non-stop; 1
none-too-subtle 1
program: 6
programmed 1
none.” 2
nor 1
programmer 12
normal 11
programmer, 1
programmer. 5
programs5 1
programs; 3
program’s 9
progressed, 2
prohibitively 2
projects 3
projects, 1
projects. 1
promote 1
promoted 1
prompt 4
prompt> 37
prone. 2
proofing 1
proofs” 1
proper 14
properties; 1
proponents 1
proportion 5
proportion, 1
proportionally 1
pros 1
protected 4
protection; 2
protections 4
protocol 3
protocol, 1
protocol. 4
protocols; 1
prove 5
proverbial 1
provides 30
provides, 1
providing 16
provisions 1
pseudo-random. 1
pthread 57
pthread.h 2
pthread_cond_signal(pthread_cond_t 3
pthread_cond_t 3
pthread_create(pthread_t 2
pthread_join(pthread_t 2
pthread_mutex_init(&lock, 2
pthread_mutex_lock(&L->lock); 8
pthread_mutex_lock(&c->glock); 4
pthread_mutex_lock(&q->head_lock); 2
pthread_mutex_lock(&q->tail_lock); 2
pthread_mutex_timedlock(pthread_mutex_t 2
pthread_mutex_trylock(pthread_mutex_t 2
pthread_mutex_unlock(&c->llock[cpu]); 2
pthread_mutex_unlock(&lock); 2
pthread_mutex_unlock(pthread_mutex_t 2
ptr 16
ptr, 3
not 449
publicized) 1
published 4
pulled 1
pure 2
not, 14
purpose 9
purpose, 1
purpose. 2
not. 14
pursue 1
not: 3
push 2
pushing 2
pushl 1
notably 5
put() 4
notes 5
notes); 1
notes, 3
put(i); 5
notes. 1
put(int 2
notes: 2
nothing 5
nothing. 2
nothing”; 2
notice? 1
notices 2
puts 19
noticing 1
puzzle 2
python 1
q->head 4
notion 12
now! 1
q->tail 4
now), 1
q->tail->next 2
quantum) 1
query 1
now? 7
quest 3
nuances 3
null 2
null-pointer 2
null. 2
question 27
question, 1
question. 7
question: 7
questioning 1
queue) 1
queue), 1
queue). 5
queue; 5
queue? 1
queue_add(m->q, 4
queue_t 2
queues 6
queues, 12
queues. 2
queues: 1
quickly 21
quickly. 5
number 198
number, 4
number. 2
numbering 1
numbers) 1
quite 114
numbers). 1
numer-ous 1
o 2
obey 1
quote 7
obey. 1
quote. 4
quote: 2
objdump 8
rabbit 1
race): 2
object 10
races 4
object. 1
objectives; 1
races, 4
objectoriented 1
obscure 1
radical 2
observes 2
observing 1
raise 10
raised, 2
obtain 10
raised. 1
ran; 1
obtaining 4
random-access 1
obviates 1
random; 1
randomizes 1
randomly 4
randomly-accessed. 1
obvious 12
obvious, 2
randomly-generated 3
obvious. 2
obvious: 2
randomness 6
occasionally 3
randomness. 1
occur? 2
range; 1
ranges 1
occurred 3
ranging 1
occurred, 4
rare 2
occurrence. 1
occurs 19
occurs)! 2
rate 27
rate, 3
occurs, 14
rate. 3
occurs. 3
occurs: 1
occurs?” 1
odd 6
odd, 1
odd-sized 1
oddity: 2
rather 29
rather, 11
ratios 1
rc; 4
rdtsc 3
re-acquire 1
re-check 3
re-create 1
re-duces 1
re-initialized. 1
re-referencing 1
re3 1
reached 1
reacts 1
read 91
read, 7
read. 6
read/write 1
readability 1
readable 1
readable. 1
readers 1
readers, 1
readied, 1
readily 5
reading 21
reading, 1
readonly 1
reads” 1
ready), 2
real 53
real, 2
realistic 3
reality 7
reality, 1
realization 1
realize 5
realized 8
really) 2
reap 1
rearranging 1
reason 32
reason, 8
reason. 3
reason: 3
reasonable 9
reasonable. 3
reasonably 3
reasonably. 1
reasoning 1
rebooted, 1
reboots 1
recall). 1
recall1 1
receives 4
recently 6
recently, 1
recently. 2
rechecks 2
reclaimed, 1
reclaims 1
recognized 1
recollections 1
recommend 2
recommending 2
recorded 3
records 1
recourse 1
recourse: 2
recover 1
recursion 1
recursive 1
recycles 1
redirect 2
redirection 2
redirection, 1
redoing 2
reduce 15
reduced 5
reduced. 2
refer 27
reference) 1
referenced; 1
references 28
references, 1
references. 2
references: 1
referencing 1
referring 2
refers? 1
reg/PC 1
regain 1
regardless 2
regards 2
region 25
region, 5
region. 1
regions) 1
register) 2
register), 1
register). 1
register-level 1
register; 2
register? 2
registers 48
registers, 10
registers. 3
regs(B) 3
regular 2
relates 3
relative 3
relatively-short 1
relax 10
relaxing 1
rele-vant 1
release? 2
releases 14
releasing 16
reliability 2
reliability. 2
reliable 6
reliably 3
relies 1
relinquish 5
relinquishes 1
relinquishing 2
relocated; 1
relocating 1
relocation 6
relocation, 5
relocation. 2
rely 5
remain 8
remaining 13
remaining, 1
remarkably 1
remedy 2
remembers 2
remote 1
remove 10
remove_min(queue); 1
removed 6
renewed 1
repeats, 1
replace 9
replaced 2
replacement 30
replacement, 3
replacement. 4
replies: 1
reply: 1
report 9
reporting 2
repository 1
represent 5
representing 2
request; 1
request? 1
requested 8
requested, 2
requests 28
requests, 2
requests. 6
require? 1
required). 1
required? 2
requirements 1
requires 25
requiring 11
research; 1
researcher 2
researchers/engineers, 1
reserve 4
reserved 6
reside 11
reside, 1
reside. 1
resided 1
resident 2
resource 14
resource, 4
resource. 2
resources; 2
resources? 1
respect 2
responds 2
responsibility 6
responsibility!” 1
responsibility, 1
responsible 6
responsive 1
responsive. 1
responsiveness; 1
rest 18
rest, 1
rest. 2
restarts 1
restore 17
restored 4
restored, 1
restored. 1
restricted? 1
restricting 1
result! 2
resulted 2
results 17
results, 4
results. 6
resumes 5
resuming 1
retains 1
retries 4
retry 6
retry, 1
return 169
return-fromtrap 3
return-tolibc 1
return. 1
returned) 2
returning 27
returning, 2
returning. 1
returns), 1
reuse 1
reused 1
reused, 1
revenge 1
revert 1
review 2
rewrite 8
rewrite, 2
rich 2
ridiculously 1
right 42
right); 2
right, 3
right. 5
rights). 1
road, 1
robin, 2
rogue 1
role 11
rolls. 1
root 3
root, 1
roughly 24
round 2
roused 2
routine 60
routine, 10
routine. 2
routinecalling 1
rude 1
rudimentary 4
rule 4
rule: 2
run), 2
run; 1
run? 8
runnable) 1
runnable; 2
running), 1
running). 2
running; 3
running? 4
runs 83
runs, 21
runs. 11
runtime 2
runtime, 2
rv 4
rvals->y 2
rvals->y); 2
rvalue; 2
rw- 1
rw45 1
rx 4
sad 4
sad. 3
safe? 2
safely 3
sage 1
sake 5
same 145
same, 3
sanity 1
sat 2
satisfaction, 1
satisfactory 1
satisfied 1
saved? 2
saves 9
saves/restores 1
saving 6
say), 2
say? 1
saying; 1
says 2
says, 1
says: 1
sbrk 3
sbrk. 1
scale 4
scale, 1
scale. 1
scale: 1
scales? 2
scaling; 2
scans 1
scare 1
scary 1
scenario 4
scenario, 3
scenario. 4
scenarios), 1
scheduled3 1
scheduled; 1
scheduler), 1
scheduler.py, 1
scheduler; 2
scheduler? 5
schedulers 14
schedulers, 1
schedulers. 5
schedules 4
scheduling 102
scheduling, 15
scheduling. 9
schemes 5
school 2
school, 2
school: 2
science. 2
scientist 1
scientist, 1
scope 2
scorned 1
scorned, 1
scourge, 2
scratch 3
screen 1
screen, 1
screen. 3
scribble 2
se, 2
se. 1
seamlessly 1
search 20
searches 3
searching 4
seasoned 1
second 78
second, 6
second. 5
second: 1
secondchance 1
seconds), 3
seconds). 1
secretary 2
section), 2
section; 2
section? 4
sections 6
sections, 2
sections. 4
security 21
security, 1
security. 1
security: 1
see! 2
see). 1
see? 6
seeds 11
seeds, 2
seek 2
seem 7
sees 4
segment), 3
segment; 4
segment? 1
segmentation 26
segmentation, 4
segmentation. 3
segmented 4
segments 22
segments, 5
segments. 3
segments: 1
select 4
selection 1
self)) 2
semaphore 1
semaphores” 1
semi-nal 1
send 13
sending 1
sense 26
of 3668
of. 1
of... 3
sense, 6
sense. 11
sense: 2
sense?) 1
off 30
sensed, 2
off, 3
sensitive 1
off. 1
offender. 1
sent 3
offered 1
offerings 2
offers 1
separation 5
sequences 5
sequential” 1
serious 10
servers 1
servers, 2
serves 6
offset 42
services 1
offset, 2
services, 1
services. 1
offset. 6
offset: 1
servicing 5
often? 1
oh 2
old 60
old, 1
oldest 1
omit 2
omniscient, 1
set 146
set, 3
set-it-to-1 2
set-top 1
set. 2
setpark(); 2
setting 15
setting, 1
several 1
severe 3
severe. 1
share; 1
sharing 30
sharing, 3
sharing. 3
sharing: 1
shell 12
shell, 5
shells). 1
shells; 1
shift 1
shifting 1
ship 1
shipping 2
shoppers 1
short 29
short, 3
short-circuiting 2
short-running 4
short. 3
shortcomings. 1
shorter! 2
shortest 2
shortest, 1
shot 2
shouldn’t 5
shouldn’t. 2
showed 4
shown), 1
shows 94
shrink) 1
shrink). 1
shrinks 1
shutdown 1
sibling 1
side). 2
sidebar 2
signal 28
signal, 1
signal. 3
signal/wakeup 1
signal?? 1
signaling 17
signaling. 1
signals; 1
silently, 2
similar), 1
similarly 3
similarly, 3
similarly-named 2
on 719
on, 11
on-disk 5
on. 9
once 60
once); 1
once, 9
once. 5
simple 196
one! 1
one) 4
one). 1
simple, 9
one-quarter 1
one-to-one 1
one-word 2
one? 1
simple. 10
ones 8
ones!). 1
ones, 2
ones. 3
one” 1
ongoing 1
online 6
online, 2
online: 1
simple: 39
onnv/onnv-gate/usr/src/lib/libc/port/threads/synch.c. 2
oops 2
oops, 1
simpler 6
oops.x 2
simpler, 2
open("/tmp/file", 1
simpler. 1
simplicity), 1
open() 6
simplicity; 2
open(), 1
simplified 2
opened 1
opens 4
operate): 1
operates 4
simply 128
simply, 4
simulate 3
simulated 1
simulations 4
operating 151
operating-system 3
simulator 16
simulator, 1
simulator. 2
operation 20
simultaneously 11
operation, 9
simultaneously, 1
operation. 5
opinions 2
since 7
opportunities 1
sincerely 1
opportunity 1
opposing 2
opposite 5
opposite, 1
opposite. 1
opposite: 1
opt 1
optimal) 1
optimal; 2
optimization 6
optimization, 3
optimization. 1
optimize 4
option 1
option, 2
single 203
single, 1
single-queue 4
single-threaded 4
sit 6
sitting 4
situation 9
situation. 2
six 3
sixteen 1
size) 5
size). 2
size; 6
sizeof(int)); 2
sizes 8
sizes, 2
sizes. 3
sketch 3
skills. 2
skimmed 1
skip-ping 1
skips 1
slab 5
sleep) 1
sleep-ing. 1
sleep; 4
sleeping). 1
sleeps 4
slice 36
slice, 7
slice. 1
slices; 2
slides 1
slightly 19
slip 1
slogan. 1
slot 7
slow; 2
slow? 1
slowed 1
slower 6
slower, 1
slower. 3
slowly 12
slowly, 4
slowly. 2
or 469
slumber 2
small! 1
or, 5
small) 1
order! 1
order), 1
small). 3
order; 1
small-scale 1
small/random; 2
ordered 4
ordering; 1
orderings 2
orderly 1
orders 2
organization 2
smaller 14
organization, 1
smaller, 1
organization. 1
smarter 1
organize 1
snapshot 1
snuck 1
original 19
original, 1
origins 1
ority 1
orphaned 1
other) 1
other? 1
others 14
others, 4
otherwise). 1
otool 2
our-selves 1
ours: 1
out! 1
out). 1
out-of-bounds; 1
out.” 1
out; 1
out? 1
outcome? 5
outcomes 1
outdated) 1
outlines 6
output 36
output, 2
output. 2
output: 4
outs 1
outside 4
overall 9
overall, 1
overall. 1
overcome? 1
overcoming 2
overflows 4
overhead), 2
overheads 14
overheads. 4
overlap 6
overlap, 1
overlays 1
so 197
overlays, 1
overly 3
overly-large 1
overstate 1
oversubscribed; 1
overview 12
overwhelm 1
overwrite 4
overzealous 1
so, 37
own; 3
own? 1
owner 4
ownership 1
ownership, 1
owns 2
owns. 1
so. 15
sockets. 2
software) 2
p1 8
software), 1
software; 1
p1, 5
software? 1
p1.c) 1
p1.c), 1
softwaremanaged 1
p2.c 1
solely 1
solution). 1
p2; 5
solution; 1
p3 5
p3.c), 1
p4.c 2
solutions 11
p4.output 1
p4.output. 1
solutions, 3
p5 5
solutions. 4
solve? 1
p; 7
packages, 1
solves 7
packing 2
solving 4
some 505
some, 2
somebody 5
somehow 6
somehow, 1
someone 3
something 132
something, 2
something. 2
page 635
page(s) 1
page, 28
sometimes 73
page-directory 5
sometimes, 2
page-frame 1
somewhere). 1
page-not-present 1
page-number 1
soon-to-be-executing 4
soon-to-be-exec’d 1
page-sized 4
sooner 1
sophisticated 13
page. 21
page: 1
sort 6
pageable 1
sorting 1
paged 1
sounded 1
pagereplacement 1
pages) 3
pages), 1
sounds 6
sounds. 1
pages). 3
soup.” 1
pages; 9
sources 6
sources: 1
pagetable 4
paging). 1
paging-multilevel-translate.py; 1
painful 7
painful. 1
pains 1
pairs, 1
pairs. 1
pal, 2
panacea, 1
papers 8
papers, 6
papers. 4
paradigm 1
paradigm. 1
parallel 6
parallel, 2
parallelization, 1
parameter 6
parameter, 4
parameterize 1
parameters). 1
parcel 1
parent) 1
parent; 1
parent? 1
park() 4
park(), 2
park(). 2
part 52
part, 2
part. 1
part: 4
particular 60
particular, 28
pass 54
space 278
passes 5
passing 12
passion 1
passive 2
password 1
path 8
path, 2
path. 3
patience 2
patience, 1
space, 50
space-efficient, 1
patterns 4
space-management 1
patterns. 2
space-usage 1
pause) 1
pauses 1
pausing 2
pays 1
pdflush), 1
peach 4
peach, 3
peach. 6
peaches 2
peaches, 1
peaches. 1
peanut 1
peek 1
peeking 1
space. 45
penalties. 1
penalty 2
space: 2
pending 1
spaces) 1
spaces). 1
sparc/ 2
sparked 3
sparse 7
sparse, 1
people 28
spatial 7
people, 1
people. 1
spawn() 1
people.cs.clemson.edu/ 1
special; 1
species, 1
species. 1
specific 21
specific. 1
specifically 6
per 57
specifically, 13
specified 8
per-process 12
specified, 1
perceived 3
speed-of-light 1
speeds 4
percent 6
speeds. 1
percentages. 1
speedup. 1
spell 1
perfect 7
perfect. 2
perfect... 2
perfection 1
spend 10
spending 3
spent 7
perform 70
perform, 1
performance), 1
performance; 5
performance? 3
performance” 1
performance”, 1
performant) 2
spin 79
performing 14
spin, 2
spin-lock 2
spin-wait 10
spin-waiting 4
spin-waiting. 2
spin. 4
perhaps 39
perhaps, 1
period 8
periodic 1
periodically 9
periodically. 1
permissible. 1
permission 1
permit 1
spinning 27
persistence 1
persistence, 1
spinning, 2
persistence. 2
spinning. 2
persistent 4
persistently; 1
persists, 1
split 9
person 3
splitting 3
personally 2
splitting: 1
perspectives 1
sponse 1
peterson.s, 2
spot 2
phase 3
spurious 2
src); 3
phase, 4
phenomenon 1
src.opensolaris.org/source/xref/ 2
philosophical, 1
philosophy 1
phones 3
photos 1
phrase 2
phrase... 1
stack 79
stack, 18
stack-allocated 2
stack. 17
stack: 3
stack”! 1
stage 3
stance 1
stand 1
standpoint 1
standpoint, 1
staring 1
start 58
start. 1
starting 14
starve). 1
physical 236
starve; 1
physical, 1
starving 1
physical. 1
state1 1
physics 1
physics. 1
state; 2
stateful 2
stateless 1
statements 1
pick 15
picking 6
states 15
states, 1
states. 1
states: 1
pieces 19
pieces, 5
pieces. 1
piece” 1
static 21
piena 1
statistics). 1
pigs. 1
pioneered 4
status 5
pioneers 4
stays 4
pipe() 2
stdlib.h 1
pipe; 1
stems 1
step 2
pipes 4
pipes, 2
step, 5
place 46
place, 9
place. 16
still 59
placed 24
placed, 1
placed. 1
placement 1
stop 21
placement, 1
stop, 1
platform, 1
played 1
stopping 4
player 1
player, 1
store), 3
plays 2
ple 1
pleases: 1
pleasure 1
store-conditional 7
pleasure: 1
ploticus 1
store-conditional, 4
plural) 2
point1 1
store-conditional. 3
storeconditional) 1
stored? 1
pointed 15
stores 16
stores. 1
storing 1
straightforward; 1
strange 8
strategy), 2
strcpy(dest_buffer, 1
strcpy(dst, 4
strdup 1
pointer 55
strdup("p3.c"); 1
strdup("wc"); 2
pointer, 10
stream 7
pointer. 3
pointers? 2
stream, 2
stream. 2
stream: 2
streaming 2
points 15
strengths 2
points. 1
strictly 2
policies; 1
stride) 1
policies? 1
strike 1
policy) 1
pool? 1
string) 2
poorly 3
stringent 1
poorly, 1
strings 1
poorly-programmed) 1
strings. 1
poorly. 2
pop 1
stronger 2
popl 1
stronghold 1
popular 7
strongly 5
popular, 1
stronglytyped, 1
popular-sized 1
structure) 1
popular. 1
structure; 2
popularity 1
porting 2
portion 20
posed 5
positive 4
positively) 3
possibilities. 1
possibility 5
structures 59
structures, 13
possible 31
possible, 14
structures. 22
structures: 2
possible. 14
possible: 1
strut 2
possibly 1
stub 1
potentially 7
potentially-starving) 1
pouvoir”, 1
stuck 16
stuck, 1
power 8
power. 1
powerhouse 1
students 3
studied 5
practical 8
practice 4
practice, 1
stuff 8
pragmatists 1
stuff, 1
precautions 2
sub-job 3
sub-sequent 1
precise 4
precisely? 1
predate 1
subject 4
subjunctive 1
subsections 1
subsequently 4
subsequently, 1
predict 16
predictors 1
subset 3
predictors, 2
substantial, 2
preempt 2
preemption 2
substitute 3
preemption, 2
substituted 1
preemptive 2
subsystems 1
preemptive, 1
subsystems. 1
preferred 2
subtleties 2
prefetching 2
subtract 1
premature 2
subverted 1
premise 1
suc-cessfully 1
prepare 1
prepared 1
succeed 2
succeed. 3
success! 4
presence 11
success; 1
successful 5
successful. 1
successfully) 1
suddenly 2
suffers 5
sufficient 2
present 36
sufficient, 1
present, 2
presenting 1
suggest 3
preserves 1
suite 1
preserving 1
summarizes 1
pressing 1
pressure 5
summary 5
pressure, 2
superuser 3
pressure. 2
supervisor 1
pretends 1
support; 4
prevented 5
support? 4
prevents 3
supports 5
supports. 1
sure; 1
surfing 1
previous 19
previously) 1
previously; 2
surprising 7
primarily 3
surprising, 1
primer 1
surround 2
surrounding 2
primitive 9
primitive, 2
primitive. 6
survey 16
primitives; 2
survive 2
primitives? 2
survive, 1
survived 1
principles 5
suspend 2
swap? 1
swapoff. 1
swapon 2
print 25
swapped 12
printf("%s: 4
swaps 3
printf("%s\n", 3
printf("(%d) 2
printf("Final 1
printf("Initial 1
printf("child\n"); 3
printf("hello 3
printf("hello, 6
printf("parent: 6
printf("this 1
printing 3
prio_to_weight[40] 1
prior). 1
priori 3
priorities; 1
priority) 1
priority). 1
priority; 1
priorityadjustment 1
switch 62
private 18
switch, 8
private, 3
switch. 4
privilege 8
switches 14
switches, 2
privileged 24
switches. 1
pro2 1
probabilistic 1
probabilistically 2
probability 2
switching 17
switching); 1
switching, 2
swoop 1
swpd 1
swtch(struct 1
probably 32
symbol 3
probes 1
symbol. 1
synchroniza-tions 1
synchronization 26
synchronize 2
synchronized 10
system! 2
system) 1
system), 3
system). 4
system-call 5
system.” 1
system1 1
system; 8
system? 4
problem 121
problem, 24
problem. 26
problem: 25
proc-struct(B) 1
procedure 12
procedure. 1
proceed! 1
proceeds 4
systems 185
systems, 49
systems. 64
systems: 5
system” 1
sz; 1
t 10
t(A) 1
t, 2
t. 2
process 403
process); 1
process, 51
table 175
table, 26
table. 26
process. 69
table2 1
process: 2
table: 3
tables! 1
tables) 2
tables), 1
tables; 1
tables? 1
tackle 4
tackled 2
tail 5
tail. 2
take? 2
taken? 1
takes 50
takes, 1
taking 11
processes 107
talk 10
talking 5
targeted 1
targets, 1
task). 2
task; 3
tasked 1
tasks 2
tasks, 1
processes, 31
tasks. 1
tcsh 2
tcsh, 2
tech 1
processes. 22
processes: 4
processing 4
processing, 3
processing. 1
technique 29
processor; 5
technique, 2
technique. 1
techniques? 1
technologies. 1
processors 16
technology 7
technology. 1
tell? 2
processors, 9
processors. 3
tells 11
temporal 7
process’s 18
temporarily 5
tempting 4
producer/consumer 9
producer; 1
tends 5
producers 3
tens 2
producers, 1
tension 3
produces 7
producing 1
product 1
product. 1
term 15
production, 1
productive. 1
terminal 4
professional 1
terminal, 1
professor 2
terminates 1
professor, 1
professor. 2
terminating 5
program) 1
program). 2
termination 4
terminology) 1
program; 3
terms) 1
terrific 4
program? 6
terrific, 1
programmer), 1
programmer; 4
test 7
test-and-set! 1
test-and-set.s 2
programmers 13
test-and-set.s. 2
testand-set 1
programmers. 2
testing 2
tests), 1
programming 7
text). 2
programming, 2
textbook 1
textbook, 1
programming. 5
thank 2
programming: 2
thankfully, 1
that? 7
programs 85
their 91
programs, 16
programs. 25
progress 8
progress, 1
progress. 3
prohibitive. 3
project 4
project, 2
proliferation; 1
promise 1
promotes 2
prone; 2
pronounced 1
proofs 1
properly 15
properly, 1
properly. 1
properties 8
properties. 1
properties: 1
property 10
property, 2
them 99
proportional 3
proportional-share 6
proportional-share, 1
proportionality 1
proportions 1
proportions, 1
them, 20
prot 8
protect 11
them. 16
themselves 4
themselves, 1
then; 1
then? 2
theoretical 1
protection 22
protection, 2
protection. 3
protective 1
protocols 2
provably 1
proves 1
provide 65
provided 20
provided, 2
provided. 2
ps 2
ps. 1
pseudocode 7
pthread_attr_t 2
pthread_cond_wait(pthread_cond_t 3
pthread_create(&p, 2
pthread_create(..., 4
pthread_mutex_init(&L->lock, 4
pthread_mutex_init(&c->glock, 2
pthread_mutex_init(&c->llock[i], 2
pthread_mutex_init(&q->head_lock, 2
pthread_mutex_init(&q->tail_lock, 2
pthread_mutex_lock(&c->llock[cpu]); 2
pthread_mutex_lock(&lock); 2
pthread_mutex_lock(mutex); 2
pthread_mutex_lock(pthread_mutex_t 2
pthread_mutex_t 22
pthread_mutex_unlock(&L->lock); 12
pthread_mutex_unlock(&c->glock); 4
pthread_mutex_unlock(&q->head_lock); 4
pthread_mutex_unlock(&q->tail_lock); 2
there 250
there, 2
there. 6
pthread_t 14
therefore 2
therein), 2
pthreads 8
therein; 2
there’s 1
ptr; 2
thesis 1
publishing 2
pull 2
purchase 1
purely 1
purify 1
purify, 2
purposes 2
put 41
putting 17
q->head; 2
quantify 3
quantum 5
question! 1
question). 1
question; 1
questions 13
questions, 3
questions. 3
they 149
queue 55
queue, 17
thing 38
thing, 6
queue. 12
thing. 2
queue_init(m->q); 2
thing... 1
queue_t; 2
queued 1
queues; 1
thing: 4
queuingbased 1
things; 3
quick 4
quick, 1
quickly; 3
quoting 1
qu’une 1
r-x 5
r-x-rw--r-x-r-x-r-x-r-x-rw--- 1
race 28
race. 4
rage 3
rage. 1
think 66
raises 8
think, 2
raising 3
think. 2
ran 15
ran, 1
ran. 1
thinking 23
thinking, 2
thinking: 2
thinks), 1
thirty 1
random 37
random, 1
random. 1
randomization 3
randomization, 1
randomized 2
range 7
range. 1
rapidly 1
rarely 1
rarely-taken 2
rarely-used 1
rarely. 2
rate) 2
rates 1
ravages 1
rc 13
rc, 3
rc_wait 3
rc_wait, 2
re-accessed 1
re-acquires 4
re-awaken 1
re-checks 4
re-enable 2
re-energized 1
re-place 1
re-reads 1
re-referenced 2
re-referenced, 1
re-use 1
reac-quiring 1
reach 2
reaches 2
reaching 1
react 1
react, 1
reaction 2
read() 1
read(), 1
read), 1
read-only 1
read-only, 2
read-write). 1
read? 2
reader 7
reader, 1
reader: 2
reads 10
ready 33
ready, 3
ready. 1
real-world 2
realizes 3
realizing 1
realloc() 4
really 52
really, 4
really. 1
rearrange 2
rearrangement 1
rears 1
reasons 6
reasons, 6
reasons. 10
reassurance; 1
reboot 6
reboot, 1
reboot. 1
recall, 1
receive 11
receive. 1
received 3
recency 1
recent 16
recent, 1
rechecking, 2
reclaim 3
reclaiming 1
recognizes 1
recommended 1
recommended. 1
record 6
recursion). 2
recursively 1
red-black 4
redirected 2
redirects 1
reduced-instruction 1
reduces 9
reducing 6
reduction 2
reduction, 1
refer- 1
reference 57
reference, 2
reference. 8
referenced 6
referenced, 1
referred 27
refers 9
refine 3
refined 5
reflect 4
refuses 1
regained 2
regains 3
regard, 2
region) 1
region). 1
region; 1
regions 11
regions, 2
register 75
register, 6
register. 4
registers) 2
registers), 2
registers; 4
regs 3
regs(A) 3
reject 4
relate 1
related 18
relatively 16
relatively-slow 1
relaxation 1
relaxed 2
relaxed: 1
release 23
released 10
released. 6
relegated 2
relevant 13
relevant. 2
reload 1
relocate 5
relocated 6
relocation.py 1
relocation; 1
remain? 1
remainder 1
remainder. 1
remains 11
remains, 1
remains. 1
remains: 2
remedied 2
remember 20
remember: 1
remembering. 2
remind 1
removes 1
removing 8
renders 1
rent 1
repair 3
repeat 1
repeat, 1
repeatedly 15
repeatedly, 3
repeatedly. 2
repeating 1
repeating. 1
replace? 3
replacement) 1
replacement; 1
replacements 2
replaces 7
replacing 3
replete 1
report? 4
reports 2
representation 1
represented 3
represents 4
reproduce 1
reproduce, 1
reproduced 1
this 1109
request 35
this, 32
request, 10
this. 4
request. 7
requester), 1
requesting 1
requests; 1
requests? 2
require 10
require. 1
required 15
required, 3
required. 5
requirement: 2
this: 49
thorough 2
those; 1
though; 4
thoughtful 1
research 18
thoughtful, 1
research, 4
thoughts 5
research. 1
thousand, 1
research.microsoft.com/ 2
thr 7
researchers 8
thr_exit() 3
reset 3
reset. 2
thr_join() 3
reside) 1
thrashing 2
reside). 1
resides 9
resides, 1
resides. 3
residing 2
resistance 1
resize; 2
resizing, 2
resort 1
resource) 2
resource; 1
resources 6
resources, 4
resources. 5
respectively, 1
respectively. 2
respond 1
responsabilit 1
response 31
response-time 1
restart 5
restores 4
restoring 5
restricted 7
restricted. 1
restrictions 1
restricts 1
result 30
result, 12
result. 11
result: 2
resulting 24
results? 2
resume 8
resumed, 1
ret 1
retain 1
retaining 3
rethink 1
retrospective 3
return-from-trap 17
return-oriented 1
return-to-libc 1
return-to-libc. 1
return; 10
return? 2
returned 15
returned, 2
returned. 2
returning) 2
returning; 1
returns 61
returns, 7
returns. 3
returnsfrom-trap, 1
reusing 1
reveal 1
reverts 1
revisited 1
revolutionary. 1
revolutionized 1
rewrites 1
richer 1
thread 449
rid 1
right) 1
thread!) 2
right). 2
right.” 1
right; 1
right? 8
rightly 2
right”, 1
rip 1
rise 2
risen 2
road” 1
roam 1
robust 9
thread, 48
thread-local 2
thread-safe, 2
room 17
room: 1
root). 1
rosy 1
rotational 1
thread. 20
threads) 1
rough 3
threads). 2
threads; 2
round-robin 11
threads? 4
routed 3
routine), 4
routine1 1
routine1, 1
thread’s 14
threat 1
routines 41
routines, 5
routines. 1
ruins 2
rules 6
rules, 1
three 69
three, 3
three-quarters 1
three-queue 1
three: 1
threshold) 2
threshold; 4
throughput?) 1
throw 6
thrown 1
thumb. 1
run 374
run, 24
run-and-yield 2
run-time 7
run. 22
run: 3
runaway 1
thus 486
thus, 54
thus: 1
ticket 27
ticket, 2
ticket. 2
tickets), 1
tickets; 1
tight. 1
time! 2
time) 4
time), 4
time). 3
running 227
time-sharing 7
time-slice 5
time-space 2
running, 30
time; 16
time? 9
timedlock 4
timely 3
running. 23
timer; 1
running: 1
runs...) 1
timer? 3
timers, 2
runs; 3
runs? 2
runtimei 1
rv; 2
rvals->x 2
rvals->x, 2
rvals; 2
rvalue); 2
rw 6
rw59 1
rwrw- 1
times 40
rwx 4
rw— 2
sad! 1
times, 10
safe 6
safe. 2
times. 7
safer 2
timespec 2
timing 5
timing, 3
tiny 21
tips 2
tired 1
tirelessly 2
said 43
tmp->next; 2
tmp; 7
said, 10
tn 2
sampling 2
to! 1
sane 2
to) 1
satisfies 1
to), 1
to; 1
to? 2
satisfy 9
satisfying 2
together 12
together, 3
together. 5
tolerate 1
tolerate. 1
tomes 1
save 27
tons 2
saved 11
savings 9
saw 12
say 29
say, 5
say. 2
saying 4
too 85
saying, 1
too, 2
sbrk() 1
sbrk) 1
scalability 2
too. 6
scalability. 1
too4 1
too: 2
scalable 15
tool 15
scalable. 5
tool, 6
scales 6
tool. 1
scales. 1
toolbars, 1
scaling 2
top) 1
scaling, 1
top), 1
scaling. 1
top-level 2
scan 5
topics 5
scanning 3
scenarios 2
scenarios, 2
topmost 7
scenarios. 1
scenes, 2
sched 7
schedule 14
schedule(curr); 1
schedule: 2
total 26
towards 3
trace; 1
trace? 2
scheduled 11
scheduled. 2
traces 3
traces. 2
tracing 6
tracing, 1
track; 1
tracked 2
tracks 8
tract 1
trade-off 4
trade-off. 1
trade-off: 1
traditionally 1
tragically 2
transac-tions 1
transaction 4
transaction, 2
transcript 1
transferred 4
transfers 7
transfers, 1
transfers. 1
transform 4
transforming 3
transistors 2
transistors. 1
scheduler 110
scheduler); 2
translate 19
translated 3
scheduler, 20
translated, 1
translation) 1
translation), 2
translation; 1
scheduler. 10
schedulers) 1
scheduler’s 1
scheduling; 4
scheduling? 1
scheme 6
scheme, 1
translations 22
school; 1
scientific 1
translations, 6
scientists 4
scoff 1
scratched 2
translations. 6
scream, 2
translations: 2
scream. 1
transparency 1
script 2
transparency2 1
scripting 1
searched 1
transparent 4
second-chance 1
trap), 1
trap; 2
second-level 3
trapframe 1
second; 1
trapped 2
traps 5
seconds 9
seconds!). 2
traversal 3
seconds, 2
traverse 1
tread 1
seconds. 3
treasure-trove 1
secretary; 1
secretly 3
treat 4
treating 2
treatment, 2
tree 15
tree, 4
tree. 5
trees), 1
trees; 1
tremendous 1
trend? 1
section 55
trends. 1
tricks 2
tricks: 1
tricky 10
section, 24
tricky: 1
tried 4
tried, 1
trigger 2
section. 34
true 14
sections; 4
true, 3
secure 3
true. 3
security; 2
truly 9
trust 14
trylock 4
tune 1
tuned. 2
turn) 2
turn; 4
turnaround 30
turnaround. 1
turned 2
turns 37
tweak 1
twice 5
twice, 5
see 272
see, 15
see. 4
see: 2
seed. 1
seeds; 1
seeing 1
seemed 1
seemingly 12
two 241
two, 3
seems 12
two-fold. 1
two-phase 6
two. 3
two: 1
seen 31
segfault 1
segment 56
segment, 14
type 73
segment. 8
type, 4
type. 1
segment: 10
type: 1
segmentation). 2
typeset 2
typesetting 2
segmentation.py 5
segmentation.” 1
segmentation; 2
segmentation? 1
segmentation” 1
segmenting 1
segments; 1
segment’s 1
segregated 3
self; 2
typical 26
uber-engineer 1
ubiquitous 2
semantics 8
uint 1
ultimately 1
semantics, 5
unallocated 2
semantics. 2
unanswered: 1
semaphores 1
unbounded 1
seminal 1
uncommon 2
sends 3
undefined. 1
sense; 5
sense? 1
senses 1
sensible 4
sentence 1
sentence. 2
sentence: 1
separa-tion 1
under 18
underneath 2
underpowered 1
separate 17
sequence 24
sequence, 8
sequence. 2
sequence: 1
sequential 8
series 9
seriously, 3
serve 2
serve, 1
served 3
server 11
server, 1
server-based 2
service 11
service. 3
serviced 4
serviced, 1
serviced. 2
setaffinity() 1
setassociativity; 1
setpark(). 2
understand 112
understand, 3
understand2 1
understand: 1
understandable 2
sets 27
understandable, 1
sets. 2
sets: 2
settle 1
setup, 2
set” 2
shade 1
shaded 1
shape. 1
understanding 19
understanding. 1
understanding: 2
undertaken; 1
undo 4
undoes 1
unexpectedly 1
share 36
unfairness 4
unfortunately 4
unfortunately, 14
unified, 1
uniform, 1
uniform. 1
unimaginably 1
unimaginatively 1
uniprocessor, 2
unit 7
units; 4
unknown 1
shared 67
shared. 1
unless 1
shells, 1
she’ll 2
shmget() 1
shooting 1
short) 5
unlock 13
short). 1
unlock(&m) 1
short-lived 2
short-lived, 1
shorter 6
unlock(lock_t 10
shortly 1
unlock, 2
unlock. 4
unlucky) 1
unmapped 1
unmasks 2
unmodified, 1
unnecessary 1
unpack 2
unpacking 2
unpark() 2
unrealistic; 1
unrealistic? 1
unsafe 4
unsurprisingly, 1
unsurprisingly: 1
unsuspecting 1
until 52
unused 14
unused, 1
unused. 2
up; 2
up? 3
upcoming 1
update(counter_t 2
update) 1
update; 1
updated) 1
updates 33
updating 13
should 274
should. 1
upon 40
upon, 1
upon. 1
upper 1
upper-half 1
upside 1
upwards. 1
urging 1
show 24
show, 1
showing 8
shown 35
shown, 2
shudder 1
shuts 1
side 4
sign 3
signal() 4
signal(). 1
signaled 1
signals 13
signals, 2
us 84
us, 2
significant 4
us. 4
usability 1
usable 2
usable. 2
usage; 1
use) 10
use; 4
similar 45
use_ptr 2
similar. 2
used) 1
similarity 1
used; 2
similarly; 2
used? 1
simple) 1
simplest 13
simplest: 2
simplicity 7
simplicity, 16
simplicity. 3
simplified; 1
simplify 1
simplifying 3
simulating 1
simulation 7
simulation. 1
simultaneous 1
useful 69
single-CPU 2
single-entry 2
single-processor 5
singlequeue 1
sinister 1
useful, 11
site 1
site: 2
sits 3
sitting; 1
useful. 10
situations 3
useful2 1
situations. 1
useful2. 1
six-level 1
useless 2
user-facing 1
user-level 6
user/supervisor 1
user; 3
usermode 1
users 27
users, 1
users. 1
users: 1
size 124
size); 2
size, 12
size. 7
uses 70
uses. 3
use”, 1
size: 16
size=100); 1
sizeof() 7
sizeof(), 1
sizeof(PDE)) 1
sizeof(PDE)). 1
sizeof(PTE)) 7
sizeof(int); 1
sizeof(node_t); 1
sizeof(x)); 2
sizes; 2
sketch/review 1
sketched 1
skill 2
skip 5
slabs 1
sleep 30
sleep, 13
sleep. 8
sleeping 5
sleeping, 3
sleeping. 4
sleeping/waking 2
slice), 2
slice). 1
slicek 1
using 140
using. 2
slices 10
slices, 2
usual 2
slight 2
slightly; 1
usual, 3
usual. 2
sloppy 4
utilities 1
sloth” 1
utility 3
slots 7
utilization 5
slots, 3
utilization, 1
utilization. 1
utilize 5
slow 15
utilized 4
utilized. 1
slow, 8
utopian 1
slow. 3
v 2
slowdown 2
v); 2
slower? 1
slowly) 1
val; 2
slowly; 1
valgrind? 1
valid 51
small 61
small, 7
small-sized 1
small. 1
small: 3
valid, 14
smaller? 1
valid. 2
valid: 1
smallest 5
valuable 3
smart 13
snatch 1
sneaks 2
value) 13
sneaky 2
value), 3
snippet 9
snippet. 1
snippet: 3
snooping 1
snooping, 1
so), 1
so). 1
so; 2
value; 22
value? 2
so? 5
software 17
software, 4
software-based 1
software-managed 5
software. 2
software4 1
solid-state 1
solidify 1
values 75
solution 44
solution, 10
values, 12
values. 1
vantage 1
solution. 8
solution: 1
solve 20
solve. 1
solve: 1
solved 2
solved. 1
some_function(char 1
someday). 1
sometime 1
sometimes) 2
somewhere 4
somewhere, 1
somewhere. 3
somewhere... 1
variable 75
soon 25
soon, 1
soon-to-be-faulted-in 1
variable, 8
soon-to-be-run 1
soon-to-be-running 1
soon. 1
sorry 1
variable-sized 7
sorry, 1
variable-sized. 1
sorry. 1
sorted 1
variable. 8
sorts 9
variable: 2
variables) 1
sound 5
variables), 1
sounds! 1
variable’s 1
variants 4
variants: 1
varies 5
varies, 2
variety 3
source 23
variety: 1
source, 1
source. 1
vary 4
space! 2
vary. 2
space) 4
varying 2
vast 2
space), 4
vectors 1
vectors, 1
space). 3
space1 1
vengeance’.” 1
space; 11
space? 6
version 31
spaces 20
versus 5
spaces, 5
spaces. 7
spaceshared 1
space” 1
spans 1
sparsely 1
sparsely-used 2
spawning 1
spear-headed 1
special 22
specialize 1
specialized 4
specification 1
specifics 1
specifies 5
very 60
specify 10
specifying, 1
spectreattack.com 1
spectrum, 1
speculation 2
speculation, 2
speculative 1
speed 12
speeding 2
speeds; 1
spends 1
spinning), 2
spins 11
via 53
spins, 2
victim. 1
splay 1
view). 1
splintering 1
splits 1
viewed 4
splits. 1
virtualization). 1
sploitfun.wordpress.com/ 1
virtualization; 1
sprawling 1
virtualization? 1
virtualized; 1
virtualizes 3
spread 9
spring 1
sptr 2
sptr. 1
spuriously 2
virtualizing 14
src) 1
stack) 7
virtually 9
stack), 2
visible 2
visible. 2
stack). 4
vision 1
stack-smashing 1
visionary 1
visited, 1
stack; 3
visualization 1
visualization. 1
stacks 4
visualize 1
vmalloc, 1
stacks, 3
stages 1
stale 1
standard 22
standards/SPARCV9.pdf. 1
stands 1
started 11
started, 1
starting) 1
starts 25
starts, 3
starvation 3
starvation, 1
starvation. 7
starvation: 1
starve 2
starve: 1
starved 1
stash 1
stashes 1
void 153
void. 1
volatile 5
state 73
vruntime 10
vruntime, 1
state, 13
vruntime. 1
vruntime: 1
vulnerabilities 2
vulnerabilities. 1
state. 10
vulnerable 2
state: 2
w/ 2
stated 2
stated, 2
statement 3
statement, 1
statement. 2
statically-initialized 1
statistics 4
stay 3
wait() 26
steal 3
stealing 1
step). 1
wait(), 6
step-by-step 2
wait(). 3
step? 1
wait(NULL); 3
steps 3
waited 1
stipulated 1
stitch 1
waiter 2
stolen 1
stood 1
stopped 2
stopped, 1
stops. 1
storage 12
storage, 2
storage. 1
waits 36
store 24
store, 2
store-conditional) 1
store-conditional; 2
storeconditional 1
storeconditional. 1
wake 33
wakeups 2
walks 1
wall 1
walling 1
stored 15
stored. 1
str); 1
straightforward 9
straightforward, 2
straightforward. 2
straightforward: 6
strange; 1
strangest 1
strategies 8
strategies. 1
want 50
want. 1
strategy 6
warm-start 1
warmed 1
strategy, 2
warmup 1
strategy. 1
strdup("p4.c"); 1
was; 1
strdup() 1
wasn’t 2
streams 2
streams, 1
streams. 1
strength: 1
stretching 1
strict 1
waste 23
waste. 7
stride 17
stride, 1
wasted 4
stride. 1
wasted. 3
watermark 2
way! 1
way) 1
string 12
way), 1
string, 2
way). 1
stringing 1
way? 1
strings? 1
strive 5
strlen(), 1
strong 2
strong, 1
ways 19
ways, 1
ways. 11
ways: 2
wc 11
wc, 3
struct 49
struction 1
structure 73
structure, 24
structure. 16
structure: 2
structures; 2
structures? 1
strung 1
stuck; 3
student 3
student, 3
studies 4
studies. 1
study 52
study, 3
study. 2
studying 9
studying. 1
stuff? 1
style, 1
style. 1
sub-jobs, 1
sub-microsecond 1
subdirectory 2
submitted, 1
subproblem 1
subsequent 24
substrate 1
subsystem 4
subsystem: 1
subtle 1
subtle: 2
succeeded 4
succeeded, 2
succeeded. 1
succeeds 3
succeeds, 2
success 9
success, 5
success. 3
success: 2
successfully 5
successfully, 1
such 274
such. 1
sudden 1
suffer 8
suffering 2
suffering, 1
suffice 3
suggested 8
suggested. 1
suggests 2
suit 1
suitable 2
sum 3
sum, 1
summarize 5
summarize, 1
sun.com/solaris/articles/atomic 2
super 2
super-linear 1
superpages, 1
supply 1
support 110
support, 16
support. 9
supporting 1
suppose, 2
supposed 4
sure 56
sure. 2
surely) 1
surface 3
surface. 1
surprise 2
surprise. 1
surprise: 1
surprised 2
surprised. 2
surprising? 2
surprisingly 7
surprisingly!) 1
surprisingly, 6
susceptible 3
suspect 1
suspicion. 2
swap 34
swapping 12
swapping, 1
swath 1
switch() 3
switch? 2
switched 2
switches; 1
switches? 1
switching) 1
switching), 1
switching; 1
swtch 1
swtch: 1
symbiotic 1
synchronizations 1
syscall 3
we 992
web 10
web. 1
websites 1
weight 1
weight, 1
weight0 1
weightB 1
weird; 1
weirdly 1
system 363
well 88
system, 65
well, 15
well-defined 1
well-known 4
well-meaning 1
well. 30
system. 57
went 3
weren’t 1
system: 6
we’re 3
systems) 4
systems), 1
systems). 1
we’ve 21
systems; 9
systems? 2
system’s 3
t(B) 1
t). 2
t; 2
table! 1
table) 2
table), 1
table). 3
table; 5
table? 3
tables 49
tables, 8
tables. 6
tail_lock; 2
tailor 1
take 97
take, 3
taken 16
taken, 5
taken. 1
taken: 2
takes; 1
talents, 1
talks 1
tandem 5
tapes 1
what 280
target 6
target. 1
target’s 2
whatever 15
what’s 2
task 16
task, 5
task. 7
task: 1
taste 2
taught?! 2
tcsh), 1
tcsh). 1
teach 1
teaching 1
team 2
technical 3
techniques 24
techniques, 7
technology-driven 1
tell 28
telling 1
ten 7
tend 7
tennis 1
terminate 6
terminate. 3
terminated 2
terminated. 1
terms 10
terms, 3
terrible 3
terribly 1
test-and-set 15
test-and-set. 4
test-and-set.s? 2
test-and-test-and-set.s. 2
test? 2
testand-set! 1
tested 1
tests 5
text 9
text, 2
text. 1
than 149
thanked 1
thanks 4
thanks, 1
when 480
when, 3
when. 2
whenever 3
wherever 2
whet 1
which). 1
while) 1
while? 1
whims 2
who 41
whose 8
why 58
why, 1
why. 2
widely 9
widespread 1
wild 1
will 580
will, 2
willing 3
win 1
window 3
window, 3
winner) 2
winner). 1
winning 7
wise 1
wished 2
that 1398
that, 11
that. 9
that: 3
that’s 8
with 638
within; 2
without 70
woke 1
woken 13
woken, 2
woken. 2
won 3
wonder? 1
wondered 1
wonderful 11
wonders. 1
word 14
word, 1
work! 3
work; 6
work? 7
worked 6
worked, 2
worked. 1
worker 6
worker, 2
workflows. 1
workgroup. 1
working-set 1
workings, 2
workloads 14
workloads, 1
workloads. 3
works 54
works, 15
works. 22
world 26
world!”, 1
world, 6
world. 3
world\n", 1
worried 1
worry! 2
worse 9
worse, 8
worse. 6
worse: 2
worst-case 5
worth 20
wouldn’t 5
wrap 2
wrapper; 2
wrappers 2
wrappers, 2
wrapping 2
wreak 1
wreak, 1
wreakers 1
write() 5
write(), 1
writes 21
writes, 4
writes: 1
writing 21
written), 1
written). 1
written; 1
written? 2
wrote) 1
www.ajwm.net/amayer/papers/B5000.html. 2
www.gnu.org/gnu/manifesto.html. 1
x 12
x, 2
x-axis 1
x-axis, 2
x. 2
x86 23
x86); 2
x86)” 2
x86, 8
x86-64) 1
x86. 1
x[10]; 1
xchg 2
xv6 6
xv6, 1
xv6. 1
y-axis? 1
y; 2
yeah! 1
years 19
years, 9
years. 4
yelling 1
yes! 1
yet 20
yet, 10
yet. 4
yet: 2
yield() 2
yield.s 2
yield.s, 2
yields 5
you). 1
you; 1
you? 9
young 3
yours. 2
yours: 1
yourself! 3
yourself2! 1
yourself; 3
you’d 9
you’ll 37
zero 10
zero, 3
zero. 11
zeroes 2
zeroing 4
zeroing, 1
zeroing. 2
zombie 2
| 8
|| 2
}; 8
× 1
ˆC 2
— 131
’03. 1
’05. 1
’07, 2
’09, 1
’10, 4
’14 1
’18, 2
’63 3
’81, 5
’83, 1
’85, 1
’89, 1
’92. 1
’94, 2
’94. 1
’98, 1
’Approximate’, 2
’Precise’), 2
’b’ 1
’b’, 2
’d’ 1
’flag’ 2
’his/their 1
’new’ 2
’peek 1
’self’ 2
“...with 1
“010101”, 1
“01” 1
“100x” 1
“21” 2
“80-20” 1
“ARC: 1
“Advanced 4
“Ah! 1
“Aleph 1
“Algorithms 2
“Alto 1
“Analysis 1
“Animal 1
“A” 8
“A”, 2
“CPU 1
“CPU-bound” 1
“Change 1
“Control-c” 1
“Dahm 2
“Evaluating 1
“Evaluation 1
“Experience 1
“Extending 1
“Exterminator: 1
“E”, 2
“Fact 1
“Get 1
“Guide 2
“Hints 3
“Hmm... 1
“Hoard: 1
“Hoare” 1
“Ils 1
“Information 1
“Informed 1
“Inside 3
“Intel 4
“Introduction 3
“Is 1
“Just 2
“Man-Computer 1
“My 1
“Nonblocking 2
“One 1
“Our 1
“Performance 1
“Policy/mechanism 1
“Principled 1
“Priority 1
“Profiling 1
“Program 1
“Pthread 1
“RTFM.” 1
“Reese’s 1
“Relocating 1
“Reminiscences 1
“SDS 1
“Segmented 1
“Shared-access 1
“She’s 1
“Someone 2
“Survey 1
“TENEX, 2
“THE” 2
“Test 1
“There 1
“They 2
“Think 1
“Time-Sharing 1
“Towards 1
“Transaction 2
“Understanding 5
“Using 2
“Volume 4
“Wait-free 2
“What 5
“Why 2
“With 1
“as 2
“baby 1
“bad” 3
“big 1
“bounds” 1
“brain 2
“catch” 1
“core” 1
“crux 1
“demon”, 1
“ease 1
“easy 1
“familial” 1
“first 1
“fun” 1
“goodbye”. 1
“got 1
“have 1
“havoc” 1
“hello 1
“hello, 1
“hello”; 1
“high 1
“hot” 2
“jemalloc” 1
“just 3
“lock” 2
“loop.s”. 2
“looping 1
“modern” 1
“other 1
“out 1
“owned” 1
“parent: 1
“perfect”. 1
“privileged” 1
“ready” 2
“real-world” 2
“reserved 2
“right 1
“running” 2
“second-system 1
“smart” 1
“starts” 2
“steal” 1
“test 2
“ticket-assignment 1
“too 3
“tried 1
“turn” 2
“walk” 1
“what 1
“yes.” 1
• 69
← 2
→ 17
− 7
the 8323
the?? 1
them) 1
them), 2
them). 2
them; 2
them? 3
theme 6
themselves). 1
themselves; 2
then 227
then, 16
then. 1
theory 4
theory, 1
theory-types 2
there! 1
there). 1
there; 5
there? 4
thereby 1
therein 1
therein, 2
therein. 5
therein: 2
thermodynamics 1
these 222
these, 4
they? 2
thing; 1
things 46
things); 1
things, 6
things. 7
thing” 1
think) 1
think-ing 1
think? 1
thinking! 1
thinking? 1
thinks 7
third 18
third, 2
this! 2
this? 5
those 84
those, 1
though 29
though, 8
thought 17
thousands 10
thousands, 1
thr_exit(); 1
thr_join(); 1
thread), 2
thread.c 1
thread; 7
thread? 2
threadID 2
threadID, 2
threadID. 2
threaded 2
threads 197
threads); 2
threads, 38
threads. 19
thread” 1
threats, 1
three) 1
three-instruction 3
three-level 1
threshold 11
threshold, 2
threshold. 2
through 56
through, 1
throughout 13
tick 1
tick-by-tick 1
ticket.s. 2
ticket; 2
tickets 30
tickets, 4
tickets. 5
tickets: 1
tidbits 2
tightly 1
time 306
time, 75
time-efficient 1
time-share 1
time-shared 2
time-slicing 1
time-slicing. 1
time-tested 1
time. 66
time: 2
timeline 3
timeline, 1
timeline. 2
timeout 4
timer 36
timer, 4
timer-interrupt 1
timer. 1
times) 1
times), 1
times). 2
times; 3
times? 2
timing? 1
timings. 1
tip 2
tip, 4
tip: 1
tive) 1
tlb.c, 1
tmp 8
tmp); 5
tmp->next 4
tmp->value 2
to 4068
to, 13
to. 4
today 7
today, 4
today. 6
today’s 2
together! 1
told 2
too! 2
too). 2
too; 1
took 16
took, 1
tool? 1
tools 16
tools, 3
too” 1
top 32
top-to-bottom 1
topic 18
topic, 4
topic. 1
total) 2
total). 1
totals 2
totaltickets); 1
touch 4
touches 2
touching 1
tough 2
toughest 1
trace 24
trace, 3
trace: 1
track 27
track, 1
tracking 2
trade-offs 5
tradeoff 1
trading 1
traditional 11
traffic. 1
trans- 1
transactions 1
transfer 10
transfer. 1
transformation 2
transformed 2
transforms 4
transition 6
transitioning 4
translated), 2
translates 5
translation 46
translation, 15
translation-lookaside 1
translation. 10
translations! 1
translations). 1
translations; 1
transparency; 1
transparently 3
transparent” 1
trap 52
trap, 3
trap. 1
trapping 3
traversals 2
traversing 2
treasure 1
treated 6
treats 1
tree? 1
trees 4
trees, 4
trials 2
trials, 1
trials. 1
trick 3
trickier. 1
tries 41
triggers, 1
trivial 2
trouble 9
trouble, 2
trouble. 3
true! 1
trusts 4
truth. 1
truth: 2
try 64
try. 1
trying 15
tuning 1
turn 32
turning 9
tweaks 2
twenty 1
twice). 1
twins!” 1
two-CPU 1
two-level 7
two-thirds 1
type) 1
type). 1
typedef 33
types 33
typically 1
typing 9
typing, 1
u 2
ubriaca. 1
ugly 3
unaffected 1
unasked 1
unblocked 2
uncaught, 1
uncommon), 1
under- 1
undergraduate 4
underlies 2
underly 1
underlying 9
understand! 2
undertake 1
undesirable) 2
undoubtedly 2
unexpected. 2
unfair 2
unfair, 1
unfortunate 5
uniformly, 1
unifying 1
uninitialized 1
uninteresting: 1
unique 7
unit) 1
units 1
units, 2
units. 3
unit”, 2
universal 1
unlikely 3
unlock(&mutex); 2
unlock() 14
unlock(), 2
unlock): 2
unlock? 2
unlocked 2
unmask 1
unpacks 1
unpark 2
unpark(queue_remove(m->q)); 2
unpark(threadID) 2
unpleasant. 1
unqualified 1
unrealistic 2
unrealistic, 3
unrealistic. 1
unrealistically 2
unreasonably 1
unsatisfying) 1
unsigned 2
untimely 6
unusable. 1
unused) 1
unusual 3
up 156
up, 12
up. 7
update 54
update, 1
update. 1
update: 2
updated 8
updated, 2
updating) 1
uplifting! 1
upper-case 1
upper-level 2
upsides 1
upward 1
urgent, 1
usage 16
usage, 2
usage. 4
use 317
use, 15
use. 16
use?) 1
used 175
used, 8
used. 15
useful? 1
user 117
user, 3
user-defined 2
user-managed 1
user-mode 3
user. 7
user’s 4
uses), 1
using). 2
using; 2
using? 2
usually 52
usually, 2
utility? 2
utilized? 1
utilizes 1
utilizing 4
v9 1
v; 2
val 2
valgrind 15
valgrind. 1
valid), 1
valid). 1
valid; 1
valid? 3
value 233
value); 2
value, 17
value. 12
values). 2
values? 3
vanishes. 1
variable) 1
variable). 1
variable-length 2
variable; 2
variables 33
variables, 5
variables. 13
variablesized, 1
variable” 1
variant 3
variants) 1
varied 2
various 27
vary). 1
vastly 1
vector 1
vector, 1
vector-like 1
vector. 1
vengeance’. 1
versa. 1
version? 2
versions 8
vi, 1
vice 1
vice-versa. 1
view 14
view, 1
viewing 2
viewpoint 1
violation 2
violation, 2
violations). 1
virtual 253
virtual, 1
virtual-memory 1
virtual-to-physical 6
virtualization 20
virtualization, 7
virtualization. 4
virtualize 13
virtualized 6
virtualized, 1
virtualized. 1
virtuallyindexed 1
virtue 2
visually 1
vmstat 2
vmstat, 1
void; 2
voluminous 2
voo-doo 2
vruntimei 2
vs. 8
wait 53
wait()) 1
wait(); 1
wait(address, 2
wait, 4
wait-for-me.s 4
wait-for-me.s. 2
wait. 2
waitFirst 2
waiters 4
waiting 94
waiting, 5
waitpid() 2
waitpid()); 1
wake(address) 2
wake? 1
wakes 15
wakeup, 1
wakeup/waiting 2
waking 5
waking, 1
walk 1
want; 1
wanted 3
wants 16
warm 3
warnings. 2
wary 7
wary: 1
was 188
was. 1
waste! 1
wasteful. 2
wastes 10
watch 5
watch. 1
watches 2
watching 1
water 1
way 97
way, 20
way. 6
way: 5
wc), 1
weakness 1
weaknesses 1
weaknesses. 1
website 2
weightA 1
weighted 1
weighti 2
weightk 1
weights 2
weird 3
welcome! 1
well) 1
well), 2
well-regarded 2
well-suited 2
well; 1
were 76
were. 1
we’d 9
we’ll 112
whatever) 1
when! 2
where 166
whereas 14
whether 59
which 501
which, 4
which... 1
whichever 4
while 170
while, 8
while. 2
while2 1
whole 5
whom 2
why? 2
wide 1
widely), 1
wikipedia 1
wily 2
windows, 1
wine, 1
winner 5
winner. 2
winner: 2
winter. 1
wired 2
wisdom 1
wish 26
wishes 16
wishing 3
with) 2
with? 1
within 89
within, 1
within. 1
wonder 3
wondering 2
wondering: 4
won’t 21
won’t, 1
words 2
words, 5
work 150
work, 23
work-stealing 2
work. 24
work: 1
worker(), 1
workers 1
workers, 2
working 28
workload 14
workload, 11
workload. 6
workload: 1
works3 1
works; 1
works? 3
workshop, 1
world; 1
world? 1
worlds. 2
worlds: 1
world” 1
world”. 1
worry 21
worry. 3
worry: 1
worse! 1
worst 7
worst-fit 2
worst-fit, 2
worstcase 1
worthwhile 2
worthwhile. 3
would 200
wrangling 1
wrapper 3
wreak1 1
wreaked?” 1
write 63
write(fd, 1
write, 3
write. 2
write: 1
written 18
written, 1
wrong 15
wrong, 4
wrong. 3
wrote 10
wrote: 1
www.cs.tau.ac.il/˜shanir/concurrent-data-structures.pdf. 2
www.nds.rub.de/lehre/seminar/SS06/Werthmann 1
www.sparc.org/ 1
www.stanford.edu/˜ouster/. 1
www.takeourword.com/TOW146 1
x) 1
x86) 1
x86). 2
x86-version 2
x86.py, 4
x86” 2
x; 4
x? 1
y-axis 2
years; 2
yell) 1
yes, 6
yes. 3
yes: 3
yet! 1
yet), 1
yield 21
yield(); 2
yield, 2
yield-based 2
yielding 5
you 995
you, 11
you. 8
you: 1
younger 1
your 201
yourself 7
yourself, 2
yourself. 1
yourself2 1
you’re 18
you’ve 6
yuck! 1
zero), 1
zero). 1
zero.” 1
zeroed 1
zombies 1
zombies, 1
zplot. 1
zsh 2
{ 281
} 271
© 21
· 4
˜mark/syscall.html. 1
– 19
’ 11
’02, 2
’04, 2
’11, 2
’13, 5
’15, 1
’19, 1
’68 1
’75, 1
’93. 1
’95, 2
’95. 1
’Classic 1
’a’ 4
’a’, 1
’current’ 1
’c’ 3
’c’, 1
’e’. 1
’mutex’ 2
’pedantry’ 1
’threshold’, 2
’wreak 2
’w’ 1
“1984” 1
“2Q: 1
“A 15
“Ad 2
“An 9
“Aspects 1
“Atomic 2
“A”), 1
“Before 1
“Bell 1
“But 1
“B” 8
“B”. 2
“Cloud 3
“Cold-start 1
“Computer 6
“Concurrent 2
“Converting 1
“Cooperating 7
“Dynamic 3
“Earliest 1
“Efficient 2
“Electrochemically 1
“Everything 2
“H-Pucks”) 1
“He 1
“History” 2
“H”, 2
“I 1
“Idleness 1
“If 2
“Improving 1
“It 2
“It’s 2
“Jack 1
“Javascript: 2
“John 1
“KASLR 1
“Load-Link, 2
“Lottery 2
“MIPS 3
“Mac 1
“Mach: 1
“Machine 1
“Making 2
“Membrane: 1
“Memory 1
“Mesa” 1
“Microreboot 1
“Monitors: 1
“Multics: 1
“Multilevel 1
“Myths 2
“OSSpinLock 2
“OS” 1
“OS”, 1
“Observations 2
“On 2
“One-Level 2
“One-level 2
“OpenSolaris 2
“Operating 2
“PThreads 2
“Parallel 1
“Perfection 1
“Practical, 1
“Premature 2
“Programming 7
“Purify: 1
“RISC-I: 1
“Run-Time 1
“Solaris 3
“Solution 2
“Structure 1
“Symmetric 1
“System 1
“TLB”. 1
“Take 1
“The 40
“Time 1
“Tolerating 1
“T”, 2
“U 1
“Valgrind: 1
“Virtual 8
“You 2
“a 1
“all 4
“at 1
“atomic 2
“bad 1
“batch” 1
“being 1
“best” 2
“buddy” 1
“child”, 1
“cold” 2
“commoncase 1
“condition 1
“cooperating 2
“correct” 4
“daemon”, 1
“direct 1
“discovered” 1
“double 1
“drum” 1
“emulation” 1
“fault.” 1
“fault” 2
“first-in” 2
“foo” 1
“free” 1
“glibc 2
“implements” 2
“interactive” 1
“interrupts” 1
“it 1
“limited” 1
“lmbench: 1
“longword” 1
“lost” 1
“main: 14
“older” 1
“on 1
“operating 1
“out-of-bounds” 1
“page 1
“pinning 1
“private 1
“process 1
“prove” 2
“real” 3
“reasonable” 1
“reliability”, 1
“response”; 1
“right” 1
“same” 1
“setting” 2
“ten-items-or-less” 1
“test” 2
“the 1
“the”). 2
“uninitialized 1
“works” 1
“wreaked”? 1
“yeah, 1
” 4
